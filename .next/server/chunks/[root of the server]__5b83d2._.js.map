{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/lib/polar.js"],"sourcesContent":["import { Polar } from \"@polar-sh/sdk\";\n\nexport const polar = new Polar({\n  accessToken: process.env.POLAR_ACCESS_TOKEN,\n  server: process.env.POLAR_SERVER || \"sandbox\", // Use sandbox by default, change to \"production\" for live\n}); "],"names":[],"mappings":";;;AAAA;AAAA;;AAEO,MAAM,QAAQ,IAAI,mKAAA,CAAA,QAAK,CAAC;IAC7B,aAAa,QAAQ,GAAG,CAAC,kBAAkB;IAC3C,QAAQ,QAAQ,GAAG,CAAC,YAAY,IAAI;AACtC"}},
    {"offset": {"line": 57, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 71, "column": 0}, "map": {"version":3,"sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/app/api/test-polar/route.js"],"sourcesContent":["import { polar } from \"@/lib/polar\";\nimport { NextResponse } from \"next/server\";\n\nexport async function GET() {\n  try {\n    console.log(\"Testing Polar configuration...\");\n    console.log(\"Token present:\", !!process.env.POLAR_ACCESS_TOKEN);\n    console.log(\"Server:\", process.env.POLAR_SERVER);\n    \n    // Test simple avec la nouvelle API Polar\n    const products = await polar.products.list({\n      limit: 10\n    });\n    \n    console.log(\"Products found:\", products.items?.length);\n    \n    return NextResponse.json({\n      success: true,\n      message: \"Polar configuration OK\",\n      server: process.env.POLAR_SERVER,\n      productCount: products.items?.length || 0,\n      products: products.items?.map(product => ({\n        id: product.id,\n        name: product.name,\n        type: product.type,\n        prices: product.prices?.map(price => ({\n          id: price.id,\n          amount: price.price_amount,\n          currency: price.price_currency,\n          recurring: price.recurring_interval\n        }))\n      })) || []\n    });\n  } catch (error) {\n    console.error(\"Polar error:\", error);\n    \n    // Diagnostic détaillé pour debug\n    let errorDetails = {\n      success: false,\n      error: error.message,\n      hasToken: !!process.env.POLAR_ACCESS_TOKEN,\n      tokenLength: process.env.POLAR_ACCESS_TOKEN?.length || 0,\n      server: process.env.POLAR_SERVER,\n    };\n\n    // Vérification du type d'erreur selon la doc Polar\n    if (error.message?.includes('401') || error.message?.includes('invalid_token')) {\n      errorDetails.diagnosis = \"Token invalide ou expiré\";\n      errorDetails.solution = \"Créez un nouveau token sur https://sandbox.polar.sh\";\n    } else if (error.message?.includes('403')) {\n      errorDetails.diagnosis = \"Permissions insuffisantes\";\n      errorDetails.solution = \"Vérifiez les scopes du token (products:read requis)\";\n    } else if (error.message?.includes('404')) {\n      errorDetails.diagnosis = \"Endpoint non trouvé\";\n      errorDetails.solution = \"Vérifiez l'URL de l'API (sandbox vs production)\";\n    }\n    \n    return NextResponse.json(errorDetails, { status: 500 });\n  }\n}"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,eAAe;IACpB,IAAI;QACF,QAAQ,GAAG,CAAC;QACZ,QAAQ,GAAG,CAAC,kBAAkB,CAAC,CAAC,QAAQ,GAAG,CAAC,kBAAkB;QAC9D,QAAQ,GAAG,CAAC,WAAW,QAAQ,GAAG,CAAC,YAAY;QAE/C,yCAAyC;QACzC,MAAM,WAAW,MAAM,8GAAA,CAAA,QAAK,CAAC,QAAQ,CAAC,IAAI,CAAC;YACzC,OAAO;QACT;QAEA,QAAQ,GAAG,CAAC,mBAAmB,SAAS,KAAK,EAAE;QAE/C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,SAAS;YACT,QAAQ,QAAQ,GAAG,CAAC,YAAY;YAChC,cAAc,SAAS,KAAK,EAAE,UAAU;YACxC,UAAU,SAAS,KAAK,EAAE,IAAI,CAAA,UAAW,CAAC;oBACxC,IAAI,QAAQ,EAAE;oBACd,MAAM,QAAQ,IAAI;oBAClB,MAAM,QAAQ,IAAI;oBAClB,QAAQ,QAAQ,MAAM,EAAE,IAAI,CAAA,QAAS,CAAC;4BACpC,IAAI,MAAM,EAAE;4BACZ,QAAQ,MAAM,YAAY;4BAC1B,UAAU,MAAM,cAAc;4BAC9B,WAAW,MAAM,kBAAkB;wBACrC,CAAC;gBACH,CAAC,MAAM,EAAE;QACX;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,gBAAgB;QAE9B,iCAAiC;QACjC,IAAI,eAAe;YACjB,SAAS;YACT,OAAO,MAAM,OAAO;YACpB,UAAU,CAAC,CAAC,QAAQ,GAAG,CAAC,kBAAkB;YAC1C,aAAa,QAAQ,GAAG,CAAC,kBAAkB,EAAE,UAAU;YACvD,QAAQ,QAAQ,GAAG,CAAC,YAAY;QAClC;QAEA,mDAAmD;QACnD,IAAI,MAAM,OAAO,EAAE,SAAS,UAAU,MAAM,OAAO,EAAE,SAAS,kBAAkB;YAC9E,aAAa,SAAS,GAAG;YACzB,aAAa,QAAQ,GAAG;QAC1B,OAAO,IAAI,MAAM,OAAO,EAAE,SAAS,QAAQ;YACzC,aAAa,SAAS,GAAG;YACzB,aAAa,QAAQ,GAAG;QAC1B,OAAO,IAAI,MAAM,OAAO,EAAE,SAAS,QAAQ;YACzC,aAAa,SAAS,GAAG;YACzB,aAAa,QAAQ,GAAG;QAC1B;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,cAAc;YAAE,QAAQ;QAAI;IACvD;AACF"}},
    {"offset": {"line": 131, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}