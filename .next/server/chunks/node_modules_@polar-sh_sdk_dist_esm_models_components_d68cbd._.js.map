{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"file":"benefitcustomproperties.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/benefitcustomproperties.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\n/**\n * Properties for a benefit of type `custom`.\n */\nexport type BenefitCustomProperties = {\n  note: string | null;\n};\n\n/** @internal */\nexport const BenefitCustomProperties$inboundSchema: z.ZodType<\n  BenefitCustomProperties,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  note: z.nullable(z.string()),\n});\n\n/** @internal */\nexport type BenefitCustomProperties$Outbound = {\n  note: string | null;\n};\n\n/** @internal */\nexport const BenefitCustomProperties$outboundSchema: z.ZodType<\n  BenefitCustomProperties$Outbound,\n  z.ZodTypeDef,\n  BenefitCustomProperties\n> = z.object({\n  note: z.nullable(z.string()),\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitCustomProperties$ {\n  /** @deprecated use `BenefitCustomProperties$inboundSchema` instead. */\n  export const inboundSchema = BenefitCustomProperties$inboundSchema;\n  /** @deprecated use `BenefitCustomProperties$outboundSchema` instead. */\n  export const outboundSchema = BenefitCustomProperties$outboundSchema;\n  /** @deprecated use `BenefitCustomProperties$Outbound` instead. */\n  export type Outbound = BenefitCustomProperties$Outbound;\n}\n\nexport function benefitCustomPropertiesToJSON(\n  benefitCustomProperties: BenefitCustomProperties,\n): string {\n  return JSON.stringify(\n    BenefitCustomProperties$outboundSchema.parse(benefitCustomProperties),\n  );\n}\n\nexport function benefitCustomPropertiesFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitCustomProperties, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => BenefitCustomProperties$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitCustomProperties' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;AAGH,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AADjD,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;;AAalB,MAAM,qCAAqC,GAI9C,CAAC,6IAAC,MAAM,CAAC;IACX,IAAI,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;CAC7B,CAAC,CAAC;AAQI,MAAM,sCAAsC,GAI/C,CAAC,6IAAC,MAAM,CAAC;IACX,IAAI,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;CAC7B,CAAC,CAAC;AAMG,IAAW,wBAAwB,CAOxC;AAPD,CAAA,SAAiB,wBAAwB;IACvC,qEAAA,EAAuE,CAC1D,yBAAA,aAAa,GAAG,qCAAqC,CAAC;IACnE,sEAAA,EAAwE,CAC3D,yBAAA,cAAc,GAAG,sCAAsC,CAAC;AAGvE,CAAC,EAPgB,wBAAwB,IAAA,CAAxB,wBAAwB,GAAA,CAAA,CAAA,GAOxC;AAEK,SAAU,6BAA6B,CAC3C,uBAAgD;IAEhD,OAAO,IAAI,CAAC,SAAS,CACnB,sCAAsC,CAAC,KAAK,CAAC,uBAAuB,CAAC,CACtE,CAAC;AACJ,CAAC;AAEK,SAAU,+BAA+B,CAC7C,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,oCAAsC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACjE,CAAA,mDAAA,CAAqD,CACtD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 38, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 44, "column": 0}, "map": {"version":3,"file":"benefitcustom.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/benefitcustom.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  BenefitCustomProperties,\n  BenefitCustomProperties$inboundSchema,\n  BenefitCustomProperties$Outbound,\n  BenefitCustomProperties$outboundSchema,\n} from \"./benefitcustomproperties.js\";\n\nexport type BenefitCustomMetadata = string | number | number | boolean;\n\n/**\n * A benefit of type `custom`.\n *\n * @remarks\n *\n * Use it to grant any kind of benefit that doesn't fit in the other types.\n */\nexport type BenefitCustom = {\n  /**\n   * The ID of the benefit.\n   */\n  id: string;\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  type?: \"custom\" | undefined;\n  /**\n   * The description of the benefit.\n   */\n  description: string;\n  /**\n   * Whether the benefit is selectable when creating a product.\n   */\n  selectable: boolean;\n  /**\n   * Whether the benefit is deletable.\n   */\n  deletable: boolean;\n  /**\n   * The ID of the organization owning the benefit.\n   */\n  organizationId: string;\n  metadata: { [k: string]: string | number | number | boolean };\n  /**\n   * Properties for a benefit of type `custom`.\n   */\n  properties: BenefitCustomProperties;\n};\n\n/** @internal */\nexport const BenefitCustomMetadata$inboundSchema: z.ZodType<\n  BenefitCustomMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type BenefitCustomMetadata$Outbound = string | number | number | boolean;\n\n/** @internal */\nexport const BenefitCustomMetadata$outboundSchema: z.ZodType<\n  BenefitCustomMetadata$Outbound,\n  z.ZodTypeDef,\n  BenefitCustomMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitCustomMetadata$ {\n  /** @deprecated use `BenefitCustomMetadata$inboundSchema` instead. */\n  export const inboundSchema = BenefitCustomMetadata$inboundSchema;\n  /** @deprecated use `BenefitCustomMetadata$outboundSchema` instead. */\n  export const outboundSchema = BenefitCustomMetadata$outboundSchema;\n  /** @deprecated use `BenefitCustomMetadata$Outbound` instead. */\n  export type Outbound = BenefitCustomMetadata$Outbound;\n}\n\nexport function benefitCustomMetadataToJSON(\n  benefitCustomMetadata: BenefitCustomMetadata,\n): string {\n  return JSON.stringify(\n    BenefitCustomMetadata$outboundSchema.parse(benefitCustomMetadata),\n  );\n}\n\nexport function benefitCustomMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitCustomMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => BenefitCustomMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitCustomMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const BenefitCustom$inboundSchema: z.ZodType<\n  BenefitCustom,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  id: z.string(),\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  type: z.literal(\"custom\").optional(),\n  description: z.string(),\n  selectable: z.boolean(),\n  deletable: z.boolean(),\n  organization_id: z.string(),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  properties: BenefitCustomProperties$inboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"organization_id\": \"organizationId\",\n  });\n});\n\n/** @internal */\nexport type BenefitCustom$Outbound = {\n  id: string;\n  created_at: string;\n  modified_at: string | null;\n  type: \"custom\";\n  description: string;\n  selectable: boolean;\n  deletable: boolean;\n  organization_id: string;\n  metadata: { [k: string]: string | number | number | boolean };\n  properties: BenefitCustomProperties$Outbound;\n};\n\n/** @internal */\nexport const BenefitCustom$outboundSchema: z.ZodType<\n  BenefitCustom$Outbound,\n  z.ZodTypeDef,\n  BenefitCustom\n> = z.object({\n  id: z.string(),\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  type: z.literal(\"custom\").default(\"custom\" as const),\n  description: z.string(),\n  selectable: z.boolean(),\n  deletable: z.boolean(),\n  organizationId: z.string(),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  properties: BenefitCustomProperties$outboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    organizationId: \"organization_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitCustom$ {\n  /** @deprecated use `BenefitCustom$inboundSchema` instead. */\n  export const inboundSchema = BenefitCustom$inboundSchema;\n  /** @deprecated use `BenefitCustom$outboundSchema` instead. */\n  export const outboundSchema = BenefitCustom$outboundSchema;\n  /** @deprecated use `BenefitCustom$Outbound` instead. */\n  export type Outbound = BenefitCustom$Outbound;\n}\n\nexport function benefitCustomToJSON(benefitCustom: BenefitCustom): string {\n  return JSON.stringify(BenefitCustom$outboundSchema.parse(benefitCustom));\n}\n\nexport function benefitCustomFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitCustom, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => BenefitCustom$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitCustom' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 151, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 157, "column": 0}, "map": {"version":3,"file":"benefitdiscordproperties.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/benefitdiscordproperties.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\n/**\n * Properties for a benefit of type `discord`.\n */\nexport type BenefitDiscordProperties = {\n  /**\n   * The ID of the Discord server.\n   */\n  guildId: string;\n  /**\n   * The ID of the Discord role to grant.\n   */\n  roleId: string;\n  guildToken: string;\n};\n\n/** @internal */\nexport const BenefitDiscordProperties$inboundSchema: z.ZodType<\n  BenefitDiscordProperties,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  guild_id: z.string(),\n  role_id: z.string(),\n  guild_token: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    \"guild_id\": \"guildId\",\n    \"role_id\": \"roleId\",\n    \"guild_token\": \"guildToken\",\n  });\n});\n\n/** @internal */\nexport type BenefitDiscordProperties$Outbound = {\n  guild_id: string;\n  role_id: string;\n  guild_token: string;\n};\n\n/** @internal */\nexport const BenefitDiscordProperties$outboundSchema: z.ZodType<\n  BenefitDiscordProperties$Outbound,\n  z.ZodTypeDef,\n  BenefitDiscordProperties\n> = z.object({\n  guildId: z.string(),\n  roleId: z.string(),\n  guildToken: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    guildId: \"guild_id\",\n    roleId: \"role_id\",\n    guildToken: \"guild_token\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitDiscordProperties$ {\n  /** @deprecated use `BenefitDiscordProperties$inboundSchema` instead. */\n  export const inboundSchema = BenefitDiscordProperties$inboundSchema;\n  /** @deprecated use `BenefitDiscordProperties$outboundSchema` instead. */\n  export const outboundSchema = BenefitDiscordProperties$outboundSchema;\n  /** @deprecated use `BenefitDiscordProperties$Outbound` instead. */\n  export type Outbound = BenefitDiscordProperties$Outbound;\n}\n\nexport function benefitDiscordPropertiesToJSON(\n  benefitDiscordProperties: BenefitDiscordProperties,\n): string {\n  return JSON.stringify(\n    BenefitDiscordProperties$outboundSchema.parse(benefitDiscordProperties),\n  );\n}\n\nexport function benefitDiscordPropertiesFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitDiscordProperties, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => BenefitDiscordProperties$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitDiscordProperties' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;;;;;AAoB1C,MAAM,sCAAsC,GAI/C,CAAC,6IAAC,MAAM,CAAC;IACX,QAAQ,EAAE,CAAC,6IAAC,MAAM,EAAE;IACpB,OAAO,EAAE,CAAC,6IAAC,MAAM,EAAE;IACnB,WAAW,EAAE,CAAC,6IAAC,MAAM,EAAE;CACxB,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,UAAU,EAAE,SAAS;QACrB,SAAS,EAAE,QAAQ;QACnB,aAAa,EAAE,YAAY;KAC5B,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAUI,MAAM,uCAAuC,GAIhD,CAAC,6IAAC,MAAM,CAAC;IACX,OAAO,EAAE,CAAC,6IAAC,MAAM,EAAE;IACnB,MAAM,EAAE,CAAC,6IAAC,MAAM,EAAE;IAClB,UAAU,EAAE,CAAC,6IAAC,MAAM,EAAE;CACvB,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,OAAO,EAAE,UAAU;QACnB,MAAM,EAAE,SAAS;QACjB,UAAU,EAAE,aAAa;KAC1B,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,yBAAyB,CAOzC;AAPD,CAAA,SAAiB,yBAAyB;IACxC,sEAAA,EAAwE,CAC3D,0BAAA,aAAa,GAAG,sCAAsC,CAAC;IACpE,uEAAA,EAAyE,CAC5D,0BAAA,cAAc,GAAG,uCAAuC,CAAC;AAGxE,CAAC,EAPgB,yBAAyB,IAAA,CAAzB,yBAAyB,GAAA,CAAA,CAAA,GAOzC;AAEK,SAAU,8BAA8B,CAC5C,wBAAkD;IAElD,OAAO,IAAI,CAAC,SAAS,CACnB,uCAAuC,CAAC,KAAK,CAAC,wBAAwB,CAAC,CACxE,CAAC;AACJ,CAAC;AAEK,SAAU,gCAAgC,CAC9C,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,qCAAuC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAClE,CAAA,oDAAA,CAAsD,CACvD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 206, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 212, "column": 0}, "map": {"version":3,"file":"benefitdiscord.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/benefitdiscord.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  BenefitDiscordProperties,\n  BenefitDiscordProperties$inboundSchema,\n  BenefitDiscordProperties$Outbound,\n  BenefitDiscordProperties$outboundSchema,\n} from \"./benefitdiscordproperties.js\";\n\nexport type BenefitDiscordMetadata = string | number | number | boolean;\n\n/**\n * A benefit of type `discord`.\n *\n * @remarks\n *\n * Use it to automatically invite your backers to a Discord server.\n */\nexport type BenefitDiscord = {\n  /**\n   * The ID of the benefit.\n   */\n  id: string;\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  type?: \"discord\" | undefined;\n  /**\n   * The description of the benefit.\n   */\n  description: string;\n  /**\n   * Whether the benefit is selectable when creating a product.\n   */\n  selectable: boolean;\n  /**\n   * Whether the benefit is deletable.\n   */\n  deletable: boolean;\n  /**\n   * The ID of the organization owning the benefit.\n   */\n  organizationId: string;\n  metadata: { [k: string]: string | number | number | boolean };\n  /**\n   * Properties for a benefit of type `discord`.\n   */\n  properties: BenefitDiscordProperties;\n};\n\n/** @internal */\nexport const BenefitDiscordMetadata$inboundSchema: z.ZodType<\n  BenefitDiscordMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type BenefitDiscordMetadata$Outbound =\n  | string\n  | number\n  | number\n  | boolean;\n\n/** @internal */\nexport const BenefitDiscordMetadata$outboundSchema: z.ZodType<\n  BenefitDiscordMetadata$Outbound,\n  z.ZodTypeDef,\n  BenefitDiscordMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitDiscordMetadata$ {\n  /** @deprecated use `BenefitDiscordMetadata$inboundSchema` instead. */\n  export const inboundSchema = BenefitDiscordMetadata$inboundSchema;\n  /** @deprecated use `BenefitDiscordMetadata$outboundSchema` instead. */\n  export const outboundSchema = BenefitDiscordMetadata$outboundSchema;\n  /** @deprecated use `BenefitDiscordMetadata$Outbound` instead. */\n  export type Outbound = BenefitDiscordMetadata$Outbound;\n}\n\nexport function benefitDiscordMetadataToJSON(\n  benefitDiscordMetadata: BenefitDiscordMetadata,\n): string {\n  return JSON.stringify(\n    BenefitDiscordMetadata$outboundSchema.parse(benefitDiscordMetadata),\n  );\n}\n\nexport function benefitDiscordMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitDiscordMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => BenefitDiscordMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitDiscordMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const BenefitDiscord$inboundSchema: z.ZodType<\n  BenefitDiscord,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  id: z.string(),\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  type: z.literal(\"discord\").optional(),\n  description: z.string(),\n  selectable: z.boolean(),\n  deletable: z.boolean(),\n  organization_id: z.string(),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  properties: BenefitDiscordProperties$inboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"organization_id\": \"organizationId\",\n  });\n});\n\n/** @internal */\nexport type BenefitDiscord$Outbound = {\n  id: string;\n  created_at: string;\n  modified_at: string | null;\n  type: \"discord\";\n  description: string;\n  selectable: boolean;\n  deletable: boolean;\n  organization_id: string;\n  metadata: { [k: string]: string | number | number | boolean };\n  properties: BenefitDiscordProperties$Outbound;\n};\n\n/** @internal */\nexport const BenefitDiscord$outboundSchema: z.ZodType<\n  BenefitDiscord$Outbound,\n  z.ZodTypeDef,\n  BenefitDiscord\n> = z.object({\n  id: z.string(),\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  type: z.literal(\"discord\").default(\"discord\" as const),\n  description: z.string(),\n  selectable: z.boolean(),\n  deletable: z.boolean(),\n  organizationId: z.string(),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  properties: BenefitDiscordProperties$outboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    organizationId: \"organization_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitDiscord$ {\n  /** @deprecated use `BenefitDiscord$inboundSchema` instead. */\n  export const inboundSchema = BenefitDiscord$inboundSchema;\n  /** @deprecated use `BenefitDiscord$outboundSchema` instead. */\n  export const outboundSchema = BenefitDiscord$outboundSchema;\n  /** @deprecated use `BenefitDiscord$Outbound` instead. */\n  export type Outbound = BenefitDiscord$Outbound;\n}\n\nexport function benefitDiscordToJSON(benefitDiscord: BenefitDiscord): string {\n  return JSON.stringify(BenefitDiscord$outboundSchema.parse(benefitDiscord));\n}\n\nexport function benefitDiscordFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitDiscord, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => BenefitDiscord$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitDiscord' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 319, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 325, "column": 0}, "map": {"version":3,"file":"benefitdownloadablesproperties.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/benefitdownloadablesproperties.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport type BenefitDownloadablesProperties = {\n  archived: { [k: string]: boolean };\n  files: Array<string>;\n};\n\n/** @internal */\nexport const BenefitDownloadablesProperties$inboundSchema: z.ZodType<\n  BenefitDownloadablesProperties,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  archived: z.record(z.boolean()),\n  files: z.array(z.string()),\n});\n\n/** @internal */\nexport type BenefitDownloadablesProperties$Outbound = {\n  archived: { [k: string]: boolean };\n  files: Array<string>;\n};\n\n/** @internal */\nexport const BenefitDownloadablesProperties$outboundSchema: z.ZodType<\n  BenefitDownloadablesProperties$Outbound,\n  z.ZodTypeDef,\n  BenefitDownloadablesProperties\n> = z.object({\n  archived: z.record(z.boolean()),\n  files: z.array(z.string()),\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitDownloadablesProperties$ {\n  /** @deprecated use `BenefitDownloadablesProperties$inboundSchema` instead. */\n  export const inboundSchema = BenefitDownloadablesProperties$inboundSchema;\n  /** @deprecated use `BenefitDownloadablesProperties$outboundSchema` instead. */\n  export const outboundSchema = BenefitDownloadablesProperties$outboundSchema;\n  /** @deprecated use `BenefitDownloadablesProperties$Outbound` instead. */\n  export type Outbound = BenefitDownloadablesProperties$Outbound;\n}\n\nexport function benefitDownloadablesPropertiesToJSON(\n  benefitDownloadablesProperties: BenefitDownloadablesProperties,\n): string {\n  return JSON.stringify(\n    BenefitDownloadablesProperties$outboundSchema.parse(\n      benefitDownloadablesProperties,\n    ),\n  );\n}\n\nexport function benefitDownloadablesPropertiesFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitDownloadablesProperties, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => BenefitDownloadablesProperties$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitDownloadablesProperties' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;AAGH,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AADjD,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;;AAWlB,MAAM,4CAA4C,GAIrD,CAAC,6IAAC,MAAM,CAAC;IACX,QAAQ,EAAE,CAAC,6IAAC,MAAM,CAAC,CAAC,6IAAC,OAAO,EAAE,CAAC;IAC/B,KAAK,EAAE,CAAC,6IAAC,KAAK,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;CAC3B,CAAC,CAAC;AASI,MAAM,6CAA6C,GAItD,CAAC,6IAAC,MAAM,CAAC;IACX,QAAQ,EAAE,CAAC,6IAAC,MAAM,CAAC,CAAC,6IAAC,OAAO,EAAE,CAAC;IAC/B,KAAK,EAAE,CAAC,6IAAC,KAAK,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;CAC3B,CAAC,CAAC;AAMG,IAAW,+BAA+B,CAO/C;AAPD,CAAA,SAAiB,+BAA+B;IAC9C,4EAAA,EAA8E,CACjE,gCAAA,aAAa,GAAG,4CAA4C,CAAC;IAC1E,6EAAA,EAA+E,CAClE,gCAAA,cAAc,GAAG,6CAA6C,CAAC;AAG9E,CAAC,EAPgB,+BAA+B,IAAA,CAA/B,+BAA+B,GAAA,CAAA,CAAA,GAO/C;AAEK,SAAU,oCAAoC,CAClD,8BAA8D;IAE9D,OAAO,IAAI,CAAC,SAAS,CACnB,6CAA6C,CAAC,KAAK,CACjD,8BAA8B,CAC/B,CACF,CAAC;AACJ,CAAC;AAEK,SAAU,sCAAsC,CACpD,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,2CAA6C,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACxE,CAAA,0DAAA,CAA4D,CAC7D,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 358, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 364, "column": 0}, "map": {"version":3,"file":"benefitdownloadables.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/benefitdownloadables.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  BenefitDownloadablesProperties,\n  BenefitDownloadablesProperties$inboundSchema,\n  BenefitDownloadablesProperties$Outbound,\n  BenefitDownloadablesProperties$outboundSchema,\n} from \"./benefitdownloadablesproperties.js\";\n\nexport type BenefitDownloadablesMetadata = string | number | number | boolean;\n\nexport type BenefitDownloadables = {\n  /**\n   * The ID of the benefit.\n   */\n  id: string;\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  type?: \"downloadables\" | undefined;\n  /**\n   * The description of the benefit.\n   */\n  description: string;\n  /**\n   * Whether the benefit is selectable when creating a product.\n   */\n  selectable: boolean;\n  /**\n   * Whether the benefit is deletable.\n   */\n  deletable: boolean;\n  /**\n   * The ID of the organization owning the benefit.\n   */\n  organizationId: string;\n  metadata: { [k: string]: string | number | number | boolean };\n  properties: BenefitDownloadablesProperties;\n};\n\n/** @internal */\nexport const BenefitDownloadablesMetadata$inboundSchema: z.ZodType<\n  BenefitDownloadablesMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type BenefitDownloadablesMetadata$Outbound =\n  | string\n  | number\n  | number\n  | boolean;\n\n/** @internal */\nexport const BenefitDownloadablesMetadata$outboundSchema: z.ZodType<\n  BenefitDownloadablesMetadata$Outbound,\n  z.ZodTypeDef,\n  BenefitDownloadablesMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitDownloadablesMetadata$ {\n  /** @deprecated use `BenefitDownloadablesMetadata$inboundSchema` instead. */\n  export const inboundSchema = BenefitDownloadablesMetadata$inboundSchema;\n  /** @deprecated use `BenefitDownloadablesMetadata$outboundSchema` instead. */\n  export const outboundSchema = BenefitDownloadablesMetadata$outboundSchema;\n  /** @deprecated use `BenefitDownloadablesMetadata$Outbound` instead. */\n  export type Outbound = BenefitDownloadablesMetadata$Outbound;\n}\n\nexport function benefitDownloadablesMetadataToJSON(\n  benefitDownloadablesMetadata: BenefitDownloadablesMetadata,\n): string {\n  return JSON.stringify(\n    BenefitDownloadablesMetadata$outboundSchema.parse(\n      benefitDownloadablesMetadata,\n    ),\n  );\n}\n\nexport function benefitDownloadablesMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitDownloadablesMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => BenefitDownloadablesMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitDownloadablesMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const BenefitDownloadables$inboundSchema: z.ZodType<\n  BenefitDownloadables,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  id: z.string(),\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  type: z.literal(\"downloadables\").optional(),\n  description: z.string(),\n  selectable: z.boolean(),\n  deletable: z.boolean(),\n  organization_id: z.string(),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  properties: BenefitDownloadablesProperties$inboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"organization_id\": \"organizationId\",\n  });\n});\n\n/** @internal */\nexport type BenefitDownloadables$Outbound = {\n  id: string;\n  created_at: string;\n  modified_at: string | null;\n  type: \"downloadables\";\n  description: string;\n  selectable: boolean;\n  deletable: boolean;\n  organization_id: string;\n  metadata: { [k: string]: string | number | number | boolean };\n  properties: BenefitDownloadablesProperties$Outbound;\n};\n\n/** @internal */\nexport const BenefitDownloadables$outboundSchema: z.ZodType<\n  BenefitDownloadables$Outbound,\n  z.ZodTypeDef,\n  BenefitDownloadables\n> = z.object({\n  id: z.string(),\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  type: z.literal(\"downloadables\").default(\"downloadables\" as const),\n  description: z.string(),\n  selectable: z.boolean(),\n  deletable: z.boolean(),\n  organizationId: z.string(),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  properties: BenefitDownloadablesProperties$outboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    organizationId: \"organization_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitDownloadables$ {\n  /** @deprecated use `BenefitDownloadables$inboundSchema` instead. */\n  export const inboundSchema = BenefitDownloadables$inboundSchema;\n  /** @deprecated use `BenefitDownloadables$outboundSchema` instead. */\n  export const outboundSchema = BenefitDownloadables$outboundSchema;\n  /** @deprecated use `BenefitDownloadables$Outbound` instead. */\n  export type Outbound = BenefitDownloadables$Outbound;\n}\n\nexport function benefitDownloadablesToJSON(\n  benefitDownloadables: BenefitDownloadables,\n): string {\n  return JSON.stringify(\n    BenefitDownloadables$outboundSchema.parse(benefitDownloadables),\n  );\n}\n\nexport function benefitDownloadablesFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitDownloadables, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => BenefitDownloadables$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitDownloadables' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,4CAA4C,EAE5C,6CAA6C,GAC9C,MAAM,qCAAqC,CAAC;;;;;;AAuCtC,MAAM,0CAA0C,GAInD,CAAC,6IAAC,KAAK,CAAC;IAAC,CAAC,6IAAC,MAAM,EAAE;IAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAAE,CAAC,6IAAC,MAAM,EAAE;IAAE,CAAC,6IAAC,OAAO,EAAE;CAAC,CAAC,CAAC;AAU9D,MAAM,2CAA2C,GAIpD,CAAC,6IAAC,KAAK,CAAC;IAAC,CAAC,6IAAC,MAAM,EAAE;IAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAAE,CAAC,6IAAC,MAAM,EAAE;IAAE,CAAC,6IAAC,OAAO,EAAE;CAAC,CAAC,CAAC;AAM/D,IAAW,6BAA6B,CAO7C;AAPD,CAAA,SAAiB,6BAA6B;IAC5C,0EAAA,EAA4E,CAC/D,8BAAA,aAAa,GAAG,0CAA0C,CAAC;IACxE,2EAAA,EAA6E,CAChE,8BAAA,cAAc,GAAG,2CAA2C,CAAC;AAG5E,CAAC,EAPgB,6BAA6B,IAAA,CAA7B,6BAA6B,GAAA,CAAA,CAAA,GAO7C;AAEK,SAAU,kCAAkC,CAChD,4BAA0D;IAE1D,OAAO,IAAI,CAAC,SAAS,CACnB,2CAA2C,CAAC,KAAK,CAC/C,4BAA4B,CAC7B,CACF,CAAC;AACJ,CAAC;AAEK,SAAU,oCAAoC,CAClD,UAAkB;IAElB,WAAO,oLAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,yCAA2C,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACtE,CAAA,wDAAA,CAA0D,CAC3D,CAAC;AACJ,CAAC;AAGM,MAAM,kCAAkC,GAI3C,CAAC,6IAAC,MAAM,CAAC;IACX,EAAE,EAAE,CAAC,6IAAC,MAAM,EAAE;IACd,UAAU,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,CAAC;QAAE,MAAM,EAAE,IAAI;IAAA,CAAE,CAAC,CAAC,SAAS,EAAC,CAAC,CAAC,EAAG,AAAD,IAAK,IAAI,CAAC,CAAC,CAAC,CAAC;IAC7E,WAAW,EAAE,CAAC,6IAAC,QAAQ,CACrB,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,CAAC;QAAE,MAAM,EAAE,IAAI;IAAA,CAAE,CAAC,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAClE;IACD,IAAI,EAAE,CAAC,6IAAC,OAAO,CAAC,eAAe,CAAC,CAAC,QAAQ,EAAE;IAC3C,WAAW,EAAE,CAAC,6IAAC,MAAM,EAAE;IACvB,UAAU,EAAE,CAAC,6IAAC,OAAO,EAAE;IACvB,SAAS,EAAE,CAAC,6IAAC,OAAO,EAAE;IACtB,eAAe,EAAE,CAAC,6IAAC,MAAM,EAAE;IAC3B,QAAQ,EAAE,CAAC,6IAAC,MAAM,CAChB,CAAC,6IAAC,KAAK,CAAC;QAAC,CAAC,6IAAC,MAAM,EAAE;QAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;QAAE,CAAC,6IAAC,MAAM,EAAE;QAAE,CAAC,6IAAC,OAAO,EAAE;KAAC,CAAC,CACjE;IACD,UAAU,kNAAE,+CAA4C;CACzD,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,YAAY,EAAE,WAAW;QACzB,aAAa,EAAE,YAAY;QAC3B,iBAAiB,EAAE,gBAAgB;KACpC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAiBI,MAAM,mCAAmC,GAI5C,CAAC,6IAAC,MAAM,CAAC;IACX,EAAE,EAAE,CAAC,6IAAC,MAAM,EAAE;IACd,SAAS,EAAE,CAAC,6IAAC,IAAI,EAAE,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,WAAW,EAAE,CAAC;IACnD,UAAU,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,IAAI,EAAE,CAAC,SAAS,EAAC,CAAC,CAAC,EAAG,AAAD,CAAE,CAAC,WAAW,EAAE,CAAC,CAAC;IAChE,IAAI,EAAE,CAAC,6IAAC,OAAO,CAAC,eAAe,CAAC,CAAC,OAAO,CAAC,eAAwB,CAAC;IAClE,WAAW,EAAE,CAAC,6IAAC,MAAM,EAAE;IACvB,UAAU,EAAE,CAAC,6IAAC,OAAO,EAAE;IACvB,SAAS,EAAE,CAAC,6IAAC,OAAO,EAAE;IACtB,cAAc,EAAE,CAAC,6IAAC,MAAM,EAAE;IAC1B,QAAQ,EAAE,CAAC,6IAAC,MAAM,CAChB,CAAC,6IAAC,KAAK,CAAC;QAAC,CAAC,6IAAC,MAAM,EAAE;QAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;QAAE,CAAC,6IAAC,MAAM,EAAE;QAAE,CAAC,6IAAC,OAAO,EAAE;KAAC,CAAC,CACjE;IACD,UAAU,kNAAE,gDAA6C;CAC1D,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,QAAO,sLAAA,AAAM,EAAC,CAAC,EAAE;QACf,SAAS,EAAE,YAAY;QACvB,UAAU,EAAE,aAAa;QACzB,cAAc,EAAE,iBAAiB;KAClC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,qBAAqB,CAOrC;AAPD,CAAA,SAAiB,qBAAqB;IACpC,kEAAA,EAAoE,CACvD,sBAAA,aAAa,GAAG,kCAAkC,CAAC;IAChE,mEAAA,EAAqE,CACxD,sBAAA,cAAc,GAAG,mCAAmC,CAAC;AAGpE,CAAC,EAPgB,qBAAqB,IAAA,CAArB,qBAAqB,GAAA,CAAA,CAAA,GAOrC;AAEK,SAAU,0BAA0B,CACxC,oBAA0C;IAE1C,OAAO,IAAI,CAAC,SAAS,CACnB,mCAAmC,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAChE,CAAC;AACJ,CAAC;AAEK,SAAU,4BAA4B,CAC1C,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,iCAAmC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC9D,CAAA,gDAAA,CAAkD,CACnD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 471, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 477, "column": 0}, "map": {"version":3,"file":"benefitgithubrepositoryproperties.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/benefitgithubrepositoryproperties.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { ClosedEnum } from \"../../types/enums.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\n/**\n * The permission level to grant. Read more about roles and their permissions on [GitHub documentation](https://docs.github.com/en/organizations/managing-user-access-to-your-organizations-repositories/managing-repository-roles/repository-roles-for-an-organization#permissions-for-each-role).\n */\nexport const Permission = {\n  Pull: \"pull\",\n  Triage: \"triage\",\n  Push: \"push\",\n  Maintain: \"maintain\",\n  Admin: \"admin\",\n} as const;\n/**\n * The permission level to grant. Read more about roles and their permissions on [GitHub documentation](https://docs.github.com/en/organizations/managing-user-access-to-your-organizations-repositories/managing-repository-roles/repository-roles-for-an-organization#permissions-for-each-role).\n */\nexport type Permission = ClosedEnum<typeof Permission>;\n\n/**\n * Properties for a benefit of type `github_repository`.\n */\nexport type BenefitGitHubRepositoryProperties = {\n  /**\n   * The owner of the repository.\n   */\n  repositoryOwner: string;\n  /**\n   * The name of the repository.\n   */\n  repositoryName: string;\n  /**\n   * The permission level to grant. Read more about roles and their permissions on [GitHub documentation](https://docs.github.com/en/organizations/managing-user-access-to-your-organizations-repositories/managing-repository-roles/repository-roles-for-an-organization#permissions-for-each-role).\n   */\n  permission: Permission;\n};\n\n/** @internal */\nexport const Permission$inboundSchema: z.ZodNativeEnum<typeof Permission> = z\n  .nativeEnum(Permission);\n\n/** @internal */\nexport const Permission$outboundSchema: z.ZodNativeEnum<typeof Permission> =\n  Permission$inboundSchema;\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace Permission$ {\n  /** @deprecated use `Permission$inboundSchema` instead. */\n  export const inboundSchema = Permission$inboundSchema;\n  /** @deprecated use `Permission$outboundSchema` instead. */\n  export const outboundSchema = Permission$outboundSchema;\n}\n\n/** @internal */\nexport const BenefitGitHubRepositoryProperties$inboundSchema: z.ZodType<\n  BenefitGitHubRepositoryProperties,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  repository_owner: z.string(),\n  repository_name: z.string(),\n  permission: Permission$inboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    \"repository_owner\": \"repositoryOwner\",\n    \"repository_name\": \"repositoryName\",\n  });\n});\n\n/** @internal */\nexport type BenefitGitHubRepositoryProperties$Outbound = {\n  repository_owner: string;\n  repository_name: string;\n  permission: string;\n};\n\n/** @internal */\nexport const BenefitGitHubRepositoryProperties$outboundSchema: z.ZodType<\n  BenefitGitHubRepositoryProperties$Outbound,\n  z.ZodTypeDef,\n  BenefitGitHubRepositoryProperties\n> = z.object({\n  repositoryOwner: z.string(),\n  repositoryName: z.string(),\n  permission: Permission$outboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    repositoryOwner: \"repository_owner\",\n    repositoryName: \"repository_name\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitGitHubRepositoryProperties$ {\n  /** @deprecated use `BenefitGitHubRepositoryProperties$inboundSchema` instead. */\n  export const inboundSchema = BenefitGitHubRepositoryProperties$inboundSchema;\n  /** @deprecated use `BenefitGitHubRepositoryProperties$outboundSchema` instead. */\n  export const outboundSchema =\n    BenefitGitHubRepositoryProperties$outboundSchema;\n  /** @deprecated use `BenefitGitHubRepositoryProperties$Outbound` instead. */\n  export type Outbound = BenefitGitHubRepositoryProperties$Outbound;\n}\n\nexport function benefitGitHubRepositoryPropertiesToJSON(\n  benefitGitHubRepositoryProperties: BenefitGitHubRepositoryProperties,\n): string {\n  return JSON.stringify(\n    BenefitGitHubRepositoryProperties$outboundSchema.parse(\n      benefitGitHubRepositoryProperties,\n    ),\n  );\n}\n\nexport function benefitGitHubRepositoryPropertiesFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitGitHubRepositoryProperties, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => BenefitGitHubRepositoryProperties$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitGitHubRepositoryProperties' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;;;;;AAQ1C,MAAM,UAAU,GAAG;IACxB,IAAI,EAAE,MAAM;IACZ,MAAM,EAAE,QAAQ;IAChB,IAAI,EAAE,MAAM;IACZ,QAAQ,EAAE,UAAU;IACpB,KAAK,EAAE,OAAO;CACN,CAAC;AAyBJ,MAAM,wBAAwB,GAAuC,CAAC,6IAC1E,UAAU,CAAC,UAAU,CAAC,CAAC;AAGnB,MAAM,yBAAyB,GACpC,wBAAwB,CAAC;AAMrB,IAAW,WAAW,CAK3B;AALD,CAAA,SAAiB,WAAW;IAC1B,wDAAA,EAA0D,CAC7C,YAAA,aAAa,GAAG,wBAAwB,CAAC;IACtD,yDAAA,EAA2D,CAC9C,YAAA,cAAc,GAAG,yBAAyB,CAAC;AAC1D,CAAC,EALgB,WAAW,IAAA,CAAX,WAAW,GAAA,CAAA,CAAA,GAK3B;AAGM,MAAM,+CAA+C,GAIxD,CAAC,6IAAC,MAAM,CAAC;IACX,gBAAgB,EAAE,CAAC,6IAAC,MAAM,EAAE;IAC5B,eAAe,EAAE,CAAC,6IAAC,MAAM,EAAE;IAC3B,UAAU,EAAE,wBAAwB;CACrC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,kBAAkB,EAAE,iBAAiB;QACrC,iBAAiB,EAAE,gBAAgB;KACpC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAUI,MAAM,gDAAgD,GAIzD,CAAC,6IAAC,MAAM,CAAC;IACX,eAAe,EAAE,CAAC,6IAAC,MAAM,EAAE;IAC3B,cAAc,EAAE,CAAC,6IAAC,MAAM,EAAE;IAC1B,UAAU,EAAE,yBAAyB;CACtC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,eAAe,EAAE,kBAAkB;QACnC,cAAc,EAAE,iBAAiB;KAClC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,kCAAkC,CAQlD;AARD,CAAA,SAAiB,kCAAkC;IACjD,+EAAA,EAAiF,CACpE,mCAAA,aAAa,GAAG,+CAA+C,CAAC;IAC7E,gFAAA,EAAkF,CACrE,mCAAA,cAAc,GACzB,gDAAgD,CAAC;AAGrD,CAAC,EARgB,kCAAkC,IAAA,CAAlC,kCAAkC,GAAA,CAAA,CAAA,GAQlD;AAEK,SAAU,uCAAuC,CACrD,iCAAoE;IAEpE,OAAO,IAAI,CAAC,SAAS,CACnB,gDAAgD,CAAC,KAAK,CACpD,iCAAiC,CAClC,CACF,CAAC;AACJ,CAAC;AAEK,SAAU,yCAAyC,CACvD,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,8CAAgD,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC3E,CAAA,6DAAA,CAA+D,CAChE,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 542, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 548, "column": 0}, "map": {"version":3,"file":"benefitgithubrepository.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/benefitgithubrepository.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  BenefitGitHubRepositoryProperties,\n  BenefitGitHubRepositoryProperties$inboundSchema,\n  BenefitGitHubRepositoryProperties$Outbound,\n  BenefitGitHubRepositoryProperties$outboundSchema,\n} from \"./benefitgithubrepositoryproperties.js\";\n\nexport type BenefitGitHubRepositoryMetadata =\n  | string\n  | number\n  | number\n  | boolean;\n\n/**\n * A benefit of type `github_repository`.\n *\n * @remarks\n *\n * Use it to automatically invite your backers to a private GitHub repository.\n */\nexport type BenefitGitHubRepository = {\n  /**\n   * The ID of the benefit.\n   */\n  id: string;\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  type?: \"github_repository\" | undefined;\n  /**\n   * The description of the benefit.\n   */\n  description: string;\n  /**\n   * Whether the benefit is selectable when creating a product.\n   */\n  selectable: boolean;\n  /**\n   * Whether the benefit is deletable.\n   */\n  deletable: boolean;\n  /**\n   * The ID of the organization owning the benefit.\n   */\n  organizationId: string;\n  metadata: { [k: string]: string | number | number | boolean };\n  /**\n   * Properties for a benefit of type `github_repository`.\n   */\n  properties: BenefitGitHubRepositoryProperties;\n};\n\n/** @internal */\nexport const BenefitGitHubRepositoryMetadata$inboundSchema: z.ZodType<\n  BenefitGitHubRepositoryMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type BenefitGitHubRepositoryMetadata$Outbound =\n  | string\n  | number\n  | number\n  | boolean;\n\n/** @internal */\nexport const BenefitGitHubRepositoryMetadata$outboundSchema: z.ZodType<\n  BenefitGitHubRepositoryMetadata$Outbound,\n  z.ZodTypeDef,\n  BenefitGitHubRepositoryMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitGitHubRepositoryMetadata$ {\n  /** @deprecated use `BenefitGitHubRepositoryMetadata$inboundSchema` instead. */\n  export const inboundSchema = BenefitGitHubRepositoryMetadata$inboundSchema;\n  /** @deprecated use `BenefitGitHubRepositoryMetadata$outboundSchema` instead. */\n  export const outboundSchema = BenefitGitHubRepositoryMetadata$outboundSchema;\n  /** @deprecated use `BenefitGitHubRepositoryMetadata$Outbound` instead. */\n  export type Outbound = BenefitGitHubRepositoryMetadata$Outbound;\n}\n\nexport function benefitGitHubRepositoryMetadataToJSON(\n  benefitGitHubRepositoryMetadata: BenefitGitHubRepositoryMetadata,\n): string {\n  return JSON.stringify(\n    BenefitGitHubRepositoryMetadata$outboundSchema.parse(\n      benefitGitHubRepositoryMetadata,\n    ),\n  );\n}\n\nexport function benefitGitHubRepositoryMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitGitHubRepositoryMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => BenefitGitHubRepositoryMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitGitHubRepositoryMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const BenefitGitHubRepository$inboundSchema: z.ZodType<\n  BenefitGitHubRepository,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  id: z.string(),\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  type: z.literal(\"github_repository\").optional(),\n  description: z.string(),\n  selectable: z.boolean(),\n  deletable: z.boolean(),\n  organization_id: z.string(),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  properties: BenefitGitHubRepositoryProperties$inboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"organization_id\": \"organizationId\",\n  });\n});\n\n/** @internal */\nexport type BenefitGitHubRepository$Outbound = {\n  id: string;\n  created_at: string;\n  modified_at: string | null;\n  type: \"github_repository\";\n  description: string;\n  selectable: boolean;\n  deletable: boolean;\n  organization_id: string;\n  metadata: { [k: string]: string | number | number | boolean };\n  properties: BenefitGitHubRepositoryProperties$Outbound;\n};\n\n/** @internal */\nexport const BenefitGitHubRepository$outboundSchema: z.ZodType<\n  BenefitGitHubRepository$Outbound,\n  z.ZodTypeDef,\n  BenefitGitHubRepository\n> = z.object({\n  id: z.string(),\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  type: z.literal(\"github_repository\").default(\"github_repository\" as const),\n  description: z.string(),\n  selectable: z.boolean(),\n  deletable: z.boolean(),\n  organizationId: z.string(),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  properties: BenefitGitHubRepositoryProperties$outboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    organizationId: \"organization_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitGitHubRepository$ {\n  /** @deprecated use `BenefitGitHubRepository$inboundSchema` instead. */\n  export const inboundSchema = BenefitGitHubRepository$inboundSchema;\n  /** @deprecated use `BenefitGitHubRepository$outboundSchema` instead. */\n  export const outboundSchema = BenefitGitHubRepository$outboundSchema;\n  /** @deprecated use `BenefitGitHubRepository$Outbound` instead. */\n  export type Outbound = BenefitGitHubRepository$Outbound;\n}\n\nexport function benefitGitHubRepositoryToJSON(\n  benefitGitHubRepository: BenefitGitHubRepository,\n): string {\n  return JSON.stringify(\n    BenefitGitHubRepository$outboundSchema.parse(benefitGitHubRepository),\n  );\n}\n\nexport function benefitGitHubRepositoryFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitGitHubRepository, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => BenefitGitHubRepository$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitGitHubRepository' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 655, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 661, "column": 0}, "map": {"version":3,"file":"benefitlicensekeyactivationproperties.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/benefitlicensekeyactivationproperties.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport type BenefitLicenseKeyActivationProperties = {\n  limit: number;\n  enableCustomerAdmin: boolean;\n};\n\n/** @internal */\nexport const BenefitLicenseKeyActivationProperties$inboundSchema: z.ZodType<\n  BenefitLicenseKeyActivationProperties,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  limit: z.number().int(),\n  enable_customer_admin: z.boolean(),\n}).transform((v) => {\n  return remap$(v, {\n    \"enable_customer_admin\": \"enableCustomerAdmin\",\n  });\n});\n\n/** @internal */\nexport type BenefitLicenseKeyActivationProperties$Outbound = {\n  limit: number;\n  enable_customer_admin: boolean;\n};\n\n/** @internal */\nexport const BenefitLicenseKeyActivationProperties$outboundSchema: z.ZodType<\n  BenefitLicenseKeyActivationProperties$Outbound,\n  z.ZodTypeDef,\n  BenefitLicenseKeyActivationProperties\n> = z.object({\n  limit: z.number().int(),\n  enableCustomerAdmin: z.boolean(),\n}).transform((v) => {\n  return remap$(v, {\n    enableCustomerAdmin: \"enable_customer_admin\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitLicenseKeyActivationProperties$ {\n  /** @deprecated use `BenefitLicenseKeyActivationProperties$inboundSchema` instead. */\n  export const inboundSchema =\n    BenefitLicenseKeyActivationProperties$inboundSchema;\n  /** @deprecated use `BenefitLicenseKeyActivationProperties$outboundSchema` instead. */\n  export const outboundSchema =\n    BenefitLicenseKeyActivationProperties$outboundSchema;\n  /** @deprecated use `BenefitLicenseKeyActivationProperties$Outbound` instead. */\n  export type Outbound = BenefitLicenseKeyActivationProperties$Outbound;\n}\n\nexport function benefitLicenseKeyActivationPropertiesToJSON(\n  benefitLicenseKeyActivationProperties: BenefitLicenseKeyActivationProperties,\n): string {\n  return JSON.stringify(\n    BenefitLicenseKeyActivationProperties$outboundSchema.parse(\n      benefitLicenseKeyActivationProperties,\n    ),\n  );\n}\n\nexport function benefitLicenseKeyActivationPropertiesFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitLicenseKeyActivationProperties, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) =>\n      BenefitLicenseKeyActivationProperties$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitLicenseKeyActivationProperties' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;;;;;AAU1C,MAAM,mDAAmD,GAI5D,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IACvB,qBAAqB,EAAE,CAAC,6IAAC,OAAO,EAAE;CACnC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,uBAAuB,EAAE,qBAAqB;KAC/C,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AASI,MAAM,oDAAoD,GAI7D,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IACvB,mBAAmB,EAAE,CAAC,6IAAC,OAAO,EAAE;CACjC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,QAAO,sLAAA,AAAM,EAAC,CAAC,EAAE;QACf,mBAAmB,EAAE,uBAAuB;KAC7C,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,sCAAsC,CAStD;AATD,CAAA,SAAiB,sCAAsC;IACrD,mFAAA,EAAqF,CACxE,uCAAA,aAAa,GACxB,mDAAmD,CAAC;IACtD,oFAAA,EAAsF,CACzE,uCAAA,cAAc,GACzB,oDAAoD,CAAC;AAGzD,CAAC,EATgB,sCAAsC,IAAA,CAAtC,sCAAsC,GAAA,CAAA,CAAA,GAStD;AAEK,SAAU,2CAA2C,CACzD,qCAA4E;IAE5E,OAAO,IAAI,CAAC,SAAS,CACnB,oDAAoD,CAAC,KAAK,CACxD,qCAAqC,CACtC,CACF,CAAC;AACJ,CAAC;AAEK,SAAU,6CAA6C,CAC3D,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CACF,CADI,kDAC+C,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC1E,CAAA,iEAAA,CAAmE,CACpE,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 704, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 710, "column": 0}, "map": {"version":3,"file":"benefitlicensekeyexpirationproperties.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/benefitlicensekeyexpirationproperties.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { ClosedEnum } from \"../../types/enums.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport const Timeframe = {\n  Year: \"year\",\n  Month: \"month\",\n  Day: \"day\",\n} as const;\nexport type Timeframe = ClosedEnum<typeof Timeframe>;\n\nexport type BenefitLicenseKeyExpirationProperties = {\n  ttl: number;\n  timeframe: Timeframe;\n};\n\n/** @internal */\nexport const Timeframe$inboundSchema: z.ZodNativeEnum<typeof Timeframe> = z\n  .nativeEnum(Timeframe);\n\n/** @internal */\nexport const Timeframe$outboundSchema: z.ZodNativeEnum<typeof Timeframe> =\n  Timeframe$inboundSchema;\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace Timeframe$ {\n  /** @deprecated use `Timeframe$inboundSchema` instead. */\n  export const inboundSchema = Timeframe$inboundSchema;\n  /** @deprecated use `Timeframe$outboundSchema` instead. */\n  export const outboundSchema = Timeframe$outboundSchema;\n}\n\n/** @internal */\nexport const BenefitLicenseKeyExpirationProperties$inboundSchema: z.ZodType<\n  BenefitLicenseKeyExpirationProperties,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  ttl: z.number().int(),\n  timeframe: Timeframe$inboundSchema,\n});\n\n/** @internal */\nexport type BenefitLicenseKeyExpirationProperties$Outbound = {\n  ttl: number;\n  timeframe: string;\n};\n\n/** @internal */\nexport const BenefitLicenseKeyExpirationProperties$outboundSchema: z.ZodType<\n  BenefitLicenseKeyExpirationProperties$Outbound,\n  z.ZodTypeDef,\n  BenefitLicenseKeyExpirationProperties\n> = z.object({\n  ttl: z.number().int(),\n  timeframe: Timeframe$outboundSchema,\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitLicenseKeyExpirationProperties$ {\n  /** @deprecated use `BenefitLicenseKeyExpirationProperties$inboundSchema` instead. */\n  export const inboundSchema =\n    BenefitLicenseKeyExpirationProperties$inboundSchema;\n  /** @deprecated use `BenefitLicenseKeyExpirationProperties$outboundSchema` instead. */\n  export const outboundSchema =\n    BenefitLicenseKeyExpirationProperties$outboundSchema;\n  /** @deprecated use `BenefitLicenseKeyExpirationProperties$Outbound` instead. */\n  export type Outbound = BenefitLicenseKeyExpirationProperties$Outbound;\n}\n\nexport function benefitLicenseKeyExpirationPropertiesToJSON(\n  benefitLicenseKeyExpirationProperties: BenefitLicenseKeyExpirationProperties,\n): string {\n  return JSON.stringify(\n    BenefitLicenseKeyExpirationProperties$outboundSchema.parse(\n      benefitLicenseKeyExpirationProperties,\n    ),\n  );\n}\n\nexport function benefitLicenseKeyExpirationPropertiesFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitLicenseKeyExpirationProperties, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) =>\n      BenefitLicenseKeyExpirationProperties$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitLicenseKeyExpirationProperties' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;;;;AAK1C,MAAM,SAAS,GAAG;IACvB,IAAI,EAAE,MAAM;IACZ,KAAK,EAAE,OAAO;IACd,GAAG,EAAE,KAAK;CACF,CAAC;AASJ,MAAM,uBAAuB,GAAsC,CAAC,6IACxE,UAAU,CAAC,SAAS,CAAC,CAAC;AAGlB,MAAM,wBAAwB,GACnC,uBAAuB,CAAC;AAMpB,IAAW,UAAU,CAK1B;AALD,CAAA,SAAiB,UAAU;IACzB,uDAAA,EAAyD,CAC5C,WAAA,aAAa,GAAG,uBAAuB,CAAC;IACrD,wDAAA,EAA0D,CAC7C,WAAA,cAAc,GAAG,wBAAwB,CAAC;AACzD,CAAC,EALgB,UAAU,IAAA,CAAV,UAAU,GAAA,CAAA,CAAA,GAK1B;AAGM,MAAM,mDAAmD,GAI5D,CAAC,6IAAC,MAAM,CAAC;IACX,GAAG,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IACrB,SAAS,EAAE,uBAAuB;CACnC,CAAC,CAAC;AASI,MAAM,oDAAoD,GAI7D,CAAC,6IAAC,MAAM,CAAC;IACX,GAAG,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IACrB,SAAS,EAAE,wBAAwB;CACpC,CAAC,CAAC;AAMG,IAAW,sCAAsC,CAStD;AATD,CAAA,SAAiB,sCAAsC;IACrD,mFAAA,EAAqF,CACxE,uCAAA,aAAa,GACxB,mDAAmD,CAAC;IACtD,oFAAA,EAAsF,CACzE,uCAAA,cAAc,GACzB,oDAAoD,CAAC;AAGzD,CAAC,EATgB,sCAAsC,IAAA,CAAtC,sCAAsC,GAAA,CAAA,CAAA,GAStD;AAEK,SAAU,2CAA2C,CACzD,qCAA4E;IAE5E,OAAO,IAAI,CAAC,SAAS,CACnB,oDAAoD,CAAC,KAAK,CACxD,qCAAqC,CACtC,CACF,CAAC;AACJ,CAAC;AAEK,SAAU,6CAA6C,CAC3D,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CACF,CADI,kDAC+C,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC1E,CAAA,iEAAA,CAAmE,CACpE,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 759, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 765, "column": 0}, "map": {"version":3,"file":"benefitlicensekeysproperties.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/benefitlicensekeysproperties.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  BenefitLicenseKeyActivationProperties,\n  BenefitLicenseKeyActivationProperties$inboundSchema,\n  BenefitLicenseKeyActivationProperties$Outbound,\n  BenefitLicenseKeyActivationProperties$outboundSchema,\n} from \"./benefitlicensekeyactivationproperties.js\";\nimport {\n  BenefitLicenseKeyExpirationProperties,\n  BenefitLicenseKeyExpirationProperties$inboundSchema,\n  BenefitLicenseKeyExpirationProperties$Outbound,\n  BenefitLicenseKeyExpirationProperties$outboundSchema,\n} from \"./benefitlicensekeyexpirationproperties.js\";\n\nexport type BenefitLicenseKeysProperties = {\n  prefix: string | null;\n  expires: BenefitLicenseKeyExpirationProperties | null;\n  activations: BenefitLicenseKeyActivationProperties | null;\n  limitUsage: number | null;\n};\n\n/** @internal */\nexport const BenefitLicenseKeysProperties$inboundSchema: z.ZodType<\n  BenefitLicenseKeysProperties,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  prefix: z.nullable(z.string()),\n  expires: z.nullable(BenefitLicenseKeyExpirationProperties$inboundSchema),\n  activations: z.nullable(BenefitLicenseKeyActivationProperties$inboundSchema),\n  limit_usage: z.nullable(z.number().int()),\n}).transform((v) => {\n  return remap$(v, {\n    \"limit_usage\": \"limitUsage\",\n  });\n});\n\n/** @internal */\nexport type BenefitLicenseKeysProperties$Outbound = {\n  prefix: string | null;\n  expires: BenefitLicenseKeyExpirationProperties$Outbound | null;\n  activations: BenefitLicenseKeyActivationProperties$Outbound | null;\n  limit_usage: number | null;\n};\n\n/** @internal */\nexport const BenefitLicenseKeysProperties$outboundSchema: z.ZodType<\n  BenefitLicenseKeysProperties$Outbound,\n  z.ZodTypeDef,\n  BenefitLicenseKeysProperties\n> = z.object({\n  prefix: z.nullable(z.string()),\n  expires: z.nullable(BenefitLicenseKeyExpirationProperties$outboundSchema),\n  activations: z.nullable(BenefitLicenseKeyActivationProperties$outboundSchema),\n  limitUsage: z.nullable(z.number().int()),\n}).transform((v) => {\n  return remap$(v, {\n    limitUsage: \"limit_usage\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitLicenseKeysProperties$ {\n  /** @deprecated use `BenefitLicenseKeysProperties$inboundSchema` instead. */\n  export const inboundSchema = BenefitLicenseKeysProperties$inboundSchema;\n  /** @deprecated use `BenefitLicenseKeysProperties$outboundSchema` instead. */\n  export const outboundSchema = BenefitLicenseKeysProperties$outboundSchema;\n  /** @deprecated use `BenefitLicenseKeysProperties$Outbound` instead. */\n  export type Outbound = BenefitLicenseKeysProperties$Outbound;\n}\n\nexport function benefitLicenseKeysPropertiesToJSON(\n  benefitLicenseKeysProperties: BenefitLicenseKeysProperties,\n): string {\n  return JSON.stringify(\n    BenefitLicenseKeysProperties$outboundSchema.parse(\n      benefitLicenseKeysProperties,\n    ),\n  );\n}\n\nexport function benefitLicenseKeysPropertiesFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitLicenseKeysProperties, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => BenefitLicenseKeysProperties$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitLicenseKeysProperties' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,mDAAmD,EAEnD,oDAAoD,GACrD,MAAM,4CAA4C,CAAC;AACpD,OAAO,EAEL,mDAAmD,EAEnD,oDAAoD,GACrD,MAAM,4CAA4C,CAAC;;;;;;;AAU7C,MAAM,0CAA0C,GAInD,CAAC,6IAAC,MAAM,CAAC;IACX,MAAM,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;IAC9B,OAAO,EAAE,CAAC,6IAAC,QAAQ,wNAAC,sDAAmD,CAAC;IACxE,WAAW,EAAE,CAAC,6IAAC,QAAQ,wNAAC,sDAAmD,CAAC;IAC5E,WAAW,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC;CAC1C,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,QAAO,sLAAM,AAAN,EAAO,CAAC,EAAE;QACf,aAAa,EAAE,YAAY;KAC5B,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAWI,MAAM,2CAA2C,GAIpD,CAAC,6IAAC,MAAM,CAAC;IACX,MAAM,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;IAC9B,OAAO,EAAE,CAAC,6IAAC,QAAQ,wNAAC,uDAAoD,CAAC;IACzE,WAAW,EAAE,CAAC,6IAAC,QAAQ,wNAAC,uDAAoD,CAAC;IAC7E,UAAU,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC;CACzC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,UAAU,EAAE,aAAa;KAC1B,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,6BAA6B,CAO7C;AAPD,CAAA,SAAiB,6BAA6B;IAC5C,0EAAA,EAA4E,CAC/D,8BAAA,aAAa,GAAG,0CAA0C,CAAC;IACxE,2EAAA,EAA6E,CAChE,8BAAA,cAAc,GAAG,2CAA2C,CAAC;AAG5E,CAAC,EAPgB,6BAA6B,IAAA,CAA7B,6BAA6B,GAAA,CAAA,CAAA,GAO7C;AAEK,SAAU,kCAAkC,CAChD,4BAA0D;IAE1D,OAAO,IAAI,CAAC,SAAS,CACnB,2CAA2C,CAAC,KAAK,CAC/C,4BAA4B,CAC7B,CACF,CAAC;AACJ,CAAC;AAEK,SAAU,oCAAoC,CAClD,UAAkB;IAElB,OAAO,wLAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,yCAA2C,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACtE,CAAA,wDAAA,CAA0D,CAC3D,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 816, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 822, "column": 0}, "map": {"version":3,"file":"benefitlicensekeys.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/benefitlicensekeys.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  BenefitLicenseKeysProperties,\n  BenefitLicenseKeysProperties$inboundSchema,\n  BenefitLicenseKeysProperties$Outbound,\n  BenefitLicenseKeysProperties$outboundSchema,\n} from \"./benefitlicensekeysproperties.js\";\n\nexport type BenefitLicenseKeysMetadata = string | number | number | boolean;\n\nexport type BenefitLicenseKeys = {\n  /**\n   * The ID of the benefit.\n   */\n  id: string;\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  type?: \"license_keys\" | undefined;\n  /**\n   * The description of the benefit.\n   */\n  description: string;\n  /**\n   * Whether the benefit is selectable when creating a product.\n   */\n  selectable: boolean;\n  /**\n   * Whether the benefit is deletable.\n   */\n  deletable: boolean;\n  /**\n   * The ID of the organization owning the benefit.\n   */\n  organizationId: string;\n  metadata: { [k: string]: string | number | number | boolean };\n  properties: BenefitLicenseKeysProperties;\n};\n\n/** @internal */\nexport const BenefitLicenseKeysMetadata$inboundSchema: z.ZodType<\n  BenefitLicenseKeysMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type BenefitLicenseKeysMetadata$Outbound =\n  | string\n  | number\n  | number\n  | boolean;\n\n/** @internal */\nexport const BenefitLicenseKeysMetadata$outboundSchema: z.ZodType<\n  BenefitLicenseKeysMetadata$Outbound,\n  z.ZodTypeDef,\n  BenefitLicenseKeysMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitLicenseKeysMetadata$ {\n  /** @deprecated use `BenefitLicenseKeysMetadata$inboundSchema` instead. */\n  export const inboundSchema = BenefitLicenseKeysMetadata$inboundSchema;\n  /** @deprecated use `BenefitLicenseKeysMetadata$outboundSchema` instead. */\n  export const outboundSchema = BenefitLicenseKeysMetadata$outboundSchema;\n  /** @deprecated use `BenefitLicenseKeysMetadata$Outbound` instead. */\n  export type Outbound = BenefitLicenseKeysMetadata$Outbound;\n}\n\nexport function benefitLicenseKeysMetadataToJSON(\n  benefitLicenseKeysMetadata: BenefitLicenseKeysMetadata,\n): string {\n  return JSON.stringify(\n    BenefitLicenseKeysMetadata$outboundSchema.parse(benefitLicenseKeysMetadata),\n  );\n}\n\nexport function benefitLicenseKeysMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitLicenseKeysMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => BenefitLicenseKeysMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitLicenseKeysMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const BenefitLicenseKeys$inboundSchema: z.ZodType<\n  BenefitLicenseKeys,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  id: z.string(),\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  type: z.literal(\"license_keys\").optional(),\n  description: z.string(),\n  selectable: z.boolean(),\n  deletable: z.boolean(),\n  organization_id: z.string(),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  properties: BenefitLicenseKeysProperties$inboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"organization_id\": \"organizationId\",\n  });\n});\n\n/** @internal */\nexport type BenefitLicenseKeys$Outbound = {\n  id: string;\n  created_at: string;\n  modified_at: string | null;\n  type: \"license_keys\";\n  description: string;\n  selectable: boolean;\n  deletable: boolean;\n  organization_id: string;\n  metadata: { [k: string]: string | number | number | boolean };\n  properties: BenefitLicenseKeysProperties$Outbound;\n};\n\n/** @internal */\nexport const BenefitLicenseKeys$outboundSchema: z.ZodType<\n  BenefitLicenseKeys$Outbound,\n  z.ZodTypeDef,\n  BenefitLicenseKeys\n> = z.object({\n  id: z.string(),\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  type: z.literal(\"license_keys\").default(\"license_keys\" as const),\n  description: z.string(),\n  selectable: z.boolean(),\n  deletable: z.boolean(),\n  organizationId: z.string(),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  properties: BenefitLicenseKeysProperties$outboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    organizationId: \"organization_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitLicenseKeys$ {\n  /** @deprecated use `BenefitLicenseKeys$inboundSchema` instead. */\n  export const inboundSchema = BenefitLicenseKeys$inboundSchema;\n  /** @deprecated use `BenefitLicenseKeys$outboundSchema` instead. */\n  export const outboundSchema = BenefitLicenseKeys$outboundSchema;\n  /** @deprecated use `BenefitLicenseKeys$Outbound` instead. */\n  export type Outbound = BenefitLicenseKeys$Outbound;\n}\n\nexport function benefitLicenseKeysToJSON(\n  benefitLicenseKeys: BenefitLicenseKeys,\n): string {\n  return JSON.stringify(\n    BenefitLicenseKeys$outboundSchema.parse(benefitLicenseKeys),\n  );\n}\n\nexport function benefitLicenseKeysFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitLicenseKeys, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => BenefitLicenseKeys$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitLicenseKeys' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 929, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 935, "column": 0}, "map": {"version":3,"file":"benefitmetercreditproperties.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/benefitmetercreditproperties.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\n/**\n * Properties for a benefit of type `meter_unit`.\n */\nexport type BenefitMeterCreditProperties = {\n  units: number;\n  rollover: boolean;\n  meterId: string;\n};\n\n/** @internal */\nexport const BenefitMeterCreditProperties$inboundSchema: z.ZodType<\n  BenefitMeterCreditProperties,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  units: z.number().int(),\n  rollover: z.boolean(),\n  meter_id: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    \"meter_id\": \"meterId\",\n  });\n});\n\n/** @internal */\nexport type BenefitMeterCreditProperties$Outbound = {\n  units: number;\n  rollover: boolean;\n  meter_id: string;\n};\n\n/** @internal */\nexport const BenefitMeterCreditProperties$outboundSchema: z.ZodType<\n  BenefitMeterCreditProperties$Outbound,\n  z.ZodTypeDef,\n  BenefitMeterCreditProperties\n> = z.object({\n  units: z.number().int(),\n  rollover: z.boolean(),\n  meterId: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    meterId: \"meter_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitMeterCreditProperties$ {\n  /** @deprecated use `BenefitMeterCreditProperties$inboundSchema` instead. */\n  export const inboundSchema = BenefitMeterCreditProperties$inboundSchema;\n  /** @deprecated use `BenefitMeterCreditProperties$outboundSchema` instead. */\n  export const outboundSchema = BenefitMeterCreditProperties$outboundSchema;\n  /** @deprecated use `BenefitMeterCreditProperties$Outbound` instead. */\n  export type Outbound = BenefitMeterCreditProperties$Outbound;\n}\n\nexport function benefitMeterCreditPropertiesToJSON(\n  benefitMeterCreditProperties: BenefitMeterCreditProperties,\n): string {\n  return JSON.stringify(\n    BenefitMeterCreditProperties$outboundSchema.parse(\n      benefitMeterCreditProperties,\n    ),\n  );\n}\n\nexport function benefitMeterCreditPropertiesFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitMeterCreditProperties, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => BenefitMeterCreditProperties$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitMeterCreditProperties' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;;;;;AAc1C,MAAM,0CAA0C,GAInD,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IACvB,QAAQ,EAAE,CAAC,6IAAC,OAAO,EAAE;IACrB,QAAQ,EAAE,CAAC,6IAAC,MAAM,EAAE;CACrB,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,UAAU,EAAE,SAAS;KACtB,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAUI,MAAM,2CAA2C,GAIpD,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IACvB,QAAQ,EAAE,CAAC,6IAAC,OAAO,EAAE;IACrB,OAAO,EAAE,CAAC,6IAAC,MAAM,EAAE;CACpB,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAM,AAAN,EAAO,CAAC,EAAE;QACf,OAAO,EAAE,UAAU;KACpB,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,6BAA6B,CAO7C;AAPD,CAAA,SAAiB,6BAA6B;IAC5C,0EAAA,EAA4E,CAC/D,8BAAA,aAAa,GAAG,0CAA0C,CAAC;IACxE,2EAAA,EAA6E,CAChE,8BAAA,cAAc,GAAG,2CAA2C,CAAC;AAG5E,CAAC,EAPgB,6BAA6B,IAAA,CAA7B,6BAA6B,GAAA,CAAA,CAAA,GAO7C;AAEK,SAAU,kCAAkC,CAChD,4BAA0D;IAE1D,OAAO,IAAI,CAAC,SAAS,CACnB,2CAA2C,CAAC,KAAK,CAC/C,4BAA4B,CAC7B,CACF,CAAC;AACJ,CAAC;AAEK,SAAU,oCAAoC,CAClD,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,yCAA2C,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACtE,CAAA,wDAAA,CAA0D,CAC3D,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 980, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 986, "column": 0}, "map": {"version":3,"file":"benefitmetercredit.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/benefitmetercredit.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  BenefitMeterCreditProperties,\n  BenefitMeterCreditProperties$inboundSchema,\n  BenefitMeterCreditProperties$Outbound,\n  BenefitMeterCreditProperties$outboundSchema,\n} from \"./benefitmetercreditproperties.js\";\n\nexport type BenefitMeterCreditMetadata = string | number | number | boolean;\n\n/**\n * A benefit of type `meter_unit`.\n *\n * @remarks\n *\n * Use it to grant a number of units on a specific meter.\n */\nexport type BenefitMeterCredit = {\n  /**\n   * The ID of the benefit.\n   */\n  id: string;\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  type?: \"meter_credit\" | undefined;\n  /**\n   * The description of the benefit.\n   */\n  description: string;\n  /**\n   * Whether the benefit is selectable when creating a product.\n   */\n  selectable: boolean;\n  /**\n   * Whether the benefit is deletable.\n   */\n  deletable: boolean;\n  /**\n   * The ID of the organization owning the benefit.\n   */\n  organizationId: string;\n  metadata: { [k: string]: string | number | number | boolean };\n  /**\n   * Properties for a benefit of type `meter_unit`.\n   */\n  properties: BenefitMeterCreditProperties;\n};\n\n/** @internal */\nexport const BenefitMeterCreditMetadata$inboundSchema: z.ZodType<\n  BenefitMeterCreditMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type BenefitMeterCreditMetadata$Outbound =\n  | string\n  | number\n  | number\n  | boolean;\n\n/** @internal */\nexport const BenefitMeterCreditMetadata$outboundSchema: z.ZodType<\n  BenefitMeterCreditMetadata$Outbound,\n  z.ZodTypeDef,\n  BenefitMeterCreditMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitMeterCreditMetadata$ {\n  /** @deprecated use `BenefitMeterCreditMetadata$inboundSchema` instead. */\n  export const inboundSchema = BenefitMeterCreditMetadata$inboundSchema;\n  /** @deprecated use `BenefitMeterCreditMetadata$outboundSchema` instead. */\n  export const outboundSchema = BenefitMeterCreditMetadata$outboundSchema;\n  /** @deprecated use `BenefitMeterCreditMetadata$Outbound` instead. */\n  export type Outbound = BenefitMeterCreditMetadata$Outbound;\n}\n\nexport function benefitMeterCreditMetadataToJSON(\n  benefitMeterCreditMetadata: BenefitMeterCreditMetadata,\n): string {\n  return JSON.stringify(\n    BenefitMeterCreditMetadata$outboundSchema.parse(benefitMeterCreditMetadata),\n  );\n}\n\nexport function benefitMeterCreditMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitMeterCreditMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => BenefitMeterCreditMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitMeterCreditMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const BenefitMeterCredit$inboundSchema: z.ZodType<\n  BenefitMeterCredit,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  id: z.string(),\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  type: z.literal(\"meter_credit\").optional(),\n  description: z.string(),\n  selectable: z.boolean(),\n  deletable: z.boolean(),\n  organization_id: z.string(),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  properties: BenefitMeterCreditProperties$inboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"organization_id\": \"organizationId\",\n  });\n});\n\n/** @internal */\nexport type BenefitMeterCredit$Outbound = {\n  id: string;\n  created_at: string;\n  modified_at: string | null;\n  type: \"meter_credit\";\n  description: string;\n  selectable: boolean;\n  deletable: boolean;\n  organization_id: string;\n  metadata: { [k: string]: string | number | number | boolean };\n  properties: BenefitMeterCreditProperties$Outbound;\n};\n\n/** @internal */\nexport const BenefitMeterCredit$outboundSchema: z.ZodType<\n  BenefitMeterCredit$Outbound,\n  z.ZodTypeDef,\n  BenefitMeterCredit\n> = z.object({\n  id: z.string(),\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  type: z.literal(\"meter_credit\").default(\"meter_credit\" as const),\n  description: z.string(),\n  selectable: z.boolean(),\n  deletable: z.boolean(),\n  organizationId: z.string(),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  properties: BenefitMeterCreditProperties$outboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    organizationId: \"organization_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitMeterCredit$ {\n  /** @deprecated use `BenefitMeterCredit$inboundSchema` instead. */\n  export const inboundSchema = BenefitMeterCredit$inboundSchema;\n  /** @deprecated use `BenefitMeterCredit$outboundSchema` instead. */\n  export const outboundSchema = BenefitMeterCredit$outboundSchema;\n  /** @deprecated use `BenefitMeterCredit$Outbound` instead. */\n  export type Outbound = BenefitMeterCredit$Outbound;\n}\n\nexport function benefitMeterCreditToJSON(\n  benefitMeterCredit: BenefitMeterCredit,\n): string {\n  return JSON.stringify(\n    BenefitMeterCredit$outboundSchema.parse(benefitMeterCredit),\n  );\n}\n\nexport function benefitMeterCreditFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitMeterCredit, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => BenefitMeterCredit$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitMeterCredit' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1093, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1099, "column": 0}, "map": {"version":3,"file":"benefit.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/benefit.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  BenefitCustom,\n  BenefitCustom$inboundSchema,\n  BenefitCustom$Outbound,\n  BenefitCustom$outboundSchema,\n} from \"./benefitcustom.js\";\nimport {\n  BenefitDiscord,\n  BenefitDiscord$inboundSchema,\n  BenefitDiscord$Outbound,\n  BenefitDiscord$outboundSchema,\n} from \"./benefitdiscord.js\";\nimport {\n  BenefitDownloadables,\n  BenefitDownloadables$inboundSchema,\n  BenefitDownloadables$Outbound,\n  BenefitDownloadables$outboundSchema,\n} from \"./benefitdownloadables.js\";\nimport {\n  BenefitGitHubRepository,\n  BenefitGitHubRepository$inboundSchema,\n  BenefitGitHubRepository$Outbound,\n  BenefitGitHubRepository$outboundSchema,\n} from \"./benefitgithubrepository.js\";\nimport {\n  BenefitLicenseKeys,\n  BenefitLicenseKeys$inboundSchema,\n  BenefitLicenseKeys$Outbound,\n  BenefitLicenseKeys$outboundSchema,\n} from \"./benefitlicensekeys.js\";\nimport {\n  BenefitMeterCredit,\n  BenefitMeterCredit$inboundSchema,\n  BenefitMeterCredit$Outbound,\n  BenefitMeterCredit$outboundSchema,\n} from \"./benefitmetercredit.js\";\n\nexport type Benefit =\n  | BenefitCustom\n  | BenefitDiscord\n  | BenefitGitHubRepository\n  | BenefitDownloadables\n  | BenefitLicenseKeys\n  | BenefitMeterCredit;\n\n/** @internal */\nexport const Benefit$inboundSchema: z.ZodType<Benefit, z.ZodTypeDef, unknown> =\n  z.union([\n    BenefitCustom$inboundSchema,\n    BenefitDiscord$inboundSchema,\n    BenefitGitHubRepository$inboundSchema,\n    BenefitDownloadables$inboundSchema,\n    BenefitLicenseKeys$inboundSchema,\n    BenefitMeterCredit$inboundSchema,\n  ]);\n\n/** @internal */\nexport type Benefit$Outbound =\n  | BenefitCustom$Outbound\n  | BenefitDiscord$Outbound\n  | BenefitGitHubRepository$Outbound\n  | BenefitDownloadables$Outbound\n  | BenefitLicenseKeys$Outbound\n  | BenefitMeterCredit$Outbound;\n\n/** @internal */\nexport const Benefit$outboundSchema: z.ZodType<\n  Benefit$Outbound,\n  z.ZodTypeDef,\n  Benefit\n> = z.union([\n  BenefitCustom$outboundSchema,\n  BenefitDiscord$outboundSchema,\n  BenefitGitHubRepository$outboundSchema,\n  BenefitDownloadables$outboundSchema,\n  BenefitLicenseKeys$outboundSchema,\n  BenefitMeterCredit$outboundSchema,\n]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace Benefit$ {\n  /** @deprecated use `Benefit$inboundSchema` instead. */\n  export const inboundSchema = Benefit$inboundSchema;\n  /** @deprecated use `Benefit$outboundSchema` instead. */\n  export const outboundSchema = Benefit$outboundSchema;\n  /** @deprecated use `Benefit$Outbound` instead. */\n  export type Outbound = Benefit$Outbound;\n}\n\nexport function benefitToJSON(benefit: Benefit): string {\n  return JSON.stringify(Benefit$outboundSchema.parse(benefit));\n}\n\nexport function benefitFromJSON(\n  jsonString: string,\n): SafeParseResult<Benefit, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => Benefit$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'Benefit' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,2BAA2B,EAE3B,4BAA4B,GAC7B,MAAM,oBAAoB,CAAC;AAC5B,OAAO,EAEL,4BAA4B,EAE5B,6BAA6B,GAC9B,MAAM,qBAAqB,CAAC;AAC7B,OAAO,EAEL,kCAAkC,EAElC,mCAAmC,GACpC,MAAM,2BAA2B,CAAC;AACnC,OAAO,EAEL,qCAAqC,EAErC,sCAAsC,GACvC,MAAM,8BAA8B,CAAC;AACtC,OAAO,EAEL,gCAAgC,EAEhC,iCAAiC,GAClC,MAAM,yBAAyB,CAAC;AACjC,OAAO,EAEL,gCAAgC,EAEhC,iCAAiC,GAClC,MAAM,yBAAyB,CAAC;;;;;;;;;;AAW1B,MAAM,qBAAqB,GAChC,CAAC,6IAAC,KAAK,CAAC;mMACN,8BAA2B;oMAC3B,+BAA4B;6MAC5B,wCAAqC;0MACrC,qCAAkC;wMAClC,mCAAgC;wMAChC,mCAAgC;CACjC,CAAC,CAAC;AAYE,MAAM,sBAAsB,GAI/B,CAAC,6IAAC,KAAK,CAAC;mMACV,+BAA4B;oMAC5B,gCAA6B;6MAC7B,yCAAsC;IACtC,4OAAmC;wMACnC,oCAAiC;wMACjC,oCAAiC;CAClC,CAAC,CAAC;AAMG,IAAW,QAAQ,CAOxB;AAPD,CAAA,SAAiB,QAAQ;IACvB,qDAAA,EAAuD,CAC1C,SAAA,aAAa,GAAG,qBAAqB,CAAC;IACnD,sDAAA,EAAwD,CAC3C,SAAA,cAAc,GAAG,sBAAsB,CAAC;AAGvD,CAAC,EAPgB,QAAQ,IAAA,CAAR,QAAQ,GAAA,CAAA,CAAA,GAOxB;AAEK,SAAU,aAAa,CAAC,OAAgB;IAC5C,OAAO,IAAI,CAAC,SAAS,CAAC,sBAAsB,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;AAC/D,CAAC;AAEK,SAAU,eAAe,CAC7B,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,oBAAsB,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACjD,CAAA,mCAAA,CAAqC,CACtC,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 1152, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1158, "column": 0}, "map": {"version":3,"file":"benefitcustomcreateproperties.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/benefitcustomcreateproperties.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\n/**\n * Properties for creating a benefit of type `custom`.\n */\nexport type BenefitCustomCreateProperties = {\n  note?: string | null | undefined;\n};\n\n/** @internal */\nexport const BenefitCustomCreateProperties$inboundSchema: z.ZodType<\n  BenefitCustomCreateProperties,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  note: z.nullable(z.string()).optional(),\n});\n\n/** @internal */\nexport type BenefitCustomCreateProperties$Outbound = {\n  note?: string | null | undefined;\n};\n\n/** @internal */\nexport const BenefitCustomCreateProperties$outboundSchema: z.ZodType<\n  BenefitCustomCreateProperties$Outbound,\n  z.ZodTypeDef,\n  BenefitCustomCreateProperties\n> = z.object({\n  note: z.nullable(z.string()).optional(),\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitCustomCreateProperties$ {\n  /** @deprecated use `BenefitCustomCreateProperties$inboundSchema` instead. */\n  export const inboundSchema = BenefitCustomCreateProperties$inboundSchema;\n  /** @deprecated use `BenefitCustomCreateProperties$outboundSchema` instead. */\n  export const outboundSchema = BenefitCustomCreateProperties$outboundSchema;\n  /** @deprecated use `BenefitCustomCreateProperties$Outbound` instead. */\n  export type Outbound = BenefitCustomCreateProperties$Outbound;\n}\n\nexport function benefitCustomCreatePropertiesToJSON(\n  benefitCustomCreateProperties: BenefitCustomCreateProperties,\n): string {\n  return JSON.stringify(\n    BenefitCustomCreateProperties$outboundSchema.parse(\n      benefitCustomCreateProperties,\n    ),\n  );\n}\n\nexport function benefitCustomCreatePropertiesFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitCustomCreateProperties, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => BenefitCustomCreateProperties$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitCustomCreateProperties' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;AAGH,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AADjD,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;;AAalB,MAAM,2CAA2C,GAIpD,CAAC,6IAAC,MAAM,CAAC;IACX,IAAI,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;CACxC,CAAC,CAAC;AAQI,MAAM,4CAA4C,GAIrD,CAAC,6IAAC,MAAM,CAAC;IACX,IAAI,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;CACxC,CAAC,CAAC;AAMG,IAAW,8BAA8B,CAO9C;AAPD,CAAA,SAAiB,8BAA8B;IAC7C,2EAAA,EAA6E,CAChE,+BAAA,aAAa,GAAG,2CAA2C,CAAC;IACzE,4EAAA,EAA8E,CACjE,+BAAA,cAAc,GAAG,4CAA4C,CAAC;AAG7E,CAAC,EAPgB,8BAA8B,IAAA,CAA9B,8BAA8B,GAAA,CAAA,CAAA,GAO9C;AAEK,SAAU,mCAAmC,CACjD,6BAA4D;IAE5D,OAAO,IAAI,CAAC,SAAS,CACnB,4CAA4C,CAAC,KAAK,CAChD,6BAA6B,CAC9B,CACF,CAAC;AACJ,CAAC;AAEK,SAAU,qCAAqC,CACnD,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,0CAA4C,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACvE,CAAA,yDAAA,CAA2D,CAC5D,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 1189, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1195, "column": 0}, "map": {"version":3,"file":"benefitcustomcreate.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/benefitcustomcreate.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  BenefitCustomCreateProperties,\n  BenefitCustomCreateProperties$inboundSchema,\n  BenefitCustomCreateProperties$Outbound,\n  BenefitCustomCreateProperties$outboundSchema,\n} from \"./benefitcustomcreateproperties.js\";\n\nexport type BenefitCustomCreateMetadata = string | number | number | boolean;\n\n/**\n * Schema to create a benefit of type `custom`.\n */\nexport type BenefitCustomCreate = {\n  /**\n   * Key-value object allowing you to store additional information.\n   *\n   * @remarks\n   *\n   * The key must be a string with a maximum length of **40 characters**.\n   * The value must be either:\n   *\n   * * A string with a maximum length of **500 characters**\n   * * An integer\n   * * A floating-point number\n   * * A boolean\n   *\n   * You can store up to **50 key-value pairs**.\n   */\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  type?: \"custom\" | undefined;\n  /**\n   * The description of the benefit. Will be displayed on products having this benefit.\n   */\n  description: string;\n  /**\n   * The ID of the organization owning the benefit. **Required unless you use an organization token.**\n   */\n  organizationId?: string | null | undefined;\n  /**\n   * Properties for creating a benefit of type `custom`.\n   */\n  properties: BenefitCustomCreateProperties;\n};\n\n/** @internal */\nexport const BenefitCustomCreateMetadata$inboundSchema: z.ZodType<\n  BenefitCustomCreateMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type BenefitCustomCreateMetadata$Outbound =\n  | string\n  | number\n  | number\n  | boolean;\n\n/** @internal */\nexport const BenefitCustomCreateMetadata$outboundSchema: z.ZodType<\n  BenefitCustomCreateMetadata$Outbound,\n  z.ZodTypeDef,\n  BenefitCustomCreateMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitCustomCreateMetadata$ {\n  /** @deprecated use `BenefitCustomCreateMetadata$inboundSchema` instead. */\n  export const inboundSchema = BenefitCustomCreateMetadata$inboundSchema;\n  /** @deprecated use `BenefitCustomCreateMetadata$outboundSchema` instead. */\n  export const outboundSchema = BenefitCustomCreateMetadata$outboundSchema;\n  /** @deprecated use `BenefitCustomCreateMetadata$Outbound` instead. */\n  export type Outbound = BenefitCustomCreateMetadata$Outbound;\n}\n\nexport function benefitCustomCreateMetadataToJSON(\n  benefitCustomCreateMetadata: BenefitCustomCreateMetadata,\n): string {\n  return JSON.stringify(\n    BenefitCustomCreateMetadata$outboundSchema.parse(\n      benefitCustomCreateMetadata,\n    ),\n  );\n}\n\nexport function benefitCustomCreateMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitCustomCreateMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => BenefitCustomCreateMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitCustomCreateMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const BenefitCustomCreate$inboundSchema: z.ZodType<\n  BenefitCustomCreate,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  type: z.literal(\"custom\").optional(),\n  description: z.string(),\n  organization_id: z.nullable(z.string()).optional(),\n  properties: BenefitCustomCreateProperties$inboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    \"organization_id\": \"organizationId\",\n  });\n});\n\n/** @internal */\nexport type BenefitCustomCreate$Outbound = {\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  type: \"custom\";\n  description: string;\n  organization_id?: string | null | undefined;\n  properties: BenefitCustomCreateProperties$Outbound;\n};\n\n/** @internal */\nexport const BenefitCustomCreate$outboundSchema: z.ZodType<\n  BenefitCustomCreate$Outbound,\n  z.ZodTypeDef,\n  BenefitCustomCreate\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  type: z.literal(\"custom\").default(\"custom\" as const),\n  description: z.string(),\n  organizationId: z.nullable(z.string()).optional(),\n  properties: BenefitCustomCreateProperties$outboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    organizationId: \"organization_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitCustomCreate$ {\n  /** @deprecated use `BenefitCustomCreate$inboundSchema` instead. */\n  export const inboundSchema = BenefitCustomCreate$inboundSchema;\n  /** @deprecated use `BenefitCustomCreate$outboundSchema` instead. */\n  export const outboundSchema = BenefitCustomCreate$outboundSchema;\n  /** @deprecated use `BenefitCustomCreate$Outbound` instead. */\n  export type Outbound = BenefitCustomCreate$Outbound;\n}\n\nexport function benefitCustomCreateToJSON(\n  benefitCustomCreate: BenefitCustomCreate,\n): string {\n  return JSON.stringify(\n    BenefitCustomCreate$outboundSchema.parse(benefitCustomCreate),\n  );\n}\n\nexport function benefitCustomCreateFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitCustomCreate, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => BenefitCustomCreate$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitCustomCreate' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1284, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1290, "column": 0}, "map": {"version":3,"file":"benefitdiscordcreateproperties.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/benefitdiscordcreateproperties.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\n/**\n * Properties to create a benefit of type `discord`.\n */\nexport type BenefitDiscordCreateProperties = {\n  guildToken: string;\n  /**\n   * The ID of the Discord role to grant.\n   */\n  roleId: string;\n};\n\n/** @internal */\nexport const BenefitDiscordCreateProperties$inboundSchema: z.ZodType<\n  BenefitDiscordCreateProperties,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  guild_token: z.string(),\n  role_id: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    \"guild_token\": \"guildToken\",\n    \"role_id\": \"roleId\",\n  });\n});\n\n/** @internal */\nexport type BenefitDiscordCreateProperties$Outbound = {\n  guild_token: string;\n  role_id: string;\n};\n\n/** @internal */\nexport const BenefitDiscordCreateProperties$outboundSchema: z.ZodType<\n  BenefitDiscordCreateProperties$Outbound,\n  z.ZodTypeDef,\n  BenefitDiscordCreateProperties\n> = z.object({\n  guildToken: z.string(),\n  roleId: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    guildToken: \"guild_token\",\n    roleId: \"role_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitDiscordCreateProperties$ {\n  /** @deprecated use `BenefitDiscordCreateProperties$inboundSchema` instead. */\n  export const inboundSchema = BenefitDiscordCreateProperties$inboundSchema;\n  /** @deprecated use `BenefitDiscordCreateProperties$outboundSchema` instead. */\n  export const outboundSchema = BenefitDiscordCreateProperties$outboundSchema;\n  /** @deprecated use `BenefitDiscordCreateProperties$Outbound` instead. */\n  export type Outbound = BenefitDiscordCreateProperties$Outbound;\n}\n\nexport function benefitDiscordCreatePropertiesToJSON(\n  benefitDiscordCreateProperties: BenefitDiscordCreateProperties,\n): string {\n  return JSON.stringify(\n    BenefitDiscordCreateProperties$outboundSchema.parse(\n      benefitDiscordCreateProperties,\n    ),\n  );\n}\n\nexport function benefitDiscordCreatePropertiesFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitDiscordCreateProperties, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => BenefitDiscordCreateProperties$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitDiscordCreateProperties' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;;;;;AAgB1C,MAAM,4CAA4C,GAIrD,CAAC,6IAAC,MAAM,CAAC;IACX,WAAW,EAAE,CAAC,6IAAC,MAAM,EAAE;IACvB,OAAO,EAAE,CAAC,6IAAC,MAAM,EAAE;CACpB,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,aAAa,EAAE,YAAY;QAC3B,SAAS,EAAE,QAAQ;KACpB,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AASI,MAAM,6CAA6C,GAItD,CAAC,6IAAC,MAAM,CAAC;IACX,UAAU,EAAE,CAAC,6IAAC,MAAM,EAAE;IACtB,MAAM,EAAE,CAAC,6IAAC,MAAM,EAAE;CACnB,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,QAAO,sLAAA,AAAM,EAAC,CAAC,EAAE;QACf,UAAU,EAAE,aAAa;QACzB,MAAM,EAAE,SAAS;KAClB,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,+BAA+B,CAO/C;AAPD,CAAA,SAAiB,+BAA+B;IAC9C,4EAAA,EAA8E,CACjE,gCAAA,aAAa,GAAG,4CAA4C,CAAC;IAC1E,6EAAA,EAA+E,CAClE,gCAAA,cAAc,GAAG,6CAA6C,CAAC;AAG9E,CAAC,EAPgB,+BAA+B,IAAA,CAA/B,+BAA+B,GAAA,CAAA,CAAA,GAO/C;AAEK,SAAU,oCAAoC,CAClD,8BAA8D;IAE9D,OAAO,IAAI,CAAC,SAAS,CACnB,6CAA6C,CAAC,KAAK,CACjD,8BAA8B,CAC/B,CACF,CAAC;AACJ,CAAC;AAEK,SAAU,sCAAsC,CACpD,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,2CAA6C,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACxE,CAAA,0DAAA,CAA4D,CAC7D,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 1335, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1341, "column": 0}, "map": {"version":3,"file":"benefitdiscordcreate.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/benefitdiscordcreate.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  BenefitDiscordCreateProperties,\n  BenefitDiscordCreateProperties$inboundSchema,\n  BenefitDiscordCreateProperties$Outbound,\n  BenefitDiscordCreateProperties$outboundSchema,\n} from \"./benefitdiscordcreateproperties.js\";\n\nexport type BenefitDiscordCreateMetadata = string | number | number | boolean;\n\nexport type BenefitDiscordCreate = {\n  /**\n   * Key-value object allowing you to store additional information.\n   *\n   * @remarks\n   *\n   * The key must be a string with a maximum length of **40 characters**.\n   * The value must be either:\n   *\n   * * A string with a maximum length of **500 characters**\n   * * An integer\n   * * A floating-point number\n   * * A boolean\n   *\n   * You can store up to **50 key-value pairs**.\n   */\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  type?: \"discord\" | undefined;\n  /**\n   * The description of the benefit. Will be displayed on products having this benefit.\n   */\n  description: string;\n  /**\n   * The ID of the organization owning the benefit. **Required unless you use an organization token.**\n   */\n  organizationId?: string | null | undefined;\n  /**\n   * Properties to create a benefit of type `discord`.\n   */\n  properties: BenefitDiscordCreateProperties;\n};\n\n/** @internal */\nexport const BenefitDiscordCreateMetadata$inboundSchema: z.ZodType<\n  BenefitDiscordCreateMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type BenefitDiscordCreateMetadata$Outbound =\n  | string\n  | number\n  | number\n  | boolean;\n\n/** @internal */\nexport const BenefitDiscordCreateMetadata$outboundSchema: z.ZodType<\n  BenefitDiscordCreateMetadata$Outbound,\n  z.ZodTypeDef,\n  BenefitDiscordCreateMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitDiscordCreateMetadata$ {\n  /** @deprecated use `BenefitDiscordCreateMetadata$inboundSchema` instead. */\n  export const inboundSchema = BenefitDiscordCreateMetadata$inboundSchema;\n  /** @deprecated use `BenefitDiscordCreateMetadata$outboundSchema` instead. */\n  export const outboundSchema = BenefitDiscordCreateMetadata$outboundSchema;\n  /** @deprecated use `BenefitDiscordCreateMetadata$Outbound` instead. */\n  export type Outbound = BenefitDiscordCreateMetadata$Outbound;\n}\n\nexport function benefitDiscordCreateMetadataToJSON(\n  benefitDiscordCreateMetadata: BenefitDiscordCreateMetadata,\n): string {\n  return JSON.stringify(\n    BenefitDiscordCreateMetadata$outboundSchema.parse(\n      benefitDiscordCreateMetadata,\n    ),\n  );\n}\n\nexport function benefitDiscordCreateMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitDiscordCreateMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => BenefitDiscordCreateMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitDiscordCreateMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const BenefitDiscordCreate$inboundSchema: z.ZodType<\n  BenefitDiscordCreate,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  type: z.literal(\"discord\").optional(),\n  description: z.string(),\n  organization_id: z.nullable(z.string()).optional(),\n  properties: BenefitDiscordCreateProperties$inboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    \"organization_id\": \"organizationId\",\n  });\n});\n\n/** @internal */\nexport type BenefitDiscordCreate$Outbound = {\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  type: \"discord\";\n  description: string;\n  organization_id?: string | null | undefined;\n  properties: BenefitDiscordCreateProperties$Outbound;\n};\n\n/** @internal */\nexport const BenefitDiscordCreate$outboundSchema: z.ZodType<\n  BenefitDiscordCreate$Outbound,\n  z.ZodTypeDef,\n  BenefitDiscordCreate\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  type: z.literal(\"discord\").default(\"discord\" as const),\n  description: z.string(),\n  organizationId: z.nullable(z.string()).optional(),\n  properties: BenefitDiscordCreateProperties$outboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    organizationId: \"organization_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitDiscordCreate$ {\n  /** @deprecated use `BenefitDiscordCreate$inboundSchema` instead. */\n  export const inboundSchema = BenefitDiscordCreate$inboundSchema;\n  /** @deprecated use `BenefitDiscordCreate$outboundSchema` instead. */\n  export const outboundSchema = BenefitDiscordCreate$outboundSchema;\n  /** @deprecated use `BenefitDiscordCreate$Outbound` instead. */\n  export type Outbound = BenefitDiscordCreate$Outbound;\n}\n\nexport function benefitDiscordCreateToJSON(\n  benefitDiscordCreate: BenefitDiscordCreate,\n): string {\n  return JSON.stringify(\n    BenefitDiscordCreate$outboundSchema.parse(benefitDiscordCreate),\n  );\n}\n\nexport function benefitDiscordCreateFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitDiscordCreate, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => BenefitDiscordCreate$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitDiscordCreate' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1430, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1436, "column": 0}, "map": {"version":3,"file":"benefitdownloadablescreateproperties.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/benefitdownloadablescreateproperties.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport type BenefitDownloadablesCreateProperties = {\n  archived?: { [k: string]: boolean } | undefined;\n  files: Array<string>;\n};\n\n/** @internal */\nexport const BenefitDownloadablesCreateProperties$inboundSchema: z.ZodType<\n  BenefitDownloadablesCreateProperties,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  archived: z.record(z.boolean()).optional(),\n  files: z.array(z.string()),\n});\n\n/** @internal */\nexport type BenefitDownloadablesCreateProperties$Outbound = {\n  archived?: { [k: string]: boolean } | undefined;\n  files: Array<string>;\n};\n\n/** @internal */\nexport const BenefitDownloadablesCreateProperties$outboundSchema: z.ZodType<\n  BenefitDownloadablesCreateProperties$Outbound,\n  z.ZodTypeDef,\n  BenefitDownloadablesCreateProperties\n> = z.object({\n  archived: z.record(z.boolean()).optional(),\n  files: z.array(z.string()),\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitDownloadablesCreateProperties$ {\n  /** @deprecated use `BenefitDownloadablesCreateProperties$inboundSchema` instead. */\n  export const inboundSchema =\n    BenefitDownloadablesCreateProperties$inboundSchema;\n  /** @deprecated use `BenefitDownloadablesCreateProperties$outboundSchema` instead. */\n  export const outboundSchema =\n    BenefitDownloadablesCreateProperties$outboundSchema;\n  /** @deprecated use `BenefitDownloadablesCreateProperties$Outbound` instead. */\n  export type Outbound = BenefitDownloadablesCreateProperties$Outbound;\n}\n\nexport function benefitDownloadablesCreatePropertiesToJSON(\n  benefitDownloadablesCreateProperties: BenefitDownloadablesCreateProperties,\n): string {\n  return JSON.stringify(\n    BenefitDownloadablesCreateProperties$outboundSchema.parse(\n      benefitDownloadablesCreateProperties,\n    ),\n  );\n}\n\nexport function benefitDownloadablesCreatePropertiesFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitDownloadablesCreateProperties, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) =>\n      BenefitDownloadablesCreateProperties$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitDownloadablesCreateProperties' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;AAGH,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AADjD,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;;AAWlB,MAAM,kDAAkD,GAI3D,CAAC,6IAAC,MAAM,CAAC;IACX,QAAQ,EAAE,CAAC,6IAAC,MAAM,CAAC,CAAC,6IAAC,OAAO,EAAE,CAAC,CAAC,QAAQ,EAAE;IAC1C,KAAK,EAAE,CAAC,6IAAC,KAAK,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;CAC3B,CAAC,CAAC;AASI,MAAM,mDAAmD,GAI5D,CAAC,6IAAC,MAAM,CAAC;IACX,QAAQ,EAAE,CAAC,6IAAC,MAAM,CAAC,CAAC,6IAAC,OAAO,EAAE,CAAC,CAAC,QAAQ,EAAE;IAC1C,KAAK,EAAE,CAAC,6IAAC,KAAK,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;CAC3B,CAAC,CAAC;AAMG,IAAW,qCAAqC,CASrD;AATD,CAAA,SAAiB,qCAAqC;IACpD,kFAAA,EAAoF,CACvE,sCAAA,aAAa,GACxB,kDAAkD,CAAC;IACrD,mFAAA,EAAqF,CACxE,sCAAA,cAAc,GACzB,mDAAmD,CAAC;AAGxD,CAAC,EATgB,qCAAqC,IAAA,CAArC,qCAAqC,GAAA,CAAA,CAAA,GASrD;AAEK,SAAU,0CAA0C,CACxD,oCAA0E;IAE1E,OAAO,IAAI,CAAC,SAAS,CACnB,mDAAmD,CAAC,KAAK,CACvD,oCAAoC,CACrC,CACF,CAAC;AACJ,CAAC;AAEK,SAAU,4CAA4C,CAC1D,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CACF,CADI,iDAC8C,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACzE,CAAA,gEAAA,CAAkE,CACnE,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 1469, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1475, "column": 0}, "map": {"version":3,"file":"benefitdownloadablescreate.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/benefitdownloadablescreate.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  BenefitDownloadablesCreateProperties,\n  BenefitDownloadablesCreateProperties$inboundSchema,\n  BenefitDownloadablesCreateProperties$Outbound,\n  BenefitDownloadablesCreateProperties$outboundSchema,\n} from \"./benefitdownloadablescreateproperties.js\";\n\nexport type BenefitDownloadablesCreateMetadata =\n  | string\n  | number\n  | number\n  | boolean;\n\nexport type BenefitDownloadablesCreate = {\n  /**\n   * Key-value object allowing you to store additional information.\n   *\n   * @remarks\n   *\n   * The key must be a string with a maximum length of **40 characters**.\n   * The value must be either:\n   *\n   * * A string with a maximum length of **500 characters**\n   * * An integer\n   * * A floating-point number\n   * * A boolean\n   *\n   * You can store up to **50 key-value pairs**.\n   */\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  type?: \"downloadables\" | undefined;\n  /**\n   * The description of the benefit. Will be displayed on products having this benefit.\n   */\n  description: string;\n  /**\n   * The ID of the organization owning the benefit. **Required unless you use an organization token.**\n   */\n  organizationId?: string | null | undefined;\n  properties: BenefitDownloadablesCreateProperties;\n};\n\n/** @internal */\nexport const BenefitDownloadablesCreateMetadata$inboundSchema: z.ZodType<\n  BenefitDownloadablesCreateMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type BenefitDownloadablesCreateMetadata$Outbound =\n  | string\n  | number\n  | number\n  | boolean;\n\n/** @internal */\nexport const BenefitDownloadablesCreateMetadata$outboundSchema: z.ZodType<\n  BenefitDownloadablesCreateMetadata$Outbound,\n  z.ZodTypeDef,\n  BenefitDownloadablesCreateMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitDownloadablesCreateMetadata$ {\n  /** @deprecated use `BenefitDownloadablesCreateMetadata$inboundSchema` instead. */\n  export const inboundSchema = BenefitDownloadablesCreateMetadata$inboundSchema;\n  /** @deprecated use `BenefitDownloadablesCreateMetadata$outboundSchema` instead. */\n  export const outboundSchema =\n    BenefitDownloadablesCreateMetadata$outboundSchema;\n  /** @deprecated use `BenefitDownloadablesCreateMetadata$Outbound` instead. */\n  export type Outbound = BenefitDownloadablesCreateMetadata$Outbound;\n}\n\nexport function benefitDownloadablesCreateMetadataToJSON(\n  benefitDownloadablesCreateMetadata: BenefitDownloadablesCreateMetadata,\n): string {\n  return JSON.stringify(\n    BenefitDownloadablesCreateMetadata$outboundSchema.parse(\n      benefitDownloadablesCreateMetadata,\n    ),\n  );\n}\n\nexport function benefitDownloadablesCreateMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitDownloadablesCreateMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) =>\n      BenefitDownloadablesCreateMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitDownloadablesCreateMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const BenefitDownloadablesCreate$inboundSchema: z.ZodType<\n  BenefitDownloadablesCreate,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  type: z.literal(\"downloadables\").optional(),\n  description: z.string(),\n  organization_id: z.nullable(z.string()).optional(),\n  properties: BenefitDownloadablesCreateProperties$inboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    \"organization_id\": \"organizationId\",\n  });\n});\n\n/** @internal */\nexport type BenefitDownloadablesCreate$Outbound = {\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  type: \"downloadables\";\n  description: string;\n  organization_id?: string | null | undefined;\n  properties: BenefitDownloadablesCreateProperties$Outbound;\n};\n\n/** @internal */\nexport const BenefitDownloadablesCreate$outboundSchema: z.ZodType<\n  BenefitDownloadablesCreate$Outbound,\n  z.ZodTypeDef,\n  BenefitDownloadablesCreate\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  type: z.literal(\"downloadables\").default(\"downloadables\" as const),\n  description: z.string(),\n  organizationId: z.nullable(z.string()).optional(),\n  properties: BenefitDownloadablesCreateProperties$outboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    organizationId: \"organization_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitDownloadablesCreate$ {\n  /** @deprecated use `BenefitDownloadablesCreate$inboundSchema` instead. */\n  export const inboundSchema = BenefitDownloadablesCreate$inboundSchema;\n  /** @deprecated use `BenefitDownloadablesCreate$outboundSchema` instead. */\n  export const outboundSchema = BenefitDownloadablesCreate$outboundSchema;\n  /** @deprecated use `BenefitDownloadablesCreate$Outbound` instead. */\n  export type Outbound = BenefitDownloadablesCreate$Outbound;\n}\n\nexport function benefitDownloadablesCreateToJSON(\n  benefitDownloadablesCreate: BenefitDownloadablesCreate,\n): string {\n  return JSON.stringify(\n    BenefitDownloadablesCreate$outboundSchema.parse(benefitDownloadablesCreate),\n  );\n}\n\nexport function benefitDownloadablesCreateFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitDownloadablesCreate, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => BenefitDownloadablesCreate$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitDownloadablesCreate' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1564, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1570, "column": 0}, "map": {"version":3,"file":"benefitgithubrepositorycreateproperties.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/benefitgithubrepositorycreateproperties.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { ClosedEnum } from \"../../types/enums.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\n/**\n * The permission level to grant. Read more about roles and their permissions on [GitHub documentation](https://docs.github.com/en/organizations/managing-user-access-to-your-organizations-repositories/managing-repository-roles/repository-roles-for-an-organization#permissions-for-each-role).\n */\nexport const BenefitGitHubRepositoryCreatePropertiesPermission = {\n  Pull: \"pull\",\n  Triage: \"triage\",\n  Push: \"push\",\n  Maintain: \"maintain\",\n  Admin: \"admin\",\n} as const;\n/**\n * The permission level to grant. Read more about roles and their permissions on [GitHub documentation](https://docs.github.com/en/organizations/managing-user-access-to-your-organizations-repositories/managing-repository-roles/repository-roles-for-an-organization#permissions-for-each-role).\n */\nexport type BenefitGitHubRepositoryCreatePropertiesPermission = ClosedEnum<\n  typeof BenefitGitHubRepositoryCreatePropertiesPermission\n>;\n\n/**\n * Properties to create a benefit of type `github_repository`.\n */\nexport type BenefitGitHubRepositoryCreateProperties = {\n  /**\n   * The owner of the repository.\n   */\n  repositoryOwner: string;\n  /**\n   * The name of the repository.\n   */\n  repositoryName: string;\n  /**\n   * The permission level to grant. Read more about roles and their permissions on [GitHub documentation](https://docs.github.com/en/organizations/managing-user-access-to-your-organizations-repositories/managing-repository-roles/repository-roles-for-an-organization#permissions-for-each-role).\n   */\n  permission: BenefitGitHubRepositoryCreatePropertiesPermission;\n};\n\n/** @internal */\nexport const BenefitGitHubRepositoryCreatePropertiesPermission$inboundSchema:\n  z.ZodNativeEnum<typeof BenefitGitHubRepositoryCreatePropertiesPermission> = z\n    .nativeEnum(BenefitGitHubRepositoryCreatePropertiesPermission);\n\n/** @internal */\nexport const BenefitGitHubRepositoryCreatePropertiesPermission$outboundSchema:\n  z.ZodNativeEnum<typeof BenefitGitHubRepositoryCreatePropertiesPermission> =\n    BenefitGitHubRepositoryCreatePropertiesPermission$inboundSchema;\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitGitHubRepositoryCreatePropertiesPermission$ {\n  /** @deprecated use `BenefitGitHubRepositoryCreatePropertiesPermission$inboundSchema` instead. */\n  export const inboundSchema =\n    BenefitGitHubRepositoryCreatePropertiesPermission$inboundSchema;\n  /** @deprecated use `BenefitGitHubRepositoryCreatePropertiesPermission$outboundSchema` instead. */\n  export const outboundSchema =\n    BenefitGitHubRepositoryCreatePropertiesPermission$outboundSchema;\n}\n\n/** @internal */\nexport const BenefitGitHubRepositoryCreateProperties$inboundSchema: z.ZodType<\n  BenefitGitHubRepositoryCreateProperties,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  repository_owner: z.string(),\n  repository_name: z.string(),\n  permission: BenefitGitHubRepositoryCreatePropertiesPermission$inboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    \"repository_owner\": \"repositoryOwner\",\n    \"repository_name\": \"repositoryName\",\n  });\n});\n\n/** @internal */\nexport type BenefitGitHubRepositoryCreateProperties$Outbound = {\n  repository_owner: string;\n  repository_name: string;\n  permission: string;\n};\n\n/** @internal */\nexport const BenefitGitHubRepositoryCreateProperties$outboundSchema: z.ZodType<\n  BenefitGitHubRepositoryCreateProperties$Outbound,\n  z.ZodTypeDef,\n  BenefitGitHubRepositoryCreateProperties\n> = z.object({\n  repositoryOwner: z.string(),\n  repositoryName: z.string(),\n  permission: BenefitGitHubRepositoryCreatePropertiesPermission$outboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    repositoryOwner: \"repository_owner\",\n    repositoryName: \"repository_name\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitGitHubRepositoryCreateProperties$ {\n  /** @deprecated use `BenefitGitHubRepositoryCreateProperties$inboundSchema` instead. */\n  export const inboundSchema =\n    BenefitGitHubRepositoryCreateProperties$inboundSchema;\n  /** @deprecated use `BenefitGitHubRepositoryCreateProperties$outboundSchema` instead. */\n  export const outboundSchema =\n    BenefitGitHubRepositoryCreateProperties$outboundSchema;\n  /** @deprecated use `BenefitGitHubRepositoryCreateProperties$Outbound` instead. */\n  export type Outbound = BenefitGitHubRepositoryCreateProperties$Outbound;\n}\n\nexport function benefitGitHubRepositoryCreatePropertiesToJSON(\n  benefitGitHubRepositoryCreateProperties:\n    BenefitGitHubRepositoryCreateProperties,\n): string {\n  return JSON.stringify(\n    BenefitGitHubRepositoryCreateProperties$outboundSchema.parse(\n      benefitGitHubRepositoryCreateProperties,\n    ),\n  );\n}\n\nexport function benefitGitHubRepositoryCreatePropertiesFromJSON(\n  jsonString: string,\n): SafeParseResult<\n  BenefitGitHubRepositoryCreateProperties,\n  SDKValidationError\n> {\n  return safeParse(\n    jsonString,\n    (x) =>\n      BenefitGitHubRepositoryCreateProperties$inboundSchema.parse(\n        JSON.parse(x),\n      ),\n    `Failed to parse 'BenefitGitHubRepositoryCreateProperties' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;;;;;AAQ1C,MAAM,iDAAiD,GAAG;IAC/D,IAAI,EAAE,MAAM;IACZ,MAAM,EAAE,QAAQ;IAChB,IAAI,EAAE,MAAM;IACZ,QAAQ,EAAE,UAAU;IACpB,KAAK,EAAE,OAAO;CACN,CAAC;AA2BJ,MAAM,+DAA+D,GACE,CAAC,6IAC1E,UAAU,CAAC,iDAAiD,CAAC,CAAC;AAG5D,MAAM,gEAAgE,GAEzE,+DAA+D,CAAC;AAM9D,IAAW,kDAAkD,CAOlE;AAPD,CAAA,SAAiB,kDAAkD;IACjE,+FAAA,EAAiG,CACpF,mDAAA,aAAa,GACxB,+DAA+D,CAAC;IAClE,gGAAA,EAAkG,CACrF,mDAAA,cAAc,GACzB,gEAAgE,CAAC;AACrE,CAAC,EAPgB,kDAAkD,IAAA,CAAlD,kDAAkD,GAAA,CAAA,CAAA,GAOlE;AAGM,MAAM,qDAAqD,GAI9D,CAAC,6IAAC,MAAM,CAAC;IACX,gBAAgB,EAAE,CAAC,6IAAC,MAAM,EAAE;IAC5B,eAAe,EAAE,CAAC,6IAAC,MAAM,EAAE;IAC3B,UAAU,EAAE,+DAA+D;CAC5E,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,kBAAkB,EAAE,iBAAiB;QACrC,iBAAiB,EAAE,gBAAgB;KACpC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAUI,MAAM,sDAAsD,GAI/D,CAAC,6IAAC,MAAM,CAAC;IACX,eAAe,EAAE,CAAC,6IAAC,MAAM,EAAE;IAC3B,cAAc,EAAE,CAAC,6IAAC,MAAM,EAAE;IAC1B,UAAU,EAAE,gEAAgE;CAC7E,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,eAAe,EAAE,kBAAkB;QACnC,cAAc,EAAE,iBAAiB;KAClC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,wCAAwC,CASxD;AATD,CAAA,SAAiB,wCAAwC;IACvD,qFAAA,EAAuF,CAC1E,yCAAA,aAAa,GACxB,qDAAqD,CAAC;IACxD,sFAAA,EAAwF,CAC3E,yCAAA,cAAc,GACzB,sDAAsD,CAAC;AAG3D,CAAC,EATgB,wCAAwC,IAAA,CAAxC,wCAAwC,GAAA,CAAA,CAAA,GASxD;AAEK,SAAU,6CAA6C,CAC3D,uCACyC;IAEzC,OAAO,IAAI,CAAC,SAAS,CACnB,sDAAsD,CAAC,KAAK,CAC1D,uCAAuC,CACxC,CACF,CAAC;AACJ,CAAC;AAEK,SAAU,+CAA+C,CAC7D,UAAkB;IAKlB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CACF,CADI,oDACiD,CAAC,KAAK,CACzD,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CACd,EACH,CAAA,mEAAA,CAAqE,CACtE,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 1635, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1641, "column": 0}, "map": {"version":3,"file":"benefitgithubrepositorycreate.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/benefitgithubrepositorycreate.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  BenefitGitHubRepositoryCreateProperties,\n  BenefitGitHubRepositoryCreateProperties$inboundSchema,\n  BenefitGitHubRepositoryCreateProperties$Outbound,\n  BenefitGitHubRepositoryCreateProperties$outboundSchema,\n} from \"./benefitgithubrepositorycreateproperties.js\";\n\nexport type BenefitGitHubRepositoryCreateMetadata =\n  | string\n  | number\n  | number\n  | boolean;\n\nexport type BenefitGitHubRepositoryCreate = {\n  /**\n   * Key-value object allowing you to store additional information.\n   *\n   * @remarks\n   *\n   * The key must be a string with a maximum length of **40 characters**.\n   * The value must be either:\n   *\n   * * A string with a maximum length of **500 characters**\n   * * An integer\n   * * A floating-point number\n   * * A boolean\n   *\n   * You can store up to **50 key-value pairs**.\n   */\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  type?: \"github_repository\" | undefined;\n  /**\n   * The description of the benefit. Will be displayed on products having this benefit.\n   */\n  description: string;\n  /**\n   * The ID of the organization owning the benefit. **Required unless you use an organization token.**\n   */\n  organizationId?: string | null | undefined;\n  /**\n   * Properties to create a benefit of type `github_repository`.\n   */\n  properties: BenefitGitHubRepositoryCreateProperties;\n};\n\n/** @internal */\nexport const BenefitGitHubRepositoryCreateMetadata$inboundSchema: z.ZodType<\n  BenefitGitHubRepositoryCreateMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type BenefitGitHubRepositoryCreateMetadata$Outbound =\n  | string\n  | number\n  | number\n  | boolean;\n\n/** @internal */\nexport const BenefitGitHubRepositoryCreateMetadata$outboundSchema: z.ZodType<\n  BenefitGitHubRepositoryCreateMetadata$Outbound,\n  z.ZodTypeDef,\n  BenefitGitHubRepositoryCreateMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitGitHubRepositoryCreateMetadata$ {\n  /** @deprecated use `BenefitGitHubRepositoryCreateMetadata$inboundSchema` instead. */\n  export const inboundSchema =\n    BenefitGitHubRepositoryCreateMetadata$inboundSchema;\n  /** @deprecated use `BenefitGitHubRepositoryCreateMetadata$outboundSchema` instead. */\n  export const outboundSchema =\n    BenefitGitHubRepositoryCreateMetadata$outboundSchema;\n  /** @deprecated use `BenefitGitHubRepositoryCreateMetadata$Outbound` instead. */\n  export type Outbound = BenefitGitHubRepositoryCreateMetadata$Outbound;\n}\n\nexport function benefitGitHubRepositoryCreateMetadataToJSON(\n  benefitGitHubRepositoryCreateMetadata: BenefitGitHubRepositoryCreateMetadata,\n): string {\n  return JSON.stringify(\n    BenefitGitHubRepositoryCreateMetadata$outboundSchema.parse(\n      benefitGitHubRepositoryCreateMetadata,\n    ),\n  );\n}\n\nexport function benefitGitHubRepositoryCreateMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitGitHubRepositoryCreateMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) =>\n      BenefitGitHubRepositoryCreateMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitGitHubRepositoryCreateMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const BenefitGitHubRepositoryCreate$inboundSchema: z.ZodType<\n  BenefitGitHubRepositoryCreate,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  type: z.literal(\"github_repository\").optional(),\n  description: z.string(),\n  organization_id: z.nullable(z.string()).optional(),\n  properties: BenefitGitHubRepositoryCreateProperties$inboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    \"organization_id\": \"organizationId\",\n  });\n});\n\n/** @internal */\nexport type BenefitGitHubRepositoryCreate$Outbound = {\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  type: \"github_repository\";\n  description: string;\n  organization_id?: string | null | undefined;\n  properties: BenefitGitHubRepositoryCreateProperties$Outbound;\n};\n\n/** @internal */\nexport const BenefitGitHubRepositoryCreate$outboundSchema: z.ZodType<\n  BenefitGitHubRepositoryCreate$Outbound,\n  z.ZodTypeDef,\n  BenefitGitHubRepositoryCreate\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  type: z.literal(\"github_repository\").default(\"github_repository\" as const),\n  description: z.string(),\n  organizationId: z.nullable(z.string()).optional(),\n  properties: BenefitGitHubRepositoryCreateProperties$outboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    organizationId: \"organization_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitGitHubRepositoryCreate$ {\n  /** @deprecated use `BenefitGitHubRepositoryCreate$inboundSchema` instead. */\n  export const inboundSchema = BenefitGitHubRepositoryCreate$inboundSchema;\n  /** @deprecated use `BenefitGitHubRepositoryCreate$outboundSchema` instead. */\n  export const outboundSchema = BenefitGitHubRepositoryCreate$outboundSchema;\n  /** @deprecated use `BenefitGitHubRepositoryCreate$Outbound` instead. */\n  export type Outbound = BenefitGitHubRepositoryCreate$Outbound;\n}\n\nexport function benefitGitHubRepositoryCreateToJSON(\n  benefitGitHubRepositoryCreate: BenefitGitHubRepositoryCreate,\n): string {\n  return JSON.stringify(\n    BenefitGitHubRepositoryCreate$outboundSchema.parse(\n      benefitGitHubRepositoryCreate,\n    ),\n  );\n}\n\nexport function benefitGitHubRepositoryCreateFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitGitHubRepositoryCreate, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => BenefitGitHubRepositoryCreate$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitGitHubRepositoryCreate' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1730, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1736, "column": 0}, "map": {"version":3,"file":"benefitlicensekeyactivationcreateproperties.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/benefitlicensekeyactivationcreateproperties.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport type BenefitLicenseKeyActivationCreateProperties = {\n  limit: number;\n  enableCustomerAdmin: boolean;\n};\n\n/** @internal */\nexport const BenefitLicenseKeyActivationCreateProperties$inboundSchema:\n  z.ZodType<\n    BenefitLicenseKeyActivationCreateProperties,\n    z.ZodTypeDef,\n    unknown\n  > = z.object({\n    limit: z.number().int(),\n    enable_customer_admin: z.boolean(),\n  }).transform((v) => {\n    return remap$(v, {\n      \"enable_customer_admin\": \"enableCustomerAdmin\",\n    });\n  });\n\n/** @internal */\nexport type BenefitLicenseKeyActivationCreateProperties$Outbound = {\n  limit: number;\n  enable_customer_admin: boolean;\n};\n\n/** @internal */\nexport const BenefitLicenseKeyActivationCreateProperties$outboundSchema:\n  z.ZodType<\n    BenefitLicenseKeyActivationCreateProperties$Outbound,\n    z.ZodTypeDef,\n    BenefitLicenseKeyActivationCreateProperties\n  > = z.object({\n    limit: z.number().int(),\n    enableCustomerAdmin: z.boolean(),\n  }).transform((v) => {\n    return remap$(v, {\n      enableCustomerAdmin: \"enable_customer_admin\",\n    });\n  });\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitLicenseKeyActivationCreateProperties$ {\n  /** @deprecated use `BenefitLicenseKeyActivationCreateProperties$inboundSchema` instead. */\n  export const inboundSchema =\n    BenefitLicenseKeyActivationCreateProperties$inboundSchema;\n  /** @deprecated use `BenefitLicenseKeyActivationCreateProperties$outboundSchema` instead. */\n  export const outboundSchema =\n    BenefitLicenseKeyActivationCreateProperties$outboundSchema;\n  /** @deprecated use `BenefitLicenseKeyActivationCreateProperties$Outbound` instead. */\n  export type Outbound = BenefitLicenseKeyActivationCreateProperties$Outbound;\n}\n\nexport function benefitLicenseKeyActivationCreatePropertiesToJSON(\n  benefitLicenseKeyActivationCreateProperties:\n    BenefitLicenseKeyActivationCreateProperties,\n): string {\n  return JSON.stringify(\n    BenefitLicenseKeyActivationCreateProperties$outboundSchema.parse(\n      benefitLicenseKeyActivationCreateProperties,\n    ),\n  );\n}\n\nexport function benefitLicenseKeyActivationCreatePropertiesFromJSON(\n  jsonString: string,\n): SafeParseResult<\n  BenefitLicenseKeyActivationCreateProperties,\n  SDKValidationError\n> {\n  return safeParse(\n    jsonString,\n    (x) =>\n      BenefitLicenseKeyActivationCreateProperties$inboundSchema.parse(\n        JSON.parse(x),\n      ),\n    `Failed to parse 'BenefitLicenseKeyActivationCreateProperties' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;;;;;AAU1C,MAAM,yDAAyD,GAKhE,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IACvB,qBAAqB,EAAE,CAAC,6IAAC,OAAO,EAAE;CACnC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,uBAAuB,EAAE,qBAAqB;KAC/C,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AASE,MAAM,0DAA0D,GAKjE,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IACvB,mBAAmB,EAAE,CAAC,6IAAC,OAAO,EAAE;CACjC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,QAAO,sLAAA,AAAM,EAAC,CAAC,EAAE;QACf,mBAAmB,EAAE,uBAAuB;KAC7C,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMC,IAAW,4CAA4C,CAS5D;AATD,CAAA,SAAiB,4CAA4C;IAC3D,yFAAA,EAA2F,CAC9E,6CAAA,aAAa,GACxB,yDAAyD,CAAC;IAC5D,0FAAA,EAA4F,CAC/E,6CAAA,cAAc,GACzB,0DAA0D,CAAC;AAG/D,CAAC,EATgB,4CAA4C,IAAA,CAA5C,4CAA4C,GAAA,CAAA,CAAA,GAS5D;AAEK,SAAU,iDAAiD,CAC/D,2CAC6C;IAE7C,OAAO,IAAI,CAAC,SAAS,CACnB,0DAA0D,CAAC,KAAK,CAC9D,2CAA2C,CAC5C,CACF,CAAC;AACJ,CAAC;AAEK,SAAU,mDAAmD,CACjE,UAAkB;IAKlB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CACF,CADI,wDACqD,CAAC,KAAK,CAC7D,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CACd,EACH,CAAA,uEAAA,CAAyE,CAC1E,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 1779, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1785, "column": 0}, "map": {"version":3,"file":"benefitlicensekeyscreateproperties.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/benefitlicensekeyscreateproperties.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  BenefitLicenseKeyActivationCreateProperties,\n  BenefitLicenseKeyActivationCreateProperties$inboundSchema,\n  BenefitLicenseKeyActivationCreateProperties$Outbound,\n  BenefitLicenseKeyActivationCreateProperties$outboundSchema,\n} from \"./benefitlicensekeyactivationcreateproperties.js\";\nimport {\n  BenefitLicenseKeyExpirationProperties,\n  BenefitLicenseKeyExpirationProperties$inboundSchema,\n  BenefitLicenseKeyExpirationProperties$Outbound,\n  BenefitLicenseKeyExpirationProperties$outboundSchema,\n} from \"./benefitlicensekeyexpirationproperties.js\";\n\nexport type BenefitLicenseKeysCreateProperties = {\n  prefix?: string | null | undefined;\n  expires?: BenefitLicenseKeyExpirationProperties | null | undefined;\n  activations?: BenefitLicenseKeyActivationCreateProperties | null | undefined;\n  limitUsage?: number | null | undefined;\n};\n\n/** @internal */\nexport const BenefitLicenseKeysCreateProperties$inboundSchema: z.ZodType<\n  BenefitLicenseKeysCreateProperties,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  prefix: z.nullable(z.string()).optional(),\n  expires: z.nullable(BenefitLicenseKeyExpirationProperties$inboundSchema)\n    .optional(),\n  activations: z.nullable(\n    BenefitLicenseKeyActivationCreateProperties$inboundSchema,\n  ).optional(),\n  limit_usage: z.nullable(z.number().int()).optional(),\n}).transform((v) => {\n  return remap$(v, {\n    \"limit_usage\": \"limitUsage\",\n  });\n});\n\n/** @internal */\nexport type BenefitLicenseKeysCreateProperties$Outbound = {\n  prefix?: string | null | undefined;\n  expires?: BenefitLicenseKeyExpirationProperties$Outbound | null | undefined;\n  activations?:\n    | BenefitLicenseKeyActivationCreateProperties$Outbound\n    | null\n    | undefined;\n  limit_usage?: number | null | undefined;\n};\n\n/** @internal */\nexport const BenefitLicenseKeysCreateProperties$outboundSchema: z.ZodType<\n  BenefitLicenseKeysCreateProperties$Outbound,\n  z.ZodTypeDef,\n  BenefitLicenseKeysCreateProperties\n> = z.object({\n  prefix: z.nullable(z.string()).optional(),\n  expires: z.nullable(BenefitLicenseKeyExpirationProperties$outboundSchema)\n    .optional(),\n  activations: z.nullable(\n    BenefitLicenseKeyActivationCreateProperties$outboundSchema,\n  ).optional(),\n  limitUsage: z.nullable(z.number().int()).optional(),\n}).transform((v) => {\n  return remap$(v, {\n    limitUsage: \"limit_usage\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitLicenseKeysCreateProperties$ {\n  /** @deprecated use `BenefitLicenseKeysCreateProperties$inboundSchema` instead. */\n  export const inboundSchema = BenefitLicenseKeysCreateProperties$inboundSchema;\n  /** @deprecated use `BenefitLicenseKeysCreateProperties$outboundSchema` instead. */\n  export const outboundSchema =\n    BenefitLicenseKeysCreateProperties$outboundSchema;\n  /** @deprecated use `BenefitLicenseKeysCreateProperties$Outbound` instead. */\n  export type Outbound = BenefitLicenseKeysCreateProperties$Outbound;\n}\n\nexport function benefitLicenseKeysCreatePropertiesToJSON(\n  benefitLicenseKeysCreateProperties: BenefitLicenseKeysCreateProperties,\n): string {\n  return JSON.stringify(\n    BenefitLicenseKeysCreateProperties$outboundSchema.parse(\n      benefitLicenseKeysCreateProperties,\n    ),\n  );\n}\n\nexport function benefitLicenseKeysCreatePropertiesFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitLicenseKeysCreateProperties, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) =>\n      BenefitLicenseKeysCreateProperties$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitLicenseKeysCreateProperties' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,yDAAyD,EAEzD,0DAA0D,GAC3D,MAAM,kDAAkD,CAAC;AAC1D,OAAO,EAEL,mDAAmD,EAEnD,oDAAoD,GACrD,MAAM,4CAA4C,CAAC;;;;;;;AAU7C,MAAM,gDAAgD,GAIzD,CAAC,6IAAC,MAAM,CAAC;IACX,MAAM,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;IACzC,OAAO,EAAE,CAAC,6IAAC,QAAQ,wNAAC,sDAAmD,CAAC,CACrE,QAAQ,EAAE;IACb,WAAW,EAAE,CAAC,6IAAC,QAAQ,8NACrB,4DAAyD,CAC1D,CAAC,QAAQ,EAAE;IACZ,WAAW,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,QAAQ,EAAE;CACrD,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,QAAO,sLAAA,AAAM,EAAC,CAAC,EAAE;QACf,aAAa,EAAE,YAAY;KAC5B,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAcI,MAAM,iDAAiD,GAI1D,CAAC,6IAAC,MAAM,CAAC;IACX,MAAM,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;IACzC,OAAO,EAAE,CAAC,6IAAC,QAAQ,wNAAC,uDAAoD,CAAC,CACtE,QAAQ,EAAE;IACb,WAAW,EAAE,CAAC,6IAAC,QAAQ,8NACrB,6DAA0D,CAC3D,CAAC,QAAQ,EAAE;IACZ,UAAU,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,QAAQ,EAAE;CACpD,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,UAAU,EAAE,aAAa;KAC1B,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,mCAAmC,CAQnD;AARD,CAAA,SAAiB,mCAAmC;IAClD,gFAAA,EAAkF,CACrE,oCAAA,aAAa,GAAG,gDAAgD,CAAC;IAC9E,iFAAA,EAAmF,CACtE,oCAAA,cAAc,GACzB,iDAAiD,CAAC;AAGtD,CAAC,EARgB,mCAAmC,IAAA,CAAnC,mCAAmC,GAAA,CAAA,CAAA,GAQnD;AAEK,SAAU,wCAAwC,CACtD,kCAAsE;IAEtE,OAAO,IAAI,CAAC,SAAS,CACnB,iDAAiD,CAAC,KAAK,CACrD,kCAAkC,CACnC,CACF,CAAC;AACJ,CAAC;AAEK,SAAU,0CAA0C,CACxD,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CACF,CADI,+CAC4C,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACvE,CAAA,8DAAA,CAAgE,CACjE,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 1836, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1842, "column": 0}, "map": {"version":3,"file":"benefitlicensekeyscreate.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/benefitlicensekeyscreate.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  BenefitLicenseKeysCreateProperties,\n  BenefitLicenseKeysCreateProperties$inboundSchema,\n  BenefitLicenseKeysCreateProperties$Outbound,\n  BenefitLicenseKeysCreateProperties$outboundSchema,\n} from \"./benefitlicensekeyscreateproperties.js\";\n\nexport type BenefitLicenseKeysCreateMetadata =\n  | string\n  | number\n  | number\n  | boolean;\n\nexport type BenefitLicenseKeysCreate = {\n  /**\n   * Key-value object allowing you to store additional information.\n   *\n   * @remarks\n   *\n   * The key must be a string with a maximum length of **40 characters**.\n   * The value must be either:\n   *\n   * * A string with a maximum length of **500 characters**\n   * * An integer\n   * * A floating-point number\n   * * A boolean\n   *\n   * You can store up to **50 key-value pairs**.\n   */\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  type?: \"license_keys\" | undefined;\n  /**\n   * The description of the benefit. Will be displayed on products having this benefit.\n   */\n  description: string;\n  /**\n   * The ID of the organization owning the benefit. **Required unless you use an organization token.**\n   */\n  organizationId?: string | null | undefined;\n  properties: BenefitLicenseKeysCreateProperties;\n};\n\n/** @internal */\nexport const BenefitLicenseKeysCreateMetadata$inboundSchema: z.ZodType<\n  BenefitLicenseKeysCreateMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type BenefitLicenseKeysCreateMetadata$Outbound =\n  | string\n  | number\n  | number\n  | boolean;\n\n/** @internal */\nexport const BenefitLicenseKeysCreateMetadata$outboundSchema: z.ZodType<\n  BenefitLicenseKeysCreateMetadata$Outbound,\n  z.ZodTypeDef,\n  BenefitLicenseKeysCreateMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitLicenseKeysCreateMetadata$ {\n  /** @deprecated use `BenefitLicenseKeysCreateMetadata$inboundSchema` instead. */\n  export const inboundSchema = BenefitLicenseKeysCreateMetadata$inboundSchema;\n  /** @deprecated use `BenefitLicenseKeysCreateMetadata$outboundSchema` instead. */\n  export const outboundSchema = BenefitLicenseKeysCreateMetadata$outboundSchema;\n  /** @deprecated use `BenefitLicenseKeysCreateMetadata$Outbound` instead. */\n  export type Outbound = BenefitLicenseKeysCreateMetadata$Outbound;\n}\n\nexport function benefitLicenseKeysCreateMetadataToJSON(\n  benefitLicenseKeysCreateMetadata: BenefitLicenseKeysCreateMetadata,\n): string {\n  return JSON.stringify(\n    BenefitLicenseKeysCreateMetadata$outboundSchema.parse(\n      benefitLicenseKeysCreateMetadata,\n    ),\n  );\n}\n\nexport function benefitLicenseKeysCreateMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitLicenseKeysCreateMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => BenefitLicenseKeysCreateMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitLicenseKeysCreateMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const BenefitLicenseKeysCreate$inboundSchema: z.ZodType<\n  BenefitLicenseKeysCreate,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  type: z.literal(\"license_keys\").optional(),\n  description: z.string(),\n  organization_id: z.nullable(z.string()).optional(),\n  properties: BenefitLicenseKeysCreateProperties$inboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    \"organization_id\": \"organizationId\",\n  });\n});\n\n/** @internal */\nexport type BenefitLicenseKeysCreate$Outbound = {\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  type: \"license_keys\";\n  description: string;\n  organization_id?: string | null | undefined;\n  properties: BenefitLicenseKeysCreateProperties$Outbound;\n};\n\n/** @internal */\nexport const BenefitLicenseKeysCreate$outboundSchema: z.ZodType<\n  BenefitLicenseKeysCreate$Outbound,\n  z.ZodTypeDef,\n  BenefitLicenseKeysCreate\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  type: z.literal(\"license_keys\").default(\"license_keys\" as const),\n  description: z.string(),\n  organizationId: z.nullable(z.string()).optional(),\n  properties: BenefitLicenseKeysCreateProperties$outboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    organizationId: \"organization_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitLicenseKeysCreate$ {\n  /** @deprecated use `BenefitLicenseKeysCreate$inboundSchema` instead. */\n  export const inboundSchema = BenefitLicenseKeysCreate$inboundSchema;\n  /** @deprecated use `BenefitLicenseKeysCreate$outboundSchema` instead. */\n  export const outboundSchema = BenefitLicenseKeysCreate$outboundSchema;\n  /** @deprecated use `BenefitLicenseKeysCreate$Outbound` instead. */\n  export type Outbound = BenefitLicenseKeysCreate$Outbound;\n}\n\nexport function benefitLicenseKeysCreateToJSON(\n  benefitLicenseKeysCreate: BenefitLicenseKeysCreate,\n): string {\n  return JSON.stringify(\n    BenefitLicenseKeysCreate$outboundSchema.parse(benefitLicenseKeysCreate),\n  );\n}\n\nexport function benefitLicenseKeysCreateFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitLicenseKeysCreate, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => BenefitLicenseKeysCreate$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitLicenseKeysCreate' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1931, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1937, "column": 0}, "map": {"version":3,"file":"benefitmetercreditcreateproperties.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/benefitmetercreditcreateproperties.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\n/**\n * Properties for creating a benefit of type `meter_unit`.\n */\nexport type BenefitMeterCreditCreateProperties = {\n  units: number;\n  rollover: boolean;\n  meterId: string;\n};\n\n/** @internal */\nexport const BenefitMeterCreditCreateProperties$inboundSchema: z.ZodType<\n  BenefitMeterCreditCreateProperties,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  units: z.number().int(),\n  rollover: z.boolean(),\n  meter_id: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    \"meter_id\": \"meterId\",\n  });\n});\n\n/** @internal */\nexport type BenefitMeterCreditCreateProperties$Outbound = {\n  units: number;\n  rollover: boolean;\n  meter_id: string;\n};\n\n/** @internal */\nexport const BenefitMeterCreditCreateProperties$outboundSchema: z.ZodType<\n  BenefitMeterCreditCreateProperties$Outbound,\n  z.ZodTypeDef,\n  BenefitMeterCreditCreateProperties\n> = z.object({\n  units: z.number().int(),\n  rollover: z.boolean(),\n  meterId: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    meterId: \"meter_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitMeterCreditCreateProperties$ {\n  /** @deprecated use `BenefitMeterCreditCreateProperties$inboundSchema` instead. */\n  export const inboundSchema = BenefitMeterCreditCreateProperties$inboundSchema;\n  /** @deprecated use `BenefitMeterCreditCreateProperties$outboundSchema` instead. */\n  export const outboundSchema =\n    BenefitMeterCreditCreateProperties$outboundSchema;\n  /** @deprecated use `BenefitMeterCreditCreateProperties$Outbound` instead. */\n  export type Outbound = BenefitMeterCreditCreateProperties$Outbound;\n}\n\nexport function benefitMeterCreditCreatePropertiesToJSON(\n  benefitMeterCreditCreateProperties: BenefitMeterCreditCreateProperties,\n): string {\n  return JSON.stringify(\n    BenefitMeterCreditCreateProperties$outboundSchema.parse(\n      benefitMeterCreditCreateProperties,\n    ),\n  );\n}\n\nexport function benefitMeterCreditCreatePropertiesFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitMeterCreditCreateProperties, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) =>\n      BenefitMeterCreditCreateProperties$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitMeterCreditCreateProperties' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;;;;;AAc1C,MAAM,gDAAgD,GAIzD,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IACvB,QAAQ,EAAE,CAAC,6IAAC,OAAO,EAAE;IACrB,QAAQ,EAAE,CAAC,6IAAC,MAAM,EAAE;CACrB,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,UAAU,EAAE,SAAS;KACtB,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAUI,MAAM,iDAAiD,GAI1D,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IACvB,QAAQ,EAAE,CAAC,6IAAC,OAAO,EAAE;IACrB,OAAO,EAAE,CAAC,6IAAC,MAAM,EAAE;CACpB,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAM,AAAN,EAAO,CAAC,EAAE;QACf,OAAO,EAAE,UAAU;KACpB,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,mCAAmC,CAQnD;AARD,CAAA,SAAiB,mCAAmC;IAClD,gFAAA,EAAkF,CACrE,oCAAA,aAAa,GAAG,gDAAgD,CAAC;IAC9E,iFAAA,EAAmF,CACtE,oCAAA,cAAc,GACzB,iDAAiD,CAAC;AAGtD,CAAC,EARgB,mCAAmC,IAAA,CAAnC,mCAAmC,GAAA,CAAA,CAAA,GAQnD;AAEK,SAAU,wCAAwC,CACtD,kCAAsE;IAEtE,OAAO,IAAI,CAAC,SAAS,CACnB,iDAAiD,CAAC,KAAK,CACrD,kCAAkC,CACnC,CACF,CAAC;AACJ,CAAC;AAEK,SAAU,0CAA0C,CACxD,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CACF,CADI,+CAC4C,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACvE,CAAA,8DAAA,CAAgE,CACjE,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 1982, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1988, "column": 0}, "map": {"version":3,"file":"benefitmetercreditcreate.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/benefitmetercreditcreate.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  BenefitMeterCreditCreateProperties,\n  BenefitMeterCreditCreateProperties$inboundSchema,\n  BenefitMeterCreditCreateProperties$Outbound,\n  BenefitMeterCreditCreateProperties$outboundSchema,\n} from \"./benefitmetercreditcreateproperties.js\";\n\nexport type BenefitMeterCreditCreateMetadata =\n  | string\n  | number\n  | number\n  | boolean;\n\n/**\n * Schema to create a benefit of type `meter_unit`.\n */\nexport type BenefitMeterCreditCreate = {\n  /**\n   * Key-value object allowing you to store additional information.\n   *\n   * @remarks\n   *\n   * The key must be a string with a maximum length of **40 characters**.\n   * The value must be either:\n   *\n   * * A string with a maximum length of **500 characters**\n   * * An integer\n   * * A floating-point number\n   * * A boolean\n   *\n   * You can store up to **50 key-value pairs**.\n   */\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  type?: \"meter_credit\" | undefined;\n  /**\n   * The description of the benefit. Will be displayed on products having this benefit.\n   */\n  description: string;\n  /**\n   * The ID of the organization owning the benefit. **Required unless you use an organization token.**\n   */\n  organizationId?: string | null | undefined;\n  /**\n   * Properties for creating a benefit of type `meter_unit`.\n   */\n  properties: BenefitMeterCreditCreateProperties;\n};\n\n/** @internal */\nexport const BenefitMeterCreditCreateMetadata$inboundSchema: z.ZodType<\n  BenefitMeterCreditCreateMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type BenefitMeterCreditCreateMetadata$Outbound =\n  | string\n  | number\n  | number\n  | boolean;\n\n/** @internal */\nexport const BenefitMeterCreditCreateMetadata$outboundSchema: z.ZodType<\n  BenefitMeterCreditCreateMetadata$Outbound,\n  z.ZodTypeDef,\n  BenefitMeterCreditCreateMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitMeterCreditCreateMetadata$ {\n  /** @deprecated use `BenefitMeterCreditCreateMetadata$inboundSchema` instead. */\n  export const inboundSchema = BenefitMeterCreditCreateMetadata$inboundSchema;\n  /** @deprecated use `BenefitMeterCreditCreateMetadata$outboundSchema` instead. */\n  export const outboundSchema = BenefitMeterCreditCreateMetadata$outboundSchema;\n  /** @deprecated use `BenefitMeterCreditCreateMetadata$Outbound` instead. */\n  export type Outbound = BenefitMeterCreditCreateMetadata$Outbound;\n}\n\nexport function benefitMeterCreditCreateMetadataToJSON(\n  benefitMeterCreditCreateMetadata: BenefitMeterCreditCreateMetadata,\n): string {\n  return JSON.stringify(\n    BenefitMeterCreditCreateMetadata$outboundSchema.parse(\n      benefitMeterCreditCreateMetadata,\n    ),\n  );\n}\n\nexport function benefitMeterCreditCreateMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitMeterCreditCreateMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => BenefitMeterCreditCreateMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitMeterCreditCreateMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const BenefitMeterCreditCreate$inboundSchema: z.ZodType<\n  BenefitMeterCreditCreate,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  type: z.literal(\"meter_credit\").optional(),\n  description: z.string(),\n  organization_id: z.nullable(z.string()).optional(),\n  properties: BenefitMeterCreditCreateProperties$inboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    \"organization_id\": \"organizationId\",\n  });\n});\n\n/** @internal */\nexport type BenefitMeterCreditCreate$Outbound = {\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  type: \"meter_credit\";\n  description: string;\n  organization_id?: string | null | undefined;\n  properties: BenefitMeterCreditCreateProperties$Outbound;\n};\n\n/** @internal */\nexport const BenefitMeterCreditCreate$outboundSchema: z.ZodType<\n  BenefitMeterCreditCreate$Outbound,\n  z.ZodTypeDef,\n  BenefitMeterCreditCreate\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  type: z.literal(\"meter_credit\").default(\"meter_credit\" as const),\n  description: z.string(),\n  organizationId: z.nullable(z.string()).optional(),\n  properties: BenefitMeterCreditCreateProperties$outboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    organizationId: \"organization_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitMeterCreditCreate$ {\n  /** @deprecated use `BenefitMeterCreditCreate$inboundSchema` instead. */\n  export const inboundSchema = BenefitMeterCreditCreate$inboundSchema;\n  /** @deprecated use `BenefitMeterCreditCreate$outboundSchema` instead. */\n  export const outboundSchema = BenefitMeterCreditCreate$outboundSchema;\n  /** @deprecated use `BenefitMeterCreditCreate$Outbound` instead. */\n  export type Outbound = BenefitMeterCreditCreate$Outbound;\n}\n\nexport function benefitMeterCreditCreateToJSON(\n  benefitMeterCreditCreate: BenefitMeterCreditCreate,\n): string {\n  return JSON.stringify(\n    BenefitMeterCreditCreate$outboundSchema.parse(benefitMeterCreditCreate),\n  );\n}\n\nexport function benefitMeterCreditCreateFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitMeterCreditCreate, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => BenefitMeterCreditCreate$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitMeterCreditCreate' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2077, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2083, "column": 0}, "map": {"version":3,"file":"benefitcreate.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/benefitcreate.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  BenefitCustomCreate,\n  BenefitCustomCreate$inboundSchema,\n  BenefitCustomCreate$Outbound,\n  BenefitCustomCreate$outboundSchema,\n} from \"./benefitcustomcreate.js\";\nimport {\n  BenefitDiscordCreate,\n  BenefitDiscordCreate$inboundSchema,\n  BenefitDiscordCreate$Outbound,\n  BenefitDiscordCreate$outboundSchema,\n} from \"./benefitdiscordcreate.js\";\nimport {\n  BenefitDownloadablesCreate,\n  BenefitDownloadablesCreate$inboundSchema,\n  BenefitDownloadablesCreate$Outbound,\n  BenefitDownloadablesCreate$outboundSchema,\n} from \"./benefitdownloadablescreate.js\";\nimport {\n  BenefitGitHubRepositoryCreate,\n  BenefitGitHubRepositoryCreate$inboundSchema,\n  BenefitGitHubRepositoryCreate$Outbound,\n  BenefitGitHubRepositoryCreate$outboundSchema,\n} from \"./benefitgithubrepositorycreate.js\";\nimport {\n  BenefitLicenseKeysCreate,\n  BenefitLicenseKeysCreate$inboundSchema,\n  BenefitLicenseKeysCreate$Outbound,\n  BenefitLicenseKeysCreate$outboundSchema,\n} from \"./benefitlicensekeyscreate.js\";\nimport {\n  BenefitMeterCreditCreate,\n  BenefitMeterCreditCreate$inboundSchema,\n  BenefitMeterCreditCreate$Outbound,\n  BenefitMeterCreditCreate$outboundSchema,\n} from \"./benefitmetercreditcreate.js\";\n\nexport type BenefitCreate =\n  | (BenefitCustomCreate & { type: \"custom\" })\n  | (BenefitDiscordCreate & { type: \"discord\" })\n  | (BenefitDownloadablesCreate & { type: \"downloadables\" })\n  | (BenefitGitHubRepositoryCreate & { type: \"github_repository\" })\n  | (BenefitLicenseKeysCreate & { type: \"license_keys\" })\n  | (BenefitMeterCreditCreate & { type: \"meter_credit\" });\n\n/** @internal */\nexport const BenefitCreate$inboundSchema: z.ZodType<\n  BenefitCreate,\n  z.ZodTypeDef,\n  unknown\n> = z.union([\n  BenefitCustomCreate$inboundSchema.and(\n    z.object({ type: z.literal(\"custom\") }).transform((v) => ({\n      type: v.type,\n    })),\n  ),\n  BenefitDiscordCreate$inboundSchema.and(\n    z.object({ type: z.literal(\"discord\") }).transform((v) => ({\n      type: v.type,\n    })),\n  ),\n  BenefitDownloadablesCreate$inboundSchema.and(\n    z.object({ type: z.literal(\"downloadables\") }).transform((v) => ({\n      type: v.type,\n    })),\n  ),\n  BenefitGitHubRepositoryCreate$inboundSchema.and(\n    z.object({ type: z.literal(\"github_repository\") }).transform((v) => ({\n      type: v.type,\n    })),\n  ),\n  BenefitLicenseKeysCreate$inboundSchema.and(\n    z.object({ type: z.literal(\"license_keys\") }).transform((v) => ({\n      type: v.type,\n    })),\n  ),\n  BenefitMeterCreditCreate$inboundSchema.and(\n    z.object({ type: z.literal(\"meter_credit\") }).transform((v) => ({\n      type: v.type,\n    })),\n  ),\n]);\n\n/** @internal */\nexport type BenefitCreate$Outbound =\n  | (BenefitCustomCreate$Outbound & { type: \"custom\" })\n  | (BenefitDiscordCreate$Outbound & { type: \"discord\" })\n  | (BenefitDownloadablesCreate$Outbound & { type: \"downloadables\" })\n  | (BenefitGitHubRepositoryCreate$Outbound & { type: \"github_repository\" })\n  | (BenefitLicenseKeysCreate$Outbound & { type: \"license_keys\" })\n  | (BenefitMeterCreditCreate$Outbound & { type: \"meter_credit\" });\n\n/** @internal */\nexport const BenefitCreate$outboundSchema: z.ZodType<\n  BenefitCreate$Outbound,\n  z.ZodTypeDef,\n  BenefitCreate\n> = z.union([\n  BenefitCustomCreate$outboundSchema.and(\n    z.object({ type: z.literal(\"custom\") }).transform((v) => ({\n      type: v.type,\n    })),\n  ),\n  BenefitDiscordCreate$outboundSchema.and(\n    z.object({ type: z.literal(\"discord\") }).transform((v) => ({\n      type: v.type,\n    })),\n  ),\n  BenefitDownloadablesCreate$outboundSchema.and(\n    z.object({ type: z.literal(\"downloadables\") }).transform((v) => ({\n      type: v.type,\n    })),\n  ),\n  BenefitGitHubRepositoryCreate$outboundSchema.and(\n    z.object({ type: z.literal(\"github_repository\") }).transform((v) => ({\n      type: v.type,\n    })),\n  ),\n  BenefitLicenseKeysCreate$outboundSchema.and(\n    z.object({ type: z.literal(\"license_keys\") }).transform((v) => ({\n      type: v.type,\n    })),\n  ),\n  BenefitMeterCreditCreate$outboundSchema.and(\n    z.object({ type: z.literal(\"meter_credit\") }).transform((v) => ({\n      type: v.type,\n    })),\n  ),\n]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitCreate$ {\n  /** @deprecated use `BenefitCreate$inboundSchema` instead. */\n  export const inboundSchema = BenefitCreate$inboundSchema;\n  /** @deprecated use `BenefitCreate$outboundSchema` instead. */\n  export const outboundSchema = BenefitCreate$outboundSchema;\n  /** @deprecated use `BenefitCreate$Outbound` instead. */\n  export type Outbound = BenefitCreate$Outbound;\n}\n\nexport function benefitCreateToJSON(benefitCreate: BenefitCreate): string {\n  return JSON.stringify(BenefitCreate$outboundSchema.parse(benefitCreate));\n}\n\nexport function benefitCreateFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitCreate, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => BenefitCreate$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitCreate' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2184, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2190, "column": 0}, "map": {"version":3,"file":"validationerror.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/validationerror.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport type Loc = string | number;\n\nexport type ValidationError = {\n  loc: Array<string | number>;\n  msg: string;\n  type: string;\n};\n\n/** @internal */\nexport const Loc$inboundSchema: z.ZodType<Loc, z.ZodTypeDef, unknown> = z.union(\n  [z.string(), z.number().int()],\n);\n\n/** @internal */\nexport type Loc$Outbound = string | number;\n\n/** @internal */\nexport const Loc$outboundSchema: z.ZodType<Loc$Outbound, z.ZodTypeDef, Loc> = z\n  .union([z.string(), z.number().int()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace Loc$ {\n  /** @deprecated use `Loc$inboundSchema` instead. */\n  export const inboundSchema = Loc$inboundSchema;\n  /** @deprecated use `Loc$outboundSchema` instead. */\n  export const outboundSchema = Loc$outboundSchema;\n  /** @deprecated use `Loc$Outbound` instead. */\n  export type Outbound = Loc$Outbound;\n}\n\nexport function locToJSON(loc: Loc): string {\n  return JSON.stringify(Loc$outboundSchema.parse(loc));\n}\n\nexport function locFromJSON(\n  jsonString: string,\n): SafeParseResult<Loc, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => Loc$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'Loc' from JSON`,\n  );\n}\n\n/** @internal */\nexport const ValidationError$inboundSchema: z.ZodType<\n  ValidationError,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  loc: z.array(z.union([z.string(), z.number().int()])),\n  msg: z.string(),\n  type: z.string(),\n});\n\n/** @internal */\nexport type ValidationError$Outbound = {\n  loc: Array<string | number>;\n  msg: string;\n  type: string;\n};\n\n/** @internal */\nexport const ValidationError$outboundSchema: z.ZodType<\n  ValidationError$Outbound,\n  z.ZodTypeDef,\n  ValidationError\n> = z.object({\n  loc: z.array(z.union([z.string(), z.number().int()])),\n  msg: z.string(),\n  type: z.string(),\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace ValidationError$ {\n  /** @deprecated use `ValidationError$inboundSchema` instead. */\n  export const inboundSchema = ValidationError$inboundSchema;\n  /** @deprecated use `ValidationError$outboundSchema` instead. */\n  export const outboundSchema = ValidationError$outboundSchema;\n  /** @deprecated use `ValidationError$Outbound` instead. */\n  export type Outbound = ValidationError$Outbound;\n}\n\nexport function validationErrorToJSON(\n  validationError: ValidationError,\n): string {\n  return JSON.stringify(ValidationError$outboundSchema.parse(validationError));\n}\n\nexport function validationErrorFromJSON(\n  jsonString: string,\n): SafeParseResult<ValidationError, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => ValidationError$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'ValidationError' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;;;;AAa1C,MAAM,iBAAiB,GAA0C,CAAC,6IAAC,KAAK,CAC7E;IAAC,CAAC,6IAAC,MAAM,EAAE;IAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;CAAC,CAC/B,CAAC;AAMK,MAAM,kBAAkB,GAA+C,CAAC,6IAC5E,KAAK,CAAC;IAAC,CAAC,6IAAC,MAAM,EAAE;IAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;CAAC,CAAC,CAAC;AAMnC,IAAW,IAAI,CAOpB;AAPD,CAAA,SAAiB,IAAI;IACnB,iDAAA,EAAmD,CACtC,KAAA,aAAa,GAAG,iBAAiB,CAAC;IAC/C,kDAAA,EAAoD,CACvC,KAAA,cAAc,GAAG,kBAAkB,CAAC;AAGnD,CAAC,EAPgB,IAAI,IAAA,CAAJ,IAAI,GAAA,CAAA,CAAA,GAOpB;AAEK,SAAU,SAAS,CAAC,GAAQ;IAChC,OAAO,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;AACvD,CAAC;AAEK,SAAU,WAAW,CACzB,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,gBAAkB,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC7C,CAAA,+BAAA,CAAiC,CAClC,CAAC;AACJ,CAAC;AAGM,MAAM,6BAA6B,GAItC,CAAC,6IAAC,MAAM,CAAC;IACX,GAAG,EAAE,CAAC,6IAAC,KAAK,CAAC,CAAC,6IAAC,KAAK,CAAC;QAAC,CAAC,6IAAC,MAAM,EAAE;QAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;KAAC,CAAC,CAAC;IACrD,GAAG,EAAE,CAAC,6IAAC,MAAM,EAAE;IACf,IAAI,EAAE,CAAC,6IAAC,MAAM,EAAE;CACjB,CAAC,CAAC;AAUI,MAAM,8BAA8B,GAIvC,CAAC,6IAAC,MAAM,CAAC;IACX,GAAG,EAAE,CAAC,6IAAC,KAAK,CAAC,CAAC,6IAAC,KAAK,CAAC;QAAC,CAAC,6IAAC,MAAM,EAAE;QAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;KAAC,CAAC,CAAC;IACrD,GAAG,EAAE,CAAC,6IAAC,MAAM,EAAE;IACf,IAAI,EAAE,CAAC,6IAAC,MAAM,EAAE;CACjB,CAAC,CAAC;AAMG,IAAW,gBAAgB,CAOhC;AAPD,CAAA,SAAiB,gBAAgB;IAC/B,6DAAA,EAA+D,CAClD,iBAAA,aAAa,GAAG,6BAA6B,CAAC;IAC3D,8DAAA,EAAgE,CACnD,iBAAA,cAAc,GAAG,8BAA8B,CAAC;AAG/D,CAAC,EAPgB,gBAAgB,IAAA,CAAhB,gBAAgB,GAAA,CAAA,CAAA,GAOhC;AAEK,SAAU,qBAAqB,CACnC,eAAgC;IAEhC,OAAO,IAAI,CAAC,SAAS,CAAC,8BAA8B,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,CAAC;AAC/E,CAAC;AAEK,SAAU,uBAAuB,CACrC,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,4BAA8B,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACzD,CAAA,2CAAA,CAA6C,CAC9C,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 2255, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2261, "column": 0}, "map": {"version":3,"file":"benefitgrantcustomproperties.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/benefitgrantcustomproperties.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport type BenefitGrantCustomProperties = {};\n\n/** @internal */\nexport const BenefitGrantCustomProperties$inboundSchema: z.ZodType<\n  BenefitGrantCustomProperties,\n  z.ZodTypeDef,\n  unknown\n> = z.object({});\n\n/** @internal */\nexport type BenefitGrantCustomProperties$Outbound = {};\n\n/** @internal */\nexport const BenefitGrantCustomProperties$outboundSchema: z.ZodType<\n  BenefitGrantCustomProperties$Outbound,\n  z.ZodTypeDef,\n  BenefitGrantCustomProperties\n> = z.object({});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitGrantCustomProperties$ {\n  /** @deprecated use `BenefitGrantCustomProperties$inboundSchema` instead. */\n  export const inboundSchema = BenefitGrantCustomProperties$inboundSchema;\n  /** @deprecated use `BenefitGrantCustomProperties$outboundSchema` instead. */\n  export const outboundSchema = BenefitGrantCustomProperties$outboundSchema;\n  /** @deprecated use `BenefitGrantCustomProperties$Outbound` instead. */\n  export type Outbound = BenefitGrantCustomProperties$Outbound;\n}\n\nexport function benefitGrantCustomPropertiesToJSON(\n  benefitGrantCustomProperties: BenefitGrantCustomProperties,\n): string {\n  return JSON.stringify(\n    BenefitGrantCustomProperties$outboundSchema.parse(\n      benefitGrantCustomProperties,\n    ),\n  );\n}\n\nexport function benefitGrantCustomPropertiesFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitGrantCustomProperties, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => BenefitGrantCustomProperties$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitGrantCustomProperties' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;AAGH,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AADjD,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;;AAQlB,MAAM,0CAA0C,GAInD,CAAC,6IAAC,MAAM,CAAC,CAAA,CAAE,CAAC,CAAC;AAMV,MAAM,2CAA2C,GAIpD,CAAC,6IAAC,MAAM,CAAC,CAAA,CAAE,CAAC,CAAC;AAMX,IAAW,6BAA6B,CAO7C;AAPD,CAAA,SAAiB,6BAA6B;IAC5C,0EAAA,EAA4E,CAC/D,8BAAA,aAAa,GAAG,0CAA0C,CAAC;IACxE,2EAAA,EAA6E,CAChE,8BAAA,cAAc,GAAG,2CAA2C,CAAC;AAG5E,CAAC,EAPgB,6BAA6B,IAAA,CAA7B,6BAA6B,GAAA,CAAA,CAAA,GAO7C;AAEK,SAAU,kCAAkC,CAChD,4BAA0D;IAE1D,OAAO,IAAI,CAAC,SAAS,CACnB,2CAA2C,CAAC,KAAK,CAC/C,4BAA4B,CAC7B,CACF,CAAC;AACJ,CAAC;AAEK,SAAU,oCAAoC,CAClD,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,yCAA2C,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACtE,CAAA,wDAAA,CAA0D,CAC3D,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 2288, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2294, "column": 0}, "map": {"version":3,"file":"benefitgrantdiscordproperties.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/benefitgrantdiscordproperties.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport type BenefitGrantDiscordProperties = {\n  accountId?: string | undefined;\n  guildId?: string | undefined;\n  roleId?: string | undefined;\n};\n\n/** @internal */\nexport const BenefitGrantDiscordProperties$inboundSchema: z.ZodType<\n  BenefitGrantDiscordProperties,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  account_id: z.string().optional(),\n  guild_id: z.string().optional(),\n  role_id: z.string().optional(),\n}).transform((v) => {\n  return remap$(v, {\n    \"account_id\": \"accountId\",\n    \"guild_id\": \"guildId\",\n    \"role_id\": \"roleId\",\n  });\n});\n\n/** @internal */\nexport type BenefitGrantDiscordProperties$Outbound = {\n  account_id?: string | undefined;\n  guild_id?: string | undefined;\n  role_id?: string | undefined;\n};\n\n/** @internal */\nexport const BenefitGrantDiscordProperties$outboundSchema: z.ZodType<\n  BenefitGrantDiscordProperties$Outbound,\n  z.ZodTypeDef,\n  BenefitGrantDiscordProperties\n> = z.object({\n  accountId: z.string().optional(),\n  guildId: z.string().optional(),\n  roleId: z.string().optional(),\n}).transform((v) => {\n  return remap$(v, {\n    accountId: \"account_id\",\n    guildId: \"guild_id\",\n    roleId: \"role_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitGrantDiscordProperties$ {\n  /** @deprecated use `BenefitGrantDiscordProperties$inboundSchema` instead. */\n  export const inboundSchema = BenefitGrantDiscordProperties$inboundSchema;\n  /** @deprecated use `BenefitGrantDiscordProperties$outboundSchema` instead. */\n  export const outboundSchema = BenefitGrantDiscordProperties$outboundSchema;\n  /** @deprecated use `BenefitGrantDiscordProperties$Outbound` instead. */\n  export type Outbound = BenefitGrantDiscordProperties$Outbound;\n}\n\nexport function benefitGrantDiscordPropertiesToJSON(\n  benefitGrantDiscordProperties: BenefitGrantDiscordProperties,\n): string {\n  return JSON.stringify(\n    BenefitGrantDiscordProperties$outboundSchema.parse(\n      benefitGrantDiscordProperties,\n    ),\n  );\n}\n\nexport function benefitGrantDiscordPropertiesFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitGrantDiscordProperties, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => BenefitGrantDiscordProperties$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitGrantDiscordProperties' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;;;;;AAW1C,MAAM,2CAA2C,GAIpD,CAAC,6IAAC,MAAM,CAAC;IACX,UAAU,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IACjC,QAAQ,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IAC/B,OAAO,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;CAC/B,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,YAAY,EAAE,WAAW;QACzB,UAAU,EAAE,SAAS;QACrB,SAAS,EAAE,QAAQ;KACpB,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAUI,MAAM,4CAA4C,GAIrD,CAAC,6IAAC,MAAM,CAAC;IACX,SAAS,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IAChC,OAAO,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IAC9B,MAAM,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;CAC9B,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAM,AAAN,EAAO,CAAC,EAAE;QACf,SAAS,EAAE,YAAY;QACvB,OAAO,EAAE,UAAU;QACnB,MAAM,EAAE,SAAS;KAClB,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,8BAA8B,CAO9C;AAPD,CAAA,SAAiB,8BAA8B;IAC7C,2EAAA,EAA6E,CAChE,+BAAA,aAAa,GAAG,2CAA2C,CAAC;IACzE,4EAAA,EAA8E,CACjE,+BAAA,cAAc,GAAG,4CAA4C,CAAC;AAG7E,CAAC,EAPgB,8BAA8B,IAAA,CAA9B,8BAA8B,GAAA,CAAA,CAAA,GAO9C;AAEK,SAAU,mCAAmC,CACjD,6BAA4D;IAE5D,OAAO,IAAI,CAAC,SAAS,CACnB,4CAA4C,CAAC,KAAK,CAChD,6BAA6B,CAC9B,CACF,CAAC;AACJ,CAAC;AAEK,SAAU,qCAAqC,CACnD,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,0CAA4C,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACvE,CAAA,yDAAA,CAA2D,CAC5D,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 2343, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2349, "column": 0}, "map": {"version":3,"file":"benefitgrantdownloadablesproperties.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/benefitgrantdownloadablesproperties.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport type BenefitGrantDownloadablesProperties = {\n  files?: Array<string> | undefined;\n};\n\n/** @internal */\nexport const BenefitGrantDownloadablesProperties$inboundSchema: z.ZodType<\n  BenefitGrantDownloadablesProperties,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  files: z.array(z.string()).optional(),\n});\n\n/** @internal */\nexport type BenefitGrantDownloadablesProperties$Outbound = {\n  files?: Array<string> | undefined;\n};\n\n/** @internal */\nexport const BenefitGrantDownloadablesProperties$outboundSchema: z.ZodType<\n  BenefitGrantDownloadablesProperties$Outbound,\n  z.ZodTypeDef,\n  BenefitGrantDownloadablesProperties\n> = z.object({\n  files: z.array(z.string()).optional(),\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitGrantDownloadablesProperties$ {\n  /** @deprecated use `BenefitGrantDownloadablesProperties$inboundSchema` instead. */\n  export const inboundSchema =\n    BenefitGrantDownloadablesProperties$inboundSchema;\n  /** @deprecated use `BenefitGrantDownloadablesProperties$outboundSchema` instead. */\n  export const outboundSchema =\n    BenefitGrantDownloadablesProperties$outboundSchema;\n  /** @deprecated use `BenefitGrantDownloadablesProperties$Outbound` instead. */\n  export type Outbound = BenefitGrantDownloadablesProperties$Outbound;\n}\n\nexport function benefitGrantDownloadablesPropertiesToJSON(\n  benefitGrantDownloadablesProperties: BenefitGrantDownloadablesProperties,\n): string {\n  return JSON.stringify(\n    BenefitGrantDownloadablesProperties$outboundSchema.parse(\n      benefitGrantDownloadablesProperties,\n    ),\n  );\n}\n\nexport function benefitGrantDownloadablesPropertiesFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitGrantDownloadablesProperties, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) =>\n      BenefitGrantDownloadablesProperties$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitGrantDownloadablesProperties' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;AAGH,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AADjD,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;;AAUlB,MAAM,iDAAiD,GAI1D,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,KAAK,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;CACtC,CAAC,CAAC;AAQI,MAAM,kDAAkD,GAI3D,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,KAAK,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;CACtC,CAAC,CAAC;AAMG,IAAW,oCAAoC,CASpD;AATD,CAAA,SAAiB,oCAAoC;IACnD,iFAAA,EAAmF,CACtE,qCAAA,aAAa,GACxB,iDAAiD,CAAC;IACpD,kFAAA,EAAoF,CACvE,qCAAA,cAAc,GACzB,kDAAkD,CAAC;AAGvD,CAAC,EATgB,oCAAoC,IAAA,CAApC,oCAAoC,GAAA,CAAA,CAAA,GASpD;AAEK,SAAU,yCAAyC,CACvD,mCAAwE;IAExE,OAAO,IAAI,CAAC,SAAS,CACnB,kDAAkD,CAAC,KAAK,CACtD,mCAAmC,CACpC,CACF,CAAC;AACJ,CAAC;AAEK,SAAU,2CAA2C,CACzD,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CACF,CADI,gDAC6C,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACxE,CAAA,+DAAA,CAAiE,CAClE,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 2380, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2386, "column": 0}, "map": {"version":3,"file":"benefitgranterror.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/benefitgranterror.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport type BenefitGrantError = {\n  message: string;\n  type: string;\n  timestamp: string;\n};\n\n/** @internal */\nexport const BenefitGrantError$inboundSchema: z.ZodType<\n  BenefitGrantError,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  message: z.string(),\n  type: z.string(),\n  timestamp: z.string(),\n});\n\n/** @internal */\nexport type BenefitGrantError$Outbound = {\n  message: string;\n  type: string;\n  timestamp: string;\n};\n\n/** @internal */\nexport const BenefitGrantError$outboundSchema: z.ZodType<\n  BenefitGrantError$Outbound,\n  z.ZodTypeDef,\n  BenefitGrantError\n> = z.object({\n  message: z.string(),\n  type: z.string(),\n  timestamp: z.string(),\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitGrantError$ {\n  /** @deprecated use `BenefitGrantError$inboundSchema` instead. */\n  export const inboundSchema = BenefitGrantError$inboundSchema;\n  /** @deprecated use `BenefitGrantError$outboundSchema` instead. */\n  export const outboundSchema = BenefitGrantError$outboundSchema;\n  /** @deprecated use `BenefitGrantError$Outbound` instead. */\n  export type Outbound = BenefitGrantError$Outbound;\n}\n\nexport function benefitGrantErrorToJSON(\n  benefitGrantError: BenefitGrantError,\n): string {\n  return JSON.stringify(\n    BenefitGrantError$outboundSchema.parse(benefitGrantError),\n  );\n}\n\nexport function benefitGrantErrorFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitGrantError, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => BenefitGrantError$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitGrantError' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;AAGH,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AADjD,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;;AAYlB,MAAM,+BAA+B,GAIxC,CAAC,6IAAC,MAAM,CAAC;IACX,OAAO,EAAE,CAAC,6IAAC,MAAM,EAAE;IACnB,IAAI,EAAE,CAAC,6IAAC,MAAM,EAAE;IAChB,SAAS,EAAE,CAAC,6IAAC,MAAM,EAAE;CACtB,CAAC,CAAC;AAUI,MAAM,gCAAgC,GAIzC,CAAC,6IAAC,MAAM,CAAC;IACX,OAAO,EAAE,CAAC,6IAAC,MAAM,EAAE;IACnB,IAAI,EAAE,CAAC,6IAAC,MAAM,EAAE;IAChB,SAAS,EAAE,CAAC,6IAAC,MAAM,EAAE;CACtB,CAAC,CAAC;AAMG,IAAW,kBAAkB,CAOlC;AAPD,CAAA,SAAiB,kBAAkB;IACjC,+DAAA,EAAiE,CACpD,mBAAA,aAAa,GAAG,+BAA+B,CAAC;IAC7D,gEAAA,EAAkE,CACrD,mBAAA,cAAc,GAAG,gCAAgC,CAAC;AAGjE,CAAC,EAPgB,kBAAkB,IAAA,CAAlB,kBAAkB,GAAA,CAAA,CAAA,GAOlC;AAEK,SAAU,uBAAuB,CACrC,iBAAoC;IAEpC,OAAO,IAAI,CAAC,SAAS,CACnB,gCAAgC,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAC1D,CAAC;AACJ,CAAC;AAEK,SAAU,yBAAyB,CACvC,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,8BAAgC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC3D,CAAA,6CAAA,CAA+C,CAChD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 2421, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2427, "column": 0}, "map": {"version":3,"file":"benefitgrantgithubrepositoryproperties.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/benefitgrantgithubrepositoryproperties.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { ClosedEnum } from \"../../types/enums.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport const BenefitGrantGitHubRepositoryPropertiesPermission = {\n  Pull: \"pull\",\n  Triage: \"triage\",\n  Push: \"push\",\n  Maintain: \"maintain\",\n  Admin: \"admin\",\n} as const;\nexport type BenefitGrantGitHubRepositoryPropertiesPermission = ClosedEnum<\n  typeof BenefitGrantGitHubRepositoryPropertiesPermission\n>;\n\nexport type BenefitGrantGitHubRepositoryProperties = {\n  accountId?: string | undefined;\n  repositoryOwner?: string | undefined;\n  repositoryName?: string | undefined;\n  permission?: BenefitGrantGitHubRepositoryPropertiesPermission | undefined;\n};\n\n/** @internal */\nexport const BenefitGrantGitHubRepositoryPropertiesPermission$inboundSchema:\n  z.ZodNativeEnum<typeof BenefitGrantGitHubRepositoryPropertiesPermission> = z\n    .nativeEnum(BenefitGrantGitHubRepositoryPropertiesPermission);\n\n/** @internal */\nexport const BenefitGrantGitHubRepositoryPropertiesPermission$outboundSchema:\n  z.ZodNativeEnum<typeof BenefitGrantGitHubRepositoryPropertiesPermission> =\n    BenefitGrantGitHubRepositoryPropertiesPermission$inboundSchema;\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitGrantGitHubRepositoryPropertiesPermission$ {\n  /** @deprecated use `BenefitGrantGitHubRepositoryPropertiesPermission$inboundSchema` instead. */\n  export const inboundSchema =\n    BenefitGrantGitHubRepositoryPropertiesPermission$inboundSchema;\n  /** @deprecated use `BenefitGrantGitHubRepositoryPropertiesPermission$outboundSchema` instead. */\n  export const outboundSchema =\n    BenefitGrantGitHubRepositoryPropertiesPermission$outboundSchema;\n}\n\n/** @internal */\nexport const BenefitGrantGitHubRepositoryProperties$inboundSchema: z.ZodType<\n  BenefitGrantGitHubRepositoryProperties,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  account_id: z.string().optional(),\n  repository_owner: z.string().optional(),\n  repository_name: z.string().optional(),\n  permission: BenefitGrantGitHubRepositoryPropertiesPermission$inboundSchema\n    .optional(),\n}).transform((v) => {\n  return remap$(v, {\n    \"account_id\": \"accountId\",\n    \"repository_owner\": \"repositoryOwner\",\n    \"repository_name\": \"repositoryName\",\n  });\n});\n\n/** @internal */\nexport type BenefitGrantGitHubRepositoryProperties$Outbound = {\n  account_id?: string | undefined;\n  repository_owner?: string | undefined;\n  repository_name?: string | undefined;\n  permission?: string | undefined;\n};\n\n/** @internal */\nexport const BenefitGrantGitHubRepositoryProperties$outboundSchema: z.ZodType<\n  BenefitGrantGitHubRepositoryProperties$Outbound,\n  z.ZodTypeDef,\n  BenefitGrantGitHubRepositoryProperties\n> = z.object({\n  accountId: z.string().optional(),\n  repositoryOwner: z.string().optional(),\n  repositoryName: z.string().optional(),\n  permission: BenefitGrantGitHubRepositoryPropertiesPermission$outboundSchema\n    .optional(),\n}).transform((v) => {\n  return remap$(v, {\n    accountId: \"account_id\",\n    repositoryOwner: \"repository_owner\",\n    repositoryName: \"repository_name\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitGrantGitHubRepositoryProperties$ {\n  /** @deprecated use `BenefitGrantGitHubRepositoryProperties$inboundSchema` instead. */\n  export const inboundSchema =\n    BenefitGrantGitHubRepositoryProperties$inboundSchema;\n  /** @deprecated use `BenefitGrantGitHubRepositoryProperties$outboundSchema` instead. */\n  export const outboundSchema =\n    BenefitGrantGitHubRepositoryProperties$outboundSchema;\n  /** @deprecated use `BenefitGrantGitHubRepositoryProperties$Outbound` instead. */\n  export type Outbound = BenefitGrantGitHubRepositoryProperties$Outbound;\n}\n\nexport function benefitGrantGitHubRepositoryPropertiesToJSON(\n  benefitGrantGitHubRepositoryProperties:\n    BenefitGrantGitHubRepositoryProperties,\n): string {\n  return JSON.stringify(\n    BenefitGrantGitHubRepositoryProperties$outboundSchema.parse(\n      benefitGrantGitHubRepositoryProperties,\n    ),\n  );\n}\n\nexport function benefitGrantGitHubRepositoryPropertiesFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitGrantGitHubRepositoryProperties, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) =>\n      BenefitGrantGitHubRepositoryProperties$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitGrantGitHubRepositoryProperties' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;;;;;AAK1C,MAAM,gDAAgD,GAAG;IAC9D,IAAI,EAAE,MAAM;IACZ,MAAM,EAAE,QAAQ;IAChB,IAAI,EAAE,MAAM;IACZ,QAAQ,EAAE,UAAU;IACpB,KAAK,EAAE,OAAO;CACN,CAAC;AAaJ,MAAM,8DAA8D,GACE,CAAC,6IACzE,UAAU,CAAC,gDAAgD,CAAC,CAAC;AAG3D,MAAM,+DAA+D,GAExE,8DAA8D,CAAC;AAM7D,IAAW,iDAAiD,CAOjE;AAPD,CAAA,SAAiB,iDAAiD;IAChE,8FAAA,EAAgG,CACnF,kDAAA,aAAa,GACxB,8DAA8D,CAAC;IACjE,+FAAA,EAAiG,CACpF,kDAAA,cAAc,GACzB,+DAA+D,CAAC;AACpE,CAAC,EAPgB,iDAAiD,IAAA,CAAjD,iDAAiD,GAAA,CAAA,CAAA,GAOjE;AAGM,MAAM,oDAAoD,GAI7D,CAAC,6IAAC,MAAM,CAAC;IACX,UAAU,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IACjC,gBAAgB,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IACvC,eAAe,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IACtC,UAAU,EAAE,8DAA8D,CACvE,QAAQ,EAAE;CACd,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,YAAY,EAAE,WAAW;QACzB,kBAAkB,EAAE,iBAAiB;QACrC,iBAAiB,EAAE,gBAAgB;KACpC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAWI,MAAM,qDAAqD,GAI9D,CAAC,6IAAC,MAAM,CAAC;IACX,SAAS,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IAChC,eAAe,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IACtC,cAAc,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IACrC,UAAU,EAAE,+DAA+D,CACxE,QAAQ,EAAE;CACd,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,SAAS,EAAE,YAAY;QACvB,eAAe,EAAE,kBAAkB;QACnC,cAAc,EAAE,iBAAiB;KAClC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,uCAAuC,CASvD;AATD,CAAA,SAAiB,uCAAuC;IACtD,oFAAA,EAAsF,CACzE,wCAAA,aAAa,GACxB,oDAAoD,CAAC;IACvD,qFAAA,EAAuF,CAC1E,wCAAA,cAAc,GACzB,qDAAqD,CAAC;AAG1D,CAAC,EATgB,uCAAuC,IAAA,CAAvC,uCAAuC,GAAA,CAAA,CAAA,GASvD;AAEK,SAAU,4CAA4C,CAC1D,sCACwC;IAExC,OAAO,IAAI,CAAC,SAAS,CACnB,qDAAqD,CAAC,KAAK,CACzD,sCAAsC,CACvC,CACF,CAAC;AACJ,CAAC;AAEK,SAAU,8CAA8C,CAC5D,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CACF,CADI,mDACgD,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC3E,CAAA,kEAAA,CAAoE,CACrE,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 2496, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2502, "column": 0}, "map": {"version":3,"file":"benefitgrantlicensekeysproperties.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/benefitgrantlicensekeysproperties.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport type BenefitGrantLicenseKeysProperties = {\n  licenseKeyId?: string | undefined;\n  displayKey?: string | undefined;\n};\n\n/** @internal */\nexport const BenefitGrantLicenseKeysProperties$inboundSchema: z.ZodType<\n  BenefitGrantLicenseKeysProperties,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  license_key_id: z.string().optional(),\n  display_key: z.string().optional(),\n}).transform((v) => {\n  return remap$(v, {\n    \"license_key_id\": \"licenseKeyId\",\n    \"display_key\": \"displayKey\",\n  });\n});\n\n/** @internal */\nexport type BenefitGrantLicenseKeysProperties$Outbound = {\n  license_key_id?: string | undefined;\n  display_key?: string | undefined;\n};\n\n/** @internal */\nexport const BenefitGrantLicenseKeysProperties$outboundSchema: z.ZodType<\n  BenefitGrantLicenseKeysProperties$Outbound,\n  z.ZodTypeDef,\n  BenefitGrantLicenseKeysProperties\n> = z.object({\n  licenseKeyId: z.string().optional(),\n  displayKey: z.string().optional(),\n}).transform((v) => {\n  return remap$(v, {\n    licenseKeyId: \"license_key_id\",\n    displayKey: \"display_key\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitGrantLicenseKeysProperties$ {\n  /** @deprecated use `BenefitGrantLicenseKeysProperties$inboundSchema` instead. */\n  export const inboundSchema = BenefitGrantLicenseKeysProperties$inboundSchema;\n  /** @deprecated use `BenefitGrantLicenseKeysProperties$outboundSchema` instead. */\n  export const outboundSchema =\n    BenefitGrantLicenseKeysProperties$outboundSchema;\n  /** @deprecated use `BenefitGrantLicenseKeysProperties$Outbound` instead. */\n  export type Outbound = BenefitGrantLicenseKeysProperties$Outbound;\n}\n\nexport function benefitGrantLicenseKeysPropertiesToJSON(\n  benefitGrantLicenseKeysProperties: BenefitGrantLicenseKeysProperties,\n): string {\n  return JSON.stringify(\n    BenefitGrantLicenseKeysProperties$outboundSchema.parse(\n      benefitGrantLicenseKeysProperties,\n    ),\n  );\n}\n\nexport function benefitGrantLicenseKeysPropertiesFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitGrantLicenseKeysProperties, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => BenefitGrantLicenseKeysProperties$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitGrantLicenseKeysProperties' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;;;;;AAU1C,MAAM,+CAA+C,GAIxD,CAAC,6IAAC,MAAM,CAAC;IACX,cAAc,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IACrC,WAAW,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;CACnC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,gBAAgB,EAAE,cAAc;QAChC,aAAa,EAAE,YAAY;KAC5B,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AASI,MAAM,gDAAgD,GAIzD,CAAC,6IAAC,MAAM,CAAC;IACX,YAAY,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IACnC,UAAU,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;CAClC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,YAAY,EAAE,gBAAgB;QAC9B,UAAU,EAAE,aAAa;KAC1B,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,kCAAkC,CAQlD;AARD,CAAA,SAAiB,kCAAkC;IACjD,+EAAA,EAAiF,CACpE,mCAAA,aAAa,GAAG,+CAA+C,CAAC;IAC7E,gFAAA,EAAkF,CACrE,mCAAA,cAAc,GACzB,gDAAgD,CAAC;AAGrD,CAAC,EARgB,kCAAkC,IAAA,CAAlC,kCAAkC,GAAA,CAAA,CAAA,GAQlD;AAEK,SAAU,uCAAuC,CACrD,iCAAoE;IAEpE,OAAO,IAAI,CAAC,SAAS,CACnB,gDAAgD,CAAC,KAAK,CACpD,iCAAiC,CAClC,CACF,CAAC;AACJ,CAAC;AAEK,SAAU,yCAAyC,CACvD,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,8CAAgD,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC3E,CAAA,6DAAA,CAA+D,CAChE,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 2547, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2553, "column": 0}, "map": {"version":3,"file":"address.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/address.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport type Address = {\n  line1?: string | null | undefined;\n  line2?: string | null | undefined;\n  postalCode?: string | null | undefined;\n  city?: string | null | undefined;\n  state?: string | null | undefined;\n  country: string;\n};\n\n/** @internal */\nexport const Address$inboundSchema: z.ZodType<Address, z.ZodTypeDef, unknown> =\n  z.object({\n    line1: z.nullable(z.string()).optional(),\n    line2: z.nullable(z.string()).optional(),\n    postal_code: z.nullable(z.string()).optional(),\n    city: z.nullable(z.string()).optional(),\n    state: z.nullable(z.string()).optional(),\n    country: z.string(),\n  }).transform((v) => {\n    return remap$(v, {\n      \"postal_code\": \"postalCode\",\n    });\n  });\n\n/** @internal */\nexport type Address$Outbound = {\n  line1?: string | null | undefined;\n  line2?: string | null | undefined;\n  postal_code?: string | null | undefined;\n  city?: string | null | undefined;\n  state?: string | null | undefined;\n  country: string;\n};\n\n/** @internal */\nexport const Address$outboundSchema: z.ZodType<\n  Address$Outbound,\n  z.ZodTypeDef,\n  Address\n> = z.object({\n  line1: z.nullable(z.string()).optional(),\n  line2: z.nullable(z.string()).optional(),\n  postalCode: z.nullable(z.string()).optional(),\n  city: z.nullable(z.string()).optional(),\n  state: z.nullable(z.string()).optional(),\n  country: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    postalCode: \"postal_code\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace Address$ {\n  /** @deprecated use `Address$inboundSchema` instead. */\n  export const inboundSchema = Address$inboundSchema;\n  /** @deprecated use `Address$outboundSchema` instead. */\n  export const outboundSchema = Address$outboundSchema;\n  /** @deprecated use `Address$Outbound` instead. */\n  export type Outbound = Address$Outbound;\n}\n\nexport function addressToJSON(address: Address): string {\n  return JSON.stringify(Address$outboundSchema.parse(address));\n}\n\nexport function addressFromJSON(\n  jsonString: string,\n): SafeParseResult<Address, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => Address$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'Address' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;;;;;AAc1C,MAAM,qBAAqB,GAChC,CAAC,6IAAC,MAAM,CAAC;IACP,KAAK,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;IACxC,KAAK,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;IACxC,WAAW,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;IAC9C,IAAI,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;IACvC,KAAK,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;IACxC,OAAO,EAAE,CAAC,6IAAC,MAAM,EAAE;CACpB,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,OAAO,uLAAA,AAAM,EAAC,CAAC,EAAE;QACf,aAAa,EAAE,YAAY;KAC5B,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAaE,MAAM,sBAAsB,GAI/B,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;IACxC,KAAK,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;IACxC,UAAU,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;IAC7C,IAAI,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;IACvC,KAAK,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;IACxC,OAAO,EAAE,CAAC,6IAAC,MAAM,EAAE;CACpB,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,UAAU,EAAE,aAAa;KAC1B,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,QAAQ,CAOxB;AAPD,CAAA,SAAiB,QAAQ;IACvB,qDAAA,EAAuD,CAC1C,SAAA,aAAa,GAAG,qBAAqB,CAAC;IACnD,sDAAA,EAAwD,CAC3C,SAAA,cAAc,GAAG,sBAAsB,CAAC;AAGvD,CAAC,EAPgB,QAAQ,IAAA,CAAR,QAAQ,GAAA,CAAA,CAAA,GAOxB;AAEK,SAAU,aAAa,CAAC,OAAgB;IAC5C,OAAO,IAAI,CAAC,SAAS,CAAC,sBAAsB,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;AAC/D,CAAC;AAEK,SAAU,eAAe,CAC7B,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,oBAAsB,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACjD,CAAA,mCAAA,CAAqC,CACtC,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 2604, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2610, "column": 0}, "map": {"version":3,"file":"taxidformat.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/taxidformat.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { ClosedEnum } from \"../../types/enums.js\";\n\n/**\n * List of supported tax ID formats.\n *\n * @remarks\n *\n * Ref: https://docs.stripe.com/billing/customer/tax-ids#supported-tax-id\n */\nexport const TaxIDFormat = {\n  AdNrt: \"ad_nrt\",\n  AeTrn: \"ae_trn\",\n  ArCuit: \"ar_cuit\",\n  AuAbn: \"au_abn\",\n  AuArn: \"au_arn\",\n  BgUic: \"bg_uic\",\n  BhVat: \"bh_vat\",\n  BoTin: \"bo_tin\",\n  BrCnpj: \"br_cnpj\",\n  BrCpf: \"br_cpf\",\n  CaBn: \"ca_bn\",\n  CaGstHst: \"ca_gst_hst\",\n  CaPstBc: \"ca_pst_bc\",\n  CaPstMb: \"ca_pst_mb\",\n  CaPstSk: \"ca_pst_sk\",\n  CaQst: \"ca_qst\",\n  ChUid: \"ch_uid\",\n  ChVat: \"ch_vat\",\n  ClTin: \"cl_tin\",\n  CnTin: \"cn_tin\",\n  CoNit: \"co_nit\",\n  CrTin: \"cr_tin\",\n  DeStn: \"de_stn\",\n  DoRcn: \"do_rcn\",\n  EcRuc: \"ec_ruc\",\n  EgTin: \"eg_tin\",\n  EsCif: \"es_cif\",\n  EuOssVat: \"eu_oss_vat\",\n  EuVat: \"eu_vat\",\n  GbVat: \"gb_vat\",\n  GeVat: \"ge_vat\",\n  HkBr: \"hk_br\",\n  HrOib: \"hr_oib\",\n  HuTin: \"hu_tin\",\n  IdNpwp: \"id_npwp\",\n  IlVat: \"il_vat\",\n  InGst: \"in_gst\",\n  IsVat: \"is_vat\",\n  JpCn: \"jp_cn\",\n  JpRn: \"jp_rn\",\n  JpTrn: \"jp_trn\",\n  KePin: \"ke_pin\",\n  KrBrn: \"kr_brn\",\n  KzBin: \"kz_bin\",\n  LiUid: \"li_uid\",\n  MxRfc: \"mx_rfc\",\n  MyFrp: \"my_frp\",\n  MyItn: \"my_itn\",\n  MySst: \"my_sst\",\n  NgTin: \"ng_tin\",\n  NoVat: \"no_vat\",\n  NoVoec: \"no_voec\",\n  NzGst: \"nz_gst\",\n  OmVat: \"om_vat\",\n  PeRuc: \"pe_ruc\",\n  PhTin: \"ph_tin\",\n  RoTin: \"ro_tin\",\n  RsPib: \"rs_pib\",\n  RuInn: \"ru_inn\",\n  RuKpp: \"ru_kpp\",\n  SaVat: \"sa_vat\",\n  SgGst: \"sg_gst\",\n  SgUen: \"sg_uen\",\n  SiTin: \"si_tin\",\n  SvNit: \"sv_nit\",\n  ThVat: \"th_vat\",\n  TrTin: \"tr_tin\",\n  TwVat: \"tw_vat\",\n  UaVat: \"ua_vat\",\n  UsEin: \"us_ein\",\n  UyRuc: \"uy_ruc\",\n  VeRif: \"ve_rif\",\n  VnTin: \"vn_tin\",\n  ZaVat: \"za_vat\",\n} as const;\n/**\n * List of supported tax ID formats.\n *\n * @remarks\n *\n * Ref: https://docs.stripe.com/billing/customer/tax-ids#supported-tax-id\n */\nexport type TaxIDFormat = ClosedEnum<typeof TaxIDFormat>;\n\n/** @internal */\nexport const TaxIDFormat$inboundSchema: z.ZodNativeEnum<typeof TaxIDFormat> = z\n  .nativeEnum(TaxIDFormat);\n\n/** @internal */\nexport const TaxIDFormat$outboundSchema: z.ZodNativeEnum<typeof TaxIDFormat> =\n  TaxIDFormat$inboundSchema;\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace TaxIDFormat$ {\n  /** @deprecated use `TaxIDFormat$inboundSchema` instead. */\n  export const inboundSchema = TaxIDFormat$inboundSchema;\n  /** @deprecated use `TaxIDFormat$outboundSchema` instead. */\n  export const outboundSchema = TaxIDFormat$outboundSchema;\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;AAUlB,MAAM,WAAW,GAAG;IACzB,KAAK,EAAE,QAAQ;IACf,KAAK,EAAE,QAAQ;IACf,MAAM,EAAE,SAAS;IACjB,KAAK,EAAE,QAAQ;IACf,KAAK,EAAE,QAAQ;IACf,KAAK,EAAE,QAAQ;IACf,KAAK,EAAE,QAAQ;IACf,KAAK,EAAE,QAAQ;IACf,MAAM,EAAE,SAAS;IACjB,KAAK,EAAE,QAAQ;IACf,IAAI,EAAE,OAAO;IACb,QAAQ,EAAE,YAAY;IACtB,OAAO,EAAE,WAAW;IACpB,OAAO,EAAE,WAAW;IACpB,OAAO,EAAE,WAAW;IACpB,KAAK,EAAE,QAAQ;IACf,KAAK,EAAE,QAAQ;IACf,KAAK,EAAE,QAAQ;IACf,KAAK,EAAE,QAAQ;IACf,KAAK,EAAE,QAAQ;IACf,KAAK,EAAE,QAAQ;IACf,KAAK,EAAE,QAAQ;IACf,KAAK,EAAE,QAAQ;IACf,KAAK,EAAE,QAAQ;IACf,KAAK,EAAE,QAAQ;IACf,KAAK,EAAE,QAAQ;IACf,KAAK,EAAE,QAAQ;IACf,QAAQ,EAAE,YAAY;IACtB,KAAK,EAAE,QAAQ;IACf,KAAK,EAAE,QAAQ;IACf,KAAK,EAAE,QAAQ;IACf,IAAI,EAAE,OAAO;IACb,KAAK,EAAE,QAAQ;IACf,KAAK,EAAE,QAAQ;IACf,MAAM,EAAE,SAAS;IACjB,KAAK,EAAE,QAAQ;IACf,KAAK,EAAE,QAAQ;IACf,KAAK,EAAE,QAAQ;IACf,IAAI,EAAE,OAAO;IACb,IAAI,EAAE,OAAO;IACb,KAAK,EAAE,QAAQ;IACf,KAAK,EAAE,QAAQ;IACf,KAAK,EAAE,QAAQ;IACf,KAAK,EAAE,QAAQ;IACf,KAAK,EAAE,QAAQ;IACf,KAAK,EAAE,QAAQ;IACf,KAAK,EAAE,QAAQ;IACf,KAAK,EAAE,QAAQ;IACf,KAAK,EAAE,QAAQ;IACf,KAAK,EAAE,QAAQ;IACf,KAAK,EAAE,QAAQ;IACf,MAAM,EAAE,SAAS;IACjB,KAAK,EAAE,QAAQ;IACf,KAAK,EAAE,QAAQ;IACf,KAAK,EAAE,QAAQ;IACf,KAAK,EAAE,QAAQ;IACf,KAAK,EAAE,QAAQ;IACf,KAAK,EAAE,QAAQ;IACf,KAAK,EAAE,QAAQ;IACf,KAAK,EAAE,QAAQ;IACf,KAAK,EAAE,QAAQ;IACf,KAAK,EAAE,QAAQ;IACf,KAAK,EAAE,QAAQ;IACf,KAAK,EAAE,QAAQ;IACf,KAAK,EAAE,QAAQ;IACf,KAAK,EAAE,QAAQ;IACf,KAAK,EAAE,QAAQ;IACf,KAAK,EAAE,QAAQ;IACf,KAAK,EAAE,QAAQ;IACf,KAAK,EAAE,QAAQ;IACf,KAAK,EAAE,QAAQ;IACf,KAAK,EAAE,QAAQ;IACf,KAAK,EAAE,QAAQ;IACf,KAAK,EAAE,QAAQ;CACP,CAAC;AAWJ,MAAM,yBAAyB,GAAwC,CAAC,6IAC5E,UAAU,CAAC,WAAW,CAAC,CAAC;AAGpB,MAAM,0BAA0B,GACrC,yBAAyB,CAAC;AAMtB,IAAW,YAAY,CAK5B;AALD,CAAA,SAAiB,YAAY;IAC3B,yDAAA,EAA2D,CAC9C,aAAA,aAAa,GAAG,yBAAyB,CAAC;IACvD,0DAAA,EAA4D,CAC/C,aAAA,cAAc,GAAG,0BAA0B,CAAC;AAC3D,CAAC,EALgB,YAAY,IAAA,CAAZ,YAAY,GAAA,CAAA,CAAA,GAK5B","ignoreList":[0]}},
    {"offset": {"line": 2704, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2710, "column": 0}, "map": {"version":3,"file":"customer.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customer.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  Address,\n  Address$inboundSchema,\n  Address$Outbound,\n  Address$outboundSchema,\n} from \"./address.js\";\nimport {\n  TaxIDFormat,\n  TaxIDFormat$inboundSchema,\n  TaxIDFormat$outboundSchema,\n} from \"./taxidformat.js\";\n\nexport type CustomerMetadata1 = string | number | number | boolean;\n\nexport type CustomerTaxId = string | TaxIDFormat;\n\n/**\n * A customer in an organization.\n */\nexport type Customer = {\n  /**\n   * The ID of the customer.\n   */\n  id: string;\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  metadata: { [k: string]: string | number | number | boolean };\n  /**\n   * The ID of the customer in your system. This must be unique within the organization. Once set, it can't be updated.\n   */\n  externalId: string | null;\n  /**\n   * The email address of the customer. This must be unique within the organization.\n   */\n  email: string;\n  /**\n   * Whether the customer email address is verified. The address is automatically verified when the customer accesses the customer portal using their email address.\n   */\n  emailVerified: boolean;\n  /**\n   * The name of the customer.\n   */\n  name: string | null;\n  billingAddress: Address | null;\n  taxId: Array<string | TaxIDFormat | null> | null;\n  /**\n   * The ID of the organization owning the customer.\n   */\n  organizationId: string;\n  /**\n   * Timestamp for when the customer was soft deleted.\n   */\n  deletedAt: Date | null;\n  avatarUrl: string;\n};\n\n/** @internal */\nexport const CustomerMetadata1$inboundSchema: z.ZodType<\n  CustomerMetadata1,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type CustomerMetadata1$Outbound = string | number | number | boolean;\n\n/** @internal */\nexport const CustomerMetadata1$outboundSchema: z.ZodType<\n  CustomerMetadata1$Outbound,\n  z.ZodTypeDef,\n  CustomerMetadata1\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomerMetadata1$ {\n  /** @deprecated use `CustomerMetadata1$inboundSchema` instead. */\n  export const inboundSchema = CustomerMetadata1$inboundSchema;\n  /** @deprecated use `CustomerMetadata1$outboundSchema` instead. */\n  export const outboundSchema = CustomerMetadata1$outboundSchema;\n  /** @deprecated use `CustomerMetadata1$Outbound` instead. */\n  export type Outbound = CustomerMetadata1$Outbound;\n}\n\nexport function customerMetadata1ToJSON(\n  customerMetadata1: CustomerMetadata1,\n): string {\n  return JSON.stringify(\n    CustomerMetadata1$outboundSchema.parse(customerMetadata1),\n  );\n}\n\nexport function customerMetadata1FromJSON(\n  jsonString: string,\n): SafeParseResult<CustomerMetadata1, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomerMetadata1$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomerMetadata1' from JSON`,\n  );\n}\n\n/** @internal */\nexport const CustomerTaxId$inboundSchema: z.ZodType<\n  CustomerTaxId,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), TaxIDFormat$inboundSchema]);\n\n/** @internal */\nexport type CustomerTaxId$Outbound = string | string;\n\n/** @internal */\nexport const CustomerTaxId$outboundSchema: z.ZodType<\n  CustomerTaxId$Outbound,\n  z.ZodTypeDef,\n  CustomerTaxId\n> = z.union([z.string(), TaxIDFormat$outboundSchema]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomerTaxId$ {\n  /** @deprecated use `CustomerTaxId$inboundSchema` instead. */\n  export const inboundSchema = CustomerTaxId$inboundSchema;\n  /** @deprecated use `CustomerTaxId$outboundSchema` instead. */\n  export const outboundSchema = CustomerTaxId$outboundSchema;\n  /** @deprecated use `CustomerTaxId$Outbound` instead. */\n  export type Outbound = CustomerTaxId$Outbound;\n}\n\nexport function customerTaxIdToJSON(customerTaxId: CustomerTaxId): string {\n  return JSON.stringify(CustomerTaxId$outboundSchema.parse(customerTaxId));\n}\n\nexport function customerTaxIdFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomerTaxId, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomerTaxId$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomerTaxId' from JSON`,\n  );\n}\n\n/** @internal */\nexport const Customer$inboundSchema: z.ZodType<\n  Customer,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  id: z.string(),\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  external_id: z.nullable(z.string()),\n  email: z.string(),\n  email_verified: z.boolean(),\n  name: z.nullable(z.string()),\n  billing_address: z.nullable(Address$inboundSchema),\n  tax_id: z.nullable(\n    z.array(z.nullable(z.union([z.string(), TaxIDFormat$inboundSchema]))),\n  ),\n  organization_id: z.string(),\n  deleted_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  avatar_url: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"external_id\": \"externalId\",\n    \"email_verified\": \"emailVerified\",\n    \"billing_address\": \"billingAddress\",\n    \"tax_id\": \"taxId\",\n    \"organization_id\": \"organizationId\",\n    \"deleted_at\": \"deletedAt\",\n    \"avatar_url\": \"avatarUrl\",\n  });\n});\n\n/** @internal */\nexport type Customer$Outbound = {\n  id: string;\n  created_at: string;\n  modified_at: string | null;\n  metadata: { [k: string]: string | number | number | boolean };\n  external_id: string | null;\n  email: string;\n  email_verified: boolean;\n  name: string | null;\n  billing_address: Address$Outbound | null;\n  tax_id: Array<string | string | null> | null;\n  organization_id: string;\n  deleted_at: string | null;\n  avatar_url: string;\n};\n\n/** @internal */\nexport const Customer$outboundSchema: z.ZodType<\n  Customer$Outbound,\n  z.ZodTypeDef,\n  Customer\n> = z.object({\n  id: z.string(),\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  externalId: z.nullable(z.string()),\n  email: z.string(),\n  emailVerified: z.boolean(),\n  name: z.nullable(z.string()),\n  billingAddress: z.nullable(Address$outboundSchema),\n  taxId: z.nullable(\n    z.array(z.nullable(z.union([z.string(), TaxIDFormat$outboundSchema]))),\n  ),\n  organizationId: z.string(),\n  deletedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  avatarUrl: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    externalId: \"external_id\",\n    emailVerified: \"email_verified\",\n    billingAddress: \"billing_address\",\n    taxId: \"tax_id\",\n    organizationId: \"organization_id\",\n    deletedAt: \"deleted_at\",\n    avatarUrl: \"avatar_url\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace Customer$ {\n  /** @deprecated use `Customer$inboundSchema` instead. */\n  export const inboundSchema = Customer$inboundSchema;\n  /** @deprecated use `Customer$outboundSchema` instead. */\n  export const outboundSchema = Customer$outboundSchema;\n  /** @deprecated use `Customer$Outbound` instead. */\n  export type Outbound = Customer$Outbound;\n}\n\nexport function customerToJSON(customer: Customer): string {\n  return JSON.stringify(Customer$outboundSchema.parse(customer));\n}\n\nexport function customerFromJSON(\n  jsonString: string,\n): SafeParseResult<Customer, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => Customer$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'Customer' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2869, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2875, "column": 0}, "map": {"version":3,"file":"benefitgrant.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/benefitgrant.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  BenefitGrantCustomProperties,\n  BenefitGrantCustomProperties$inboundSchema,\n  BenefitGrantCustomProperties$Outbound,\n  BenefitGrantCustomProperties$outboundSchema,\n} from \"./benefitgrantcustomproperties.js\";\nimport {\n  BenefitGrantDiscordProperties,\n  BenefitGrantDiscordProperties$inboundSchema,\n  BenefitGrantDiscordProperties$Outbound,\n  BenefitGrantDiscordProperties$outboundSchema,\n} from \"./benefitgrantdiscordproperties.js\";\nimport {\n  BenefitGrantDownloadablesProperties,\n  BenefitGrantDownloadablesProperties$inboundSchema,\n  BenefitGrantDownloadablesProperties$Outbound,\n  BenefitGrantDownloadablesProperties$outboundSchema,\n} from \"./benefitgrantdownloadablesproperties.js\";\nimport {\n  BenefitGrantError,\n  BenefitGrantError$inboundSchema,\n  BenefitGrantError$Outbound,\n  BenefitGrantError$outboundSchema,\n} from \"./benefitgranterror.js\";\nimport {\n  BenefitGrantGitHubRepositoryProperties,\n  BenefitGrantGitHubRepositoryProperties$inboundSchema,\n  BenefitGrantGitHubRepositoryProperties$Outbound,\n  BenefitGrantGitHubRepositoryProperties$outboundSchema,\n} from \"./benefitgrantgithubrepositoryproperties.js\";\nimport {\n  BenefitGrantLicenseKeysProperties,\n  BenefitGrantLicenseKeysProperties$inboundSchema,\n  BenefitGrantLicenseKeysProperties$Outbound,\n  BenefitGrantLicenseKeysProperties$outboundSchema,\n} from \"./benefitgrantlicensekeysproperties.js\";\nimport {\n  Customer,\n  Customer$inboundSchema,\n  Customer$Outbound,\n  Customer$outboundSchema,\n} from \"./customer.js\";\n\nexport type Properties =\n  | BenefitGrantCustomProperties\n  | BenefitGrantDownloadablesProperties\n  | BenefitGrantLicenseKeysProperties\n  | BenefitGrantDiscordProperties\n  | BenefitGrantGitHubRepositoryProperties;\n\nexport type BenefitGrant = {\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  /**\n   * The ID of the grant.\n   */\n  id: string;\n  /**\n   * The timestamp when the benefit was granted. If `None`, the benefit is not granted.\n   */\n  grantedAt?: Date | null | undefined;\n  /**\n   * Whether the benefit is granted.\n   */\n  isGranted: boolean;\n  /**\n   * The timestamp when the benefit was revoked. If `None`, the benefit is not revoked.\n   */\n  revokedAt?: Date | null | undefined;\n  /**\n   * Whether the benefit is revoked.\n   */\n  isRevoked: boolean;\n  /**\n   * The ID of the subscription that granted this benefit.\n   */\n  subscriptionId: string | null;\n  /**\n   * The ID of the order that granted this benefit.\n   */\n  orderId: string | null;\n  /**\n   * The ID of the customer concerned by this grant.\n   */\n  customerId: string;\n  /**\n   * The ID of the benefit concerned by this grant.\n   */\n  benefitId: string;\n  /**\n   * The error information if the benefit grant failed with an unrecoverable error.\n   */\n  error?: BenefitGrantError | null | undefined;\n  /**\n   * A customer in an organization.\n   */\n  customer: Customer;\n  properties:\n    | BenefitGrantCustomProperties\n    | BenefitGrantDownloadablesProperties\n    | BenefitGrantLicenseKeysProperties\n    | BenefitGrantDiscordProperties\n    | BenefitGrantGitHubRepositoryProperties;\n};\n\n/** @internal */\nexport const Properties$inboundSchema: z.ZodType<\n  Properties,\n  z.ZodTypeDef,\n  unknown\n> = z.union([\n  BenefitGrantCustomProperties$inboundSchema,\n  BenefitGrantDownloadablesProperties$inboundSchema,\n  BenefitGrantLicenseKeysProperties$inboundSchema,\n  BenefitGrantDiscordProperties$inboundSchema,\n  BenefitGrantGitHubRepositoryProperties$inboundSchema,\n]);\n\n/** @internal */\nexport type Properties$Outbound =\n  | BenefitGrantCustomProperties$Outbound\n  | BenefitGrantDownloadablesProperties$Outbound\n  | BenefitGrantLicenseKeysProperties$Outbound\n  | BenefitGrantDiscordProperties$Outbound\n  | BenefitGrantGitHubRepositoryProperties$Outbound;\n\n/** @internal */\nexport const Properties$outboundSchema: z.ZodType<\n  Properties$Outbound,\n  z.ZodTypeDef,\n  Properties\n> = z.union([\n  BenefitGrantCustomProperties$outboundSchema,\n  BenefitGrantDownloadablesProperties$outboundSchema,\n  BenefitGrantLicenseKeysProperties$outboundSchema,\n  BenefitGrantDiscordProperties$outboundSchema,\n  BenefitGrantGitHubRepositoryProperties$outboundSchema,\n]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace Properties$ {\n  /** @deprecated use `Properties$inboundSchema` instead. */\n  export const inboundSchema = Properties$inboundSchema;\n  /** @deprecated use `Properties$outboundSchema` instead. */\n  export const outboundSchema = Properties$outboundSchema;\n  /** @deprecated use `Properties$Outbound` instead. */\n  export type Outbound = Properties$Outbound;\n}\n\nexport function propertiesToJSON(properties: Properties): string {\n  return JSON.stringify(Properties$outboundSchema.parse(properties));\n}\n\nexport function propertiesFromJSON(\n  jsonString: string,\n): SafeParseResult<Properties, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => Properties$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'Properties' from JSON`,\n  );\n}\n\n/** @internal */\nexport const BenefitGrant$inboundSchema: z.ZodType<\n  BenefitGrant,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  id: z.string(),\n  granted_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ).optional(),\n  is_granted: z.boolean(),\n  revoked_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ).optional(),\n  is_revoked: z.boolean(),\n  subscription_id: z.nullable(z.string()),\n  order_id: z.nullable(z.string()),\n  customer_id: z.string(),\n  benefit_id: z.string(),\n  error: z.nullable(BenefitGrantError$inboundSchema).optional(),\n  customer: Customer$inboundSchema,\n  properties: z.union([\n    BenefitGrantCustomProperties$inboundSchema,\n    BenefitGrantDownloadablesProperties$inboundSchema,\n    BenefitGrantLicenseKeysProperties$inboundSchema,\n    BenefitGrantDiscordProperties$inboundSchema,\n    BenefitGrantGitHubRepositoryProperties$inboundSchema,\n  ]),\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"granted_at\": \"grantedAt\",\n    \"is_granted\": \"isGranted\",\n    \"revoked_at\": \"revokedAt\",\n    \"is_revoked\": \"isRevoked\",\n    \"subscription_id\": \"subscriptionId\",\n    \"order_id\": \"orderId\",\n    \"customer_id\": \"customerId\",\n    \"benefit_id\": \"benefitId\",\n  });\n});\n\n/** @internal */\nexport type BenefitGrant$Outbound = {\n  created_at: string;\n  modified_at: string | null;\n  id: string;\n  granted_at?: string | null | undefined;\n  is_granted: boolean;\n  revoked_at?: string | null | undefined;\n  is_revoked: boolean;\n  subscription_id: string | null;\n  order_id: string | null;\n  customer_id: string;\n  benefit_id: string;\n  error?: BenefitGrantError$Outbound | null | undefined;\n  customer: Customer$Outbound;\n  properties:\n    | BenefitGrantCustomProperties$Outbound\n    | BenefitGrantDownloadablesProperties$Outbound\n    | BenefitGrantLicenseKeysProperties$Outbound\n    | BenefitGrantDiscordProperties$Outbound\n    | BenefitGrantGitHubRepositoryProperties$Outbound;\n};\n\n/** @internal */\nexport const BenefitGrant$outboundSchema: z.ZodType<\n  BenefitGrant$Outbound,\n  z.ZodTypeDef,\n  BenefitGrant\n> = z.object({\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  id: z.string(),\n  grantedAt: z.nullable(z.date().transform(v => v.toISOString())).optional(),\n  isGranted: z.boolean(),\n  revokedAt: z.nullable(z.date().transform(v => v.toISOString())).optional(),\n  isRevoked: z.boolean(),\n  subscriptionId: z.nullable(z.string()),\n  orderId: z.nullable(z.string()),\n  customerId: z.string(),\n  benefitId: z.string(),\n  error: z.nullable(BenefitGrantError$outboundSchema).optional(),\n  customer: Customer$outboundSchema,\n  properties: z.union([\n    BenefitGrantCustomProperties$outboundSchema,\n    BenefitGrantDownloadablesProperties$outboundSchema,\n    BenefitGrantLicenseKeysProperties$outboundSchema,\n    BenefitGrantDiscordProperties$outboundSchema,\n    BenefitGrantGitHubRepositoryProperties$outboundSchema,\n  ]),\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    grantedAt: \"granted_at\",\n    isGranted: \"is_granted\",\n    revokedAt: \"revoked_at\",\n    isRevoked: \"is_revoked\",\n    subscriptionId: \"subscription_id\",\n    orderId: \"order_id\",\n    customerId: \"customer_id\",\n    benefitId: \"benefit_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitGrant$ {\n  /** @deprecated use `BenefitGrant$inboundSchema` instead. */\n  export const inboundSchema = BenefitGrant$inboundSchema;\n  /** @deprecated use `BenefitGrant$outboundSchema` instead. */\n  export const outboundSchema = BenefitGrant$outboundSchema;\n  /** @deprecated use `BenefitGrant$Outbound` instead. */\n  export type Outbound = BenefitGrant$Outbound;\n}\n\nexport function benefitGrantToJSON(benefitGrant: BenefitGrant): string {\n  return JSON.stringify(BenefitGrant$outboundSchema.parse(benefitGrant));\n}\n\nexport function benefitGrantFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitGrant, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => BenefitGrant$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitGrant' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3024, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3030, "column": 0}, "map": {"version":3,"file":"pagination.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/pagination.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport type Pagination = {\n  totalCount: number;\n  maxPage: number;\n};\n\n/** @internal */\nexport const Pagination$inboundSchema: z.ZodType<\n  Pagination,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  total_count: z.number().int(),\n  max_page: z.number().int(),\n}).transform((v) => {\n  return remap$(v, {\n    \"total_count\": \"totalCount\",\n    \"max_page\": \"maxPage\",\n  });\n});\n\n/** @internal */\nexport type Pagination$Outbound = {\n  total_count: number;\n  max_page: number;\n};\n\n/** @internal */\nexport const Pagination$outboundSchema: z.ZodType<\n  Pagination$Outbound,\n  z.ZodTypeDef,\n  Pagination\n> = z.object({\n  totalCount: z.number().int(),\n  maxPage: z.number().int(),\n}).transform((v) => {\n  return remap$(v, {\n    totalCount: \"total_count\",\n    maxPage: \"max_page\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace Pagination$ {\n  /** @deprecated use `Pagination$inboundSchema` instead. */\n  export const inboundSchema = Pagination$inboundSchema;\n  /** @deprecated use `Pagination$outboundSchema` instead. */\n  export const outboundSchema = Pagination$outboundSchema;\n  /** @deprecated use `Pagination$Outbound` instead. */\n  export type Outbound = Pagination$Outbound;\n}\n\nexport function paginationToJSON(pagination: Pagination): string {\n  return JSON.stringify(Pagination$outboundSchema.parse(pagination));\n}\n\nexport function paginationFromJSON(\n  jsonString: string,\n): SafeParseResult<Pagination, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => Pagination$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'Pagination' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;;;;;AAU1C,MAAM,wBAAwB,GAIjC,CAAC,6IAAC,MAAM,CAAC;IACX,WAAW,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAC7B,QAAQ,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;CAC3B,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,aAAa,EAAE,YAAY;QAC3B,UAAU,EAAE,SAAS;KACtB,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AASI,MAAM,yBAAyB,GAIlC,CAAC,6IAAC,MAAM,CAAC;IACX,UAAU,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAC5B,OAAO,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;CAC1B,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,UAAU,EAAE,aAAa;QACzB,OAAO,EAAE,UAAU;KACpB,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,WAAW,CAO3B;AAPD,CAAA,SAAiB,WAAW;IAC1B,wDAAA,EAA0D,CAC7C,YAAA,aAAa,GAAG,wBAAwB,CAAC;IACtD,yDAAA,EAA2D,CAC9C,YAAA,cAAc,GAAG,yBAAyB,CAAC;AAG1D,CAAC,EAPgB,WAAW,IAAA,CAAX,WAAW,GAAA,CAAA,CAAA,GAO3B;AAEK,SAAU,gBAAgB,CAAC,UAAsB;IACrD,OAAO,IAAI,CAAC,SAAS,CAAC,yBAAyB,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC;AACrE,CAAC;AAEK,SAAU,kBAAkB,CAChC,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,uBAAyB,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACpD,CAAA,sCAAA,CAAwC,CACzC,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 3075, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3081, "column": 0}, "map": {"version":3,"file":"listresourcebenefitgrant.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/listresourcebenefitgrant.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  BenefitGrant,\n  BenefitGrant$inboundSchema,\n  BenefitGrant$Outbound,\n  BenefitGrant$outboundSchema,\n} from \"./benefitgrant.js\";\nimport {\n  Pagination,\n  Pagination$inboundSchema,\n  Pagination$Outbound,\n  Pagination$outboundSchema,\n} from \"./pagination.js\";\n\nexport type ListResourceBenefitGrant = {\n  items: Array<BenefitGrant>;\n  pagination: Pagination;\n};\n\n/** @internal */\nexport const ListResourceBenefitGrant$inboundSchema: z.ZodType<\n  ListResourceBenefitGrant,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  items: z.array(BenefitGrant$inboundSchema),\n  pagination: Pagination$inboundSchema,\n});\n\n/** @internal */\nexport type ListResourceBenefitGrant$Outbound = {\n  items: Array<BenefitGrant$Outbound>;\n  pagination: Pagination$Outbound;\n};\n\n/** @internal */\nexport const ListResourceBenefitGrant$outboundSchema: z.ZodType<\n  ListResourceBenefitGrant$Outbound,\n  z.ZodTypeDef,\n  ListResourceBenefitGrant\n> = z.object({\n  items: z.array(BenefitGrant$outboundSchema),\n  pagination: Pagination$outboundSchema,\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace ListResourceBenefitGrant$ {\n  /** @deprecated use `ListResourceBenefitGrant$inboundSchema` instead. */\n  export const inboundSchema = ListResourceBenefitGrant$inboundSchema;\n  /** @deprecated use `ListResourceBenefitGrant$outboundSchema` instead. */\n  export const outboundSchema = ListResourceBenefitGrant$outboundSchema;\n  /** @deprecated use `ListResourceBenefitGrant$Outbound` instead. */\n  export type Outbound = ListResourceBenefitGrant$Outbound;\n}\n\nexport function listResourceBenefitGrantToJSON(\n  listResourceBenefitGrant: ListResourceBenefitGrant,\n): string {\n  return JSON.stringify(\n    ListResourceBenefitGrant$outboundSchema.parse(listResourceBenefitGrant),\n  );\n}\n\nexport function listResourceBenefitGrantFromJSON(\n  jsonString: string,\n): SafeParseResult<ListResourceBenefitGrant, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => ListResourceBenefitGrant$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'ListResourceBenefitGrant' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;AAGH,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,0BAA0B,EAE1B,2BAA2B,GAC5B,MAAM,mBAAmB,CAAC;AAC3B,OAAO,EAEL,wBAAwB,EAExB,yBAAyB,GAC1B,MAAM,iBAAiB,CAAC;AAfzB,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;;;;AAuBlB,MAAM,sCAAsC,GAI/C,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,KAAK,+LAAC,6BAA0B,CAAC;IAC1C,UAAU,8LAAE,2BAAwB;CACrC,CAAC,CAAC;AASI,MAAM,uCAAuC,GAIhD,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,KAAK,+LAAC,8BAA2B,CAAC;IAC3C,UAAU,8LAAE,4BAAyB;CACtC,CAAC,CAAC;AAMG,IAAW,yBAAyB,CAOzC;AAPD,CAAA,SAAiB,yBAAyB;IACxC,sEAAA,EAAwE,CAC3D,0BAAA,aAAa,GAAG,sCAAsC,CAAC;IACpE,uEAAA,EAAyE,CAC5D,0BAAA,cAAc,GAAG,uCAAuC,CAAC;AAGxE,CAAC,EAPgB,yBAAyB,IAAA,CAAzB,yBAAyB,GAAA,CAAA,CAAA,GAOzC;AAEK,SAAU,8BAA8B,CAC5C,wBAAkD;IAElD,OAAO,IAAI,CAAC,SAAS,CACnB,uCAAuC,CAAC,KAAK,CAAC,wBAAwB,CAAC,CACxE,CAAC;AACJ,CAAC;AAEK,SAAU,gCAAgC,CAC9C,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,qCAAuC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAClE,CAAA,oDAAA,CAAsD,CACvD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 3118, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3124, "column": 0}, "map": {"version":3,"file":"benefitsortproperty.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/benefitsortproperty.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { ClosedEnum } from \"../../types/enums.js\";\n\nexport const BenefitSortProperty = {\n  CreatedAt: \"created_at\",\n  MinusCreatedAt: \"-created_at\",\n  Description: \"description\",\n  MinusDescription: \"-description\",\n} as const;\nexport type BenefitSortProperty = ClosedEnum<typeof BenefitSortProperty>;\n\n/** @internal */\nexport const BenefitSortProperty$inboundSchema: z.ZodNativeEnum<\n  typeof BenefitSortProperty\n> = z.nativeEnum(BenefitSortProperty);\n\n/** @internal */\nexport const BenefitSortProperty$outboundSchema: z.ZodNativeEnum<\n  typeof BenefitSortProperty\n> = BenefitSortProperty$inboundSchema;\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitSortProperty$ {\n  /** @deprecated use `BenefitSortProperty$inboundSchema` instead. */\n  export const inboundSchema = BenefitSortProperty$inboundSchema;\n  /** @deprecated use `BenefitSortProperty$outboundSchema` instead. */\n  export const outboundSchema = BenefitSortProperty$outboundSchema;\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;AAGlB,MAAM,mBAAmB,GAAG;IACjC,SAAS,EAAE,YAAY;IACvB,cAAc,EAAE,aAAa;IAC7B,WAAW,EAAE,aAAa;IAC1B,gBAAgB,EAAE,cAAc;CACxB,CAAC;AAIJ,MAAM,iCAAiC,GAE1C,CAAC,6IAAC,UAAU,CAAC,mBAAmB,CAAC,CAAC;AAG/B,MAAM,kCAAkC,GAE3C,iCAAiC,CAAC;AAMhC,IAAW,oBAAoB,CAKpC;AALD,CAAA,SAAiB,oBAAoB;IACnC,iEAAA,EAAmE,CACtD,qBAAA,aAAa,GAAG,iCAAiC,CAAC;IAC/D,kEAAA,EAAoE,CACvD,qBAAA,cAAc,GAAG,kCAAkC,CAAC;AACnE,CAAC,EALgB,oBAAoB,IAAA,CAApB,oBAAoB,GAAA,CAAA,CAAA,GAKpC","ignoreList":[0]}},
    {"offset": {"line": 3148, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3154, "column": 0}, "map": {"version":3,"file":"benefittype.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/benefittype.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { ClosedEnum } from \"../../types/enums.js\";\n\nexport const BenefitType = {\n  Custom: \"custom\",\n  Discord: \"discord\",\n  GithubRepository: \"github_repository\",\n  Downloadables: \"downloadables\",\n  LicenseKeys: \"license_keys\",\n  MeterCredit: \"meter_credit\",\n} as const;\nexport type BenefitType = ClosedEnum<typeof BenefitType>;\n\n/** @internal */\nexport const BenefitType$inboundSchema: z.ZodNativeEnum<typeof BenefitType> = z\n  .nativeEnum(BenefitType);\n\n/** @internal */\nexport const BenefitType$outboundSchema: z.ZodNativeEnum<typeof BenefitType> =\n  BenefitType$inboundSchema;\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitType$ {\n  /** @deprecated use `BenefitType$inboundSchema` instead. */\n  export const inboundSchema = BenefitType$inboundSchema;\n  /** @deprecated use `BenefitType$outboundSchema` instead. */\n  export const outboundSchema = BenefitType$outboundSchema;\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;AAGlB,MAAM,WAAW,GAAG;IACzB,MAAM,EAAE,QAAQ;IAChB,OAAO,EAAE,SAAS;IAClB,gBAAgB,EAAE,mBAAmB;IACrC,aAAa,EAAE,eAAe;IAC9B,WAAW,EAAE,cAAc;IAC3B,WAAW,EAAE,cAAc;CACnB,CAAC;AAIJ,MAAM,yBAAyB,GAAwC,CAAC,6IAC5E,UAAU,CAAC,WAAW,CAAC,CAAC;AAGpB,MAAM,0BAA0B,GACrC,yBAAyB,CAAC;AAMtB,IAAW,YAAY,CAK5B;AALD,CAAA,SAAiB,YAAY;IAC3B,yDAAA,EAA2D,CAC9C,aAAA,aAAa,GAAG,yBAAyB,CAAC;IACvD,0DAAA,EAA4D,CAC/C,aAAA,cAAc,GAAG,0BAA0B,CAAC;AAC3D,CAAC,EALgB,YAAY,IAAA,CAAZ,YAAY,GAAA,CAAA,CAAA,GAK5B","ignoreList":[0]}},
    {"offset": {"line": 3180, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3186, "column": 0}, "map": {"version":3,"file":"listresourcebenefit.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/listresourcebenefit.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  Benefit,\n  Benefit$inboundSchema,\n  Benefit$Outbound,\n  Benefit$outboundSchema,\n} from \"./benefit.js\";\nimport {\n  Pagination,\n  Pagination$inboundSchema,\n  Pagination$Outbound,\n  Pagination$outboundSchema,\n} from \"./pagination.js\";\n\nexport type ListResourceBenefit = {\n  items: Array<Benefit>;\n  pagination: Pagination;\n};\n\n/** @internal */\nexport const ListResourceBenefit$inboundSchema: z.ZodType<\n  ListResourceBenefit,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  items: z.array(Benefit$inboundSchema),\n  pagination: Pagination$inboundSchema,\n});\n\n/** @internal */\nexport type ListResourceBenefit$Outbound = {\n  items: Array<Benefit$Outbound>;\n  pagination: Pagination$Outbound;\n};\n\n/** @internal */\nexport const ListResourceBenefit$outboundSchema: z.ZodType<\n  ListResourceBenefit$Outbound,\n  z.ZodTypeDef,\n  ListResourceBenefit\n> = z.object({\n  items: z.array(Benefit$outboundSchema),\n  pagination: Pagination$outboundSchema,\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace ListResourceBenefit$ {\n  /** @deprecated use `ListResourceBenefit$inboundSchema` instead. */\n  export const inboundSchema = ListResourceBenefit$inboundSchema;\n  /** @deprecated use `ListResourceBenefit$outboundSchema` instead. */\n  export const outboundSchema = ListResourceBenefit$outboundSchema;\n  /** @deprecated use `ListResourceBenefit$Outbound` instead. */\n  export type Outbound = ListResourceBenefit$Outbound;\n}\n\nexport function listResourceBenefitToJSON(\n  listResourceBenefit: ListResourceBenefit,\n): string {\n  return JSON.stringify(\n    ListResourceBenefit$outboundSchema.parse(listResourceBenefit),\n  );\n}\n\nexport function listResourceBenefitFromJSON(\n  jsonString: string,\n): SafeParseResult<ListResourceBenefit, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => ListResourceBenefit$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'ListResourceBenefit' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;AAGH,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,qBAAqB,EAErB,sBAAsB,GACvB,MAAM,cAAc,CAAC;AACtB,OAAO,EAEL,wBAAwB,EAExB,yBAAyB,GAC1B,MAAM,iBAAiB,CAAC;AAfzB,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;;;;AAuBlB,MAAM,iCAAiC,GAI1C,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,KAAK,0LAAC,wBAAqB,CAAC;IACrC,UAAU,8LAAE,2BAAwB;CACrC,CAAC,CAAC;AASI,MAAM,kCAAkC,GAI3C,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,KAAK,0LAAC,yBAAsB,CAAC;IACtC,UAAU,8LAAE,4BAAyB;CACtC,CAAC,CAAC;AAMG,IAAW,oBAAoB,CAOpC;AAPD,CAAA,SAAiB,oBAAoB;IACnC,iEAAA,EAAmE,CACtD,qBAAA,aAAa,GAAG,iCAAiC,CAAC;IAC/D,kEAAA,EAAoE,CACvD,qBAAA,cAAc,GAAG,kCAAkC,CAAC;AAGnE,CAAC,EAPgB,oBAAoB,IAAA,CAApB,oBAAoB,GAAA,CAAA,CAAA,GAOpC;AAEK,SAAU,yBAAyB,CACvC,mBAAwC;IAExC,OAAO,IAAI,CAAC,SAAS,CACnB,kCAAkC,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAC9D,CAAC;AACJ,CAAC;AAEK,SAAU,2BAA2B,CACzC,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,gCAAkC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC7D,CAAA,+CAAA,CAAiD,CAClD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 3223, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3229, "column": 0}, "map": {"version":3,"file":"subscriptionslist.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/subscriptionslist.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport type MetadataQuery =\n  | string\n  | number\n  | boolean\n  | Array<string>\n  | Array<number>\n  | Array<boolean>;\n\n/** @internal */\nexport const MetadataQuery$inboundSchema: z.ZodType<\n  MetadataQuery,\n  z.ZodTypeDef,\n  unknown\n> = z.union([\n  z.string(),\n  z.number().int(),\n  z.boolean(),\n  z.array(z.string()),\n  z.array(z.number().int()),\n  z.array(z.boolean()),\n]);\n\n/** @internal */\nexport type MetadataQuery$Outbound =\n  | string\n  | number\n  | boolean\n  | Array<string>\n  | Array<number>\n  | Array<boolean>;\n\n/** @internal */\nexport const MetadataQuery$outboundSchema: z.ZodType<\n  MetadataQuery$Outbound,\n  z.ZodTypeDef,\n  MetadataQuery\n> = z.union([\n  z.string(),\n  z.number().int(),\n  z.boolean(),\n  z.array(z.string()),\n  z.array(z.number().int()),\n  z.array(z.boolean()),\n]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace MetadataQuery$ {\n  /** @deprecated use `MetadataQuery$inboundSchema` instead. */\n  export const inboundSchema = MetadataQuery$inboundSchema;\n  /** @deprecated use `MetadataQuery$outboundSchema` instead. */\n  export const outboundSchema = MetadataQuery$outboundSchema;\n  /** @deprecated use `MetadataQuery$Outbound` instead. */\n  export type Outbound = MetadataQuery$Outbound;\n}\n\nexport function metadataQueryToJSON(metadataQuery: MetadataQuery): string {\n  return JSON.stringify(MetadataQuery$outboundSchema.parse(metadataQuery));\n}\n\nexport function metadataQueryFromJSON(\n  jsonString: string,\n): SafeParseResult<MetadataQuery, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => MetadataQuery$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'MetadataQuery' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;;;;AAa1C,MAAM,2BAA2B,GAIpC,CAAC,6IAAC,KAAK,CAAC;IACV,CAAC,6IAAC,MAAM,EAAE;IACV,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAChB,CAAC,6IAAC,OAAO,EAAE;IACX,CAAC,6IAAC,KAAK,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;IACnB,CAAC,6IAAC,KAAK,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC;IACzB,CAAC,6IAAC,KAAK,CAAC,CAAC,6IAAC,OAAO,EAAE,CAAC;CACrB,CAAC,CAAC;AAYI,MAAM,4BAA4B,GAIrC,CAAC,6IAAC,KAAK,CAAC;IACV,CAAC,6IAAC,MAAM,EAAE;IACV,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAChB,CAAC,6IAAC,OAAO,EAAE;IACX,CAAC,6IAAC,KAAK,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;IACnB,CAAC,6IAAC,KAAK,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC;IACzB,CAAC,6IAAC,KAAK,CAAC,CAAC,6IAAC,OAAO,EAAE,CAAC;CACrB,CAAC,CAAC;AAMG,IAAW,cAAc,CAO9B;AAPD,CAAA,SAAiB,cAAc;IAC7B,2DAAA,EAA6D,CAChD,eAAA,aAAa,GAAG,2BAA2B,CAAC;IACzD,4DAAA,EAA8D,CACjD,eAAA,cAAc,GAAG,4BAA4B,CAAC;AAG7D,CAAC,EAPgB,cAAc,IAAA,CAAd,cAAc,GAAA,CAAA,CAAA,GAO9B;AAEK,SAAU,mBAAmB,CAAC,aAA4B;IAC9D,OAAO,IAAI,CAAC,SAAS,CAAC,4BAA4B,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC;AAC3E,CAAC;AAEK,SAAU,qBAAqB,CACnC,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,0BAA4B,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACvD,CAAA,yCAAA,CAA2C,CAC5C,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 3270, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3276, "column": 0}, "map": {"version":3,"file":"benefitcustomupdate.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/benefitcustomupdate.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  BenefitCustomProperties,\n  BenefitCustomProperties$inboundSchema,\n  BenefitCustomProperties$Outbound,\n  BenefitCustomProperties$outboundSchema,\n} from \"./benefitcustomproperties.js\";\n\nexport type BenefitCustomUpdateMetadata = string | number | number | boolean;\n\nexport type BenefitCustomUpdate = {\n  /**\n   * Key-value object allowing you to store additional information.\n   *\n   * @remarks\n   *\n   * The key must be a string with a maximum length of **40 characters**.\n   * The value must be either:\n   *\n   * * A string with a maximum length of **500 characters**\n   * * An integer\n   * * A floating-point number\n   * * A boolean\n   *\n   * You can store up to **50 key-value pairs**.\n   */\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  /**\n   * The description of the benefit. Will be displayed on products having this benefit.\n   */\n  description?: string | null | undefined;\n  type?: \"custom\" | undefined;\n  properties?: BenefitCustomProperties | null | undefined;\n};\n\n/** @internal */\nexport const BenefitCustomUpdateMetadata$inboundSchema: z.ZodType<\n  BenefitCustomUpdateMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type BenefitCustomUpdateMetadata$Outbound =\n  | string\n  | number\n  | number\n  | boolean;\n\n/** @internal */\nexport const BenefitCustomUpdateMetadata$outboundSchema: z.ZodType<\n  BenefitCustomUpdateMetadata$Outbound,\n  z.ZodTypeDef,\n  BenefitCustomUpdateMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitCustomUpdateMetadata$ {\n  /** @deprecated use `BenefitCustomUpdateMetadata$inboundSchema` instead. */\n  export const inboundSchema = BenefitCustomUpdateMetadata$inboundSchema;\n  /** @deprecated use `BenefitCustomUpdateMetadata$outboundSchema` instead. */\n  export const outboundSchema = BenefitCustomUpdateMetadata$outboundSchema;\n  /** @deprecated use `BenefitCustomUpdateMetadata$Outbound` instead. */\n  export type Outbound = BenefitCustomUpdateMetadata$Outbound;\n}\n\nexport function benefitCustomUpdateMetadataToJSON(\n  benefitCustomUpdateMetadata: BenefitCustomUpdateMetadata,\n): string {\n  return JSON.stringify(\n    BenefitCustomUpdateMetadata$outboundSchema.parse(\n      benefitCustomUpdateMetadata,\n    ),\n  );\n}\n\nexport function benefitCustomUpdateMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitCustomUpdateMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => BenefitCustomUpdateMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitCustomUpdateMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const BenefitCustomUpdate$inboundSchema: z.ZodType<\n  BenefitCustomUpdate,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  description: z.nullable(z.string()).optional(),\n  type: z.literal(\"custom\").optional(),\n  properties: z.nullable(BenefitCustomProperties$inboundSchema).optional(),\n});\n\n/** @internal */\nexport type BenefitCustomUpdate$Outbound = {\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  description?: string | null | undefined;\n  type: \"custom\";\n  properties?: BenefitCustomProperties$Outbound | null | undefined;\n};\n\n/** @internal */\nexport const BenefitCustomUpdate$outboundSchema: z.ZodType<\n  BenefitCustomUpdate$Outbound,\n  z.ZodTypeDef,\n  BenefitCustomUpdate\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  description: z.nullable(z.string()).optional(),\n  type: z.literal(\"custom\").default(\"custom\" as const),\n  properties: z.nullable(BenefitCustomProperties$outboundSchema).optional(),\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitCustomUpdate$ {\n  /** @deprecated use `BenefitCustomUpdate$inboundSchema` instead. */\n  export const inboundSchema = BenefitCustomUpdate$inboundSchema;\n  /** @deprecated use `BenefitCustomUpdate$outboundSchema` instead. */\n  export const outboundSchema = BenefitCustomUpdate$outboundSchema;\n  /** @deprecated use `BenefitCustomUpdate$Outbound` instead. */\n  export type Outbound = BenefitCustomUpdate$Outbound;\n}\n\nexport function benefitCustomUpdateToJSON(\n  benefitCustomUpdate: BenefitCustomUpdate,\n): string {\n  return JSON.stringify(\n    BenefitCustomUpdate$outboundSchema.parse(benefitCustomUpdate),\n  );\n}\n\nexport function benefitCustomUpdateFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitCustomUpdate, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => BenefitCustomUpdate$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitCustomUpdate' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3353, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3359, "column": 0}, "map": {"version":3,"file":"benefitdiscordupdate.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/benefitdiscordupdate.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  BenefitDiscordCreateProperties,\n  BenefitDiscordCreateProperties$inboundSchema,\n  BenefitDiscordCreateProperties$Outbound,\n  BenefitDiscordCreateProperties$outboundSchema,\n} from \"./benefitdiscordcreateproperties.js\";\n\nexport type BenefitDiscordUpdateMetadata = string | number | number | boolean;\n\nexport type BenefitDiscordUpdate = {\n  /**\n   * Key-value object allowing you to store additional information.\n   *\n   * @remarks\n   *\n   * The key must be a string with a maximum length of **40 characters**.\n   * The value must be either:\n   *\n   * * A string with a maximum length of **500 characters**\n   * * An integer\n   * * A floating-point number\n   * * A boolean\n   *\n   * You can store up to **50 key-value pairs**.\n   */\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  /**\n   * The description of the benefit. Will be displayed on products having this benefit.\n   */\n  description?: string | null | undefined;\n  type?: \"discord\" | undefined;\n  properties?: BenefitDiscordCreateProperties | null | undefined;\n};\n\n/** @internal */\nexport const BenefitDiscordUpdateMetadata$inboundSchema: z.ZodType<\n  BenefitDiscordUpdateMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type BenefitDiscordUpdateMetadata$Outbound =\n  | string\n  | number\n  | number\n  | boolean;\n\n/** @internal */\nexport const BenefitDiscordUpdateMetadata$outboundSchema: z.ZodType<\n  BenefitDiscordUpdateMetadata$Outbound,\n  z.ZodTypeDef,\n  BenefitDiscordUpdateMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitDiscordUpdateMetadata$ {\n  /** @deprecated use `BenefitDiscordUpdateMetadata$inboundSchema` instead. */\n  export const inboundSchema = BenefitDiscordUpdateMetadata$inboundSchema;\n  /** @deprecated use `BenefitDiscordUpdateMetadata$outboundSchema` instead. */\n  export const outboundSchema = BenefitDiscordUpdateMetadata$outboundSchema;\n  /** @deprecated use `BenefitDiscordUpdateMetadata$Outbound` instead. */\n  export type Outbound = BenefitDiscordUpdateMetadata$Outbound;\n}\n\nexport function benefitDiscordUpdateMetadataToJSON(\n  benefitDiscordUpdateMetadata: BenefitDiscordUpdateMetadata,\n): string {\n  return JSON.stringify(\n    BenefitDiscordUpdateMetadata$outboundSchema.parse(\n      benefitDiscordUpdateMetadata,\n    ),\n  );\n}\n\nexport function benefitDiscordUpdateMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitDiscordUpdateMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => BenefitDiscordUpdateMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitDiscordUpdateMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const BenefitDiscordUpdate$inboundSchema: z.ZodType<\n  BenefitDiscordUpdate,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  description: z.nullable(z.string()).optional(),\n  type: z.literal(\"discord\").optional(),\n  properties: z.nullable(BenefitDiscordCreateProperties$inboundSchema)\n    .optional(),\n});\n\n/** @internal */\nexport type BenefitDiscordUpdate$Outbound = {\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  description?: string | null | undefined;\n  type: \"discord\";\n  properties?: BenefitDiscordCreateProperties$Outbound | null | undefined;\n};\n\n/** @internal */\nexport const BenefitDiscordUpdate$outboundSchema: z.ZodType<\n  BenefitDiscordUpdate$Outbound,\n  z.ZodTypeDef,\n  BenefitDiscordUpdate\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  description: z.nullable(z.string()).optional(),\n  type: z.literal(\"discord\").default(\"discord\" as const),\n  properties: z.nullable(BenefitDiscordCreateProperties$outboundSchema)\n    .optional(),\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitDiscordUpdate$ {\n  /** @deprecated use `BenefitDiscordUpdate$inboundSchema` instead. */\n  export const inboundSchema = BenefitDiscordUpdate$inboundSchema;\n  /** @deprecated use `BenefitDiscordUpdate$outboundSchema` instead. */\n  export const outboundSchema = BenefitDiscordUpdate$outboundSchema;\n  /** @deprecated use `BenefitDiscordUpdate$Outbound` instead. */\n  export type Outbound = BenefitDiscordUpdate$Outbound;\n}\n\nexport function benefitDiscordUpdateToJSON(\n  benefitDiscordUpdate: BenefitDiscordUpdate,\n): string {\n  return JSON.stringify(\n    BenefitDiscordUpdate$outboundSchema.parse(benefitDiscordUpdate),\n  );\n}\n\nexport function benefitDiscordUpdateFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitDiscordUpdate, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => BenefitDiscordUpdate$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitDiscordUpdate' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3436, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3442, "column": 0}, "map": {"version":3,"file":"benefitdownloadablesupdate.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/benefitdownloadablesupdate.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  BenefitDownloadablesCreateProperties,\n  BenefitDownloadablesCreateProperties$inboundSchema,\n  BenefitDownloadablesCreateProperties$Outbound,\n  BenefitDownloadablesCreateProperties$outboundSchema,\n} from \"./benefitdownloadablescreateproperties.js\";\n\nexport type BenefitDownloadablesUpdateMetadata =\n  | string\n  | number\n  | number\n  | boolean;\n\nexport type BenefitDownloadablesUpdate = {\n  /**\n   * Key-value object allowing you to store additional information.\n   *\n   * @remarks\n   *\n   * The key must be a string with a maximum length of **40 characters**.\n   * The value must be either:\n   *\n   * * A string with a maximum length of **500 characters**\n   * * An integer\n   * * A floating-point number\n   * * A boolean\n   *\n   * You can store up to **50 key-value pairs**.\n   */\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  /**\n   * The description of the benefit. Will be displayed on products having this benefit.\n   */\n  description?: string | null | undefined;\n  type?: \"downloadables\" | undefined;\n  properties?: BenefitDownloadablesCreateProperties | null | undefined;\n};\n\n/** @internal */\nexport const BenefitDownloadablesUpdateMetadata$inboundSchema: z.ZodType<\n  BenefitDownloadablesUpdateMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type BenefitDownloadablesUpdateMetadata$Outbound =\n  | string\n  | number\n  | number\n  | boolean;\n\n/** @internal */\nexport const BenefitDownloadablesUpdateMetadata$outboundSchema: z.ZodType<\n  BenefitDownloadablesUpdateMetadata$Outbound,\n  z.ZodTypeDef,\n  BenefitDownloadablesUpdateMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitDownloadablesUpdateMetadata$ {\n  /** @deprecated use `BenefitDownloadablesUpdateMetadata$inboundSchema` instead. */\n  export const inboundSchema = BenefitDownloadablesUpdateMetadata$inboundSchema;\n  /** @deprecated use `BenefitDownloadablesUpdateMetadata$outboundSchema` instead. */\n  export const outboundSchema =\n    BenefitDownloadablesUpdateMetadata$outboundSchema;\n  /** @deprecated use `BenefitDownloadablesUpdateMetadata$Outbound` instead. */\n  export type Outbound = BenefitDownloadablesUpdateMetadata$Outbound;\n}\n\nexport function benefitDownloadablesUpdateMetadataToJSON(\n  benefitDownloadablesUpdateMetadata: BenefitDownloadablesUpdateMetadata,\n): string {\n  return JSON.stringify(\n    BenefitDownloadablesUpdateMetadata$outboundSchema.parse(\n      benefitDownloadablesUpdateMetadata,\n    ),\n  );\n}\n\nexport function benefitDownloadablesUpdateMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitDownloadablesUpdateMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) =>\n      BenefitDownloadablesUpdateMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitDownloadablesUpdateMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const BenefitDownloadablesUpdate$inboundSchema: z.ZodType<\n  BenefitDownloadablesUpdate,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  description: z.nullable(z.string()).optional(),\n  type: z.literal(\"downloadables\").optional(),\n  properties: z.nullable(BenefitDownloadablesCreateProperties$inboundSchema)\n    .optional(),\n});\n\n/** @internal */\nexport type BenefitDownloadablesUpdate$Outbound = {\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  description?: string | null | undefined;\n  type: \"downloadables\";\n  properties?: BenefitDownloadablesCreateProperties$Outbound | null | undefined;\n};\n\n/** @internal */\nexport const BenefitDownloadablesUpdate$outboundSchema: z.ZodType<\n  BenefitDownloadablesUpdate$Outbound,\n  z.ZodTypeDef,\n  BenefitDownloadablesUpdate\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  description: z.nullable(z.string()).optional(),\n  type: z.literal(\"downloadables\").default(\"downloadables\" as const),\n  properties: z.nullable(BenefitDownloadablesCreateProperties$outboundSchema)\n    .optional(),\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitDownloadablesUpdate$ {\n  /** @deprecated use `BenefitDownloadablesUpdate$inboundSchema` instead. */\n  export const inboundSchema = BenefitDownloadablesUpdate$inboundSchema;\n  /** @deprecated use `BenefitDownloadablesUpdate$outboundSchema` instead. */\n  export const outboundSchema = BenefitDownloadablesUpdate$outboundSchema;\n  /** @deprecated use `BenefitDownloadablesUpdate$Outbound` instead. */\n  export type Outbound = BenefitDownloadablesUpdate$Outbound;\n}\n\nexport function benefitDownloadablesUpdateToJSON(\n  benefitDownloadablesUpdate: BenefitDownloadablesUpdate,\n): string {\n  return JSON.stringify(\n    BenefitDownloadablesUpdate$outboundSchema.parse(benefitDownloadablesUpdate),\n  );\n}\n\nexport function benefitDownloadablesUpdateFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitDownloadablesUpdate, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => BenefitDownloadablesUpdate$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitDownloadablesUpdate' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3519, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3525, "column": 0}, "map": {"version":3,"file":"benefitgithubrepositoryupdate.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/benefitgithubrepositoryupdate.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  BenefitGitHubRepositoryCreateProperties,\n  BenefitGitHubRepositoryCreateProperties$inboundSchema,\n  BenefitGitHubRepositoryCreateProperties$Outbound,\n  BenefitGitHubRepositoryCreateProperties$outboundSchema,\n} from \"./benefitgithubrepositorycreateproperties.js\";\n\nexport type BenefitGitHubRepositoryUpdateMetadata =\n  | string\n  | number\n  | number\n  | boolean;\n\nexport type BenefitGitHubRepositoryUpdate = {\n  /**\n   * Key-value object allowing you to store additional information.\n   *\n   * @remarks\n   *\n   * The key must be a string with a maximum length of **40 characters**.\n   * The value must be either:\n   *\n   * * A string with a maximum length of **500 characters**\n   * * An integer\n   * * A floating-point number\n   * * A boolean\n   *\n   * You can store up to **50 key-value pairs**.\n   */\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  /**\n   * The description of the benefit. Will be displayed on products having this benefit.\n   */\n  description?: string | null | undefined;\n  type?: \"github_repository\" | undefined;\n  properties?: BenefitGitHubRepositoryCreateProperties | null | undefined;\n};\n\n/** @internal */\nexport const BenefitGitHubRepositoryUpdateMetadata$inboundSchema: z.ZodType<\n  BenefitGitHubRepositoryUpdateMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type BenefitGitHubRepositoryUpdateMetadata$Outbound =\n  | string\n  | number\n  | number\n  | boolean;\n\n/** @internal */\nexport const BenefitGitHubRepositoryUpdateMetadata$outboundSchema: z.ZodType<\n  BenefitGitHubRepositoryUpdateMetadata$Outbound,\n  z.ZodTypeDef,\n  BenefitGitHubRepositoryUpdateMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitGitHubRepositoryUpdateMetadata$ {\n  /** @deprecated use `BenefitGitHubRepositoryUpdateMetadata$inboundSchema` instead. */\n  export const inboundSchema =\n    BenefitGitHubRepositoryUpdateMetadata$inboundSchema;\n  /** @deprecated use `BenefitGitHubRepositoryUpdateMetadata$outboundSchema` instead. */\n  export const outboundSchema =\n    BenefitGitHubRepositoryUpdateMetadata$outboundSchema;\n  /** @deprecated use `BenefitGitHubRepositoryUpdateMetadata$Outbound` instead. */\n  export type Outbound = BenefitGitHubRepositoryUpdateMetadata$Outbound;\n}\n\nexport function benefitGitHubRepositoryUpdateMetadataToJSON(\n  benefitGitHubRepositoryUpdateMetadata: BenefitGitHubRepositoryUpdateMetadata,\n): string {\n  return JSON.stringify(\n    BenefitGitHubRepositoryUpdateMetadata$outboundSchema.parse(\n      benefitGitHubRepositoryUpdateMetadata,\n    ),\n  );\n}\n\nexport function benefitGitHubRepositoryUpdateMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitGitHubRepositoryUpdateMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) =>\n      BenefitGitHubRepositoryUpdateMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitGitHubRepositoryUpdateMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const BenefitGitHubRepositoryUpdate$inboundSchema: z.ZodType<\n  BenefitGitHubRepositoryUpdate,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  description: z.nullable(z.string()).optional(),\n  type: z.literal(\"github_repository\").optional(),\n  properties: z.nullable(BenefitGitHubRepositoryCreateProperties$inboundSchema)\n    .optional(),\n});\n\n/** @internal */\nexport type BenefitGitHubRepositoryUpdate$Outbound = {\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  description?: string | null | undefined;\n  type: \"github_repository\";\n  properties?:\n    | BenefitGitHubRepositoryCreateProperties$Outbound\n    | null\n    | undefined;\n};\n\n/** @internal */\nexport const BenefitGitHubRepositoryUpdate$outboundSchema: z.ZodType<\n  BenefitGitHubRepositoryUpdate$Outbound,\n  z.ZodTypeDef,\n  BenefitGitHubRepositoryUpdate\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  description: z.nullable(z.string()).optional(),\n  type: z.literal(\"github_repository\").default(\"github_repository\" as const),\n  properties: z.nullable(BenefitGitHubRepositoryCreateProperties$outboundSchema)\n    .optional(),\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitGitHubRepositoryUpdate$ {\n  /** @deprecated use `BenefitGitHubRepositoryUpdate$inboundSchema` instead. */\n  export const inboundSchema = BenefitGitHubRepositoryUpdate$inboundSchema;\n  /** @deprecated use `BenefitGitHubRepositoryUpdate$outboundSchema` instead. */\n  export const outboundSchema = BenefitGitHubRepositoryUpdate$outboundSchema;\n  /** @deprecated use `BenefitGitHubRepositoryUpdate$Outbound` instead. */\n  export type Outbound = BenefitGitHubRepositoryUpdate$Outbound;\n}\n\nexport function benefitGitHubRepositoryUpdateToJSON(\n  benefitGitHubRepositoryUpdate: BenefitGitHubRepositoryUpdate,\n): string {\n  return JSON.stringify(\n    BenefitGitHubRepositoryUpdate$outboundSchema.parse(\n      benefitGitHubRepositoryUpdate,\n    ),\n  );\n}\n\nexport function benefitGitHubRepositoryUpdateFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitGitHubRepositoryUpdate, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => BenefitGitHubRepositoryUpdate$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitGitHubRepositoryUpdate' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3602, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3608, "column": 0}, "map": {"version":3,"file":"benefitlicensekeysupdate.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/benefitlicensekeysupdate.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  BenefitLicenseKeysCreateProperties,\n  BenefitLicenseKeysCreateProperties$inboundSchema,\n  BenefitLicenseKeysCreateProperties$Outbound,\n  BenefitLicenseKeysCreateProperties$outboundSchema,\n} from \"./benefitlicensekeyscreateproperties.js\";\n\nexport type BenefitLicenseKeysUpdateMetadata =\n  | string\n  | number\n  | number\n  | boolean;\n\nexport type BenefitLicenseKeysUpdate = {\n  /**\n   * Key-value object allowing you to store additional information.\n   *\n   * @remarks\n   *\n   * The key must be a string with a maximum length of **40 characters**.\n   * The value must be either:\n   *\n   * * A string with a maximum length of **500 characters**\n   * * An integer\n   * * A floating-point number\n   * * A boolean\n   *\n   * You can store up to **50 key-value pairs**.\n   */\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  /**\n   * The description of the benefit. Will be displayed on products having this benefit.\n   */\n  description?: string | null | undefined;\n  type?: \"license_keys\" | undefined;\n  properties?: BenefitLicenseKeysCreateProperties | null | undefined;\n};\n\n/** @internal */\nexport const BenefitLicenseKeysUpdateMetadata$inboundSchema: z.ZodType<\n  BenefitLicenseKeysUpdateMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type BenefitLicenseKeysUpdateMetadata$Outbound =\n  | string\n  | number\n  | number\n  | boolean;\n\n/** @internal */\nexport const BenefitLicenseKeysUpdateMetadata$outboundSchema: z.ZodType<\n  BenefitLicenseKeysUpdateMetadata$Outbound,\n  z.ZodTypeDef,\n  BenefitLicenseKeysUpdateMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitLicenseKeysUpdateMetadata$ {\n  /** @deprecated use `BenefitLicenseKeysUpdateMetadata$inboundSchema` instead. */\n  export const inboundSchema = BenefitLicenseKeysUpdateMetadata$inboundSchema;\n  /** @deprecated use `BenefitLicenseKeysUpdateMetadata$outboundSchema` instead. */\n  export const outboundSchema = BenefitLicenseKeysUpdateMetadata$outboundSchema;\n  /** @deprecated use `BenefitLicenseKeysUpdateMetadata$Outbound` instead. */\n  export type Outbound = BenefitLicenseKeysUpdateMetadata$Outbound;\n}\n\nexport function benefitLicenseKeysUpdateMetadataToJSON(\n  benefitLicenseKeysUpdateMetadata: BenefitLicenseKeysUpdateMetadata,\n): string {\n  return JSON.stringify(\n    BenefitLicenseKeysUpdateMetadata$outboundSchema.parse(\n      benefitLicenseKeysUpdateMetadata,\n    ),\n  );\n}\n\nexport function benefitLicenseKeysUpdateMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitLicenseKeysUpdateMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => BenefitLicenseKeysUpdateMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitLicenseKeysUpdateMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const BenefitLicenseKeysUpdate$inboundSchema: z.ZodType<\n  BenefitLicenseKeysUpdate,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  description: z.nullable(z.string()).optional(),\n  type: z.literal(\"license_keys\").optional(),\n  properties: z.nullable(BenefitLicenseKeysCreateProperties$inboundSchema)\n    .optional(),\n});\n\n/** @internal */\nexport type BenefitLicenseKeysUpdate$Outbound = {\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  description?: string | null | undefined;\n  type: \"license_keys\";\n  properties?: BenefitLicenseKeysCreateProperties$Outbound | null | undefined;\n};\n\n/** @internal */\nexport const BenefitLicenseKeysUpdate$outboundSchema: z.ZodType<\n  BenefitLicenseKeysUpdate$Outbound,\n  z.ZodTypeDef,\n  BenefitLicenseKeysUpdate\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  description: z.nullable(z.string()).optional(),\n  type: z.literal(\"license_keys\").default(\"license_keys\" as const),\n  properties: z.nullable(BenefitLicenseKeysCreateProperties$outboundSchema)\n    .optional(),\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitLicenseKeysUpdate$ {\n  /** @deprecated use `BenefitLicenseKeysUpdate$inboundSchema` instead. */\n  export const inboundSchema = BenefitLicenseKeysUpdate$inboundSchema;\n  /** @deprecated use `BenefitLicenseKeysUpdate$outboundSchema` instead. */\n  export const outboundSchema = BenefitLicenseKeysUpdate$outboundSchema;\n  /** @deprecated use `BenefitLicenseKeysUpdate$Outbound` instead. */\n  export type Outbound = BenefitLicenseKeysUpdate$Outbound;\n}\n\nexport function benefitLicenseKeysUpdateToJSON(\n  benefitLicenseKeysUpdate: BenefitLicenseKeysUpdate,\n): string {\n  return JSON.stringify(\n    BenefitLicenseKeysUpdate$outboundSchema.parse(benefitLicenseKeysUpdate),\n  );\n}\n\nexport function benefitLicenseKeysUpdateFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitLicenseKeysUpdate, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => BenefitLicenseKeysUpdate$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitLicenseKeysUpdate' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3685, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3691, "column": 0}, "map": {"version":3,"file":"benefitmetercreditupdate.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/benefitmetercreditupdate.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  BenefitMeterCreditCreateProperties,\n  BenefitMeterCreditCreateProperties$inboundSchema,\n  BenefitMeterCreditCreateProperties$Outbound,\n  BenefitMeterCreditCreateProperties$outboundSchema,\n} from \"./benefitmetercreditcreateproperties.js\";\n\nexport type BenefitMeterCreditUpdateMetadata =\n  | string\n  | number\n  | number\n  | boolean;\n\nexport type BenefitMeterCreditUpdate = {\n  /**\n   * Key-value object allowing you to store additional information.\n   *\n   * @remarks\n   *\n   * The key must be a string with a maximum length of **40 characters**.\n   * The value must be either:\n   *\n   * * A string with a maximum length of **500 characters**\n   * * An integer\n   * * A floating-point number\n   * * A boolean\n   *\n   * You can store up to **50 key-value pairs**.\n   */\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  /**\n   * The description of the benefit. Will be displayed on products having this benefit.\n   */\n  description?: string | null | undefined;\n  type?: \"meter_credit\" | undefined;\n  properties?: BenefitMeterCreditCreateProperties | null | undefined;\n};\n\n/** @internal */\nexport const BenefitMeterCreditUpdateMetadata$inboundSchema: z.ZodType<\n  BenefitMeterCreditUpdateMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type BenefitMeterCreditUpdateMetadata$Outbound =\n  | string\n  | number\n  | number\n  | boolean;\n\n/** @internal */\nexport const BenefitMeterCreditUpdateMetadata$outboundSchema: z.ZodType<\n  BenefitMeterCreditUpdateMetadata$Outbound,\n  z.ZodTypeDef,\n  BenefitMeterCreditUpdateMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitMeterCreditUpdateMetadata$ {\n  /** @deprecated use `BenefitMeterCreditUpdateMetadata$inboundSchema` instead. */\n  export const inboundSchema = BenefitMeterCreditUpdateMetadata$inboundSchema;\n  /** @deprecated use `BenefitMeterCreditUpdateMetadata$outboundSchema` instead. */\n  export const outboundSchema = BenefitMeterCreditUpdateMetadata$outboundSchema;\n  /** @deprecated use `BenefitMeterCreditUpdateMetadata$Outbound` instead. */\n  export type Outbound = BenefitMeterCreditUpdateMetadata$Outbound;\n}\n\nexport function benefitMeterCreditUpdateMetadataToJSON(\n  benefitMeterCreditUpdateMetadata: BenefitMeterCreditUpdateMetadata,\n): string {\n  return JSON.stringify(\n    BenefitMeterCreditUpdateMetadata$outboundSchema.parse(\n      benefitMeterCreditUpdateMetadata,\n    ),\n  );\n}\n\nexport function benefitMeterCreditUpdateMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitMeterCreditUpdateMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => BenefitMeterCreditUpdateMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitMeterCreditUpdateMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const BenefitMeterCreditUpdate$inboundSchema: z.ZodType<\n  BenefitMeterCreditUpdate,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  description: z.nullable(z.string()).optional(),\n  type: z.literal(\"meter_credit\").optional(),\n  properties: z.nullable(BenefitMeterCreditCreateProperties$inboundSchema)\n    .optional(),\n});\n\n/** @internal */\nexport type BenefitMeterCreditUpdate$Outbound = {\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  description?: string | null | undefined;\n  type: \"meter_credit\";\n  properties?: BenefitMeterCreditCreateProperties$Outbound | null | undefined;\n};\n\n/** @internal */\nexport const BenefitMeterCreditUpdate$outboundSchema: z.ZodType<\n  BenefitMeterCreditUpdate$Outbound,\n  z.ZodTypeDef,\n  BenefitMeterCreditUpdate\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  description: z.nullable(z.string()).optional(),\n  type: z.literal(\"meter_credit\").default(\"meter_credit\" as const),\n  properties: z.nullable(BenefitMeterCreditCreateProperties$outboundSchema)\n    .optional(),\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitMeterCreditUpdate$ {\n  /** @deprecated use `BenefitMeterCreditUpdate$inboundSchema` instead. */\n  export const inboundSchema = BenefitMeterCreditUpdate$inboundSchema;\n  /** @deprecated use `BenefitMeterCreditUpdate$outboundSchema` instead. */\n  export const outboundSchema = BenefitMeterCreditUpdate$outboundSchema;\n  /** @deprecated use `BenefitMeterCreditUpdate$Outbound` instead. */\n  export type Outbound = BenefitMeterCreditUpdate$Outbound;\n}\n\nexport function benefitMeterCreditUpdateToJSON(\n  benefitMeterCreditUpdate: BenefitMeterCreditUpdate,\n): string {\n  return JSON.stringify(\n    BenefitMeterCreditUpdate$outboundSchema.parse(benefitMeterCreditUpdate),\n  );\n}\n\nexport function benefitMeterCreditUpdateFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitMeterCreditUpdate, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => BenefitMeterCreditUpdate$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitMeterCreditUpdate' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3768, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3774, "column": 0}, "map": {"version":3,"file":"benefitpublic.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/benefitpublic.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  BenefitType,\n  BenefitType$inboundSchema,\n  BenefitType$outboundSchema,\n} from \"./benefittype.js\";\n\nexport type BenefitPublic = {\n  /**\n   * The ID of the benefit.\n   */\n  id: string;\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  type: BenefitType;\n  /**\n   * The description of the benefit.\n   */\n  description: string;\n  /**\n   * Whether the benefit is selectable when creating a product.\n   */\n  selectable: boolean;\n  /**\n   * Whether the benefit is deletable.\n   */\n  deletable: boolean;\n  /**\n   * The ID of the organization owning the benefit.\n   */\n  organizationId: string;\n};\n\n/** @internal */\nexport const BenefitPublic$inboundSchema: z.ZodType<\n  BenefitPublic,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  id: z.string(),\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  type: BenefitType$inboundSchema,\n  description: z.string(),\n  selectable: z.boolean(),\n  deletable: z.boolean(),\n  organization_id: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"organization_id\": \"organizationId\",\n  });\n});\n\n/** @internal */\nexport type BenefitPublic$Outbound = {\n  id: string;\n  created_at: string;\n  modified_at: string | null;\n  type: string;\n  description: string;\n  selectable: boolean;\n  deletable: boolean;\n  organization_id: string;\n};\n\n/** @internal */\nexport const BenefitPublic$outboundSchema: z.ZodType<\n  BenefitPublic$Outbound,\n  z.ZodTypeDef,\n  BenefitPublic\n> = z.object({\n  id: z.string(),\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  type: BenefitType$outboundSchema,\n  description: z.string(),\n  selectable: z.boolean(),\n  deletable: z.boolean(),\n  organizationId: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    organizationId: \"organization_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitPublic$ {\n  /** @deprecated use `BenefitPublic$inboundSchema` instead. */\n  export const inboundSchema = BenefitPublic$inboundSchema;\n  /** @deprecated use `BenefitPublic$outboundSchema` instead. */\n  export const outboundSchema = BenefitPublic$outboundSchema;\n  /** @deprecated use `BenefitPublic$Outbound` instead. */\n  export type Outbound = BenefitPublic$Outbound;\n}\n\nexport function benefitPublicToJSON(benefitPublic: BenefitPublic): string {\n  return JSON.stringify(BenefitPublic$outboundSchema.parse(benefitPublic));\n}\n\nexport function benefitPublicFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitPublic, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => BenefitPublic$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitPublic' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3839, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3845, "column": 0}, "map": {"version":3,"file":"subscriptionrecurringinterval.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/subscriptionrecurringinterval.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { ClosedEnum } from \"../../types/enums.js\";\n\nexport const SubscriptionRecurringInterval = {\n  Month: \"month\",\n  Year: \"year\",\n} as const;\nexport type SubscriptionRecurringInterval = ClosedEnum<\n  typeof SubscriptionRecurringInterval\n>;\n\n/** @internal */\nexport const SubscriptionRecurringInterval$inboundSchema: z.ZodNativeEnum<\n  typeof SubscriptionRecurringInterval\n> = z.nativeEnum(SubscriptionRecurringInterval);\n\n/** @internal */\nexport const SubscriptionRecurringInterval$outboundSchema: z.ZodNativeEnum<\n  typeof SubscriptionRecurringInterval\n> = SubscriptionRecurringInterval$inboundSchema;\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace SubscriptionRecurringInterval$ {\n  /** @deprecated use `SubscriptionRecurringInterval$inboundSchema` instead. */\n  export const inboundSchema = SubscriptionRecurringInterval$inboundSchema;\n  /** @deprecated use `SubscriptionRecurringInterval$outboundSchema` instead. */\n  export const outboundSchema = SubscriptionRecurringInterval$outboundSchema;\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;AAGlB,MAAM,6BAA6B,GAAG;IAC3C,KAAK,EAAE,OAAO;IACd,IAAI,EAAE,MAAM;CACJ,CAAC;AAMJ,MAAM,2CAA2C,GAEpD,CAAC,6IAAC,UAAU,CAAC,6BAA6B,CAAC,CAAC;AAGzC,MAAM,4CAA4C,GAErD,2CAA2C,CAAC;AAM1C,IAAW,8BAA8B,CAK9C;AALD,CAAA,SAAiB,8BAA8B;IAC7C,2EAAA,EAA6E,CAChE,+BAAA,aAAa,GAAG,2CAA2C,CAAC;IACzE,4EAAA,EAA8E,CACjE,+BAAA,cAAc,GAAG,4CAA4C,CAAC;AAC7E,CAAC,EALgB,8BAA8B,IAAA,CAA9B,8BAA8B,GAAA,CAAA,CAAA,GAK9C","ignoreList":[0]}},
    {"offset": {"line": 3867, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3873, "column": 0}, "map": {"version":3,"file":"legacyrecurringproductpricecustom.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/legacyrecurringproductpricecustom.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  SubscriptionRecurringInterval,\n  SubscriptionRecurringInterval$inboundSchema,\n  SubscriptionRecurringInterval$outboundSchema,\n} from \"./subscriptionrecurringinterval.js\";\n\n/**\n * A pay-what-you-want recurring price for a product, i.e. a subscription.\n *\n * @remarks\n *\n * **Deprecated**: The recurring interval should be set on the product itself.\n */\nexport type LegacyRecurringProductPriceCustom = {\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  /**\n   * The ID of the price.\n   */\n  id: string;\n  amountType?: \"custom\" | undefined;\n  /**\n   * Whether the price is archived and no longer available.\n   */\n  isArchived: boolean;\n  /**\n   * The ID of the product owning the price.\n   */\n  productId: string;\n  /**\n   * The type of the price.\n   */\n  type?: \"recurring\" | undefined;\n  recurringInterval: SubscriptionRecurringInterval;\n  /**\n   * The currency.\n   */\n  priceCurrency: string;\n  /**\n   * The minimum amount the customer can pay.\n   */\n  minimumAmount: number | null;\n  /**\n   * The maximum amount the customer can pay.\n   */\n  maximumAmount: number | null;\n  /**\n   * The initial amount shown to the customer.\n   */\n  presetAmount: number | null;\n  legacy?: true | undefined;\n};\n\n/** @internal */\nexport const LegacyRecurringProductPriceCustom$inboundSchema: z.ZodType<\n  LegacyRecurringProductPriceCustom,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  id: z.string(),\n  amount_type: z.literal(\"custom\").optional(),\n  is_archived: z.boolean(),\n  product_id: z.string(),\n  type: z.literal(\"recurring\").optional(),\n  recurring_interval: SubscriptionRecurringInterval$inboundSchema,\n  price_currency: z.string(),\n  minimum_amount: z.nullable(z.number().int()),\n  maximum_amount: z.nullable(z.number().int()),\n  preset_amount: z.nullable(z.number().int()),\n  legacy: z.literal(true).optional(),\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"amount_type\": \"amountType\",\n    \"is_archived\": \"isArchived\",\n    \"product_id\": \"productId\",\n    \"recurring_interval\": \"recurringInterval\",\n    \"price_currency\": \"priceCurrency\",\n    \"minimum_amount\": \"minimumAmount\",\n    \"maximum_amount\": \"maximumAmount\",\n    \"preset_amount\": \"presetAmount\",\n  });\n});\n\n/** @internal */\nexport type LegacyRecurringProductPriceCustom$Outbound = {\n  created_at: string;\n  modified_at: string | null;\n  id: string;\n  amount_type: \"custom\";\n  is_archived: boolean;\n  product_id: string;\n  type: \"recurring\";\n  recurring_interval: string;\n  price_currency: string;\n  minimum_amount: number | null;\n  maximum_amount: number | null;\n  preset_amount: number | null;\n  legacy: true;\n};\n\n/** @internal */\nexport const LegacyRecurringProductPriceCustom$outboundSchema: z.ZodType<\n  LegacyRecurringProductPriceCustom$Outbound,\n  z.ZodTypeDef,\n  LegacyRecurringProductPriceCustom\n> = z.object({\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  id: z.string(),\n  amountType: z.literal(\"custom\").default(\"custom\" as const),\n  isArchived: z.boolean(),\n  productId: z.string(),\n  type: z.literal(\"recurring\").default(\"recurring\" as const),\n  recurringInterval: SubscriptionRecurringInterval$outboundSchema,\n  priceCurrency: z.string(),\n  minimumAmount: z.nullable(z.number().int()),\n  maximumAmount: z.nullable(z.number().int()),\n  presetAmount: z.nullable(z.number().int()),\n  legacy: z.literal(true).default(true as const),\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    amountType: \"amount_type\",\n    isArchived: \"is_archived\",\n    productId: \"product_id\",\n    recurringInterval: \"recurring_interval\",\n    priceCurrency: \"price_currency\",\n    minimumAmount: \"minimum_amount\",\n    maximumAmount: \"maximum_amount\",\n    presetAmount: \"preset_amount\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace LegacyRecurringProductPriceCustom$ {\n  /** @deprecated use `LegacyRecurringProductPriceCustom$inboundSchema` instead. */\n  export const inboundSchema = LegacyRecurringProductPriceCustom$inboundSchema;\n  /** @deprecated use `LegacyRecurringProductPriceCustom$outboundSchema` instead. */\n  export const outboundSchema =\n    LegacyRecurringProductPriceCustom$outboundSchema;\n  /** @deprecated use `LegacyRecurringProductPriceCustom$Outbound` instead. */\n  export type Outbound = LegacyRecurringProductPriceCustom$Outbound;\n}\n\nexport function legacyRecurringProductPriceCustomToJSON(\n  legacyRecurringProductPriceCustom: LegacyRecurringProductPriceCustom,\n): string {\n  return JSON.stringify(\n    LegacyRecurringProductPriceCustom$outboundSchema.parse(\n      legacyRecurringProductPriceCustom,\n    ),\n  );\n}\n\nexport function legacyRecurringProductPriceCustomFromJSON(\n  jsonString: string,\n): SafeParseResult<LegacyRecurringProductPriceCustom, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => LegacyRecurringProductPriceCustom$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'LegacyRecurringProductPriceCustom' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3962, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3968, "column": 0}, "map": {"version":3,"file":"legacyrecurringproductpricefixed.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/legacyrecurringproductpricefixed.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  SubscriptionRecurringInterval,\n  SubscriptionRecurringInterval$inboundSchema,\n  SubscriptionRecurringInterval$outboundSchema,\n} from \"./subscriptionrecurringinterval.js\";\n\n/**\n * A recurring price for a product, i.e. a subscription.\n *\n * @remarks\n *\n * **Deprecated**: The recurring interval should be set on the product itself.\n */\nexport type LegacyRecurringProductPriceFixed = {\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  /**\n   * The ID of the price.\n   */\n  id: string;\n  amountType?: \"fixed\" | undefined;\n  /**\n   * Whether the price is archived and no longer available.\n   */\n  isArchived: boolean;\n  /**\n   * The ID of the product owning the price.\n   */\n  productId: string;\n  /**\n   * The type of the price.\n   */\n  type?: \"recurring\" | undefined;\n  recurringInterval: SubscriptionRecurringInterval;\n  /**\n   * The currency.\n   */\n  priceCurrency: string;\n  /**\n   * The price in cents.\n   */\n  priceAmount: number;\n  legacy?: true | undefined;\n};\n\n/** @internal */\nexport const LegacyRecurringProductPriceFixed$inboundSchema: z.ZodType<\n  LegacyRecurringProductPriceFixed,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  id: z.string(),\n  amount_type: z.literal(\"fixed\").optional(),\n  is_archived: z.boolean(),\n  product_id: z.string(),\n  type: z.literal(\"recurring\").optional(),\n  recurring_interval: SubscriptionRecurringInterval$inboundSchema,\n  price_currency: z.string(),\n  price_amount: z.number().int(),\n  legacy: z.literal(true).optional(),\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"amount_type\": \"amountType\",\n    \"is_archived\": \"isArchived\",\n    \"product_id\": \"productId\",\n    \"recurring_interval\": \"recurringInterval\",\n    \"price_currency\": \"priceCurrency\",\n    \"price_amount\": \"priceAmount\",\n  });\n});\n\n/** @internal */\nexport type LegacyRecurringProductPriceFixed$Outbound = {\n  created_at: string;\n  modified_at: string | null;\n  id: string;\n  amount_type: \"fixed\";\n  is_archived: boolean;\n  product_id: string;\n  type: \"recurring\";\n  recurring_interval: string;\n  price_currency: string;\n  price_amount: number;\n  legacy: true;\n};\n\n/** @internal */\nexport const LegacyRecurringProductPriceFixed$outboundSchema: z.ZodType<\n  LegacyRecurringProductPriceFixed$Outbound,\n  z.ZodTypeDef,\n  LegacyRecurringProductPriceFixed\n> = z.object({\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  id: z.string(),\n  amountType: z.literal(\"fixed\").default(\"fixed\" as const),\n  isArchived: z.boolean(),\n  productId: z.string(),\n  type: z.literal(\"recurring\").default(\"recurring\" as const),\n  recurringInterval: SubscriptionRecurringInterval$outboundSchema,\n  priceCurrency: z.string(),\n  priceAmount: z.number().int(),\n  legacy: z.literal(true).default(true as const),\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    amountType: \"amount_type\",\n    isArchived: \"is_archived\",\n    productId: \"product_id\",\n    recurringInterval: \"recurring_interval\",\n    priceCurrency: \"price_currency\",\n    priceAmount: \"price_amount\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace LegacyRecurringProductPriceFixed$ {\n  /** @deprecated use `LegacyRecurringProductPriceFixed$inboundSchema` instead. */\n  export const inboundSchema = LegacyRecurringProductPriceFixed$inboundSchema;\n  /** @deprecated use `LegacyRecurringProductPriceFixed$outboundSchema` instead. */\n  export const outboundSchema = LegacyRecurringProductPriceFixed$outboundSchema;\n  /** @deprecated use `LegacyRecurringProductPriceFixed$Outbound` instead. */\n  export type Outbound = LegacyRecurringProductPriceFixed$Outbound;\n}\n\nexport function legacyRecurringProductPriceFixedToJSON(\n  legacyRecurringProductPriceFixed: LegacyRecurringProductPriceFixed,\n): string {\n  return JSON.stringify(\n    LegacyRecurringProductPriceFixed$outboundSchema.parse(\n      legacyRecurringProductPriceFixed,\n    ),\n  );\n}\n\nexport function legacyRecurringProductPriceFixedFromJSON(\n  jsonString: string,\n): SafeParseResult<LegacyRecurringProductPriceFixed, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => LegacyRecurringProductPriceFixed$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'LegacyRecurringProductPriceFixed' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 4049, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4055, "column": 0}, "map": {"version":3,"file":"legacyrecurringproductpricefree.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/legacyrecurringproductpricefree.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  SubscriptionRecurringInterval,\n  SubscriptionRecurringInterval$inboundSchema,\n  SubscriptionRecurringInterval$outboundSchema,\n} from \"./subscriptionrecurringinterval.js\";\n\n/**\n * A free recurring price for a product, i.e. a subscription.\n *\n * @remarks\n *\n * **Deprecated**: The recurring interval should be set on the product itself.\n */\nexport type LegacyRecurringProductPriceFree = {\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  /**\n   * The ID of the price.\n   */\n  id: string;\n  amountType?: \"free\" | undefined;\n  /**\n   * Whether the price is archived and no longer available.\n   */\n  isArchived: boolean;\n  /**\n   * The ID of the product owning the price.\n   */\n  productId: string;\n  /**\n   * The type of the price.\n   */\n  type?: \"recurring\" | undefined;\n  recurringInterval: SubscriptionRecurringInterval;\n  legacy?: true | undefined;\n};\n\n/** @internal */\nexport const LegacyRecurringProductPriceFree$inboundSchema: z.ZodType<\n  LegacyRecurringProductPriceFree,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  id: z.string(),\n  amount_type: z.literal(\"free\").optional(),\n  is_archived: z.boolean(),\n  product_id: z.string(),\n  type: z.literal(\"recurring\").optional(),\n  recurring_interval: SubscriptionRecurringInterval$inboundSchema,\n  legacy: z.literal(true).optional(),\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"amount_type\": \"amountType\",\n    \"is_archived\": \"isArchived\",\n    \"product_id\": \"productId\",\n    \"recurring_interval\": \"recurringInterval\",\n  });\n});\n\n/** @internal */\nexport type LegacyRecurringProductPriceFree$Outbound = {\n  created_at: string;\n  modified_at: string | null;\n  id: string;\n  amount_type: \"free\";\n  is_archived: boolean;\n  product_id: string;\n  type: \"recurring\";\n  recurring_interval: string;\n  legacy: true;\n};\n\n/** @internal */\nexport const LegacyRecurringProductPriceFree$outboundSchema: z.ZodType<\n  LegacyRecurringProductPriceFree$Outbound,\n  z.ZodTypeDef,\n  LegacyRecurringProductPriceFree\n> = z.object({\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  id: z.string(),\n  amountType: z.literal(\"free\").default(\"free\" as const),\n  isArchived: z.boolean(),\n  productId: z.string(),\n  type: z.literal(\"recurring\").default(\"recurring\" as const),\n  recurringInterval: SubscriptionRecurringInterval$outboundSchema,\n  legacy: z.literal(true).default(true as const),\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    amountType: \"amount_type\",\n    isArchived: \"is_archived\",\n    productId: \"product_id\",\n    recurringInterval: \"recurring_interval\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace LegacyRecurringProductPriceFree$ {\n  /** @deprecated use `LegacyRecurringProductPriceFree$inboundSchema` instead. */\n  export const inboundSchema = LegacyRecurringProductPriceFree$inboundSchema;\n  /** @deprecated use `LegacyRecurringProductPriceFree$outboundSchema` instead. */\n  export const outboundSchema = LegacyRecurringProductPriceFree$outboundSchema;\n  /** @deprecated use `LegacyRecurringProductPriceFree$Outbound` instead. */\n  export type Outbound = LegacyRecurringProductPriceFree$Outbound;\n}\n\nexport function legacyRecurringProductPriceFreeToJSON(\n  legacyRecurringProductPriceFree: LegacyRecurringProductPriceFree,\n): string {\n  return JSON.stringify(\n    LegacyRecurringProductPriceFree$outboundSchema.parse(\n      legacyRecurringProductPriceFree,\n    ),\n  );\n}\n\nexport function legacyRecurringProductPriceFreeFromJSON(\n  jsonString: string,\n): SafeParseResult<LegacyRecurringProductPriceFree, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => LegacyRecurringProductPriceFree$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'LegacyRecurringProductPriceFree' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 4128, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4134, "column": 0}, "map": {"version":3,"file":"legacyrecurringproductprice.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/legacyrecurringproductprice.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  LegacyRecurringProductPriceCustom,\n  LegacyRecurringProductPriceCustom$inboundSchema,\n  LegacyRecurringProductPriceCustom$Outbound,\n  LegacyRecurringProductPriceCustom$outboundSchema,\n} from \"./legacyrecurringproductpricecustom.js\";\nimport {\n  LegacyRecurringProductPriceFixed,\n  LegacyRecurringProductPriceFixed$inboundSchema,\n  LegacyRecurringProductPriceFixed$Outbound,\n  LegacyRecurringProductPriceFixed$outboundSchema,\n} from \"./legacyrecurringproductpricefixed.js\";\nimport {\n  LegacyRecurringProductPriceFree,\n  LegacyRecurringProductPriceFree$inboundSchema,\n  LegacyRecurringProductPriceFree$Outbound,\n  LegacyRecurringProductPriceFree$outboundSchema,\n} from \"./legacyrecurringproductpricefree.js\";\n\nexport type LegacyRecurringProductPrice =\n  | (LegacyRecurringProductPriceFree & { amountType: \"free\" })\n  | (LegacyRecurringProductPriceFixed & { amountType: \"fixed\" })\n  | (LegacyRecurringProductPriceCustom & { amountType: \"custom\" });\n\n/** @internal */\nexport const LegacyRecurringProductPrice$inboundSchema: z.ZodType<\n  LegacyRecurringProductPrice,\n  z.ZodTypeDef,\n  unknown\n> = z.union([\n  LegacyRecurringProductPriceFree$inboundSchema.and(\n    z.object({ amount_type: z.literal(\"free\") }).transform((v) => ({\n      amountType: v.amount_type,\n    })),\n  ),\n  LegacyRecurringProductPriceFixed$inboundSchema.and(\n    z.object({ amount_type: z.literal(\"fixed\") }).transform((v) => ({\n      amountType: v.amount_type,\n    })),\n  ),\n  LegacyRecurringProductPriceCustom$inboundSchema.and(\n    z.object({ amount_type: z.literal(\"custom\") }).transform((v) => ({\n      amountType: v.amount_type,\n    })),\n  ),\n]);\n\n/** @internal */\nexport type LegacyRecurringProductPrice$Outbound =\n  | (LegacyRecurringProductPriceFree$Outbound & { amount_type: \"free\" })\n  | (LegacyRecurringProductPriceFixed$Outbound & { amount_type: \"fixed\" })\n  | (LegacyRecurringProductPriceCustom$Outbound & { amount_type: \"custom\" });\n\n/** @internal */\nexport const LegacyRecurringProductPrice$outboundSchema: z.ZodType<\n  LegacyRecurringProductPrice$Outbound,\n  z.ZodTypeDef,\n  LegacyRecurringProductPrice\n> = z.union([\n  LegacyRecurringProductPriceFree$outboundSchema.and(\n    z.object({ amountType: z.literal(\"free\") }).transform((v) => ({\n      amount_type: v.amountType,\n    })),\n  ),\n  LegacyRecurringProductPriceFixed$outboundSchema.and(\n    z.object({ amountType: z.literal(\"fixed\") }).transform((v) => ({\n      amount_type: v.amountType,\n    })),\n  ),\n  LegacyRecurringProductPriceCustom$outboundSchema.and(\n    z.object({ amountType: z.literal(\"custom\") }).transform((v) => ({\n      amount_type: v.amountType,\n    })),\n  ),\n]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace LegacyRecurringProductPrice$ {\n  /** @deprecated use `LegacyRecurringProductPrice$inboundSchema` instead. */\n  export const inboundSchema = LegacyRecurringProductPrice$inboundSchema;\n  /** @deprecated use `LegacyRecurringProductPrice$outboundSchema` instead. */\n  export const outboundSchema = LegacyRecurringProductPrice$outboundSchema;\n  /** @deprecated use `LegacyRecurringProductPrice$Outbound` instead. */\n  export type Outbound = LegacyRecurringProductPrice$Outbound;\n}\n\nexport function legacyRecurringProductPriceToJSON(\n  legacyRecurringProductPrice: LegacyRecurringProductPrice,\n): string {\n  return JSON.stringify(\n    LegacyRecurringProductPrice$outboundSchema.parse(\n      legacyRecurringProductPrice,\n    ),\n  );\n}\n\nexport function legacyRecurringProductPriceFromJSON(\n  jsonString: string,\n): SafeParseResult<LegacyRecurringProductPrice, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => LegacyRecurringProductPrice$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'LegacyRecurringProductPrice' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 4199, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4205, "column": 0}, "map": {"version":3,"file":"productmediafileread.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/productmediafileread.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\n/**\n * File to be used as a product media file.\n */\nexport type ProductMediaFileRead = {\n  /**\n   * The ID of the object.\n   */\n  id: string;\n  organizationId: string;\n  name: string;\n  path: string;\n  mimeType: string;\n  size: number;\n  storageVersion: string | null;\n  checksumEtag: string | null;\n  checksumSha256Base64: string | null;\n  checksumSha256Hex: string | null;\n  lastModifiedAt: Date | null;\n  version: string | null;\n  service?: \"product_media\" | undefined;\n  isUploaded: boolean;\n  createdAt: Date;\n  sizeReadable: string;\n  publicUrl: string;\n};\n\n/** @internal */\nexport const ProductMediaFileRead$inboundSchema: z.ZodType<\n  ProductMediaFileRead,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  id: z.string(),\n  organization_id: z.string(),\n  name: z.string(),\n  path: z.string(),\n  mime_type: z.string(),\n  size: z.number().int(),\n  storage_version: z.nullable(z.string()),\n  checksum_etag: z.nullable(z.string()),\n  checksum_sha256_base64: z.nullable(z.string()),\n  checksum_sha256_hex: z.nullable(z.string()),\n  last_modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  version: z.nullable(z.string()),\n  service: z.literal(\"product_media\").optional(),\n  is_uploaded: z.boolean(),\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  size_readable: z.string(),\n  public_url: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    \"organization_id\": \"organizationId\",\n    \"mime_type\": \"mimeType\",\n    \"storage_version\": \"storageVersion\",\n    \"checksum_etag\": \"checksumEtag\",\n    \"checksum_sha256_base64\": \"checksumSha256Base64\",\n    \"checksum_sha256_hex\": \"checksumSha256Hex\",\n    \"last_modified_at\": \"lastModifiedAt\",\n    \"is_uploaded\": \"isUploaded\",\n    \"created_at\": \"createdAt\",\n    \"size_readable\": \"sizeReadable\",\n    \"public_url\": \"publicUrl\",\n  });\n});\n\n/** @internal */\nexport type ProductMediaFileRead$Outbound = {\n  id: string;\n  organization_id: string;\n  name: string;\n  path: string;\n  mime_type: string;\n  size: number;\n  storage_version: string | null;\n  checksum_etag: string | null;\n  checksum_sha256_base64: string | null;\n  checksum_sha256_hex: string | null;\n  last_modified_at: string | null;\n  version: string | null;\n  service: \"product_media\";\n  is_uploaded: boolean;\n  created_at: string;\n  size_readable: string;\n  public_url: string;\n};\n\n/** @internal */\nexport const ProductMediaFileRead$outboundSchema: z.ZodType<\n  ProductMediaFileRead$Outbound,\n  z.ZodTypeDef,\n  ProductMediaFileRead\n> = z.object({\n  id: z.string(),\n  organizationId: z.string(),\n  name: z.string(),\n  path: z.string(),\n  mimeType: z.string(),\n  size: z.number().int(),\n  storageVersion: z.nullable(z.string()),\n  checksumEtag: z.nullable(z.string()),\n  checksumSha256Base64: z.nullable(z.string()),\n  checksumSha256Hex: z.nullable(z.string()),\n  lastModifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  version: z.nullable(z.string()),\n  service: z.literal(\"product_media\").default(\"product_media\" as const),\n  isUploaded: z.boolean(),\n  createdAt: z.date().transform(v => v.toISOString()),\n  sizeReadable: z.string(),\n  publicUrl: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    organizationId: \"organization_id\",\n    mimeType: \"mime_type\",\n    storageVersion: \"storage_version\",\n    checksumEtag: \"checksum_etag\",\n    checksumSha256Base64: \"checksum_sha256_base64\",\n    checksumSha256Hex: \"checksum_sha256_hex\",\n    lastModifiedAt: \"last_modified_at\",\n    isUploaded: \"is_uploaded\",\n    createdAt: \"created_at\",\n    sizeReadable: \"size_readable\",\n    publicUrl: \"public_url\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace ProductMediaFileRead$ {\n  /** @deprecated use `ProductMediaFileRead$inboundSchema` instead. */\n  export const inboundSchema = ProductMediaFileRead$inboundSchema;\n  /** @deprecated use `ProductMediaFileRead$outboundSchema` instead. */\n  export const outboundSchema = ProductMediaFileRead$outboundSchema;\n  /** @deprecated use `ProductMediaFileRead$Outbound` instead. */\n  export type Outbound = ProductMediaFileRead$Outbound;\n}\n\nexport function productMediaFileReadToJSON(\n  productMediaFileRead: ProductMediaFileRead,\n): string {\n  return JSON.stringify(\n    ProductMediaFileRead$outboundSchema.parse(productMediaFileRead),\n  );\n}\n\nexport function productMediaFileReadFromJSON(\n  jsonString: string,\n): SafeParseResult<ProductMediaFileRead, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => ProductMediaFileRead$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'ProductMediaFileRead' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 4302, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4308, "column": 0}, "map": {"version":3,"file":"productpricetype.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/productpricetype.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { ClosedEnum } from \"../../types/enums.js\";\n\nexport const ProductPriceType = {\n  OneTime: \"one_time\",\n  Recurring: \"recurring\",\n} as const;\nexport type ProductPriceType = ClosedEnum<typeof ProductPriceType>;\n\n/** @internal */\nexport const ProductPriceType$inboundSchema: z.ZodNativeEnum<\n  typeof ProductPriceType\n> = z.nativeEnum(ProductPriceType);\n\n/** @internal */\nexport const ProductPriceType$outboundSchema: z.ZodNativeEnum<\n  typeof ProductPriceType\n> = ProductPriceType$inboundSchema;\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace ProductPriceType$ {\n  /** @deprecated use `ProductPriceType$inboundSchema` instead. */\n  export const inboundSchema = ProductPriceType$inboundSchema;\n  /** @deprecated use `ProductPriceType$outboundSchema` instead. */\n  export const outboundSchema = ProductPriceType$outboundSchema;\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;AAGlB,MAAM,gBAAgB,GAAG;IAC9B,OAAO,EAAE,UAAU;IACnB,SAAS,EAAE,WAAW;CACd,CAAC;AAIJ,MAAM,8BAA8B,GAEvC,CAAC,6IAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC;AAG5B,MAAM,+BAA+B,GAExC,8BAA8B,CAAC;AAM7B,IAAW,iBAAiB,CAKjC;AALD,CAAA,SAAiB,iBAAiB;IAChC,8DAAA,EAAgE,CACnD,kBAAA,aAAa,GAAG,8BAA8B,CAAC;IAC5D,+DAAA,EAAiE,CACpD,kBAAA,cAAc,GAAG,+BAA+B,CAAC;AAChE,CAAC,EALgB,iBAAiB,IAAA,CAAjB,iBAAiB,GAAA,CAAA,CAAA,GAKjC","ignoreList":[0]}},
    {"offset": {"line": 4330, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4336, "column": 0}, "map": {"version":3,"file":"productpricecustom.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/productpricecustom.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  ProductPriceType,\n  ProductPriceType$inboundSchema,\n  ProductPriceType$outboundSchema,\n} from \"./productpricetype.js\";\nimport {\n  SubscriptionRecurringInterval,\n  SubscriptionRecurringInterval$inboundSchema,\n  SubscriptionRecurringInterval$outboundSchema,\n} from \"./subscriptionrecurringinterval.js\";\n\n/**\n * A pay-what-you-want price for a product.\n */\nexport type ProductPriceCustom = {\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  /**\n   * The ID of the price.\n   */\n  id: string;\n  amountType?: \"custom\" | undefined;\n  /**\n   * Whether the price is archived and no longer available.\n   */\n  isArchived: boolean;\n  /**\n   * The ID of the product owning the price.\n   */\n  productId: string;\n  type: ProductPriceType;\n  /**\n   * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.\n   */\n  recurringInterval: SubscriptionRecurringInterval | null;\n  /**\n   * The currency.\n   */\n  priceCurrency: string;\n  /**\n   * The minimum amount the customer can pay.\n   */\n  minimumAmount: number | null;\n  /**\n   * The maximum amount the customer can pay.\n   */\n  maximumAmount: number | null;\n  /**\n   * The initial amount shown to the customer.\n   */\n  presetAmount: number | null;\n};\n\n/** @internal */\nexport const ProductPriceCustom$inboundSchema: z.ZodType<\n  ProductPriceCustom,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  id: z.string(),\n  amount_type: z.literal(\"custom\").optional(),\n  is_archived: z.boolean(),\n  product_id: z.string(),\n  type: ProductPriceType$inboundSchema,\n  recurring_interval: z.nullable(SubscriptionRecurringInterval$inboundSchema),\n  price_currency: z.string(),\n  minimum_amount: z.nullable(z.number().int()),\n  maximum_amount: z.nullable(z.number().int()),\n  preset_amount: z.nullable(z.number().int()),\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"amount_type\": \"amountType\",\n    \"is_archived\": \"isArchived\",\n    \"product_id\": \"productId\",\n    \"recurring_interval\": \"recurringInterval\",\n    \"price_currency\": \"priceCurrency\",\n    \"minimum_amount\": \"minimumAmount\",\n    \"maximum_amount\": \"maximumAmount\",\n    \"preset_amount\": \"presetAmount\",\n  });\n});\n\n/** @internal */\nexport type ProductPriceCustom$Outbound = {\n  created_at: string;\n  modified_at: string | null;\n  id: string;\n  amount_type: \"custom\";\n  is_archived: boolean;\n  product_id: string;\n  type: string;\n  recurring_interval: string | null;\n  price_currency: string;\n  minimum_amount: number | null;\n  maximum_amount: number | null;\n  preset_amount: number | null;\n};\n\n/** @internal */\nexport const ProductPriceCustom$outboundSchema: z.ZodType<\n  ProductPriceCustom$Outbound,\n  z.ZodTypeDef,\n  ProductPriceCustom\n> = z.object({\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  id: z.string(),\n  amountType: z.literal(\"custom\").default(\"custom\" as const),\n  isArchived: z.boolean(),\n  productId: z.string(),\n  type: ProductPriceType$outboundSchema,\n  recurringInterval: z.nullable(SubscriptionRecurringInterval$outboundSchema),\n  priceCurrency: z.string(),\n  minimumAmount: z.nullable(z.number().int()),\n  maximumAmount: z.nullable(z.number().int()),\n  presetAmount: z.nullable(z.number().int()),\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    amountType: \"amount_type\",\n    isArchived: \"is_archived\",\n    productId: \"product_id\",\n    recurringInterval: \"recurring_interval\",\n    priceCurrency: \"price_currency\",\n    minimumAmount: \"minimum_amount\",\n    maximumAmount: \"maximum_amount\",\n    presetAmount: \"preset_amount\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace ProductPriceCustom$ {\n  /** @deprecated use `ProductPriceCustom$inboundSchema` instead. */\n  export const inboundSchema = ProductPriceCustom$inboundSchema;\n  /** @deprecated use `ProductPriceCustom$outboundSchema` instead. */\n  export const outboundSchema = ProductPriceCustom$outboundSchema;\n  /** @deprecated use `ProductPriceCustom$Outbound` instead. */\n  export type Outbound = ProductPriceCustom$Outbound;\n}\n\nexport function productPriceCustomToJSON(\n  productPriceCustom: ProductPriceCustom,\n): string {\n  return JSON.stringify(\n    ProductPriceCustom$outboundSchema.parse(productPriceCustom),\n  );\n}\n\nexport function productPriceCustomFromJSON(\n  jsonString: string,\n): SafeParseResult<ProductPriceCustom, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => ProductPriceCustom$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'ProductPriceCustom' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 4425, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4431, "column": 0}, "map": {"version":3,"file":"productpricefixed.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/productpricefixed.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  ProductPriceType,\n  ProductPriceType$inboundSchema,\n  ProductPriceType$outboundSchema,\n} from \"./productpricetype.js\";\nimport {\n  SubscriptionRecurringInterval,\n  SubscriptionRecurringInterval$inboundSchema,\n  SubscriptionRecurringInterval$outboundSchema,\n} from \"./subscriptionrecurringinterval.js\";\n\n/**\n * A fixed price for a product.\n */\nexport type ProductPriceFixed = {\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  /**\n   * The ID of the price.\n   */\n  id: string;\n  amountType?: \"fixed\" | undefined;\n  /**\n   * Whether the price is archived and no longer available.\n   */\n  isArchived: boolean;\n  /**\n   * The ID of the product owning the price.\n   */\n  productId: string;\n  type: ProductPriceType;\n  /**\n   * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.\n   */\n  recurringInterval: SubscriptionRecurringInterval | null;\n  /**\n   * The currency.\n   */\n  priceCurrency: string;\n  /**\n   * The price in cents.\n   */\n  priceAmount: number;\n};\n\n/** @internal */\nexport const ProductPriceFixed$inboundSchema: z.ZodType<\n  ProductPriceFixed,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  id: z.string(),\n  amount_type: z.literal(\"fixed\").optional(),\n  is_archived: z.boolean(),\n  product_id: z.string(),\n  type: ProductPriceType$inboundSchema,\n  recurring_interval: z.nullable(SubscriptionRecurringInterval$inboundSchema),\n  price_currency: z.string(),\n  price_amount: z.number().int(),\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"amount_type\": \"amountType\",\n    \"is_archived\": \"isArchived\",\n    \"product_id\": \"productId\",\n    \"recurring_interval\": \"recurringInterval\",\n    \"price_currency\": \"priceCurrency\",\n    \"price_amount\": \"priceAmount\",\n  });\n});\n\n/** @internal */\nexport type ProductPriceFixed$Outbound = {\n  created_at: string;\n  modified_at: string | null;\n  id: string;\n  amount_type: \"fixed\";\n  is_archived: boolean;\n  product_id: string;\n  type: string;\n  recurring_interval: string | null;\n  price_currency: string;\n  price_amount: number;\n};\n\n/** @internal */\nexport const ProductPriceFixed$outboundSchema: z.ZodType<\n  ProductPriceFixed$Outbound,\n  z.ZodTypeDef,\n  ProductPriceFixed\n> = z.object({\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  id: z.string(),\n  amountType: z.literal(\"fixed\").default(\"fixed\" as const),\n  isArchived: z.boolean(),\n  productId: z.string(),\n  type: ProductPriceType$outboundSchema,\n  recurringInterval: z.nullable(SubscriptionRecurringInterval$outboundSchema),\n  priceCurrency: z.string(),\n  priceAmount: z.number().int(),\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    amountType: \"amount_type\",\n    isArchived: \"is_archived\",\n    productId: \"product_id\",\n    recurringInterval: \"recurring_interval\",\n    priceCurrency: \"price_currency\",\n    priceAmount: \"price_amount\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace ProductPriceFixed$ {\n  /** @deprecated use `ProductPriceFixed$inboundSchema` instead. */\n  export const inboundSchema = ProductPriceFixed$inboundSchema;\n  /** @deprecated use `ProductPriceFixed$outboundSchema` instead. */\n  export const outboundSchema = ProductPriceFixed$outboundSchema;\n  /** @deprecated use `ProductPriceFixed$Outbound` instead. */\n  export type Outbound = ProductPriceFixed$Outbound;\n}\n\nexport function productPriceFixedToJSON(\n  productPriceFixed: ProductPriceFixed,\n): string {\n  return JSON.stringify(\n    ProductPriceFixed$outboundSchema.parse(productPriceFixed),\n  );\n}\n\nexport function productPriceFixedFromJSON(\n  jsonString: string,\n): SafeParseResult<ProductPriceFixed, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => ProductPriceFixed$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'ProductPriceFixed' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 4512, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4518, "column": 0}, "map": {"version":3,"file":"productpricefree.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/productpricefree.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  ProductPriceType,\n  ProductPriceType$inboundSchema,\n  ProductPriceType$outboundSchema,\n} from \"./productpricetype.js\";\nimport {\n  SubscriptionRecurringInterval,\n  SubscriptionRecurringInterval$inboundSchema,\n  SubscriptionRecurringInterval$outboundSchema,\n} from \"./subscriptionrecurringinterval.js\";\n\n/**\n * A free price for a product.\n */\nexport type ProductPriceFree = {\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  /**\n   * The ID of the price.\n   */\n  id: string;\n  amountType?: \"free\" | undefined;\n  /**\n   * Whether the price is archived and no longer available.\n   */\n  isArchived: boolean;\n  /**\n   * The ID of the product owning the price.\n   */\n  productId: string;\n  type: ProductPriceType;\n  /**\n   * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.\n   */\n  recurringInterval: SubscriptionRecurringInterval | null;\n};\n\n/** @internal */\nexport const ProductPriceFree$inboundSchema: z.ZodType<\n  ProductPriceFree,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  id: z.string(),\n  amount_type: z.literal(\"free\").optional(),\n  is_archived: z.boolean(),\n  product_id: z.string(),\n  type: ProductPriceType$inboundSchema,\n  recurring_interval: z.nullable(SubscriptionRecurringInterval$inboundSchema),\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"amount_type\": \"amountType\",\n    \"is_archived\": \"isArchived\",\n    \"product_id\": \"productId\",\n    \"recurring_interval\": \"recurringInterval\",\n  });\n});\n\n/** @internal */\nexport type ProductPriceFree$Outbound = {\n  created_at: string;\n  modified_at: string | null;\n  id: string;\n  amount_type: \"free\";\n  is_archived: boolean;\n  product_id: string;\n  type: string;\n  recurring_interval: string | null;\n};\n\n/** @internal */\nexport const ProductPriceFree$outboundSchema: z.ZodType<\n  ProductPriceFree$Outbound,\n  z.ZodTypeDef,\n  ProductPriceFree\n> = z.object({\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  id: z.string(),\n  amountType: z.literal(\"free\").default(\"free\" as const),\n  isArchived: z.boolean(),\n  productId: z.string(),\n  type: ProductPriceType$outboundSchema,\n  recurringInterval: z.nullable(SubscriptionRecurringInterval$outboundSchema),\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    amountType: \"amount_type\",\n    isArchived: \"is_archived\",\n    productId: \"product_id\",\n    recurringInterval: \"recurring_interval\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace ProductPriceFree$ {\n  /** @deprecated use `ProductPriceFree$inboundSchema` instead. */\n  export const inboundSchema = ProductPriceFree$inboundSchema;\n  /** @deprecated use `ProductPriceFree$outboundSchema` instead. */\n  export const outboundSchema = ProductPriceFree$outboundSchema;\n  /** @deprecated use `ProductPriceFree$Outbound` instead. */\n  export type Outbound = ProductPriceFree$Outbound;\n}\n\nexport function productPriceFreeToJSON(\n  productPriceFree: ProductPriceFree,\n): string {\n  return JSON.stringify(\n    ProductPriceFree$outboundSchema.parse(productPriceFree),\n  );\n}\n\nexport function productPriceFreeFromJSON(\n  jsonString: string,\n): SafeParseResult<ProductPriceFree, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => ProductPriceFree$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'ProductPriceFree' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,8BAA8B,EAC9B,+BAA+B,GAChC,MAAM,uBAAuB,CAAC;AAC/B,OAAO,EAEL,2CAA2C,EAC3C,4CAA4C,GAC7C,MAAM,oCAAoC,CAAC;;;;;;;AAmCrC,MAAM,8BAA8B,GAIvC,CAAC,6IAAC,MAAM,CAAC;IACX,UAAU,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,CAAC;QAAE,MAAM,EAAE,IAAI;IAAA,CAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;IAC7E,WAAW,EAAE,CAAC,6IAAC,QAAQ,CACrB,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,CAAC;QAAE,MAAM,EAAE,IAAI;IAAA,CAAE,CAAC,CAAC,SAAS,EAAC,CAAC,CAAC,EAAG,AAAD,IAAK,IAAI,CAAC,CAAC,CAAC,CAAC,CAClE;IACD,EAAE,EAAE,CAAC,6IAAC,MAAM,EAAE;IACd,WAAW,EAAE,CAAC,6IAAC,OAAO,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE;IACzC,WAAW,EAAE,CAAC,6IAAC,OAAO,EAAE;IACxB,UAAU,EAAE,CAAC,6IAAC,MAAM,EAAE;IACtB,IAAI,oMAAE,iCAA8B;IACpC,kBAAkB,EAAE,CAAC,6IAAC,QAAQ,gNAAC,8CAA2C,CAAC;CAC5E,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,YAAY,EAAE,WAAW;QACzB,aAAa,EAAE,YAAY;QAC3B,aAAa,EAAE,YAAY;QAC3B,aAAa,EAAE,YAAY;QAC3B,YAAY,EAAE,WAAW;QACzB,oBAAoB,EAAE,mBAAmB;KAC1C,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAeI,MAAM,+BAA+B,GAIxC,CAAC,6IAAC,MAAM,CAAC;IACX,SAAS,EAAE,CAAC,6IAAC,IAAI,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;IACnD,UAAU,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,IAAI,EAAE,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;IAChE,EAAE,EAAE,CAAC,6IAAC,MAAM,EAAE;IACd,UAAU,EAAE,CAAC,6IAAC,OAAO,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,MAAe,CAAC;IACtD,UAAU,EAAE,CAAC,6IAAC,OAAO,EAAE;IACvB,SAAS,EAAE,CAAC,6IAAC,MAAM,EAAE;IACrB,IAAI,oMAAE,kCAA+B;IACrC,iBAAiB,EAAE,CAAC,6IAAC,QAAQ,+MAAC,gDAA4C,CAAC;CAC5E,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,SAAS,EAAE,YAAY;QACvB,UAAU,EAAE,aAAa;QACzB,UAAU,EAAE,aAAa;QACzB,UAAU,EAAE,aAAa;QACzB,SAAS,EAAE,YAAY;QACvB,iBAAiB,EAAE,oBAAoB;KACxC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,iBAAiB,CAOjC;AAPD,CAAA,SAAiB,iBAAiB;IAChC,8DAAA,EAAgE,CACnD,kBAAA,aAAa,GAAG,8BAA8B,CAAC;IAC5D,+DAAA,EAAiE,CACpD,kBAAA,cAAc,GAAG,+BAA+B,CAAC;AAGhE,CAAC,EAPgB,iBAAiB,IAAA,CAAjB,iBAAiB,GAAA,CAAA,CAAA,GAOjC;AAEK,SAAU,sBAAsB,CACpC,gBAAkC;IAElC,OAAO,IAAI,CAAC,SAAS,CACnB,+BAA+B,CAAC,KAAK,CAAC,gBAAgB,CAAC,CACxD,CAAC;AACJ,CAAC;AAEK,SAAU,wBAAwB,CACtC,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,6BAA+B,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC1D,CAAA,4CAAA,CAA8C,CAC/C,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 4591, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4597, "column": 0}, "map": {"version":3,"file":"productpricemeter.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/productpricemeter.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\n/**\n * A meter associated to a metered price.\n */\nexport type ProductPriceMeter = {\n  /**\n   * The ID of the object.\n   */\n  id: string;\n  /**\n   * The name of the meter.\n   */\n  name: string;\n};\n\n/** @internal */\nexport const ProductPriceMeter$inboundSchema: z.ZodType<\n  ProductPriceMeter,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  id: z.string(),\n  name: z.string(),\n});\n\n/** @internal */\nexport type ProductPriceMeter$Outbound = {\n  id: string;\n  name: string;\n};\n\n/** @internal */\nexport const ProductPriceMeter$outboundSchema: z.ZodType<\n  ProductPriceMeter$Outbound,\n  z.ZodTypeDef,\n  ProductPriceMeter\n> = z.object({\n  id: z.string(),\n  name: z.string(),\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace ProductPriceMeter$ {\n  /** @deprecated use `ProductPriceMeter$inboundSchema` instead. */\n  export const inboundSchema = ProductPriceMeter$inboundSchema;\n  /** @deprecated use `ProductPriceMeter$outboundSchema` instead. */\n  export const outboundSchema = ProductPriceMeter$outboundSchema;\n  /** @deprecated use `ProductPriceMeter$Outbound` instead. */\n  export type Outbound = ProductPriceMeter$Outbound;\n}\n\nexport function productPriceMeterToJSON(\n  productPriceMeter: ProductPriceMeter,\n): string {\n  return JSON.stringify(\n    ProductPriceMeter$outboundSchema.parse(productPriceMeter),\n  );\n}\n\nexport function productPriceMeterFromJSON(\n  jsonString: string,\n): SafeParseResult<ProductPriceMeter, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => ProductPriceMeter$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'ProductPriceMeter' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;AAGH,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AADjD,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;;AAoBlB,MAAM,+BAA+B,GAIxC,CAAC,6IAAC,MAAM,CAAC;IACX,EAAE,EAAE,CAAC,6IAAC,MAAM,EAAE;IACd,IAAI,EAAE,CAAC,6IAAC,MAAM,EAAE;CACjB,CAAC,CAAC;AASI,MAAM,gCAAgC,GAIzC,CAAC,6IAAC,MAAM,CAAC;IACX,EAAE,EAAE,CAAC,6IAAC,MAAM,EAAE;IACd,IAAI,EAAE,CAAC,6IAAC,MAAM,EAAE;CACjB,CAAC,CAAC;AAMG,IAAW,kBAAkB,CAOlC;AAPD,CAAA,SAAiB,kBAAkB;IACjC,+DAAA,EAAiE,CACpD,mBAAA,aAAa,GAAG,+BAA+B,CAAC;IAC7D,gEAAA,EAAkE,CACrD,mBAAA,cAAc,GAAG,gCAAgC,CAAC;AAGjE,CAAC,EAPgB,kBAAkB,IAAA,CAAlB,kBAAkB,GAAA,CAAA,CAAA,GAOlC;AAEK,SAAU,uBAAuB,CACrC,iBAAoC;IAEpC,OAAO,IAAI,CAAC,SAAS,CACnB,gCAAgC,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAC1D,CAAC;AACJ,CAAC;AAEK,SAAU,yBAAyB,CACvC,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,8BAAgC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC3D,CAAA,6CAAA,CAA+C,CAChD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 4630, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4636, "column": 0}, "map": {"version":3,"file":"productpricemeteredunit.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/productpricemeteredunit.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  ProductPriceMeter,\n  ProductPriceMeter$inboundSchema,\n  ProductPriceMeter$Outbound,\n  ProductPriceMeter$outboundSchema,\n} from \"./productpricemeter.js\";\nimport {\n  ProductPriceType,\n  ProductPriceType$inboundSchema,\n  ProductPriceType$outboundSchema,\n} from \"./productpricetype.js\";\nimport {\n  SubscriptionRecurringInterval,\n  SubscriptionRecurringInterval$inboundSchema,\n  SubscriptionRecurringInterval$outboundSchema,\n} from \"./subscriptionrecurringinterval.js\";\n\n/**\n * A metered, usage-based, price for a product, with a fixed unit price.\n */\nexport type ProductPriceMeteredUnit = {\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  /**\n   * The ID of the price.\n   */\n  id: string;\n  amountType?: \"metered_unit\" | undefined;\n  /**\n   * Whether the price is archived and no longer available.\n   */\n  isArchived: boolean;\n  /**\n   * The ID of the product owning the price.\n   */\n  productId: string;\n  type: ProductPriceType;\n  /**\n   * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.\n   */\n  recurringInterval: SubscriptionRecurringInterval | null;\n  /**\n   * The currency.\n   */\n  priceCurrency: string;\n  /**\n   * The price per unit in cents.\n   */\n  unitAmount: string;\n  /**\n   * The maximum amount in cents that can be charged, regardless of the number of units consumed.\n   */\n  capAmount: number | null;\n  /**\n   * The ID of the meter associated to the price.\n   */\n  meterId: string;\n  /**\n   * A meter associated to a metered price.\n   */\n  meter: ProductPriceMeter;\n};\n\n/** @internal */\nexport const ProductPriceMeteredUnit$inboundSchema: z.ZodType<\n  ProductPriceMeteredUnit,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  id: z.string(),\n  amount_type: z.literal(\"metered_unit\").optional(),\n  is_archived: z.boolean(),\n  product_id: z.string(),\n  type: ProductPriceType$inboundSchema,\n  recurring_interval: z.nullable(SubscriptionRecurringInterval$inboundSchema),\n  price_currency: z.string(),\n  unit_amount: z.string(),\n  cap_amount: z.nullable(z.number().int()),\n  meter_id: z.string(),\n  meter: ProductPriceMeter$inboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"amount_type\": \"amountType\",\n    \"is_archived\": \"isArchived\",\n    \"product_id\": \"productId\",\n    \"recurring_interval\": \"recurringInterval\",\n    \"price_currency\": \"priceCurrency\",\n    \"unit_amount\": \"unitAmount\",\n    \"cap_amount\": \"capAmount\",\n    \"meter_id\": \"meterId\",\n  });\n});\n\n/** @internal */\nexport type ProductPriceMeteredUnit$Outbound = {\n  created_at: string;\n  modified_at: string | null;\n  id: string;\n  amount_type: \"metered_unit\";\n  is_archived: boolean;\n  product_id: string;\n  type: string;\n  recurring_interval: string | null;\n  price_currency: string;\n  unit_amount: string;\n  cap_amount: number | null;\n  meter_id: string;\n  meter: ProductPriceMeter$Outbound;\n};\n\n/** @internal */\nexport const ProductPriceMeteredUnit$outboundSchema: z.ZodType<\n  ProductPriceMeteredUnit$Outbound,\n  z.ZodTypeDef,\n  ProductPriceMeteredUnit\n> = z.object({\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  id: z.string(),\n  amountType: z.literal(\"metered_unit\").default(\"metered_unit\" as const),\n  isArchived: z.boolean(),\n  productId: z.string(),\n  type: ProductPriceType$outboundSchema,\n  recurringInterval: z.nullable(SubscriptionRecurringInterval$outboundSchema),\n  priceCurrency: z.string(),\n  unitAmount: z.string(),\n  capAmount: z.nullable(z.number().int()),\n  meterId: z.string(),\n  meter: ProductPriceMeter$outboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    amountType: \"amount_type\",\n    isArchived: \"is_archived\",\n    productId: \"product_id\",\n    recurringInterval: \"recurring_interval\",\n    priceCurrency: \"price_currency\",\n    unitAmount: \"unit_amount\",\n    capAmount: \"cap_amount\",\n    meterId: \"meter_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace ProductPriceMeteredUnit$ {\n  /** @deprecated use `ProductPriceMeteredUnit$inboundSchema` instead. */\n  export const inboundSchema = ProductPriceMeteredUnit$inboundSchema;\n  /** @deprecated use `ProductPriceMeteredUnit$outboundSchema` instead. */\n  export const outboundSchema = ProductPriceMeteredUnit$outboundSchema;\n  /** @deprecated use `ProductPriceMeteredUnit$Outbound` instead. */\n  export type Outbound = ProductPriceMeteredUnit$Outbound;\n}\n\nexport function productPriceMeteredUnitToJSON(\n  productPriceMeteredUnit: ProductPriceMeteredUnit,\n): string {\n  return JSON.stringify(\n    ProductPriceMeteredUnit$outboundSchema.parse(productPriceMeteredUnit),\n  );\n}\n\nexport function productPriceMeteredUnitFromJSON(\n  jsonString: string,\n): SafeParseResult<ProductPriceMeteredUnit, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => ProductPriceMeteredUnit$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'ProductPriceMeteredUnit' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 4729, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4735, "column": 0}, "map": {"version":3,"file":"productprice.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/productprice.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  ProductPriceCustom,\n  ProductPriceCustom$inboundSchema,\n  ProductPriceCustom$Outbound,\n  ProductPriceCustom$outboundSchema,\n} from \"./productpricecustom.js\";\nimport {\n  ProductPriceFixed,\n  ProductPriceFixed$inboundSchema,\n  ProductPriceFixed$Outbound,\n  ProductPriceFixed$outboundSchema,\n} from \"./productpricefixed.js\";\nimport {\n  ProductPriceFree,\n  ProductPriceFree$inboundSchema,\n  ProductPriceFree$Outbound,\n  ProductPriceFree$outboundSchema,\n} from \"./productpricefree.js\";\nimport {\n  ProductPriceMeteredUnit,\n  ProductPriceMeteredUnit$inboundSchema,\n  ProductPriceMeteredUnit$Outbound,\n  ProductPriceMeteredUnit$outboundSchema,\n} from \"./productpricemeteredunit.js\";\n\nexport type ProductPrice =\n  | (ProductPriceFree & { amountType: \"free\" })\n  | (ProductPriceFixed & { amountType: \"fixed\" })\n  | (ProductPriceCustom & { amountType: \"custom\" })\n  | (ProductPriceMeteredUnit & { amountType: \"metered_unit\" });\n\n/** @internal */\nexport const ProductPrice$inboundSchema: z.ZodType<\n  ProductPrice,\n  z.ZodTypeDef,\n  unknown\n> = z.union([\n  ProductPriceFree$inboundSchema.and(\n    z.object({ amount_type: z.literal(\"free\") }).transform((v) => ({\n      amountType: v.amount_type,\n    })),\n  ),\n  ProductPriceFixed$inboundSchema.and(\n    z.object({ amount_type: z.literal(\"fixed\") }).transform((v) => ({\n      amountType: v.amount_type,\n    })),\n  ),\n  ProductPriceCustom$inboundSchema.and(\n    z.object({ amount_type: z.literal(\"custom\") }).transform((v) => ({\n      amountType: v.amount_type,\n    })),\n  ),\n  ProductPriceMeteredUnit$inboundSchema.and(\n    z.object({ amount_type: z.literal(\"metered_unit\") }).transform((v) => ({\n      amountType: v.amount_type,\n    })),\n  ),\n]);\n\n/** @internal */\nexport type ProductPrice$Outbound =\n  | (ProductPriceFree$Outbound & { amount_type: \"free\" })\n  | (ProductPriceFixed$Outbound & { amount_type: \"fixed\" })\n  | (ProductPriceCustom$Outbound & { amount_type: \"custom\" })\n  | (ProductPriceMeteredUnit$Outbound & { amount_type: \"metered_unit\" });\n\n/** @internal */\nexport const ProductPrice$outboundSchema: z.ZodType<\n  ProductPrice$Outbound,\n  z.ZodTypeDef,\n  ProductPrice\n> = z.union([\n  ProductPriceFree$outboundSchema.and(\n    z.object({ amountType: z.literal(\"free\") }).transform((v) => ({\n      amount_type: v.amountType,\n    })),\n  ),\n  ProductPriceFixed$outboundSchema.and(\n    z.object({ amountType: z.literal(\"fixed\") }).transform((v) => ({\n      amount_type: v.amountType,\n    })),\n  ),\n  ProductPriceCustom$outboundSchema.and(\n    z.object({ amountType: z.literal(\"custom\") }).transform((v) => ({\n      amount_type: v.amountType,\n    })),\n  ),\n  ProductPriceMeteredUnit$outboundSchema.and(\n    z.object({ amountType: z.literal(\"metered_unit\") }).transform((v) => ({\n      amount_type: v.amountType,\n    })),\n  ),\n]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace ProductPrice$ {\n  /** @deprecated use `ProductPrice$inboundSchema` instead. */\n  export const inboundSchema = ProductPrice$inboundSchema;\n  /** @deprecated use `ProductPrice$outboundSchema` instead. */\n  export const outboundSchema = ProductPrice$outboundSchema;\n  /** @deprecated use `ProductPrice$Outbound` instead. */\n  export type Outbound = ProductPrice$Outbound;\n}\n\nexport function productPriceToJSON(productPrice: ProductPrice): string {\n  return JSON.stringify(ProductPrice$outboundSchema.parse(productPrice));\n}\n\nexport function productPriceFromJSON(\n  jsonString: string,\n): SafeParseResult<ProductPrice, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => ProductPrice$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'ProductPrice' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 4812, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4818, "column": 0}, "map": {"version":3,"file":"checkoutlinkproduct.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/checkoutlinkproduct.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  BenefitPublic,\n  BenefitPublic$inboundSchema,\n  BenefitPublic$Outbound,\n  BenefitPublic$outboundSchema,\n} from \"./benefitpublic.js\";\nimport {\n  LegacyRecurringProductPrice,\n  LegacyRecurringProductPrice$inboundSchema,\n  LegacyRecurringProductPrice$Outbound,\n  LegacyRecurringProductPrice$outboundSchema,\n} from \"./legacyrecurringproductprice.js\";\nimport {\n  ProductMediaFileRead,\n  ProductMediaFileRead$inboundSchema,\n  ProductMediaFileRead$Outbound,\n  ProductMediaFileRead$outboundSchema,\n} from \"./productmediafileread.js\";\nimport {\n  ProductPrice,\n  ProductPrice$inboundSchema,\n  ProductPrice$Outbound,\n  ProductPrice$outboundSchema,\n} from \"./productprice.js\";\nimport {\n  SubscriptionRecurringInterval,\n  SubscriptionRecurringInterval$inboundSchema,\n  SubscriptionRecurringInterval$outboundSchema,\n} from \"./subscriptionrecurringinterval.js\";\n\nexport type CheckoutLinkProductMetadata = string | number | number | boolean;\n\nexport type CheckoutLinkProductPrices =\n  | LegacyRecurringProductPrice\n  | ProductPrice;\n\n/**\n * Product data for a checkout link.\n */\nexport type CheckoutLinkProduct = {\n  metadata: { [k: string]: string | number | number | boolean };\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  /**\n   * The ID of the product.\n   */\n  id: string;\n  /**\n   * The name of the product.\n   */\n  name: string;\n  /**\n   * The description of the product.\n   */\n  description: string | null;\n  /**\n   * The recurring interval of the product. If `None`, the product is a one-time purchase.\n   */\n  recurringInterval: SubscriptionRecurringInterval | null;\n  /**\n   * Whether the product is a subscription.\n   */\n  isRecurring: boolean;\n  /**\n   * Whether the product is archived and no longer available.\n   */\n  isArchived: boolean;\n  /**\n   * The ID of the organization owning the product.\n   */\n  organizationId: string;\n  /**\n   * List of prices for this product.\n   */\n  prices: Array<LegacyRecurringProductPrice | ProductPrice>;\n  /**\n   * List of benefits granted by the product.\n   */\n  benefits: Array<BenefitPublic>;\n  /**\n   * List of medias associated to the product.\n   */\n  medias: Array<ProductMediaFileRead>;\n};\n\n/** @internal */\nexport const CheckoutLinkProductMetadata$inboundSchema: z.ZodType<\n  CheckoutLinkProductMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type CheckoutLinkProductMetadata$Outbound =\n  | string\n  | number\n  | number\n  | boolean;\n\n/** @internal */\nexport const CheckoutLinkProductMetadata$outboundSchema: z.ZodType<\n  CheckoutLinkProductMetadata$Outbound,\n  z.ZodTypeDef,\n  CheckoutLinkProductMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CheckoutLinkProductMetadata$ {\n  /** @deprecated use `CheckoutLinkProductMetadata$inboundSchema` instead. */\n  export const inboundSchema = CheckoutLinkProductMetadata$inboundSchema;\n  /** @deprecated use `CheckoutLinkProductMetadata$outboundSchema` instead. */\n  export const outboundSchema = CheckoutLinkProductMetadata$outboundSchema;\n  /** @deprecated use `CheckoutLinkProductMetadata$Outbound` instead. */\n  export type Outbound = CheckoutLinkProductMetadata$Outbound;\n}\n\nexport function checkoutLinkProductMetadataToJSON(\n  checkoutLinkProductMetadata: CheckoutLinkProductMetadata,\n): string {\n  return JSON.stringify(\n    CheckoutLinkProductMetadata$outboundSchema.parse(\n      checkoutLinkProductMetadata,\n    ),\n  );\n}\n\nexport function checkoutLinkProductMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<CheckoutLinkProductMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CheckoutLinkProductMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CheckoutLinkProductMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const CheckoutLinkProductPrices$inboundSchema: z.ZodType<\n  CheckoutLinkProductPrices,\n  z.ZodTypeDef,\n  unknown\n> = z.union([\n  LegacyRecurringProductPrice$inboundSchema,\n  ProductPrice$inboundSchema,\n]);\n\n/** @internal */\nexport type CheckoutLinkProductPrices$Outbound =\n  | LegacyRecurringProductPrice$Outbound\n  | ProductPrice$Outbound;\n\n/** @internal */\nexport const CheckoutLinkProductPrices$outboundSchema: z.ZodType<\n  CheckoutLinkProductPrices$Outbound,\n  z.ZodTypeDef,\n  CheckoutLinkProductPrices\n> = z.union([\n  LegacyRecurringProductPrice$outboundSchema,\n  ProductPrice$outboundSchema,\n]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CheckoutLinkProductPrices$ {\n  /** @deprecated use `CheckoutLinkProductPrices$inboundSchema` instead. */\n  export const inboundSchema = CheckoutLinkProductPrices$inboundSchema;\n  /** @deprecated use `CheckoutLinkProductPrices$outboundSchema` instead. */\n  export const outboundSchema = CheckoutLinkProductPrices$outboundSchema;\n  /** @deprecated use `CheckoutLinkProductPrices$Outbound` instead. */\n  export type Outbound = CheckoutLinkProductPrices$Outbound;\n}\n\nexport function checkoutLinkProductPricesToJSON(\n  checkoutLinkProductPrices: CheckoutLinkProductPrices,\n): string {\n  return JSON.stringify(\n    CheckoutLinkProductPrices$outboundSchema.parse(checkoutLinkProductPrices),\n  );\n}\n\nexport function checkoutLinkProductPricesFromJSON(\n  jsonString: string,\n): SafeParseResult<CheckoutLinkProductPrices, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CheckoutLinkProductPrices$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CheckoutLinkProductPrices' from JSON`,\n  );\n}\n\n/** @internal */\nexport const CheckoutLinkProduct$inboundSchema: z.ZodType<\n  CheckoutLinkProduct,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  id: z.string(),\n  name: z.string(),\n  description: z.nullable(z.string()),\n  recurring_interval: z.nullable(SubscriptionRecurringInterval$inboundSchema),\n  is_recurring: z.boolean(),\n  is_archived: z.boolean(),\n  organization_id: z.string(),\n  prices: z.array(\n    z.union([\n      LegacyRecurringProductPrice$inboundSchema,\n      ProductPrice$inboundSchema,\n    ]),\n  ),\n  benefits: z.array(BenefitPublic$inboundSchema),\n  medias: z.array(ProductMediaFileRead$inboundSchema),\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"recurring_interval\": \"recurringInterval\",\n    \"is_recurring\": \"isRecurring\",\n    \"is_archived\": \"isArchived\",\n    \"organization_id\": \"organizationId\",\n  });\n});\n\n/** @internal */\nexport type CheckoutLinkProduct$Outbound = {\n  metadata: { [k: string]: string | number | number | boolean };\n  created_at: string;\n  modified_at: string | null;\n  id: string;\n  name: string;\n  description: string | null;\n  recurring_interval: string | null;\n  is_recurring: boolean;\n  is_archived: boolean;\n  organization_id: string;\n  prices: Array<LegacyRecurringProductPrice$Outbound | ProductPrice$Outbound>;\n  benefits: Array<BenefitPublic$Outbound>;\n  medias: Array<ProductMediaFileRead$Outbound>;\n};\n\n/** @internal */\nexport const CheckoutLinkProduct$outboundSchema: z.ZodType<\n  CheckoutLinkProduct$Outbound,\n  z.ZodTypeDef,\n  CheckoutLinkProduct\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  id: z.string(),\n  name: z.string(),\n  description: z.nullable(z.string()),\n  recurringInterval: z.nullable(SubscriptionRecurringInterval$outboundSchema),\n  isRecurring: z.boolean(),\n  isArchived: z.boolean(),\n  organizationId: z.string(),\n  prices: z.array(\n    z.union([\n      LegacyRecurringProductPrice$outboundSchema,\n      ProductPrice$outboundSchema,\n    ]),\n  ),\n  benefits: z.array(BenefitPublic$outboundSchema),\n  medias: z.array(ProductMediaFileRead$outboundSchema),\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    recurringInterval: \"recurring_interval\",\n    isRecurring: \"is_recurring\",\n    isArchived: \"is_archived\",\n    organizationId: \"organization_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CheckoutLinkProduct$ {\n  /** @deprecated use `CheckoutLinkProduct$inboundSchema` instead. */\n  export const inboundSchema = CheckoutLinkProduct$inboundSchema;\n  /** @deprecated use `CheckoutLinkProduct$outboundSchema` instead. */\n  export const outboundSchema = CheckoutLinkProduct$outboundSchema;\n  /** @deprecated use `CheckoutLinkProduct$Outbound` instead. */\n  export type Outbound = CheckoutLinkProduct$Outbound;\n}\n\nexport function checkoutLinkProductToJSON(\n  checkoutLinkProduct: CheckoutLinkProduct,\n): string {\n  return JSON.stringify(\n    CheckoutLinkProduct$outboundSchema.parse(checkoutLinkProduct),\n  );\n}\n\nexport function checkoutLinkProductFromJSON(\n  jsonString: string,\n): SafeParseResult<CheckoutLinkProduct, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CheckoutLinkProduct$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CheckoutLinkProduct' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 4975, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4981, "column": 0}, "map": {"version":3,"file":"discountduration.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/discountduration.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { ClosedEnum } from \"../../types/enums.js\";\n\nexport const DiscountDuration = {\n  Once: \"once\",\n  Forever: \"forever\",\n  Repeating: \"repeating\",\n} as const;\nexport type DiscountDuration = ClosedEnum<typeof DiscountDuration>;\n\n/** @internal */\nexport const DiscountDuration$inboundSchema: z.ZodNativeEnum<\n  typeof DiscountDuration\n> = z.nativeEnum(DiscountDuration);\n\n/** @internal */\nexport const DiscountDuration$outboundSchema: z.ZodNativeEnum<\n  typeof DiscountDuration\n> = DiscountDuration$inboundSchema;\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace DiscountDuration$ {\n  /** @deprecated use `DiscountDuration$inboundSchema` instead. */\n  export const inboundSchema = DiscountDuration$inboundSchema;\n  /** @deprecated use `DiscountDuration$outboundSchema` instead. */\n  export const outboundSchema = DiscountDuration$outboundSchema;\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;AAGlB,MAAM,gBAAgB,GAAG;IAC9B,IAAI,EAAE,MAAM;IACZ,OAAO,EAAE,SAAS;IAClB,SAAS,EAAE,WAAW;CACd,CAAC;AAIJ,MAAM,8BAA8B,GAEvC,CAAC,6IAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC;AAG5B,MAAM,+BAA+B,GAExC,8BAA8B,CAAC;AAM7B,IAAW,iBAAiB,CAKjC;AALD,CAAA,SAAiB,iBAAiB;IAChC,8DAAA,EAAgE,CACnD,kBAAA,aAAa,GAAG,8BAA8B,CAAC;IAC5D,+DAAA,EAAiE,CACpD,kBAAA,cAAc,GAAG,+BAA+B,CAAC;AAChE,CAAC,EALgB,iBAAiB,IAAA,CAAjB,iBAAiB,GAAA,CAAA,CAAA,GAKjC","ignoreList":[0]}},
    {"offset": {"line": 5004, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5010, "column": 0}, "map": {"version":3,"file":"discounttype.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/discounttype.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { ClosedEnum } from \"../../types/enums.js\";\n\nexport const DiscountType = {\n  Fixed: \"fixed\",\n  Percentage: \"percentage\",\n} as const;\nexport type DiscountType = ClosedEnum<typeof DiscountType>;\n\n/** @internal */\nexport const DiscountType$inboundSchema: z.ZodNativeEnum<typeof DiscountType> =\n  z.nativeEnum(DiscountType);\n\n/** @internal */\nexport const DiscountType$outboundSchema: z.ZodNativeEnum<typeof DiscountType> =\n  DiscountType$inboundSchema;\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace DiscountType$ {\n  /** @deprecated use `DiscountType$inboundSchema` instead. */\n  export const inboundSchema = DiscountType$inboundSchema;\n  /** @deprecated use `DiscountType$outboundSchema` instead. */\n  export const outboundSchema = DiscountType$outboundSchema;\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;AAGlB,MAAM,YAAY,GAAG;IAC1B,KAAK,EAAE,OAAO;IACd,UAAU,EAAE,YAAY;CAChB,CAAC;AAIJ,MAAM,0BAA0B,GACrC,CAAC,6IAAC,UAAU,CAAC,YAAY,CAAC,CAAC;AAGtB,MAAM,2BAA2B,GACtC,0BAA0B,CAAC;AAMvB,IAAW,aAAa,CAK7B;AALD,CAAA,SAAiB,aAAa;IAC5B,0DAAA,EAA4D,CAC/C,cAAA,aAAa,GAAG,0BAA0B,CAAC;IACxD,2DAAA,EAA6D,CAChD,cAAA,cAAc,GAAG,2BAA2B,CAAC;AAC5D,CAAC,EALgB,aAAa,IAAA,CAAb,aAAa,GAAA,CAAA,CAAA,GAK7B","ignoreList":[0]}},
    {"offset": {"line": 5032, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5038, "column": 0}, "map": {"version":3,"file":"discountfixedonceforeverdurationbase.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/discountfixedonceforeverdurationbase.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  DiscountDuration,\n  DiscountDuration$inboundSchema,\n  DiscountDuration$outboundSchema,\n} from \"./discountduration.js\";\nimport {\n  DiscountType,\n  DiscountType$inboundSchema,\n  DiscountType$outboundSchema,\n} from \"./discounttype.js\";\n\nexport type DiscountFixedOnceForeverDurationBaseMetadata =\n  | string\n  | number\n  | number\n  | boolean;\n\nexport type DiscountFixedOnceForeverDurationBase = {\n  duration: DiscountDuration;\n  type: DiscountType;\n  amount: number;\n  currency: string;\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  /**\n   * The ID of the object.\n   */\n  id: string;\n  metadata: { [k: string]: string | number | number | boolean };\n  /**\n   * Name of the discount. Will be displayed to the customer when the discount is applied.\n   */\n  name: string;\n  /**\n   * Code customers can use to apply the discount during checkout.\n   */\n  code: string | null;\n  /**\n   * Timestamp after which the discount is redeemable.\n   */\n  startsAt: Date | null;\n  /**\n   * Timestamp after which the discount is no longer redeemable.\n   */\n  endsAt: Date | null;\n  /**\n   * Maximum number of times the discount can be redeemed.\n   */\n  maxRedemptions: number | null;\n  /**\n   * Number of times the discount has been redeemed.\n   */\n  redemptionsCount: number;\n  /**\n   * The organization ID.\n   */\n  organizationId: string;\n};\n\n/** @internal */\nexport const DiscountFixedOnceForeverDurationBaseMetadata$inboundSchema:\n  z.ZodType<\n    DiscountFixedOnceForeverDurationBaseMetadata,\n    z.ZodTypeDef,\n    unknown\n  > = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type DiscountFixedOnceForeverDurationBaseMetadata$Outbound =\n  | string\n  | number\n  | number\n  | boolean;\n\n/** @internal */\nexport const DiscountFixedOnceForeverDurationBaseMetadata$outboundSchema:\n  z.ZodType<\n    DiscountFixedOnceForeverDurationBaseMetadata$Outbound,\n    z.ZodTypeDef,\n    DiscountFixedOnceForeverDurationBaseMetadata\n  > = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace DiscountFixedOnceForeverDurationBaseMetadata$ {\n  /** @deprecated use `DiscountFixedOnceForeverDurationBaseMetadata$inboundSchema` instead. */\n  export const inboundSchema =\n    DiscountFixedOnceForeverDurationBaseMetadata$inboundSchema;\n  /** @deprecated use `DiscountFixedOnceForeverDurationBaseMetadata$outboundSchema` instead. */\n  export const outboundSchema =\n    DiscountFixedOnceForeverDurationBaseMetadata$outboundSchema;\n  /** @deprecated use `DiscountFixedOnceForeverDurationBaseMetadata$Outbound` instead. */\n  export type Outbound = DiscountFixedOnceForeverDurationBaseMetadata$Outbound;\n}\n\nexport function discountFixedOnceForeverDurationBaseMetadataToJSON(\n  discountFixedOnceForeverDurationBaseMetadata:\n    DiscountFixedOnceForeverDurationBaseMetadata,\n): string {\n  return JSON.stringify(\n    DiscountFixedOnceForeverDurationBaseMetadata$outboundSchema.parse(\n      discountFixedOnceForeverDurationBaseMetadata,\n    ),\n  );\n}\n\nexport function discountFixedOnceForeverDurationBaseMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<\n  DiscountFixedOnceForeverDurationBaseMetadata,\n  SDKValidationError\n> {\n  return safeParse(\n    jsonString,\n    (x) =>\n      DiscountFixedOnceForeverDurationBaseMetadata$inboundSchema.parse(\n        JSON.parse(x),\n      ),\n    `Failed to parse 'DiscountFixedOnceForeverDurationBaseMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const DiscountFixedOnceForeverDurationBase$inboundSchema: z.ZodType<\n  DiscountFixedOnceForeverDurationBase,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  duration: DiscountDuration$inboundSchema,\n  type: DiscountType$inboundSchema,\n  amount: z.number().int(),\n  currency: z.string(),\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  id: z.string(),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  name: z.string(),\n  code: z.nullable(z.string()),\n  starts_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  ends_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  max_redemptions: z.nullable(z.number().int()),\n  redemptions_count: z.number().int(),\n  organization_id: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"starts_at\": \"startsAt\",\n    \"ends_at\": \"endsAt\",\n    \"max_redemptions\": \"maxRedemptions\",\n    \"redemptions_count\": \"redemptionsCount\",\n    \"organization_id\": \"organizationId\",\n  });\n});\n\n/** @internal */\nexport type DiscountFixedOnceForeverDurationBase$Outbound = {\n  duration: string;\n  type: string;\n  amount: number;\n  currency: string;\n  created_at: string;\n  modified_at: string | null;\n  id: string;\n  metadata: { [k: string]: string | number | number | boolean };\n  name: string;\n  code: string | null;\n  starts_at: string | null;\n  ends_at: string | null;\n  max_redemptions: number | null;\n  redemptions_count: number;\n  organization_id: string;\n};\n\n/** @internal */\nexport const DiscountFixedOnceForeverDurationBase$outboundSchema: z.ZodType<\n  DiscountFixedOnceForeverDurationBase$Outbound,\n  z.ZodTypeDef,\n  DiscountFixedOnceForeverDurationBase\n> = z.object({\n  duration: DiscountDuration$outboundSchema,\n  type: DiscountType$outboundSchema,\n  amount: z.number().int(),\n  currency: z.string(),\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  id: z.string(),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  name: z.string(),\n  code: z.nullable(z.string()),\n  startsAt: z.nullable(z.date().transform(v => v.toISOString())),\n  endsAt: z.nullable(z.date().transform(v => v.toISOString())),\n  maxRedemptions: z.nullable(z.number().int()),\n  redemptionsCount: z.number().int(),\n  organizationId: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    startsAt: \"starts_at\",\n    endsAt: \"ends_at\",\n    maxRedemptions: \"max_redemptions\",\n    redemptionsCount: \"redemptions_count\",\n    organizationId: \"organization_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace DiscountFixedOnceForeverDurationBase$ {\n  /** @deprecated use `DiscountFixedOnceForeverDurationBase$inboundSchema` instead. */\n  export const inboundSchema =\n    DiscountFixedOnceForeverDurationBase$inboundSchema;\n  /** @deprecated use `DiscountFixedOnceForeverDurationBase$outboundSchema` instead. */\n  export const outboundSchema =\n    DiscountFixedOnceForeverDurationBase$outboundSchema;\n  /** @deprecated use `DiscountFixedOnceForeverDurationBase$Outbound` instead. */\n  export type Outbound = DiscountFixedOnceForeverDurationBase$Outbound;\n}\n\nexport function discountFixedOnceForeverDurationBaseToJSON(\n  discountFixedOnceForeverDurationBase: DiscountFixedOnceForeverDurationBase,\n): string {\n  return JSON.stringify(\n    DiscountFixedOnceForeverDurationBase$outboundSchema.parse(\n      discountFixedOnceForeverDurationBase,\n    ),\n  );\n}\n\nexport function discountFixedOnceForeverDurationBaseFromJSON(\n  jsonString: string,\n): SafeParseResult<DiscountFixedOnceForeverDurationBase, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) =>\n      DiscountFixedOnceForeverDurationBase$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'DiscountFixedOnceForeverDurationBase' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 5169, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5175, "column": 0}, "map": {"version":3,"file":"discountfixedrepeatdurationbase.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/discountfixedrepeatdurationbase.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  DiscountDuration,\n  DiscountDuration$inboundSchema,\n  DiscountDuration$outboundSchema,\n} from \"./discountduration.js\";\nimport {\n  DiscountType,\n  DiscountType$inboundSchema,\n  DiscountType$outboundSchema,\n} from \"./discounttype.js\";\n\nexport type DiscountFixedRepeatDurationBaseMetadata =\n  | string\n  | number\n  | number\n  | boolean;\n\nexport type DiscountFixedRepeatDurationBase = {\n  duration: DiscountDuration;\n  durationInMonths: number;\n  type: DiscountType;\n  amount: number;\n  currency: string;\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  /**\n   * The ID of the object.\n   */\n  id: string;\n  metadata: { [k: string]: string | number | number | boolean };\n  /**\n   * Name of the discount. Will be displayed to the customer when the discount is applied.\n   */\n  name: string;\n  /**\n   * Code customers can use to apply the discount during checkout.\n   */\n  code: string | null;\n  /**\n   * Timestamp after which the discount is redeemable.\n   */\n  startsAt: Date | null;\n  /**\n   * Timestamp after which the discount is no longer redeemable.\n   */\n  endsAt: Date | null;\n  /**\n   * Maximum number of times the discount can be redeemed.\n   */\n  maxRedemptions: number | null;\n  /**\n   * Number of times the discount has been redeemed.\n   */\n  redemptionsCount: number;\n  /**\n   * The organization ID.\n   */\n  organizationId: string;\n};\n\n/** @internal */\nexport const DiscountFixedRepeatDurationBaseMetadata$inboundSchema: z.ZodType<\n  DiscountFixedRepeatDurationBaseMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type DiscountFixedRepeatDurationBaseMetadata$Outbound =\n  | string\n  | number\n  | number\n  | boolean;\n\n/** @internal */\nexport const DiscountFixedRepeatDurationBaseMetadata$outboundSchema: z.ZodType<\n  DiscountFixedRepeatDurationBaseMetadata$Outbound,\n  z.ZodTypeDef,\n  DiscountFixedRepeatDurationBaseMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace DiscountFixedRepeatDurationBaseMetadata$ {\n  /** @deprecated use `DiscountFixedRepeatDurationBaseMetadata$inboundSchema` instead. */\n  export const inboundSchema =\n    DiscountFixedRepeatDurationBaseMetadata$inboundSchema;\n  /** @deprecated use `DiscountFixedRepeatDurationBaseMetadata$outboundSchema` instead. */\n  export const outboundSchema =\n    DiscountFixedRepeatDurationBaseMetadata$outboundSchema;\n  /** @deprecated use `DiscountFixedRepeatDurationBaseMetadata$Outbound` instead. */\n  export type Outbound = DiscountFixedRepeatDurationBaseMetadata$Outbound;\n}\n\nexport function discountFixedRepeatDurationBaseMetadataToJSON(\n  discountFixedRepeatDurationBaseMetadata:\n    DiscountFixedRepeatDurationBaseMetadata,\n): string {\n  return JSON.stringify(\n    DiscountFixedRepeatDurationBaseMetadata$outboundSchema.parse(\n      discountFixedRepeatDurationBaseMetadata,\n    ),\n  );\n}\n\nexport function discountFixedRepeatDurationBaseMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<\n  DiscountFixedRepeatDurationBaseMetadata,\n  SDKValidationError\n> {\n  return safeParse(\n    jsonString,\n    (x) =>\n      DiscountFixedRepeatDurationBaseMetadata$inboundSchema.parse(\n        JSON.parse(x),\n      ),\n    `Failed to parse 'DiscountFixedRepeatDurationBaseMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const DiscountFixedRepeatDurationBase$inboundSchema: z.ZodType<\n  DiscountFixedRepeatDurationBase,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  duration: DiscountDuration$inboundSchema,\n  duration_in_months: z.number().int(),\n  type: DiscountType$inboundSchema,\n  amount: z.number().int(),\n  currency: z.string(),\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  id: z.string(),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  name: z.string(),\n  code: z.nullable(z.string()),\n  starts_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  ends_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  max_redemptions: z.nullable(z.number().int()),\n  redemptions_count: z.number().int(),\n  organization_id: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    \"duration_in_months\": \"durationInMonths\",\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"starts_at\": \"startsAt\",\n    \"ends_at\": \"endsAt\",\n    \"max_redemptions\": \"maxRedemptions\",\n    \"redemptions_count\": \"redemptionsCount\",\n    \"organization_id\": \"organizationId\",\n  });\n});\n\n/** @internal */\nexport type DiscountFixedRepeatDurationBase$Outbound = {\n  duration: string;\n  duration_in_months: number;\n  type: string;\n  amount: number;\n  currency: string;\n  created_at: string;\n  modified_at: string | null;\n  id: string;\n  metadata: { [k: string]: string | number | number | boolean };\n  name: string;\n  code: string | null;\n  starts_at: string | null;\n  ends_at: string | null;\n  max_redemptions: number | null;\n  redemptions_count: number;\n  organization_id: string;\n};\n\n/** @internal */\nexport const DiscountFixedRepeatDurationBase$outboundSchema: z.ZodType<\n  DiscountFixedRepeatDurationBase$Outbound,\n  z.ZodTypeDef,\n  DiscountFixedRepeatDurationBase\n> = z.object({\n  duration: DiscountDuration$outboundSchema,\n  durationInMonths: z.number().int(),\n  type: DiscountType$outboundSchema,\n  amount: z.number().int(),\n  currency: z.string(),\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  id: z.string(),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  name: z.string(),\n  code: z.nullable(z.string()),\n  startsAt: z.nullable(z.date().transform(v => v.toISOString())),\n  endsAt: z.nullable(z.date().transform(v => v.toISOString())),\n  maxRedemptions: z.nullable(z.number().int()),\n  redemptionsCount: z.number().int(),\n  organizationId: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    durationInMonths: \"duration_in_months\",\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    startsAt: \"starts_at\",\n    endsAt: \"ends_at\",\n    maxRedemptions: \"max_redemptions\",\n    redemptionsCount: \"redemptions_count\",\n    organizationId: \"organization_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace DiscountFixedRepeatDurationBase$ {\n  /** @deprecated use `DiscountFixedRepeatDurationBase$inboundSchema` instead. */\n  export const inboundSchema = DiscountFixedRepeatDurationBase$inboundSchema;\n  /** @deprecated use `DiscountFixedRepeatDurationBase$outboundSchema` instead. */\n  export const outboundSchema = DiscountFixedRepeatDurationBase$outboundSchema;\n  /** @deprecated use `DiscountFixedRepeatDurationBase$Outbound` instead. */\n  export type Outbound = DiscountFixedRepeatDurationBase$Outbound;\n}\n\nexport function discountFixedRepeatDurationBaseToJSON(\n  discountFixedRepeatDurationBase: DiscountFixedRepeatDurationBase,\n): string {\n  return JSON.stringify(\n    DiscountFixedRepeatDurationBase$outboundSchema.parse(\n      discountFixedRepeatDurationBase,\n    ),\n  );\n}\n\nexport function discountFixedRepeatDurationBaseFromJSON(\n  jsonString: string,\n): SafeParseResult<DiscountFixedRepeatDurationBase, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => DiscountFixedRepeatDurationBase$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'DiscountFixedRepeatDurationBase' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 5310, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5316, "column": 0}, "map": {"version":3,"file":"discountpercentageonceforeverdurationbase.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/discountpercentageonceforeverdurationbase.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  DiscountDuration,\n  DiscountDuration$inboundSchema,\n  DiscountDuration$outboundSchema,\n} from \"./discountduration.js\";\nimport {\n  DiscountType,\n  DiscountType$inboundSchema,\n  DiscountType$outboundSchema,\n} from \"./discounttype.js\";\n\nexport type DiscountPercentageOnceForeverDurationBaseMetadata =\n  | string\n  | number\n  | number\n  | boolean;\n\nexport type DiscountPercentageOnceForeverDurationBase = {\n  duration: DiscountDuration;\n  type: DiscountType;\n  basisPoints: number;\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  /**\n   * The ID of the object.\n   */\n  id: string;\n  metadata: { [k: string]: string | number | number | boolean };\n  /**\n   * Name of the discount. Will be displayed to the customer when the discount is applied.\n   */\n  name: string;\n  /**\n   * Code customers can use to apply the discount during checkout.\n   */\n  code: string | null;\n  /**\n   * Timestamp after which the discount is redeemable.\n   */\n  startsAt: Date | null;\n  /**\n   * Timestamp after which the discount is no longer redeemable.\n   */\n  endsAt: Date | null;\n  /**\n   * Maximum number of times the discount can be redeemed.\n   */\n  maxRedemptions: number | null;\n  /**\n   * Number of times the discount has been redeemed.\n   */\n  redemptionsCount: number;\n  /**\n   * The organization ID.\n   */\n  organizationId: string;\n};\n\n/** @internal */\nexport const DiscountPercentageOnceForeverDurationBaseMetadata$inboundSchema:\n  z.ZodType<\n    DiscountPercentageOnceForeverDurationBaseMetadata,\n    z.ZodTypeDef,\n    unknown\n  > = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type DiscountPercentageOnceForeverDurationBaseMetadata$Outbound =\n  | string\n  | number\n  | number\n  | boolean;\n\n/** @internal */\nexport const DiscountPercentageOnceForeverDurationBaseMetadata$outboundSchema:\n  z.ZodType<\n    DiscountPercentageOnceForeverDurationBaseMetadata$Outbound,\n    z.ZodTypeDef,\n    DiscountPercentageOnceForeverDurationBaseMetadata\n  > = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace DiscountPercentageOnceForeverDurationBaseMetadata$ {\n  /** @deprecated use `DiscountPercentageOnceForeverDurationBaseMetadata$inboundSchema` instead. */\n  export const inboundSchema =\n    DiscountPercentageOnceForeverDurationBaseMetadata$inboundSchema;\n  /** @deprecated use `DiscountPercentageOnceForeverDurationBaseMetadata$outboundSchema` instead. */\n  export const outboundSchema =\n    DiscountPercentageOnceForeverDurationBaseMetadata$outboundSchema;\n  /** @deprecated use `DiscountPercentageOnceForeverDurationBaseMetadata$Outbound` instead. */\n  export type Outbound =\n    DiscountPercentageOnceForeverDurationBaseMetadata$Outbound;\n}\n\nexport function discountPercentageOnceForeverDurationBaseMetadataToJSON(\n  discountPercentageOnceForeverDurationBaseMetadata:\n    DiscountPercentageOnceForeverDurationBaseMetadata,\n): string {\n  return JSON.stringify(\n    DiscountPercentageOnceForeverDurationBaseMetadata$outboundSchema.parse(\n      discountPercentageOnceForeverDurationBaseMetadata,\n    ),\n  );\n}\n\nexport function discountPercentageOnceForeverDurationBaseMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<\n  DiscountPercentageOnceForeverDurationBaseMetadata,\n  SDKValidationError\n> {\n  return safeParse(\n    jsonString,\n    (x) =>\n      DiscountPercentageOnceForeverDurationBaseMetadata$inboundSchema.parse(\n        JSON.parse(x),\n      ),\n    `Failed to parse 'DiscountPercentageOnceForeverDurationBaseMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const DiscountPercentageOnceForeverDurationBase$inboundSchema: z.ZodType<\n  DiscountPercentageOnceForeverDurationBase,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  duration: DiscountDuration$inboundSchema,\n  type: DiscountType$inboundSchema,\n  basis_points: z.number().int(),\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  id: z.string(),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  name: z.string(),\n  code: z.nullable(z.string()),\n  starts_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  ends_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  max_redemptions: z.nullable(z.number().int()),\n  redemptions_count: z.number().int(),\n  organization_id: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    \"basis_points\": \"basisPoints\",\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"starts_at\": \"startsAt\",\n    \"ends_at\": \"endsAt\",\n    \"max_redemptions\": \"maxRedemptions\",\n    \"redemptions_count\": \"redemptionsCount\",\n    \"organization_id\": \"organizationId\",\n  });\n});\n\n/** @internal */\nexport type DiscountPercentageOnceForeverDurationBase$Outbound = {\n  duration: string;\n  type: string;\n  basis_points: number;\n  created_at: string;\n  modified_at: string | null;\n  id: string;\n  metadata: { [k: string]: string | number | number | boolean };\n  name: string;\n  code: string | null;\n  starts_at: string | null;\n  ends_at: string | null;\n  max_redemptions: number | null;\n  redemptions_count: number;\n  organization_id: string;\n};\n\n/** @internal */\nexport const DiscountPercentageOnceForeverDurationBase$outboundSchema:\n  z.ZodType<\n    DiscountPercentageOnceForeverDurationBase$Outbound,\n    z.ZodTypeDef,\n    DiscountPercentageOnceForeverDurationBase\n  > = z.object({\n    duration: DiscountDuration$outboundSchema,\n    type: DiscountType$outboundSchema,\n    basisPoints: z.number().int(),\n    createdAt: z.date().transform(v => v.toISOString()),\n    modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n    id: z.string(),\n    metadata: z.record(\n      z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n    ),\n    name: z.string(),\n    code: z.nullable(z.string()),\n    startsAt: z.nullable(z.date().transform(v => v.toISOString())),\n    endsAt: z.nullable(z.date().transform(v => v.toISOString())),\n    maxRedemptions: z.nullable(z.number().int()),\n    redemptionsCount: z.number().int(),\n    organizationId: z.string(),\n  }).transform((v) => {\n    return remap$(v, {\n      basisPoints: \"basis_points\",\n      createdAt: \"created_at\",\n      modifiedAt: \"modified_at\",\n      startsAt: \"starts_at\",\n      endsAt: \"ends_at\",\n      maxRedemptions: \"max_redemptions\",\n      redemptionsCount: \"redemptions_count\",\n      organizationId: \"organization_id\",\n    });\n  });\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace DiscountPercentageOnceForeverDurationBase$ {\n  /** @deprecated use `DiscountPercentageOnceForeverDurationBase$inboundSchema` instead. */\n  export const inboundSchema =\n    DiscountPercentageOnceForeverDurationBase$inboundSchema;\n  /** @deprecated use `DiscountPercentageOnceForeverDurationBase$outboundSchema` instead. */\n  export const outboundSchema =\n    DiscountPercentageOnceForeverDurationBase$outboundSchema;\n  /** @deprecated use `DiscountPercentageOnceForeverDurationBase$Outbound` instead. */\n  export type Outbound = DiscountPercentageOnceForeverDurationBase$Outbound;\n}\n\nexport function discountPercentageOnceForeverDurationBaseToJSON(\n  discountPercentageOnceForeverDurationBase:\n    DiscountPercentageOnceForeverDurationBase,\n): string {\n  return JSON.stringify(\n    DiscountPercentageOnceForeverDurationBase$outboundSchema.parse(\n      discountPercentageOnceForeverDurationBase,\n    ),\n  );\n}\n\nexport function discountPercentageOnceForeverDurationBaseFromJSON(\n  jsonString: string,\n): SafeParseResult<\n  DiscountPercentageOnceForeverDurationBase,\n  SDKValidationError\n> {\n  return safeParse(\n    jsonString,\n    (x) =>\n      DiscountPercentageOnceForeverDurationBase$inboundSchema.parse(\n        JSON.parse(x),\n      ),\n    `Failed to parse 'DiscountPercentageOnceForeverDurationBase' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 5447, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5453, "column": 0}, "map": {"version":3,"file":"discountpercentagerepeatdurationbase.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/discountpercentagerepeatdurationbase.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  DiscountDuration,\n  DiscountDuration$inboundSchema,\n  DiscountDuration$outboundSchema,\n} from \"./discountduration.js\";\nimport {\n  DiscountType,\n  DiscountType$inboundSchema,\n  DiscountType$outboundSchema,\n} from \"./discounttype.js\";\n\nexport type DiscountPercentageRepeatDurationBaseMetadata =\n  | string\n  | number\n  | number\n  | boolean;\n\nexport type DiscountPercentageRepeatDurationBase = {\n  duration: DiscountDuration;\n  durationInMonths: number;\n  type: DiscountType;\n  basisPoints: number;\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  /**\n   * The ID of the object.\n   */\n  id: string;\n  metadata: { [k: string]: string | number | number | boolean };\n  /**\n   * Name of the discount. Will be displayed to the customer when the discount is applied.\n   */\n  name: string;\n  /**\n   * Code customers can use to apply the discount during checkout.\n   */\n  code: string | null;\n  /**\n   * Timestamp after which the discount is redeemable.\n   */\n  startsAt: Date | null;\n  /**\n   * Timestamp after which the discount is no longer redeemable.\n   */\n  endsAt: Date | null;\n  /**\n   * Maximum number of times the discount can be redeemed.\n   */\n  maxRedemptions: number | null;\n  /**\n   * Number of times the discount has been redeemed.\n   */\n  redemptionsCount: number;\n  /**\n   * The organization ID.\n   */\n  organizationId: string;\n};\n\n/** @internal */\nexport const DiscountPercentageRepeatDurationBaseMetadata$inboundSchema:\n  z.ZodType<\n    DiscountPercentageRepeatDurationBaseMetadata,\n    z.ZodTypeDef,\n    unknown\n  > = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type DiscountPercentageRepeatDurationBaseMetadata$Outbound =\n  | string\n  | number\n  | number\n  | boolean;\n\n/** @internal */\nexport const DiscountPercentageRepeatDurationBaseMetadata$outboundSchema:\n  z.ZodType<\n    DiscountPercentageRepeatDurationBaseMetadata$Outbound,\n    z.ZodTypeDef,\n    DiscountPercentageRepeatDurationBaseMetadata\n  > = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace DiscountPercentageRepeatDurationBaseMetadata$ {\n  /** @deprecated use `DiscountPercentageRepeatDurationBaseMetadata$inboundSchema` instead. */\n  export const inboundSchema =\n    DiscountPercentageRepeatDurationBaseMetadata$inboundSchema;\n  /** @deprecated use `DiscountPercentageRepeatDurationBaseMetadata$outboundSchema` instead. */\n  export const outboundSchema =\n    DiscountPercentageRepeatDurationBaseMetadata$outboundSchema;\n  /** @deprecated use `DiscountPercentageRepeatDurationBaseMetadata$Outbound` instead. */\n  export type Outbound = DiscountPercentageRepeatDurationBaseMetadata$Outbound;\n}\n\nexport function discountPercentageRepeatDurationBaseMetadataToJSON(\n  discountPercentageRepeatDurationBaseMetadata:\n    DiscountPercentageRepeatDurationBaseMetadata,\n): string {\n  return JSON.stringify(\n    DiscountPercentageRepeatDurationBaseMetadata$outboundSchema.parse(\n      discountPercentageRepeatDurationBaseMetadata,\n    ),\n  );\n}\n\nexport function discountPercentageRepeatDurationBaseMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<\n  DiscountPercentageRepeatDurationBaseMetadata,\n  SDKValidationError\n> {\n  return safeParse(\n    jsonString,\n    (x) =>\n      DiscountPercentageRepeatDurationBaseMetadata$inboundSchema.parse(\n        JSON.parse(x),\n      ),\n    `Failed to parse 'DiscountPercentageRepeatDurationBaseMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const DiscountPercentageRepeatDurationBase$inboundSchema: z.ZodType<\n  DiscountPercentageRepeatDurationBase,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  duration: DiscountDuration$inboundSchema,\n  duration_in_months: z.number().int(),\n  type: DiscountType$inboundSchema,\n  basis_points: z.number().int(),\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  id: z.string(),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  name: z.string(),\n  code: z.nullable(z.string()),\n  starts_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  ends_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  max_redemptions: z.nullable(z.number().int()),\n  redemptions_count: z.number().int(),\n  organization_id: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    \"duration_in_months\": \"durationInMonths\",\n    \"basis_points\": \"basisPoints\",\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"starts_at\": \"startsAt\",\n    \"ends_at\": \"endsAt\",\n    \"max_redemptions\": \"maxRedemptions\",\n    \"redemptions_count\": \"redemptionsCount\",\n    \"organization_id\": \"organizationId\",\n  });\n});\n\n/** @internal */\nexport type DiscountPercentageRepeatDurationBase$Outbound = {\n  duration: string;\n  duration_in_months: number;\n  type: string;\n  basis_points: number;\n  created_at: string;\n  modified_at: string | null;\n  id: string;\n  metadata: { [k: string]: string | number | number | boolean };\n  name: string;\n  code: string | null;\n  starts_at: string | null;\n  ends_at: string | null;\n  max_redemptions: number | null;\n  redemptions_count: number;\n  organization_id: string;\n};\n\n/** @internal */\nexport const DiscountPercentageRepeatDurationBase$outboundSchema: z.ZodType<\n  DiscountPercentageRepeatDurationBase$Outbound,\n  z.ZodTypeDef,\n  DiscountPercentageRepeatDurationBase\n> = z.object({\n  duration: DiscountDuration$outboundSchema,\n  durationInMonths: z.number().int(),\n  type: DiscountType$outboundSchema,\n  basisPoints: z.number().int(),\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  id: z.string(),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  name: z.string(),\n  code: z.nullable(z.string()),\n  startsAt: z.nullable(z.date().transform(v => v.toISOString())),\n  endsAt: z.nullable(z.date().transform(v => v.toISOString())),\n  maxRedemptions: z.nullable(z.number().int()),\n  redemptionsCount: z.number().int(),\n  organizationId: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    durationInMonths: \"duration_in_months\",\n    basisPoints: \"basis_points\",\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    startsAt: \"starts_at\",\n    endsAt: \"ends_at\",\n    maxRedemptions: \"max_redemptions\",\n    redemptionsCount: \"redemptions_count\",\n    organizationId: \"organization_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace DiscountPercentageRepeatDurationBase$ {\n  /** @deprecated use `DiscountPercentageRepeatDurationBase$inboundSchema` instead. */\n  export const inboundSchema =\n    DiscountPercentageRepeatDurationBase$inboundSchema;\n  /** @deprecated use `DiscountPercentageRepeatDurationBase$outboundSchema` instead. */\n  export const outboundSchema =\n    DiscountPercentageRepeatDurationBase$outboundSchema;\n  /** @deprecated use `DiscountPercentageRepeatDurationBase$Outbound` instead. */\n  export type Outbound = DiscountPercentageRepeatDurationBase$Outbound;\n}\n\nexport function discountPercentageRepeatDurationBaseToJSON(\n  discountPercentageRepeatDurationBase: DiscountPercentageRepeatDurationBase,\n): string {\n  return JSON.stringify(\n    DiscountPercentageRepeatDurationBase$outboundSchema.parse(\n      discountPercentageRepeatDurationBase,\n    ),\n  );\n}\n\nexport function discountPercentageRepeatDurationBaseFromJSON(\n  jsonString: string,\n): SafeParseResult<DiscountPercentageRepeatDurationBase, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) =>\n      DiscountPercentageRepeatDurationBase$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'DiscountPercentageRepeatDurationBase' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 5588, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5594, "column": 0}, "map": {"version":3,"file":"paymentprocessor.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/paymentprocessor.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { ClosedEnum } from \"../../types/enums.js\";\n\nexport const PaymentProcessor = {\n  Stripe: \"stripe\",\n} as const;\nexport type PaymentProcessor = ClosedEnum<typeof PaymentProcessor>;\n\n/** @internal */\nexport const PaymentProcessor$inboundSchema: z.ZodNativeEnum<\n  typeof PaymentProcessor\n> = z.nativeEnum(PaymentProcessor);\n\n/** @internal */\nexport const PaymentProcessor$outboundSchema: z.ZodNativeEnum<\n  typeof PaymentProcessor\n> = PaymentProcessor$inboundSchema;\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace PaymentProcessor$ {\n  /** @deprecated use `PaymentProcessor$inboundSchema` instead. */\n  export const inboundSchema = PaymentProcessor$inboundSchema;\n  /** @deprecated use `PaymentProcessor$outboundSchema` instead. */\n  export const outboundSchema = PaymentProcessor$outboundSchema;\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;AAGlB,MAAM,gBAAgB,GAAG;IAC9B,MAAM,EAAE,QAAQ;CACR,CAAC;AAIJ,MAAM,8BAA8B,GAEvC,CAAC,6IAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC;AAG5B,MAAM,+BAA+B,GAExC,8BAA8B,CAAC;AAM7B,IAAW,iBAAiB,CAKjC;AALD,CAAA,SAAiB,iBAAiB;IAChC,8DAAA,EAAgE,CACnD,kBAAA,aAAa,GAAG,8BAA8B,CAAC;IAC5D,+DAAA,EAAiE,CACpD,kBAAA,cAAc,GAAG,+BAA+B,CAAC;AAChE,CAAC,EALgB,iBAAiB,IAAA,CAAjB,iBAAiB,GAAA,CAAA,CAAA,GAKjC","ignoreList":[0]}},
    {"offset": {"line": 5615, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5621, "column": 0}, "map": {"version":3,"file":"checkoutlink.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/checkoutlink.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  CheckoutLinkProduct,\n  CheckoutLinkProduct$inboundSchema,\n  CheckoutLinkProduct$Outbound,\n  CheckoutLinkProduct$outboundSchema,\n} from \"./checkoutlinkproduct.js\";\nimport {\n  DiscountFixedOnceForeverDurationBase,\n  DiscountFixedOnceForeverDurationBase$inboundSchema,\n  DiscountFixedOnceForeverDurationBase$Outbound,\n  DiscountFixedOnceForeverDurationBase$outboundSchema,\n} from \"./discountfixedonceforeverdurationbase.js\";\nimport {\n  DiscountFixedRepeatDurationBase,\n  DiscountFixedRepeatDurationBase$inboundSchema,\n  DiscountFixedRepeatDurationBase$Outbound,\n  DiscountFixedRepeatDurationBase$outboundSchema,\n} from \"./discountfixedrepeatdurationbase.js\";\nimport {\n  DiscountPercentageOnceForeverDurationBase,\n  DiscountPercentageOnceForeverDurationBase$inboundSchema,\n  DiscountPercentageOnceForeverDurationBase$Outbound,\n  DiscountPercentageOnceForeverDurationBase$outboundSchema,\n} from \"./discountpercentageonceforeverdurationbase.js\";\nimport {\n  DiscountPercentageRepeatDurationBase,\n  DiscountPercentageRepeatDurationBase$inboundSchema,\n  DiscountPercentageRepeatDurationBase$Outbound,\n  DiscountPercentageRepeatDurationBase$outboundSchema,\n} from \"./discountpercentagerepeatdurationbase.js\";\nimport {\n  PaymentProcessor,\n  PaymentProcessor$inboundSchema,\n  PaymentProcessor$outboundSchema,\n} from \"./paymentprocessor.js\";\n\nexport type CheckoutLinkMetadata = string | number | number | boolean;\n\nexport type CheckoutLinkDiscount =\n  | DiscountPercentageOnceForeverDurationBase\n  | DiscountFixedOnceForeverDurationBase\n  | DiscountPercentageRepeatDurationBase\n  | DiscountFixedRepeatDurationBase;\n\n/**\n * Checkout link data.\n */\nexport type CheckoutLink = {\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  /**\n   * The ID of the object.\n   */\n  id: string;\n  metadata: { [k: string]: string | number | number | boolean };\n  paymentProcessor: PaymentProcessor;\n  /**\n   * Client secret used to access the checkout link.\n   */\n  clientSecret: string;\n  /**\n   * URL where the customer will be redirected after a successful payment.\n   */\n  successUrl: string | null;\n  /**\n   * Optional label to distinguish links internally\n   */\n  label: string | null;\n  /**\n   * Whether to allow the customer to apply discount codes. If you apply a discount through `discount_id`, it'll still be applied, but the customer won't be able to change it.\n   */\n  allowDiscountCodes: boolean;\n  /**\n   * Whether to require the customer to fill their full billing address, instead of just the country. Customers in the US will always be required to fill their full address, regardless of this setting.\n   */\n  requireBillingAddress: boolean;\n  /**\n   * ID of the discount to apply to the checkout. If the discount is not applicable anymore when opening the checkout link, it'll be ignored.\n   */\n  discountId: string | null;\n  /**\n   * The organization ID.\n   */\n  organizationId: string;\n  products: Array<CheckoutLinkProduct>;\n  discount:\n    | DiscountPercentageOnceForeverDurationBase\n    | DiscountFixedOnceForeverDurationBase\n    | DiscountPercentageRepeatDurationBase\n    | DiscountFixedRepeatDurationBase\n    | null;\n  url: string;\n};\n\n/** @internal */\nexport const CheckoutLinkMetadata$inboundSchema: z.ZodType<\n  CheckoutLinkMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type CheckoutLinkMetadata$Outbound = string | number | number | boolean;\n\n/** @internal */\nexport const CheckoutLinkMetadata$outboundSchema: z.ZodType<\n  CheckoutLinkMetadata$Outbound,\n  z.ZodTypeDef,\n  CheckoutLinkMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CheckoutLinkMetadata$ {\n  /** @deprecated use `CheckoutLinkMetadata$inboundSchema` instead. */\n  export const inboundSchema = CheckoutLinkMetadata$inboundSchema;\n  /** @deprecated use `CheckoutLinkMetadata$outboundSchema` instead. */\n  export const outboundSchema = CheckoutLinkMetadata$outboundSchema;\n  /** @deprecated use `CheckoutLinkMetadata$Outbound` instead. */\n  export type Outbound = CheckoutLinkMetadata$Outbound;\n}\n\nexport function checkoutLinkMetadataToJSON(\n  checkoutLinkMetadata: CheckoutLinkMetadata,\n): string {\n  return JSON.stringify(\n    CheckoutLinkMetadata$outboundSchema.parse(checkoutLinkMetadata),\n  );\n}\n\nexport function checkoutLinkMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<CheckoutLinkMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CheckoutLinkMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CheckoutLinkMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const CheckoutLinkDiscount$inboundSchema: z.ZodType<\n  CheckoutLinkDiscount,\n  z.ZodTypeDef,\n  unknown\n> = z.union([\n  DiscountPercentageOnceForeverDurationBase$inboundSchema,\n  DiscountFixedOnceForeverDurationBase$inboundSchema,\n  DiscountPercentageRepeatDurationBase$inboundSchema,\n  DiscountFixedRepeatDurationBase$inboundSchema,\n]);\n\n/** @internal */\nexport type CheckoutLinkDiscount$Outbound =\n  | DiscountPercentageOnceForeverDurationBase$Outbound\n  | DiscountFixedOnceForeverDurationBase$Outbound\n  | DiscountPercentageRepeatDurationBase$Outbound\n  | DiscountFixedRepeatDurationBase$Outbound;\n\n/** @internal */\nexport const CheckoutLinkDiscount$outboundSchema: z.ZodType<\n  CheckoutLinkDiscount$Outbound,\n  z.ZodTypeDef,\n  CheckoutLinkDiscount\n> = z.union([\n  DiscountPercentageOnceForeverDurationBase$outboundSchema,\n  DiscountFixedOnceForeverDurationBase$outboundSchema,\n  DiscountPercentageRepeatDurationBase$outboundSchema,\n  DiscountFixedRepeatDurationBase$outboundSchema,\n]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CheckoutLinkDiscount$ {\n  /** @deprecated use `CheckoutLinkDiscount$inboundSchema` instead. */\n  export const inboundSchema = CheckoutLinkDiscount$inboundSchema;\n  /** @deprecated use `CheckoutLinkDiscount$outboundSchema` instead. */\n  export const outboundSchema = CheckoutLinkDiscount$outboundSchema;\n  /** @deprecated use `CheckoutLinkDiscount$Outbound` instead. */\n  export type Outbound = CheckoutLinkDiscount$Outbound;\n}\n\nexport function checkoutLinkDiscountToJSON(\n  checkoutLinkDiscount: CheckoutLinkDiscount,\n): string {\n  return JSON.stringify(\n    CheckoutLinkDiscount$outboundSchema.parse(checkoutLinkDiscount),\n  );\n}\n\nexport function checkoutLinkDiscountFromJSON(\n  jsonString: string,\n): SafeParseResult<CheckoutLinkDiscount, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CheckoutLinkDiscount$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CheckoutLinkDiscount' from JSON`,\n  );\n}\n\n/** @internal */\nexport const CheckoutLink$inboundSchema: z.ZodType<\n  CheckoutLink,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  id: z.string(),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  payment_processor: PaymentProcessor$inboundSchema,\n  client_secret: z.string(),\n  success_url: z.nullable(z.string()),\n  label: z.nullable(z.string()),\n  allow_discount_codes: z.boolean(),\n  require_billing_address: z.boolean(),\n  discount_id: z.nullable(z.string()),\n  organization_id: z.string(),\n  products: z.array(CheckoutLinkProduct$inboundSchema),\n  discount: z.nullable(\n    z.union([\n      DiscountPercentageOnceForeverDurationBase$inboundSchema,\n      DiscountFixedOnceForeverDurationBase$inboundSchema,\n      DiscountPercentageRepeatDurationBase$inboundSchema,\n      DiscountFixedRepeatDurationBase$inboundSchema,\n    ]),\n  ),\n  url: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"payment_processor\": \"paymentProcessor\",\n    \"client_secret\": \"clientSecret\",\n    \"success_url\": \"successUrl\",\n    \"allow_discount_codes\": \"allowDiscountCodes\",\n    \"require_billing_address\": \"requireBillingAddress\",\n    \"discount_id\": \"discountId\",\n    \"organization_id\": \"organizationId\",\n  });\n});\n\n/** @internal */\nexport type CheckoutLink$Outbound = {\n  created_at: string;\n  modified_at: string | null;\n  id: string;\n  metadata: { [k: string]: string | number | number | boolean };\n  payment_processor: string;\n  client_secret: string;\n  success_url: string | null;\n  label: string | null;\n  allow_discount_codes: boolean;\n  require_billing_address: boolean;\n  discount_id: string | null;\n  organization_id: string;\n  products: Array<CheckoutLinkProduct$Outbound>;\n  discount:\n    | DiscountPercentageOnceForeverDurationBase$Outbound\n    | DiscountFixedOnceForeverDurationBase$Outbound\n    | DiscountPercentageRepeatDurationBase$Outbound\n    | DiscountFixedRepeatDurationBase$Outbound\n    | null;\n  url: string;\n};\n\n/** @internal */\nexport const CheckoutLink$outboundSchema: z.ZodType<\n  CheckoutLink$Outbound,\n  z.ZodTypeDef,\n  CheckoutLink\n> = z.object({\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  id: z.string(),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  paymentProcessor: PaymentProcessor$outboundSchema,\n  clientSecret: z.string(),\n  successUrl: z.nullable(z.string()),\n  label: z.nullable(z.string()),\n  allowDiscountCodes: z.boolean(),\n  requireBillingAddress: z.boolean(),\n  discountId: z.nullable(z.string()),\n  organizationId: z.string(),\n  products: z.array(CheckoutLinkProduct$outboundSchema),\n  discount: z.nullable(\n    z.union([\n      DiscountPercentageOnceForeverDurationBase$outboundSchema,\n      DiscountFixedOnceForeverDurationBase$outboundSchema,\n      DiscountPercentageRepeatDurationBase$outboundSchema,\n      DiscountFixedRepeatDurationBase$outboundSchema,\n    ]),\n  ),\n  url: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    paymentProcessor: \"payment_processor\",\n    clientSecret: \"client_secret\",\n    successUrl: \"success_url\",\n    allowDiscountCodes: \"allow_discount_codes\",\n    requireBillingAddress: \"require_billing_address\",\n    discountId: \"discount_id\",\n    organizationId: \"organization_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CheckoutLink$ {\n  /** @deprecated use `CheckoutLink$inboundSchema` instead. */\n  export const inboundSchema = CheckoutLink$inboundSchema;\n  /** @deprecated use `CheckoutLink$outboundSchema` instead. */\n  export const outboundSchema = CheckoutLink$outboundSchema;\n  /** @deprecated use `CheckoutLink$Outbound` instead. */\n  export type Outbound = CheckoutLink$Outbound;\n}\n\nexport function checkoutLinkToJSON(checkoutLink: CheckoutLink): string {\n  return JSON.stringify(CheckoutLink$outboundSchema.parse(checkoutLink));\n}\n\nexport function checkoutLinkFromJSON(\n  jsonString: string,\n): SafeParseResult<CheckoutLink, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CheckoutLink$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CheckoutLink' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 5798, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5804, "column": 0}, "map": {"version":3,"file":"checkoutlinkcreateproduct.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/checkoutlinkcreateproduct.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport type CheckoutLinkCreateProductMetadata =\n  | string\n  | number\n  | number\n  | boolean;\n\n/**\n * Schema to create a new checkout link from a a single product.\n *\n * @remarks\n *\n * **Deprecated**: Use `CheckoutLinkCreateProducts` instead.\n */\nexport type CheckoutLinkCreateProduct = {\n  /**\n   * Key-value object allowing you to store additional information.\n   *\n   * @remarks\n   *\n   * The key must be a string with a maximum length of **40 characters**.\n   * The value must be either:\n   *\n   * * A string with a maximum length of **500 characters**\n   * * An integer\n   * * A floating-point number\n   * * A boolean\n   *\n   * You can store up to **50 key-value pairs**.\n   */\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  /**\n   * Payment processor to use. Currently only Stripe is supported.\n   */\n  paymentProcessor?: \"stripe\" | undefined;\n  /**\n   * Optional label to distinguish links internally\n   */\n  label?: string | null | undefined;\n  /**\n   * Whether to allow the customer to apply discount codes. If you apply a discount through `discount_id`, it'll still be applied, but the customer won't be able to change it.\n   */\n  allowDiscountCodes?: boolean | undefined;\n  /**\n   * Whether to require the customer to fill their full billing address, instead of just the country. Customers in the US will always be required to fill their full address, regardless of this setting.\n   */\n  requireBillingAddress?: boolean | undefined;\n  /**\n   * ID of the discount to apply to the checkout. If the discount is not applicable anymore when opening the checkout link, it'll be ignored.\n   */\n  discountId?: string | null | undefined;\n  /**\n   * URL where the customer will be redirected after a successful payment.You can add the `checkout_id={CHECKOUT_ID}` query parameter to retrieve the checkout session id.\n   */\n  successUrl?: string | null | undefined;\n  productId: string;\n};\n\n/** @internal */\nexport const CheckoutLinkCreateProductMetadata$inboundSchema: z.ZodType<\n  CheckoutLinkCreateProductMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type CheckoutLinkCreateProductMetadata$Outbound =\n  | string\n  | number\n  | number\n  | boolean;\n\n/** @internal */\nexport const CheckoutLinkCreateProductMetadata$outboundSchema: z.ZodType<\n  CheckoutLinkCreateProductMetadata$Outbound,\n  z.ZodTypeDef,\n  CheckoutLinkCreateProductMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CheckoutLinkCreateProductMetadata$ {\n  /** @deprecated use `CheckoutLinkCreateProductMetadata$inboundSchema` instead. */\n  export const inboundSchema = CheckoutLinkCreateProductMetadata$inboundSchema;\n  /** @deprecated use `CheckoutLinkCreateProductMetadata$outboundSchema` instead. */\n  export const outboundSchema =\n    CheckoutLinkCreateProductMetadata$outboundSchema;\n  /** @deprecated use `CheckoutLinkCreateProductMetadata$Outbound` instead. */\n  export type Outbound = CheckoutLinkCreateProductMetadata$Outbound;\n}\n\nexport function checkoutLinkCreateProductMetadataToJSON(\n  checkoutLinkCreateProductMetadata: CheckoutLinkCreateProductMetadata,\n): string {\n  return JSON.stringify(\n    CheckoutLinkCreateProductMetadata$outboundSchema.parse(\n      checkoutLinkCreateProductMetadata,\n    ),\n  );\n}\n\nexport function checkoutLinkCreateProductMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<CheckoutLinkCreateProductMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CheckoutLinkCreateProductMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CheckoutLinkCreateProductMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const CheckoutLinkCreateProduct$inboundSchema: z.ZodType<\n  CheckoutLinkCreateProduct,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  payment_processor: z.literal(\"stripe\").optional(),\n  label: z.nullable(z.string()).optional(),\n  allow_discount_codes: z.boolean().default(true),\n  require_billing_address: z.boolean().default(false),\n  discount_id: z.nullable(z.string()).optional(),\n  success_url: z.nullable(z.string()).optional(),\n  product_id: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    \"payment_processor\": \"paymentProcessor\",\n    \"allow_discount_codes\": \"allowDiscountCodes\",\n    \"require_billing_address\": \"requireBillingAddress\",\n    \"discount_id\": \"discountId\",\n    \"success_url\": \"successUrl\",\n    \"product_id\": \"productId\",\n  });\n});\n\n/** @internal */\nexport type CheckoutLinkCreateProduct$Outbound = {\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  payment_processor: \"stripe\";\n  label?: string | null | undefined;\n  allow_discount_codes: boolean;\n  require_billing_address: boolean;\n  discount_id?: string | null | undefined;\n  success_url?: string | null | undefined;\n  product_id: string;\n};\n\n/** @internal */\nexport const CheckoutLinkCreateProduct$outboundSchema: z.ZodType<\n  CheckoutLinkCreateProduct$Outbound,\n  z.ZodTypeDef,\n  CheckoutLinkCreateProduct\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  paymentProcessor: z.literal(\"stripe\").default(\"stripe\" as const),\n  label: z.nullable(z.string()).optional(),\n  allowDiscountCodes: z.boolean().default(true),\n  requireBillingAddress: z.boolean().default(false),\n  discountId: z.nullable(z.string()).optional(),\n  successUrl: z.nullable(z.string()).optional(),\n  productId: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    paymentProcessor: \"payment_processor\",\n    allowDiscountCodes: \"allow_discount_codes\",\n    requireBillingAddress: \"require_billing_address\",\n    discountId: \"discount_id\",\n    successUrl: \"success_url\",\n    productId: \"product_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CheckoutLinkCreateProduct$ {\n  /** @deprecated use `CheckoutLinkCreateProduct$inboundSchema` instead. */\n  export const inboundSchema = CheckoutLinkCreateProduct$inboundSchema;\n  /** @deprecated use `CheckoutLinkCreateProduct$outboundSchema` instead. */\n  export const outboundSchema = CheckoutLinkCreateProduct$outboundSchema;\n  /** @deprecated use `CheckoutLinkCreateProduct$Outbound` instead. */\n  export type Outbound = CheckoutLinkCreateProduct$Outbound;\n}\n\nexport function checkoutLinkCreateProductToJSON(\n  checkoutLinkCreateProduct: CheckoutLinkCreateProduct,\n): string {\n  return JSON.stringify(\n    CheckoutLinkCreateProduct$outboundSchema.parse(checkoutLinkCreateProduct),\n  );\n}\n\nexport function checkoutLinkCreateProductFromJSON(\n  jsonString: string,\n): SafeParseResult<CheckoutLinkCreateProduct, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CheckoutLinkCreateProduct$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CheckoutLinkCreateProduct' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;;;;;AA8D1C,MAAM,+CAA+C,GAIxD,CAAC,6IAAC,KAAK,CAAC;IAAC,CAAC,6IAAC,MAAM,EAAE;IAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAAE,CAAC,6IAAC,MAAM,EAAE;IAAE,CAAC,6IAAC,OAAO,EAAE;CAAC,CAAC,CAAC;AAU9D,MAAM,gDAAgD,GAIzD,CAAC,6IAAC,KAAK,CAAC;IAAC,CAAC,6IAAC,MAAM,EAAE;IAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAAE,CAAC,6IAAC,MAAM,EAAE;IAAE,CAAC,6IAAC,OAAO,EAAE;CAAC,CAAC,CAAC;AAM/D,IAAW,kCAAkC,CAQlD;AARD,CAAA,SAAiB,kCAAkC;IACjD,+EAAA,EAAiF,CACpE,mCAAA,aAAa,GAAG,+CAA+C,CAAC;IAC7E,gFAAA,EAAkF,CACrE,mCAAA,cAAc,GACzB,gDAAgD,CAAC;AAGrD,CAAC,EARgB,kCAAkC,IAAA,CAAlC,kCAAkC,GAAA,CAAA,CAAA,GAQlD;AAEK,SAAU,uCAAuC,CACrD,iCAAoE;IAEpE,OAAO,IAAI,CAAC,SAAS,CACnB,gDAAgD,CAAC,KAAK,CACpD,iCAAiC,CAClC,CACF,CAAC;AACJ,CAAC;AAEK,SAAU,yCAAyC,CACvD,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,8CAAgD,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC3E,CAAA,6DAAA,CAA+D,CAChE,CAAC;AACJ,CAAC;AAGM,MAAM,uCAAuC,GAIhD,CAAC,6IAAC,MAAM,CAAC;IACX,QAAQ,EAAE,CAAC,6IAAC,MAAM,CAChB,CAAC,6IAAC,KAAK,CAAC;QAAC,CAAC,6IAAC,MAAM,EAAE;QAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;QAAE,CAAC,6IAAC,MAAM,EAAE;QAAE,CAAC,6IAAC,OAAO,EAAE;KAAC,CAAC,CACjE,CAAC,QAAQ,EAAE;IACZ,iBAAiB,EAAE,CAAC,6IAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE;IACjD,KAAK,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;IACxC,oBAAoB,EAAE,CAAC,6IAAC,OAAO,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC;IAC/C,uBAAuB,EAAE,CAAC,6IAAC,OAAO,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC;IACnD,WAAW,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;IAC9C,WAAW,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;IAC9C,UAAU,EAAE,CAAC,6IAAC,MAAM,EAAE;CACvB,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAM,AAAN,EAAO,CAAC,EAAE;QACf,mBAAmB,EAAE,kBAAkB;QACvC,sBAAsB,EAAE,oBAAoB;QAC5C,yBAAyB,EAAE,uBAAuB;QAClD,aAAa,EAAE,YAAY;QAC3B,aAAa,EAAE,YAAY;QAC3B,YAAY,EAAE,WAAW;KAC1B,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAeI,MAAM,wCAAwC,GAIjD,CAAC,6IAAC,MAAM,CAAC;IACX,QAAQ,EAAE,CAAC,6IAAC,MAAM,CAChB,CAAC,6IAAC,KAAK,CAAC;QAAC,CAAC,6IAAC,MAAM,EAAE;QAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;QAAE,CAAC,6IAAC,MAAM,EAAE;QAAE,CAAC,6IAAC,OAAO,EAAE;KAAC,CAAC,CACjE,CAAC,QAAQ,EAAE;IACZ,gBAAgB,EAAE,CAAC,6IAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,QAAiB,CAAC;IAChE,KAAK,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;IACxC,kBAAkB,EAAE,CAAC,6IAAC,OAAO,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC;IAC7C,qBAAqB,EAAE,CAAC,6IAAC,OAAO,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC;IACjD,UAAU,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;IAC7C,UAAU,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;IAC7C,SAAS,EAAE,CAAC,6IAAC,MAAM,EAAE;CACtB,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,gBAAgB,EAAE,mBAAmB;QACrC,kBAAkB,EAAE,sBAAsB;QAC1C,qBAAqB,EAAE,yBAAyB;QAChD,UAAU,EAAE,aAAa;QACzB,UAAU,EAAE,aAAa;QACzB,SAAS,EAAE,YAAY;KACxB,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,0BAA0B,CAO1C;AAPD,CAAA,SAAiB,0BAA0B;IACzC,uEAAA,EAAyE,CAC5D,2BAAA,aAAa,GAAG,uCAAuC,CAAC;IACrE,wEAAA,EAA0E,CAC7D,2BAAA,cAAc,GAAG,wCAAwC,CAAC;AAGzE,CAAC,EAPgB,0BAA0B,IAAA,CAA1B,0BAA0B,GAAA,CAAA,CAAA,GAO1C;AAEK,SAAU,+BAA+B,CAC7C,yBAAoD;IAEpD,OAAO,IAAI,CAAC,SAAS,CACnB,wCAAwC,CAAC,KAAK,CAAC,yBAAyB,CAAC,CAC1E,CAAC;AACJ,CAAC;AAEK,SAAU,iCAAiC,CAC/C,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,sCAAwC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACnE,CAAA,qDAAA,CAAuD,CACxD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 5907, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5913, "column": 0}, "map": {"version":3,"file":"checkoutlinkcreateproductprice.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/checkoutlinkcreateproductprice.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport type CheckoutLinkCreateProductPriceMetadata =\n  | string\n  | number\n  | number\n  | boolean;\n\n/**\n * Schema to create a new checkout link from a a single product price.\n *\n * @remarks\n *\n * **Deprecated**: Use `CheckoutLinkCreateProducts` instead.\n */\nexport type CheckoutLinkCreateProductPrice = {\n  /**\n   * Key-value object allowing you to store additional information.\n   *\n   * @remarks\n   *\n   * The key must be a string with a maximum length of **40 characters**.\n   * The value must be either:\n   *\n   * * A string with a maximum length of **500 characters**\n   * * An integer\n   * * A floating-point number\n   * * A boolean\n   *\n   * You can store up to **50 key-value pairs**.\n   */\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  /**\n   * Payment processor to use. Currently only Stripe is supported.\n   */\n  paymentProcessor?: \"stripe\" | undefined;\n  /**\n   * Optional label to distinguish links internally\n   */\n  label?: string | null | undefined;\n  /**\n   * Whether to allow the customer to apply discount codes. If you apply a discount through `discount_id`, it'll still be applied, but the customer won't be able to change it.\n   */\n  allowDiscountCodes?: boolean | undefined;\n  /**\n   * Whether to require the customer to fill their full billing address, instead of just the country. Customers in the US will always be required to fill their full address, regardless of this setting.\n   */\n  requireBillingAddress?: boolean | undefined;\n  /**\n   * ID of the discount to apply to the checkout. If the discount is not applicable anymore when opening the checkout link, it'll be ignored.\n   */\n  discountId?: string | null | undefined;\n  /**\n   * URL where the customer will be redirected after a successful payment.You can add the `checkout_id={CHECKOUT_ID}` query parameter to retrieve the checkout session id.\n   */\n  successUrl?: string | null | undefined;\n  productPriceId: string;\n};\n\n/** @internal */\nexport const CheckoutLinkCreateProductPriceMetadata$inboundSchema: z.ZodType<\n  CheckoutLinkCreateProductPriceMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type CheckoutLinkCreateProductPriceMetadata$Outbound =\n  | string\n  | number\n  | number\n  | boolean;\n\n/** @internal */\nexport const CheckoutLinkCreateProductPriceMetadata$outboundSchema: z.ZodType<\n  CheckoutLinkCreateProductPriceMetadata$Outbound,\n  z.ZodTypeDef,\n  CheckoutLinkCreateProductPriceMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CheckoutLinkCreateProductPriceMetadata$ {\n  /** @deprecated use `CheckoutLinkCreateProductPriceMetadata$inboundSchema` instead. */\n  export const inboundSchema =\n    CheckoutLinkCreateProductPriceMetadata$inboundSchema;\n  /** @deprecated use `CheckoutLinkCreateProductPriceMetadata$outboundSchema` instead. */\n  export const outboundSchema =\n    CheckoutLinkCreateProductPriceMetadata$outboundSchema;\n  /** @deprecated use `CheckoutLinkCreateProductPriceMetadata$Outbound` instead. */\n  export type Outbound = CheckoutLinkCreateProductPriceMetadata$Outbound;\n}\n\nexport function checkoutLinkCreateProductPriceMetadataToJSON(\n  checkoutLinkCreateProductPriceMetadata:\n    CheckoutLinkCreateProductPriceMetadata,\n): string {\n  return JSON.stringify(\n    CheckoutLinkCreateProductPriceMetadata$outboundSchema.parse(\n      checkoutLinkCreateProductPriceMetadata,\n    ),\n  );\n}\n\nexport function checkoutLinkCreateProductPriceMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<CheckoutLinkCreateProductPriceMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) =>\n      CheckoutLinkCreateProductPriceMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CheckoutLinkCreateProductPriceMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const CheckoutLinkCreateProductPrice$inboundSchema: z.ZodType<\n  CheckoutLinkCreateProductPrice,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  payment_processor: z.literal(\"stripe\").optional(),\n  label: z.nullable(z.string()).optional(),\n  allow_discount_codes: z.boolean().default(true),\n  require_billing_address: z.boolean().default(false),\n  discount_id: z.nullable(z.string()).optional(),\n  success_url: z.nullable(z.string()).optional(),\n  product_price_id: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    \"payment_processor\": \"paymentProcessor\",\n    \"allow_discount_codes\": \"allowDiscountCodes\",\n    \"require_billing_address\": \"requireBillingAddress\",\n    \"discount_id\": \"discountId\",\n    \"success_url\": \"successUrl\",\n    \"product_price_id\": \"productPriceId\",\n  });\n});\n\n/** @internal */\nexport type CheckoutLinkCreateProductPrice$Outbound = {\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  payment_processor: \"stripe\";\n  label?: string | null | undefined;\n  allow_discount_codes: boolean;\n  require_billing_address: boolean;\n  discount_id?: string | null | undefined;\n  success_url?: string | null | undefined;\n  product_price_id: string;\n};\n\n/** @internal */\nexport const CheckoutLinkCreateProductPrice$outboundSchema: z.ZodType<\n  CheckoutLinkCreateProductPrice$Outbound,\n  z.ZodTypeDef,\n  CheckoutLinkCreateProductPrice\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  paymentProcessor: z.literal(\"stripe\").default(\"stripe\" as const),\n  label: z.nullable(z.string()).optional(),\n  allowDiscountCodes: z.boolean().default(true),\n  requireBillingAddress: z.boolean().default(false),\n  discountId: z.nullable(z.string()).optional(),\n  successUrl: z.nullable(z.string()).optional(),\n  productPriceId: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    paymentProcessor: \"payment_processor\",\n    allowDiscountCodes: \"allow_discount_codes\",\n    requireBillingAddress: \"require_billing_address\",\n    discountId: \"discount_id\",\n    successUrl: \"success_url\",\n    productPriceId: \"product_price_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CheckoutLinkCreateProductPrice$ {\n  /** @deprecated use `CheckoutLinkCreateProductPrice$inboundSchema` instead. */\n  export const inboundSchema = CheckoutLinkCreateProductPrice$inboundSchema;\n  /** @deprecated use `CheckoutLinkCreateProductPrice$outboundSchema` instead. */\n  export const outboundSchema = CheckoutLinkCreateProductPrice$outboundSchema;\n  /** @deprecated use `CheckoutLinkCreateProductPrice$Outbound` instead. */\n  export type Outbound = CheckoutLinkCreateProductPrice$Outbound;\n}\n\nexport function checkoutLinkCreateProductPriceToJSON(\n  checkoutLinkCreateProductPrice: CheckoutLinkCreateProductPrice,\n): string {\n  return JSON.stringify(\n    CheckoutLinkCreateProductPrice$outboundSchema.parse(\n      checkoutLinkCreateProductPrice,\n    ),\n  );\n}\n\nexport function checkoutLinkCreateProductPriceFromJSON(\n  jsonString: string,\n): SafeParseResult<CheckoutLinkCreateProductPrice, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CheckoutLinkCreateProductPrice$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CheckoutLinkCreateProductPrice' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 6016, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6022, "column": 0}, "map": {"version":3,"file":"checkoutlinkcreateproducts.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/checkoutlinkcreateproducts.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport type CheckoutLinkCreateProductsMetadata =\n  | string\n  | number\n  | number\n  | boolean;\n\n/**\n * Schema to create a new checkout link.\n */\nexport type CheckoutLinkCreateProducts = {\n  /**\n   * Key-value object allowing you to store additional information.\n   *\n   * @remarks\n   *\n   * The key must be a string with a maximum length of **40 characters**.\n   * The value must be either:\n   *\n   * * A string with a maximum length of **500 characters**\n   * * An integer\n   * * A floating-point number\n   * * A boolean\n   *\n   * You can store up to **50 key-value pairs**.\n   */\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  /**\n   * Payment processor to use. Currently only Stripe is supported.\n   */\n  paymentProcessor?: \"stripe\" | undefined;\n  /**\n   * Optional label to distinguish links internally\n   */\n  label?: string | null | undefined;\n  /**\n   * Whether to allow the customer to apply discount codes. If you apply a discount through `discount_id`, it'll still be applied, but the customer won't be able to change it.\n   */\n  allowDiscountCodes?: boolean | undefined;\n  /**\n   * Whether to require the customer to fill their full billing address, instead of just the country. Customers in the US will always be required to fill their full address, regardless of this setting.\n   */\n  requireBillingAddress?: boolean | undefined;\n  /**\n   * ID of the discount to apply to the checkout. If the discount is not applicable anymore when opening the checkout link, it'll be ignored.\n   */\n  discountId?: string | null | undefined;\n  /**\n   * URL where the customer will be redirected after a successful payment.You can add the `checkout_id={CHECKOUT_ID}` query parameter to retrieve the checkout session id.\n   */\n  successUrl?: string | null | undefined;\n  /**\n   * List of products that will be available to select at checkout.\n   */\n  products: Array<string>;\n};\n\n/** @internal */\nexport const CheckoutLinkCreateProductsMetadata$inboundSchema: z.ZodType<\n  CheckoutLinkCreateProductsMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type CheckoutLinkCreateProductsMetadata$Outbound =\n  | string\n  | number\n  | number\n  | boolean;\n\n/** @internal */\nexport const CheckoutLinkCreateProductsMetadata$outboundSchema: z.ZodType<\n  CheckoutLinkCreateProductsMetadata$Outbound,\n  z.ZodTypeDef,\n  CheckoutLinkCreateProductsMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CheckoutLinkCreateProductsMetadata$ {\n  /** @deprecated use `CheckoutLinkCreateProductsMetadata$inboundSchema` instead. */\n  export const inboundSchema = CheckoutLinkCreateProductsMetadata$inboundSchema;\n  /** @deprecated use `CheckoutLinkCreateProductsMetadata$outboundSchema` instead. */\n  export const outboundSchema =\n    CheckoutLinkCreateProductsMetadata$outboundSchema;\n  /** @deprecated use `CheckoutLinkCreateProductsMetadata$Outbound` instead. */\n  export type Outbound = CheckoutLinkCreateProductsMetadata$Outbound;\n}\n\nexport function checkoutLinkCreateProductsMetadataToJSON(\n  checkoutLinkCreateProductsMetadata: CheckoutLinkCreateProductsMetadata,\n): string {\n  return JSON.stringify(\n    CheckoutLinkCreateProductsMetadata$outboundSchema.parse(\n      checkoutLinkCreateProductsMetadata,\n    ),\n  );\n}\n\nexport function checkoutLinkCreateProductsMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<CheckoutLinkCreateProductsMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) =>\n      CheckoutLinkCreateProductsMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CheckoutLinkCreateProductsMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const CheckoutLinkCreateProducts$inboundSchema: z.ZodType<\n  CheckoutLinkCreateProducts,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  payment_processor: z.literal(\"stripe\").optional(),\n  label: z.nullable(z.string()).optional(),\n  allow_discount_codes: z.boolean().default(true),\n  require_billing_address: z.boolean().default(false),\n  discount_id: z.nullable(z.string()).optional(),\n  success_url: z.nullable(z.string()).optional(),\n  products: z.array(z.string()),\n}).transform((v) => {\n  return remap$(v, {\n    \"payment_processor\": \"paymentProcessor\",\n    \"allow_discount_codes\": \"allowDiscountCodes\",\n    \"require_billing_address\": \"requireBillingAddress\",\n    \"discount_id\": \"discountId\",\n    \"success_url\": \"successUrl\",\n  });\n});\n\n/** @internal */\nexport type CheckoutLinkCreateProducts$Outbound = {\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  payment_processor: \"stripe\";\n  label?: string | null | undefined;\n  allow_discount_codes: boolean;\n  require_billing_address: boolean;\n  discount_id?: string | null | undefined;\n  success_url?: string | null | undefined;\n  products: Array<string>;\n};\n\n/** @internal */\nexport const CheckoutLinkCreateProducts$outboundSchema: z.ZodType<\n  CheckoutLinkCreateProducts$Outbound,\n  z.ZodTypeDef,\n  CheckoutLinkCreateProducts\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  paymentProcessor: z.literal(\"stripe\").default(\"stripe\" as const),\n  label: z.nullable(z.string()).optional(),\n  allowDiscountCodes: z.boolean().default(true),\n  requireBillingAddress: z.boolean().default(false),\n  discountId: z.nullable(z.string()).optional(),\n  successUrl: z.nullable(z.string()).optional(),\n  products: z.array(z.string()),\n}).transform((v) => {\n  return remap$(v, {\n    paymentProcessor: \"payment_processor\",\n    allowDiscountCodes: \"allow_discount_codes\",\n    requireBillingAddress: \"require_billing_address\",\n    discountId: \"discount_id\",\n    successUrl: \"success_url\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CheckoutLinkCreateProducts$ {\n  /** @deprecated use `CheckoutLinkCreateProducts$inboundSchema` instead. */\n  export const inboundSchema = CheckoutLinkCreateProducts$inboundSchema;\n  /** @deprecated use `CheckoutLinkCreateProducts$outboundSchema` instead. */\n  export const outboundSchema = CheckoutLinkCreateProducts$outboundSchema;\n  /** @deprecated use `CheckoutLinkCreateProducts$Outbound` instead. */\n  export type Outbound = CheckoutLinkCreateProducts$Outbound;\n}\n\nexport function checkoutLinkCreateProductsToJSON(\n  checkoutLinkCreateProducts: CheckoutLinkCreateProducts,\n): string {\n  return JSON.stringify(\n    CheckoutLinkCreateProducts$outboundSchema.parse(checkoutLinkCreateProducts),\n  );\n}\n\nexport function checkoutLinkCreateProductsFromJSON(\n  jsonString: string,\n): SafeParseResult<CheckoutLinkCreateProducts, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CheckoutLinkCreateProducts$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CheckoutLinkCreateProducts' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 6123, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6129, "column": 0}, "map": {"version":3,"file":"checkoutlinksortproperty.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/checkoutlinksortproperty.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { ClosedEnum } from \"../../types/enums.js\";\n\nexport const CheckoutLinkSortProperty = {\n  CreatedAt: \"created_at\",\n  MinusCreatedAt: \"-created_at\",\n  Label: \"label\",\n  MinusLabel: \"-label\",\n  SuccessUrl: \"success_url\",\n  MinusSuccessUrl: \"-success_url\",\n  AllowDiscountCodes: \"allow_discount_codes\",\n  MinusAllowDiscountCodes: \"-allow_discount_codes\",\n} as const;\nexport type CheckoutLinkSortProperty = ClosedEnum<\n  typeof CheckoutLinkSortProperty\n>;\n\n/** @internal */\nexport const CheckoutLinkSortProperty$inboundSchema: z.ZodNativeEnum<\n  typeof CheckoutLinkSortProperty\n> = z.nativeEnum(CheckoutLinkSortProperty);\n\n/** @internal */\nexport const CheckoutLinkSortProperty$outboundSchema: z.ZodNativeEnum<\n  typeof CheckoutLinkSortProperty\n> = CheckoutLinkSortProperty$inboundSchema;\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CheckoutLinkSortProperty$ {\n  /** @deprecated use `CheckoutLinkSortProperty$inboundSchema` instead. */\n  export const inboundSchema = CheckoutLinkSortProperty$inboundSchema;\n  /** @deprecated use `CheckoutLinkSortProperty$outboundSchema` instead. */\n  export const outboundSchema = CheckoutLinkSortProperty$outboundSchema;\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;AAGlB,MAAM,wBAAwB,GAAG;IACtC,SAAS,EAAE,YAAY;IACvB,cAAc,EAAE,aAAa;IAC7B,KAAK,EAAE,OAAO;IACd,UAAU,EAAE,QAAQ;IACpB,UAAU,EAAE,aAAa;IACzB,eAAe,EAAE,cAAc;IAC/B,kBAAkB,EAAE,sBAAsB;IAC1C,uBAAuB,EAAE,uBAAuB;CACxC,CAAC;AAMJ,MAAM,sCAAsC,GAE/C,CAAC,6IAAC,UAAU,CAAC,wBAAwB,CAAC,CAAC;AAGpC,MAAM,uCAAuC,GAEhD,sCAAsC,CAAC;AAMrC,IAAW,yBAAyB,CAKzC;AALD,CAAA,SAAiB,yBAAyB;IACxC,sEAAA,EAAwE,CAC3D,0BAAA,aAAa,GAAG,sCAAsC,CAAC;IACpE,uEAAA,EAAyE,CAC5D,0BAAA,cAAc,GAAG,uCAAuC,CAAC;AACxE,CAAC,EALgB,yBAAyB,IAAA,CAAzB,yBAAyB,GAAA,CAAA,CAAA,GAKzC","ignoreList":[0]}},
    {"offset": {"line": 6157, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6163, "column": 0}, "map": {"version":3,"file":"listresourcecheckoutlink.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/listresourcecheckoutlink.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  CheckoutLink,\n  CheckoutLink$inboundSchema,\n  CheckoutLink$Outbound,\n  CheckoutLink$outboundSchema,\n} from \"./checkoutlink.js\";\nimport {\n  Pagination,\n  Pagination$inboundSchema,\n  Pagination$Outbound,\n  Pagination$outboundSchema,\n} from \"./pagination.js\";\n\nexport type ListResourceCheckoutLink = {\n  items: Array<CheckoutLink>;\n  pagination: Pagination;\n};\n\n/** @internal */\nexport const ListResourceCheckoutLink$inboundSchema: z.ZodType<\n  ListResourceCheckoutLink,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  items: z.array(CheckoutLink$inboundSchema),\n  pagination: Pagination$inboundSchema,\n});\n\n/** @internal */\nexport type ListResourceCheckoutLink$Outbound = {\n  items: Array<CheckoutLink$Outbound>;\n  pagination: Pagination$Outbound;\n};\n\n/** @internal */\nexport const ListResourceCheckoutLink$outboundSchema: z.ZodType<\n  ListResourceCheckoutLink$Outbound,\n  z.ZodTypeDef,\n  ListResourceCheckoutLink\n> = z.object({\n  items: z.array(CheckoutLink$outboundSchema),\n  pagination: Pagination$outboundSchema,\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace ListResourceCheckoutLink$ {\n  /** @deprecated use `ListResourceCheckoutLink$inboundSchema` instead. */\n  export const inboundSchema = ListResourceCheckoutLink$inboundSchema;\n  /** @deprecated use `ListResourceCheckoutLink$outboundSchema` instead. */\n  export const outboundSchema = ListResourceCheckoutLink$outboundSchema;\n  /** @deprecated use `ListResourceCheckoutLink$Outbound` instead. */\n  export type Outbound = ListResourceCheckoutLink$Outbound;\n}\n\nexport function listResourceCheckoutLinkToJSON(\n  listResourceCheckoutLink: ListResourceCheckoutLink,\n): string {\n  return JSON.stringify(\n    ListResourceCheckoutLink$outboundSchema.parse(listResourceCheckoutLink),\n  );\n}\n\nexport function listResourceCheckoutLinkFromJSON(\n  jsonString: string,\n): SafeParseResult<ListResourceCheckoutLink, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => ListResourceCheckoutLink$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'ListResourceCheckoutLink' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;AAGH,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,0BAA0B,EAE1B,2BAA2B,GAC5B,MAAM,mBAAmB,CAAC;AAC3B,OAAO,EAEL,wBAAwB,EAExB,yBAAyB,GAC1B,MAAM,iBAAiB,CAAC;AAfzB,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;;;;AAuBlB,MAAM,sCAAsC,GAI/C,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,KAAK,+LAAC,6BAA0B,CAAC;IAC1C,UAAU,8LAAE,2BAAwB;CACrC,CAAC,CAAC;AASI,MAAM,uCAAuC,GAIhD,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,KAAK,+LAAC,8BAA2B,CAAC;IAC3C,UAAU,8LAAE,4BAAyB;CACtC,CAAC,CAAC;AAMG,IAAW,yBAAyB,CAOzC;AAPD,CAAA,SAAiB,yBAAyB;IACxC,sEAAA,EAAwE,CAC3D,0BAAA,aAAa,GAAG,sCAAsC,CAAC;IACpE,uEAAA,EAAyE,CAC5D,0BAAA,cAAc,GAAG,uCAAuC,CAAC;AAGxE,CAAC,EAPgB,yBAAyB,IAAA,CAAzB,yBAAyB,GAAA,CAAA,CAAA,GAOzC;AAEK,SAAU,8BAA8B,CAC5C,wBAAkD;IAElD,OAAO,IAAI,CAAC,SAAS,CACnB,uCAAuC,CAAC,KAAK,CAAC,wBAAwB,CAAC,CACxE,CAAC;AACJ,CAAC;AAEK,SAAU,gCAAgC,CAC9C,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,qCAAuC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAClE,CAAA,oDAAA,CAAsD,CACvD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 6200, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6206, "column": 0}, "map": {"version":3,"file":"checkoutlinkupdate.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/checkoutlinkupdate.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport type CheckoutLinkUpdateMetadata = string | number | number | boolean;\n\n/**\n * Schema to update an existing checkout link.\n */\nexport type CheckoutLinkUpdate = {\n  /**\n   * Key-value object allowing you to store additional information.\n   *\n   * @remarks\n   *\n   * The key must be a string with a maximum length of **40 characters**.\n   * The value must be either:\n   *\n   * * A string with a maximum length of **500 characters**\n   * * An integer\n   * * A floating-point number\n   * * A boolean\n   *\n   * You can store up to **50 key-value pairs**.\n   */\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  /**\n   * List of products that will be available to select at checkout.\n   */\n  products?: Array<string> | null | undefined;\n  label?: string | null | undefined;\n  /**\n   * Whether to allow the customer to apply discount codes. If you apply a discount through `discount_id`, it'll still be applied, but the customer won't be able to change it.\n   */\n  allowDiscountCodes?: boolean | null | undefined;\n  /**\n   * Whether to require the customer to fill their full billing address, instead of just the country. Customers in the US will always be required to fill their full address, regardless of this setting.\n   */\n  requireBillingAddress?: boolean | null | undefined;\n  /**\n   * ID of the discount to apply to the checkout. If the discount is not applicable anymore when opening the checkout link, it'll be ignored.\n   */\n  discountId?: string | null | undefined;\n  /**\n   * URL where the customer will be redirected after a successful payment.You can add the `checkout_id={CHECKOUT_ID}` query parameter to retrieve the checkout session id.\n   */\n  successUrl?: string | null | undefined;\n};\n\n/** @internal */\nexport const CheckoutLinkUpdateMetadata$inboundSchema: z.ZodType<\n  CheckoutLinkUpdateMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type CheckoutLinkUpdateMetadata$Outbound =\n  | string\n  | number\n  | number\n  | boolean;\n\n/** @internal */\nexport const CheckoutLinkUpdateMetadata$outboundSchema: z.ZodType<\n  CheckoutLinkUpdateMetadata$Outbound,\n  z.ZodTypeDef,\n  CheckoutLinkUpdateMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CheckoutLinkUpdateMetadata$ {\n  /** @deprecated use `CheckoutLinkUpdateMetadata$inboundSchema` instead. */\n  export const inboundSchema = CheckoutLinkUpdateMetadata$inboundSchema;\n  /** @deprecated use `CheckoutLinkUpdateMetadata$outboundSchema` instead. */\n  export const outboundSchema = CheckoutLinkUpdateMetadata$outboundSchema;\n  /** @deprecated use `CheckoutLinkUpdateMetadata$Outbound` instead. */\n  export type Outbound = CheckoutLinkUpdateMetadata$Outbound;\n}\n\nexport function checkoutLinkUpdateMetadataToJSON(\n  checkoutLinkUpdateMetadata: CheckoutLinkUpdateMetadata,\n): string {\n  return JSON.stringify(\n    CheckoutLinkUpdateMetadata$outboundSchema.parse(checkoutLinkUpdateMetadata),\n  );\n}\n\nexport function checkoutLinkUpdateMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<CheckoutLinkUpdateMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CheckoutLinkUpdateMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CheckoutLinkUpdateMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const CheckoutLinkUpdate$inboundSchema: z.ZodType<\n  CheckoutLinkUpdate,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  products: z.nullable(z.array(z.string())).optional(),\n  label: z.nullable(z.string()).optional(),\n  allow_discount_codes: z.nullable(z.boolean()).optional(),\n  require_billing_address: z.nullable(z.boolean()).optional(),\n  discount_id: z.nullable(z.string()).optional(),\n  success_url: z.nullable(z.string()).optional(),\n}).transform((v) => {\n  return remap$(v, {\n    \"allow_discount_codes\": \"allowDiscountCodes\",\n    \"require_billing_address\": \"requireBillingAddress\",\n    \"discount_id\": \"discountId\",\n    \"success_url\": \"successUrl\",\n  });\n});\n\n/** @internal */\nexport type CheckoutLinkUpdate$Outbound = {\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  products?: Array<string> | null | undefined;\n  label?: string | null | undefined;\n  allow_discount_codes?: boolean | null | undefined;\n  require_billing_address?: boolean | null | undefined;\n  discount_id?: string | null | undefined;\n  success_url?: string | null | undefined;\n};\n\n/** @internal */\nexport const CheckoutLinkUpdate$outboundSchema: z.ZodType<\n  CheckoutLinkUpdate$Outbound,\n  z.ZodTypeDef,\n  CheckoutLinkUpdate\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  products: z.nullable(z.array(z.string())).optional(),\n  label: z.nullable(z.string()).optional(),\n  allowDiscountCodes: z.nullable(z.boolean()).optional(),\n  requireBillingAddress: z.nullable(z.boolean()).optional(),\n  discountId: z.nullable(z.string()).optional(),\n  successUrl: z.nullable(z.string()).optional(),\n}).transform((v) => {\n  return remap$(v, {\n    allowDiscountCodes: \"allow_discount_codes\",\n    requireBillingAddress: \"require_billing_address\",\n    discountId: \"discount_id\",\n    successUrl: \"success_url\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CheckoutLinkUpdate$ {\n  /** @deprecated use `CheckoutLinkUpdate$inboundSchema` instead. */\n  export const inboundSchema = CheckoutLinkUpdate$inboundSchema;\n  /** @deprecated use `CheckoutLinkUpdate$outboundSchema` instead. */\n  export const outboundSchema = CheckoutLinkUpdate$outboundSchema;\n  /** @deprecated use `CheckoutLinkUpdate$Outbound` instead. */\n  export type Outbound = CheckoutLinkUpdate$Outbound;\n}\n\nexport function checkoutLinkUpdateToJSON(\n  checkoutLinkUpdate: CheckoutLinkUpdate,\n): string {\n  return JSON.stringify(\n    CheckoutLinkUpdate$outboundSchema.parse(checkoutLinkUpdate),\n  );\n}\n\nexport function checkoutLinkUpdateFromJSON(\n  jsonString: string,\n): SafeParseResult<CheckoutLinkUpdate, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CheckoutLinkUpdate$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CheckoutLinkUpdate' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 6303, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6309, "column": 0}, "map": {"version":3,"file":"customfieldcheckboxproperties.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customfieldcheckboxproperties.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport type CustomFieldCheckboxProperties = {\n  formLabel?: string | undefined;\n  formHelpText?: string | undefined;\n  formPlaceholder?: string | undefined;\n};\n\n/** @internal */\nexport const CustomFieldCheckboxProperties$inboundSchema: z.ZodType<\n  CustomFieldCheckboxProperties,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  form_label: z.string().optional(),\n  form_help_text: z.string().optional(),\n  form_placeholder: z.string().optional(),\n}).transform((v) => {\n  return remap$(v, {\n    \"form_label\": \"formLabel\",\n    \"form_help_text\": \"formHelpText\",\n    \"form_placeholder\": \"formPlaceholder\",\n  });\n});\n\n/** @internal */\nexport type CustomFieldCheckboxProperties$Outbound = {\n  form_label?: string | undefined;\n  form_help_text?: string | undefined;\n  form_placeholder?: string | undefined;\n};\n\n/** @internal */\nexport const CustomFieldCheckboxProperties$outboundSchema: z.ZodType<\n  CustomFieldCheckboxProperties$Outbound,\n  z.ZodTypeDef,\n  CustomFieldCheckboxProperties\n> = z.object({\n  formLabel: z.string().optional(),\n  formHelpText: z.string().optional(),\n  formPlaceholder: z.string().optional(),\n}).transform((v) => {\n  return remap$(v, {\n    formLabel: \"form_label\",\n    formHelpText: \"form_help_text\",\n    formPlaceholder: \"form_placeholder\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomFieldCheckboxProperties$ {\n  /** @deprecated use `CustomFieldCheckboxProperties$inboundSchema` instead. */\n  export const inboundSchema = CustomFieldCheckboxProperties$inboundSchema;\n  /** @deprecated use `CustomFieldCheckboxProperties$outboundSchema` instead. */\n  export const outboundSchema = CustomFieldCheckboxProperties$outboundSchema;\n  /** @deprecated use `CustomFieldCheckboxProperties$Outbound` instead. */\n  export type Outbound = CustomFieldCheckboxProperties$Outbound;\n}\n\nexport function customFieldCheckboxPropertiesToJSON(\n  customFieldCheckboxProperties: CustomFieldCheckboxProperties,\n): string {\n  return JSON.stringify(\n    CustomFieldCheckboxProperties$outboundSchema.parse(\n      customFieldCheckboxProperties,\n    ),\n  );\n}\n\nexport function customFieldCheckboxPropertiesFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomFieldCheckboxProperties, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomFieldCheckboxProperties$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomFieldCheckboxProperties' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;;;;;AAW1C,MAAM,2CAA2C,GAIpD,CAAC,6IAAC,MAAM,CAAC;IACX,UAAU,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IACjC,cAAc,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IACrC,gBAAgB,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;CACxC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,YAAY,EAAE,WAAW;QACzB,gBAAgB,EAAE,cAAc;QAChC,kBAAkB,EAAE,iBAAiB;KACtC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAUI,MAAM,4CAA4C,GAIrD,CAAC,6IAAC,MAAM,CAAC;IACX,SAAS,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IAChC,YAAY,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IACnC,eAAe,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;CACvC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAM,AAAN,EAAO,CAAC,EAAE;QACf,SAAS,EAAE,YAAY;QACvB,YAAY,EAAE,gBAAgB;QAC9B,eAAe,EAAE,kBAAkB;KACpC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,8BAA8B,CAO9C;AAPD,CAAA,SAAiB,8BAA8B;IAC7C,2EAAA,EAA6E,CAChE,+BAAA,aAAa,GAAG,2CAA2C,CAAC;IACzE,4EAAA,EAA8E,CACjE,+BAAA,cAAc,GAAG,4CAA4C,CAAC;AAG7E,CAAC,EAPgB,8BAA8B,IAAA,CAA9B,8BAA8B,GAAA,CAAA,CAAA,GAO9C;AAEK,SAAU,mCAAmC,CACjD,6BAA4D;IAE5D,OAAO,IAAI,CAAC,SAAS,CACnB,4CAA4C,CAAC,KAAK,CAChD,6BAA6B,CAC9B,CACF,CAAC;AACJ,CAAC;AAEK,SAAU,qCAAqC,CACnD,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,0CAA4C,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACvE,CAAA,yDAAA,CAA2D,CAC5D,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 6358, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6364, "column": 0}, "map": {"version":3,"file":"customfieldcheckbox.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customfieldcheckbox.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  CustomFieldCheckboxProperties,\n  CustomFieldCheckboxProperties$inboundSchema,\n  CustomFieldCheckboxProperties$Outbound,\n  CustomFieldCheckboxProperties$outboundSchema,\n} from \"./customfieldcheckboxproperties.js\";\n\nexport type CustomFieldCheckboxMetadata = string | number | number | boolean;\n\n/**\n * Schema for a custom field of type checkbox.\n */\nexport type CustomFieldCheckbox = {\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  /**\n   * The ID of the object.\n   */\n  id: string;\n  metadata: { [k: string]: string | number | number | boolean };\n  type?: \"checkbox\" | undefined;\n  /**\n   * Identifier of the custom field. It'll be used as key when storing the value.\n   */\n  slug: string;\n  /**\n   * Name of the custom field.\n   */\n  name: string;\n  /**\n   * The ID of the organization owning the custom field.\n   */\n  organizationId: string;\n  properties: CustomFieldCheckboxProperties;\n};\n\n/** @internal */\nexport const CustomFieldCheckboxMetadata$inboundSchema: z.ZodType<\n  CustomFieldCheckboxMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type CustomFieldCheckboxMetadata$Outbound =\n  | string\n  | number\n  | number\n  | boolean;\n\n/** @internal */\nexport const CustomFieldCheckboxMetadata$outboundSchema: z.ZodType<\n  CustomFieldCheckboxMetadata$Outbound,\n  z.ZodTypeDef,\n  CustomFieldCheckboxMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomFieldCheckboxMetadata$ {\n  /** @deprecated use `CustomFieldCheckboxMetadata$inboundSchema` instead. */\n  export const inboundSchema = CustomFieldCheckboxMetadata$inboundSchema;\n  /** @deprecated use `CustomFieldCheckboxMetadata$outboundSchema` instead. */\n  export const outboundSchema = CustomFieldCheckboxMetadata$outboundSchema;\n  /** @deprecated use `CustomFieldCheckboxMetadata$Outbound` instead. */\n  export type Outbound = CustomFieldCheckboxMetadata$Outbound;\n}\n\nexport function customFieldCheckboxMetadataToJSON(\n  customFieldCheckboxMetadata: CustomFieldCheckboxMetadata,\n): string {\n  return JSON.stringify(\n    CustomFieldCheckboxMetadata$outboundSchema.parse(\n      customFieldCheckboxMetadata,\n    ),\n  );\n}\n\nexport function customFieldCheckboxMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomFieldCheckboxMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomFieldCheckboxMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomFieldCheckboxMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const CustomFieldCheckbox$inboundSchema: z.ZodType<\n  CustomFieldCheckbox,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  id: z.string(),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  type: z.literal(\"checkbox\").optional(),\n  slug: z.string(),\n  name: z.string(),\n  organization_id: z.string(),\n  properties: CustomFieldCheckboxProperties$inboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"organization_id\": \"organizationId\",\n  });\n});\n\n/** @internal */\nexport type CustomFieldCheckbox$Outbound = {\n  created_at: string;\n  modified_at: string | null;\n  id: string;\n  metadata: { [k: string]: string | number | number | boolean };\n  type: \"checkbox\";\n  slug: string;\n  name: string;\n  organization_id: string;\n  properties: CustomFieldCheckboxProperties$Outbound;\n};\n\n/** @internal */\nexport const CustomFieldCheckbox$outboundSchema: z.ZodType<\n  CustomFieldCheckbox$Outbound,\n  z.ZodTypeDef,\n  CustomFieldCheckbox\n> = z.object({\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  id: z.string(),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  type: z.literal(\"checkbox\").default(\"checkbox\" as const),\n  slug: z.string(),\n  name: z.string(),\n  organizationId: z.string(),\n  properties: CustomFieldCheckboxProperties$outboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    organizationId: \"organization_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomFieldCheckbox$ {\n  /** @deprecated use `CustomFieldCheckbox$inboundSchema` instead. */\n  export const inboundSchema = CustomFieldCheckbox$inboundSchema;\n  /** @deprecated use `CustomFieldCheckbox$outboundSchema` instead. */\n  export const outboundSchema = CustomFieldCheckbox$outboundSchema;\n  /** @deprecated use `CustomFieldCheckbox$Outbound` instead. */\n  export type Outbound = CustomFieldCheckbox$Outbound;\n}\n\nexport function customFieldCheckboxToJSON(\n  customFieldCheckbox: CustomFieldCheckbox,\n): string {\n  return JSON.stringify(\n    CustomFieldCheckbox$outboundSchema.parse(customFieldCheckbox),\n  );\n}\n\nexport function customFieldCheckboxFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomFieldCheckbox, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomFieldCheckbox$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomFieldCheckbox' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 6469, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6475, "column": 0}, "map": {"version":3,"file":"customfielddateproperties.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customfielddateproperties.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport type CustomFieldDateProperties = {\n  formLabel?: string | undefined;\n  formHelpText?: string | undefined;\n  formPlaceholder?: string | undefined;\n  ge?: number | undefined;\n  le?: number | undefined;\n};\n\n/** @internal */\nexport const CustomFieldDateProperties$inboundSchema: z.ZodType<\n  CustomFieldDateProperties,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  form_label: z.string().optional(),\n  form_help_text: z.string().optional(),\n  form_placeholder: z.string().optional(),\n  ge: z.number().int().optional(),\n  le: z.number().int().optional(),\n}).transform((v) => {\n  return remap$(v, {\n    \"form_label\": \"formLabel\",\n    \"form_help_text\": \"formHelpText\",\n    \"form_placeholder\": \"formPlaceholder\",\n  });\n});\n\n/** @internal */\nexport type CustomFieldDateProperties$Outbound = {\n  form_label?: string | undefined;\n  form_help_text?: string | undefined;\n  form_placeholder?: string | undefined;\n  ge?: number | undefined;\n  le?: number | undefined;\n};\n\n/** @internal */\nexport const CustomFieldDateProperties$outboundSchema: z.ZodType<\n  CustomFieldDateProperties$Outbound,\n  z.ZodTypeDef,\n  CustomFieldDateProperties\n> = z.object({\n  formLabel: z.string().optional(),\n  formHelpText: z.string().optional(),\n  formPlaceholder: z.string().optional(),\n  ge: z.number().int().optional(),\n  le: z.number().int().optional(),\n}).transform((v) => {\n  return remap$(v, {\n    formLabel: \"form_label\",\n    formHelpText: \"form_help_text\",\n    formPlaceholder: \"form_placeholder\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomFieldDateProperties$ {\n  /** @deprecated use `CustomFieldDateProperties$inboundSchema` instead. */\n  export const inboundSchema = CustomFieldDateProperties$inboundSchema;\n  /** @deprecated use `CustomFieldDateProperties$outboundSchema` instead. */\n  export const outboundSchema = CustomFieldDateProperties$outboundSchema;\n  /** @deprecated use `CustomFieldDateProperties$Outbound` instead. */\n  export type Outbound = CustomFieldDateProperties$Outbound;\n}\n\nexport function customFieldDatePropertiesToJSON(\n  customFieldDateProperties: CustomFieldDateProperties,\n): string {\n  return JSON.stringify(\n    CustomFieldDateProperties$outboundSchema.parse(customFieldDateProperties),\n  );\n}\n\nexport function customFieldDatePropertiesFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomFieldDateProperties, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomFieldDateProperties$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomFieldDateProperties' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;;;;;AAa1C,MAAM,uCAAuC,GAIhD,CAAC,6IAAC,MAAM,CAAC;IACX,UAAU,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IACjC,cAAc,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IACrC,gBAAgB,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IACvC,EAAE,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE;IAC/B,EAAE,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE;CAChC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,YAAY,EAAE,WAAW;QACzB,gBAAgB,EAAE,cAAc;QAChC,kBAAkB,EAAE,iBAAiB;KACtC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAYI,MAAM,wCAAwC,GAIjD,CAAC,6IAAC,MAAM,CAAC;IACX,SAAS,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IAChC,YAAY,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IACnC,eAAe,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IACtC,EAAE,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE;IAC/B,EAAE,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE;CAChC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,SAAS,EAAE,YAAY;QACvB,YAAY,EAAE,gBAAgB;QAC9B,eAAe,EAAE,kBAAkB;KACpC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,0BAA0B,CAO1C;AAPD,CAAA,SAAiB,0BAA0B;IACzC,uEAAA,EAAyE,CAC5D,2BAAA,aAAa,GAAG,uCAAuC,CAAC;IACrE,wEAAA,EAA0E,CAC7D,2BAAA,cAAc,GAAG,wCAAwC,CAAC;AAGzE,CAAC,EAPgB,0BAA0B,IAAA,CAA1B,0BAA0B,GAAA,CAAA,CAAA,GAO1C;AAEK,SAAU,+BAA+B,CAC7C,yBAAoD;IAEpD,OAAO,IAAI,CAAC,SAAS,CACnB,wCAAwC,CAAC,KAAK,CAAC,yBAAyB,CAAC,CAC1E,CAAC;AACJ,CAAC;AAEK,SAAU,iCAAiC,CAC/C,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,sCAAwC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACnE,CAAA,qDAAA,CAAuD,CACxD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 6528, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6534, "column": 0}, "map": {"version":3,"file":"customfielddate.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customfielddate.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  CustomFieldDateProperties,\n  CustomFieldDateProperties$inboundSchema,\n  CustomFieldDateProperties$Outbound,\n  CustomFieldDateProperties$outboundSchema,\n} from \"./customfielddateproperties.js\";\n\nexport type CustomFieldDateMetadata = string | number | number | boolean;\n\n/**\n * Schema for a custom field of type date.\n */\nexport type CustomFieldDate = {\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  /**\n   * The ID of the object.\n   */\n  id: string;\n  metadata: { [k: string]: string | number | number | boolean };\n  type?: \"date\" | undefined;\n  /**\n   * Identifier of the custom field. It'll be used as key when storing the value.\n   */\n  slug: string;\n  /**\n   * Name of the custom field.\n   */\n  name: string;\n  /**\n   * The ID of the organization owning the custom field.\n   */\n  organizationId: string;\n  properties: CustomFieldDateProperties;\n};\n\n/** @internal */\nexport const CustomFieldDateMetadata$inboundSchema: z.ZodType<\n  CustomFieldDateMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type CustomFieldDateMetadata$Outbound =\n  | string\n  | number\n  | number\n  | boolean;\n\n/** @internal */\nexport const CustomFieldDateMetadata$outboundSchema: z.ZodType<\n  CustomFieldDateMetadata$Outbound,\n  z.ZodTypeDef,\n  CustomFieldDateMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomFieldDateMetadata$ {\n  /** @deprecated use `CustomFieldDateMetadata$inboundSchema` instead. */\n  export const inboundSchema = CustomFieldDateMetadata$inboundSchema;\n  /** @deprecated use `CustomFieldDateMetadata$outboundSchema` instead. */\n  export const outboundSchema = CustomFieldDateMetadata$outboundSchema;\n  /** @deprecated use `CustomFieldDateMetadata$Outbound` instead. */\n  export type Outbound = CustomFieldDateMetadata$Outbound;\n}\n\nexport function customFieldDateMetadataToJSON(\n  customFieldDateMetadata: CustomFieldDateMetadata,\n): string {\n  return JSON.stringify(\n    CustomFieldDateMetadata$outboundSchema.parse(customFieldDateMetadata),\n  );\n}\n\nexport function customFieldDateMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomFieldDateMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomFieldDateMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomFieldDateMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const CustomFieldDate$inboundSchema: z.ZodType<\n  CustomFieldDate,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  id: z.string(),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  type: z.literal(\"date\").optional(),\n  slug: z.string(),\n  name: z.string(),\n  organization_id: z.string(),\n  properties: CustomFieldDateProperties$inboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"organization_id\": \"organizationId\",\n  });\n});\n\n/** @internal */\nexport type CustomFieldDate$Outbound = {\n  created_at: string;\n  modified_at: string | null;\n  id: string;\n  metadata: { [k: string]: string | number | number | boolean };\n  type: \"date\";\n  slug: string;\n  name: string;\n  organization_id: string;\n  properties: CustomFieldDateProperties$Outbound;\n};\n\n/** @internal */\nexport const CustomFieldDate$outboundSchema: z.ZodType<\n  CustomFieldDate$Outbound,\n  z.ZodTypeDef,\n  CustomFieldDate\n> = z.object({\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  id: z.string(),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  type: z.literal(\"date\").default(\"date\" as const),\n  slug: z.string(),\n  name: z.string(),\n  organizationId: z.string(),\n  properties: CustomFieldDateProperties$outboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    organizationId: \"organization_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomFieldDate$ {\n  /** @deprecated use `CustomFieldDate$inboundSchema` instead. */\n  export const inboundSchema = CustomFieldDate$inboundSchema;\n  /** @deprecated use `CustomFieldDate$outboundSchema` instead. */\n  export const outboundSchema = CustomFieldDate$outboundSchema;\n  /** @deprecated use `CustomFieldDate$Outbound` instead. */\n  export type Outbound = CustomFieldDate$Outbound;\n}\n\nexport function customFieldDateToJSON(\n  customFieldDate: CustomFieldDate,\n): string {\n  return JSON.stringify(CustomFieldDate$outboundSchema.parse(customFieldDate));\n}\n\nexport function customFieldDateFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomFieldDate, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomFieldDate$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomFieldDate' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 6639, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6645, "column": 0}, "map": {"version":3,"file":"customfieldnumberproperties.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customfieldnumberproperties.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport type CustomFieldNumberProperties = {\n  formLabel?: string | undefined;\n  formHelpText?: string | undefined;\n  formPlaceholder?: string | undefined;\n  ge?: number | undefined;\n  le?: number | undefined;\n};\n\n/** @internal */\nexport const CustomFieldNumberProperties$inboundSchema: z.ZodType<\n  CustomFieldNumberProperties,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  form_label: z.string().optional(),\n  form_help_text: z.string().optional(),\n  form_placeholder: z.string().optional(),\n  ge: z.number().int().optional(),\n  le: z.number().int().optional(),\n}).transform((v) => {\n  return remap$(v, {\n    \"form_label\": \"formLabel\",\n    \"form_help_text\": \"formHelpText\",\n    \"form_placeholder\": \"formPlaceholder\",\n  });\n});\n\n/** @internal */\nexport type CustomFieldNumberProperties$Outbound = {\n  form_label?: string | undefined;\n  form_help_text?: string | undefined;\n  form_placeholder?: string | undefined;\n  ge?: number | undefined;\n  le?: number | undefined;\n};\n\n/** @internal */\nexport const CustomFieldNumberProperties$outboundSchema: z.ZodType<\n  CustomFieldNumberProperties$Outbound,\n  z.ZodTypeDef,\n  CustomFieldNumberProperties\n> = z.object({\n  formLabel: z.string().optional(),\n  formHelpText: z.string().optional(),\n  formPlaceholder: z.string().optional(),\n  ge: z.number().int().optional(),\n  le: z.number().int().optional(),\n}).transform((v) => {\n  return remap$(v, {\n    formLabel: \"form_label\",\n    formHelpText: \"form_help_text\",\n    formPlaceholder: \"form_placeholder\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomFieldNumberProperties$ {\n  /** @deprecated use `CustomFieldNumberProperties$inboundSchema` instead. */\n  export const inboundSchema = CustomFieldNumberProperties$inboundSchema;\n  /** @deprecated use `CustomFieldNumberProperties$outboundSchema` instead. */\n  export const outboundSchema = CustomFieldNumberProperties$outboundSchema;\n  /** @deprecated use `CustomFieldNumberProperties$Outbound` instead. */\n  export type Outbound = CustomFieldNumberProperties$Outbound;\n}\n\nexport function customFieldNumberPropertiesToJSON(\n  customFieldNumberProperties: CustomFieldNumberProperties,\n): string {\n  return JSON.stringify(\n    CustomFieldNumberProperties$outboundSchema.parse(\n      customFieldNumberProperties,\n    ),\n  );\n}\n\nexport function customFieldNumberPropertiesFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomFieldNumberProperties, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomFieldNumberProperties$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomFieldNumberProperties' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;;;;;AAa1C,MAAM,yCAAyC,GAIlD,CAAC,6IAAC,MAAM,CAAC;IACX,UAAU,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IACjC,cAAc,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IACrC,gBAAgB,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IACvC,EAAE,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE;IAC/B,EAAE,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE;CAChC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,YAAY,EAAE,WAAW;QACzB,gBAAgB,EAAE,cAAc;QAChC,kBAAkB,EAAE,iBAAiB;KACtC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAYI,MAAM,0CAA0C,GAInD,CAAC,6IAAC,MAAM,CAAC;IACX,SAAS,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IAChC,YAAY,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IACnC,eAAe,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IACtC,EAAE,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE;IAC/B,EAAE,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE;CAChC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,SAAS,EAAE,YAAY;QACvB,YAAY,EAAE,gBAAgB;QAC9B,eAAe,EAAE,kBAAkB;KACpC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,4BAA4B,CAO5C;AAPD,CAAA,SAAiB,4BAA4B;IAC3C,yEAAA,EAA2E,CAC9D,6BAAA,aAAa,GAAG,yCAAyC,CAAC;IACvE,0EAAA,EAA4E,CAC/D,6BAAA,cAAc,GAAG,0CAA0C,CAAC;AAG3E,CAAC,EAPgB,4BAA4B,IAAA,CAA5B,4BAA4B,GAAA,CAAA,CAAA,GAO5C;AAEK,SAAU,iCAAiC,CAC/C,2BAAwD;IAExD,OAAO,IAAI,CAAC,SAAS,CACnB,0CAA0C,CAAC,KAAK,CAC9C,2BAA2B,CAC5B,CACF,CAAC;AACJ,CAAC;AAEK,SAAU,mCAAmC,CACjD,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,wCAA0C,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACrE,CAAA,uDAAA,CAAyD,CAC1D,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 6698, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6704, "column": 0}, "map": {"version":3,"file":"customfieldnumber.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customfieldnumber.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  CustomFieldNumberProperties,\n  CustomFieldNumberProperties$inboundSchema,\n  CustomFieldNumberProperties$Outbound,\n  CustomFieldNumberProperties$outboundSchema,\n} from \"./customfieldnumberproperties.js\";\n\nexport type CustomFieldNumberMetadata = string | number | number | boolean;\n\n/**\n * Schema for a custom field of type number.\n */\nexport type CustomFieldNumber = {\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  /**\n   * The ID of the object.\n   */\n  id: string;\n  metadata: { [k: string]: string | number | number | boolean };\n  type?: \"number\" | undefined;\n  /**\n   * Identifier of the custom field. It'll be used as key when storing the value.\n   */\n  slug: string;\n  /**\n   * Name of the custom field.\n   */\n  name: string;\n  /**\n   * The ID of the organization owning the custom field.\n   */\n  organizationId: string;\n  properties: CustomFieldNumberProperties;\n};\n\n/** @internal */\nexport const CustomFieldNumberMetadata$inboundSchema: z.ZodType<\n  CustomFieldNumberMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type CustomFieldNumberMetadata$Outbound =\n  | string\n  | number\n  | number\n  | boolean;\n\n/** @internal */\nexport const CustomFieldNumberMetadata$outboundSchema: z.ZodType<\n  CustomFieldNumberMetadata$Outbound,\n  z.ZodTypeDef,\n  CustomFieldNumberMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomFieldNumberMetadata$ {\n  /** @deprecated use `CustomFieldNumberMetadata$inboundSchema` instead. */\n  export const inboundSchema = CustomFieldNumberMetadata$inboundSchema;\n  /** @deprecated use `CustomFieldNumberMetadata$outboundSchema` instead. */\n  export const outboundSchema = CustomFieldNumberMetadata$outboundSchema;\n  /** @deprecated use `CustomFieldNumberMetadata$Outbound` instead. */\n  export type Outbound = CustomFieldNumberMetadata$Outbound;\n}\n\nexport function customFieldNumberMetadataToJSON(\n  customFieldNumberMetadata: CustomFieldNumberMetadata,\n): string {\n  return JSON.stringify(\n    CustomFieldNumberMetadata$outboundSchema.parse(customFieldNumberMetadata),\n  );\n}\n\nexport function customFieldNumberMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomFieldNumberMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomFieldNumberMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomFieldNumberMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const CustomFieldNumber$inboundSchema: z.ZodType<\n  CustomFieldNumber,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  id: z.string(),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  type: z.literal(\"number\").optional(),\n  slug: z.string(),\n  name: z.string(),\n  organization_id: z.string(),\n  properties: CustomFieldNumberProperties$inboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"organization_id\": \"organizationId\",\n  });\n});\n\n/** @internal */\nexport type CustomFieldNumber$Outbound = {\n  created_at: string;\n  modified_at: string | null;\n  id: string;\n  metadata: { [k: string]: string | number | number | boolean };\n  type: \"number\";\n  slug: string;\n  name: string;\n  organization_id: string;\n  properties: CustomFieldNumberProperties$Outbound;\n};\n\n/** @internal */\nexport const CustomFieldNumber$outboundSchema: z.ZodType<\n  CustomFieldNumber$Outbound,\n  z.ZodTypeDef,\n  CustomFieldNumber\n> = z.object({\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  id: z.string(),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  type: z.literal(\"number\").default(\"number\" as const),\n  slug: z.string(),\n  name: z.string(),\n  organizationId: z.string(),\n  properties: CustomFieldNumberProperties$outboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    organizationId: \"organization_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomFieldNumber$ {\n  /** @deprecated use `CustomFieldNumber$inboundSchema` instead. */\n  export const inboundSchema = CustomFieldNumber$inboundSchema;\n  /** @deprecated use `CustomFieldNumber$outboundSchema` instead. */\n  export const outboundSchema = CustomFieldNumber$outboundSchema;\n  /** @deprecated use `CustomFieldNumber$Outbound` instead. */\n  export type Outbound = CustomFieldNumber$Outbound;\n}\n\nexport function customFieldNumberToJSON(\n  customFieldNumber: CustomFieldNumber,\n): string {\n  return JSON.stringify(\n    CustomFieldNumber$outboundSchema.parse(customFieldNumber),\n  );\n}\n\nexport function customFieldNumberFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomFieldNumber, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomFieldNumber$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomFieldNumber' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 6809, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6815, "column": 0}, "map": {"version":3,"file":"customfieldselectoption.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customfieldselectoption.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport type CustomFieldSelectOption = {\n  value: string;\n  label: string;\n};\n\n/** @internal */\nexport const CustomFieldSelectOption$inboundSchema: z.ZodType<\n  CustomFieldSelectOption,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  value: z.string(),\n  label: z.string(),\n});\n\n/** @internal */\nexport type CustomFieldSelectOption$Outbound = {\n  value: string;\n  label: string;\n};\n\n/** @internal */\nexport const CustomFieldSelectOption$outboundSchema: z.ZodType<\n  CustomFieldSelectOption$Outbound,\n  z.ZodTypeDef,\n  CustomFieldSelectOption\n> = z.object({\n  value: z.string(),\n  label: z.string(),\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomFieldSelectOption$ {\n  /** @deprecated use `CustomFieldSelectOption$inboundSchema` instead. */\n  export const inboundSchema = CustomFieldSelectOption$inboundSchema;\n  /** @deprecated use `CustomFieldSelectOption$outboundSchema` instead. */\n  export const outboundSchema = CustomFieldSelectOption$outboundSchema;\n  /** @deprecated use `CustomFieldSelectOption$Outbound` instead. */\n  export type Outbound = CustomFieldSelectOption$Outbound;\n}\n\nexport function customFieldSelectOptionToJSON(\n  customFieldSelectOption: CustomFieldSelectOption,\n): string {\n  return JSON.stringify(\n    CustomFieldSelectOption$outboundSchema.parse(customFieldSelectOption),\n  );\n}\n\nexport function customFieldSelectOptionFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomFieldSelectOption, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomFieldSelectOption$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomFieldSelectOption' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;AAGH,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AADjD,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;;AAWlB,MAAM,qCAAqC,GAI9C,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,MAAM,EAAE;IACjB,KAAK,EAAE,CAAC,6IAAC,MAAM,EAAE;CAClB,CAAC,CAAC;AASI,MAAM,sCAAsC,GAI/C,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,MAAM,EAAE;IACjB,KAAK,EAAE,CAAC,6IAAC,MAAM,EAAE;CAClB,CAAC,CAAC;AAMG,IAAW,wBAAwB,CAOxC;AAPD,CAAA,SAAiB,wBAAwB;IACvC,qEAAA,EAAuE,CAC1D,yBAAA,aAAa,GAAG,qCAAqC,CAAC;IACnE,sEAAA,EAAwE,CAC3D,yBAAA,cAAc,GAAG,sCAAsC,CAAC;AAGvE,CAAC,EAPgB,wBAAwB,IAAA,CAAxB,wBAAwB,GAAA,CAAA,CAAA,GAOxC;AAEK,SAAU,6BAA6B,CAC3C,uBAAgD;IAEhD,OAAO,IAAI,CAAC,SAAS,CACnB,sCAAsC,CAAC,KAAK,CAAC,uBAAuB,CAAC,CACtE,CAAC;AACJ,CAAC;AAEK,SAAU,+BAA+B,CAC7C,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,oCAAsC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACjE,CAAA,mDAAA,CAAqD,CACtD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 6848, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6854, "column": 0}, "map": {"version":3,"file":"customfieldselectproperties.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customfieldselectproperties.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  CustomFieldSelectOption,\n  CustomFieldSelectOption$inboundSchema,\n  CustomFieldSelectOption$Outbound,\n  CustomFieldSelectOption$outboundSchema,\n} from \"./customfieldselectoption.js\";\n\nexport type CustomFieldSelectProperties = {\n  formLabel?: string | undefined;\n  formHelpText?: string | undefined;\n  formPlaceholder?: string | undefined;\n  options: Array<CustomFieldSelectOption>;\n};\n\n/** @internal */\nexport const CustomFieldSelectProperties$inboundSchema: z.ZodType<\n  CustomFieldSelectProperties,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  form_label: z.string().optional(),\n  form_help_text: z.string().optional(),\n  form_placeholder: z.string().optional(),\n  options: z.array(CustomFieldSelectOption$inboundSchema),\n}).transform((v) => {\n  return remap$(v, {\n    \"form_label\": \"formLabel\",\n    \"form_help_text\": \"formHelpText\",\n    \"form_placeholder\": \"formPlaceholder\",\n  });\n});\n\n/** @internal */\nexport type CustomFieldSelectProperties$Outbound = {\n  form_label?: string | undefined;\n  form_help_text?: string | undefined;\n  form_placeholder?: string | undefined;\n  options: Array<CustomFieldSelectOption$Outbound>;\n};\n\n/** @internal */\nexport const CustomFieldSelectProperties$outboundSchema: z.ZodType<\n  CustomFieldSelectProperties$Outbound,\n  z.ZodTypeDef,\n  CustomFieldSelectProperties\n> = z.object({\n  formLabel: z.string().optional(),\n  formHelpText: z.string().optional(),\n  formPlaceholder: z.string().optional(),\n  options: z.array(CustomFieldSelectOption$outboundSchema),\n}).transform((v) => {\n  return remap$(v, {\n    formLabel: \"form_label\",\n    formHelpText: \"form_help_text\",\n    formPlaceholder: \"form_placeholder\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomFieldSelectProperties$ {\n  /** @deprecated use `CustomFieldSelectProperties$inboundSchema` instead. */\n  export const inboundSchema = CustomFieldSelectProperties$inboundSchema;\n  /** @deprecated use `CustomFieldSelectProperties$outboundSchema` instead. */\n  export const outboundSchema = CustomFieldSelectProperties$outboundSchema;\n  /** @deprecated use `CustomFieldSelectProperties$Outbound` instead. */\n  export type Outbound = CustomFieldSelectProperties$Outbound;\n}\n\nexport function customFieldSelectPropertiesToJSON(\n  customFieldSelectProperties: CustomFieldSelectProperties,\n): string {\n  return JSON.stringify(\n    CustomFieldSelectProperties$outboundSchema.parse(\n      customFieldSelectProperties,\n    ),\n  );\n}\n\nexport function customFieldSelectPropertiesFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomFieldSelectProperties, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomFieldSelectProperties$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomFieldSelectProperties' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,qCAAqC,EAErC,sCAAsC,GACvC,MAAM,8BAA8B,CAAC;;;;;;AAU/B,MAAM,yCAAyC,GAIlD,CAAC,6IAAC,MAAM,CAAC;IACX,UAAU,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IACjC,cAAc,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IACrC,gBAAgB,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IACvC,OAAO,EAAE,CAAC,6IAAC,KAAK,0MAAC,wCAAqC,CAAC;CACxD,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,YAAY,EAAE,WAAW;QACzB,gBAAgB,EAAE,cAAc;QAChC,kBAAkB,EAAE,iBAAiB;KACtC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAWI,MAAM,0CAA0C,GAInD,CAAC,6IAAC,MAAM,CAAC;IACX,SAAS,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IAChC,YAAY,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IACnC,eAAe,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IACtC,OAAO,EAAE,CAAC,6IAAC,KAAK,0MAAC,yCAAsC,CAAC;CACzD,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,QAAO,sLAAA,AAAM,EAAC,CAAC,EAAE;QACf,SAAS,EAAE,YAAY;QACvB,YAAY,EAAE,gBAAgB;QAC9B,eAAe,EAAE,kBAAkB;KACpC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,4BAA4B,CAO5C;AAPD,CAAA,SAAiB,4BAA4B;IAC3C,yEAAA,EAA2E,CAC9D,6BAAA,aAAa,GAAG,yCAAyC,CAAC;IACvE,0EAAA,EAA4E,CAC/D,6BAAA,cAAc,GAAG,0CAA0C,CAAC;AAG3E,CAAC,EAPgB,4BAA4B,IAAA,CAA5B,4BAA4B,GAAA,CAAA,CAAA,GAO5C;AAEK,SAAU,iCAAiC,CAC/C,2BAAwD;IAExD,OAAO,IAAI,CAAC,SAAS,CACnB,0CAA0C,CAAC,KAAK,CAC9C,2BAA2B,CAC5B,CACF,CAAC;AACJ,CAAC;AAEK,SAAU,mCAAmC,CACjD,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,wCAA0C,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACrE,CAAA,uDAAA,CAAyD,CAC1D,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 6907, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6913, "column": 0}, "map": {"version":3,"file":"customfieldselect.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customfieldselect.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  CustomFieldSelectProperties,\n  CustomFieldSelectProperties$inboundSchema,\n  CustomFieldSelectProperties$Outbound,\n  CustomFieldSelectProperties$outboundSchema,\n} from \"./customfieldselectproperties.js\";\n\nexport type CustomFieldSelectMetadata = string | number | number | boolean;\n\n/**\n * Schema for a custom field of type select.\n */\nexport type CustomFieldSelect = {\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  /**\n   * The ID of the object.\n   */\n  id: string;\n  metadata: { [k: string]: string | number | number | boolean };\n  type?: \"select\" | undefined;\n  /**\n   * Identifier of the custom field. It'll be used as key when storing the value.\n   */\n  slug: string;\n  /**\n   * Name of the custom field.\n   */\n  name: string;\n  /**\n   * The ID of the organization owning the custom field.\n   */\n  organizationId: string;\n  properties: CustomFieldSelectProperties;\n};\n\n/** @internal */\nexport const CustomFieldSelectMetadata$inboundSchema: z.ZodType<\n  CustomFieldSelectMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type CustomFieldSelectMetadata$Outbound =\n  | string\n  | number\n  | number\n  | boolean;\n\n/** @internal */\nexport const CustomFieldSelectMetadata$outboundSchema: z.ZodType<\n  CustomFieldSelectMetadata$Outbound,\n  z.ZodTypeDef,\n  CustomFieldSelectMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomFieldSelectMetadata$ {\n  /** @deprecated use `CustomFieldSelectMetadata$inboundSchema` instead. */\n  export const inboundSchema = CustomFieldSelectMetadata$inboundSchema;\n  /** @deprecated use `CustomFieldSelectMetadata$outboundSchema` instead. */\n  export const outboundSchema = CustomFieldSelectMetadata$outboundSchema;\n  /** @deprecated use `CustomFieldSelectMetadata$Outbound` instead. */\n  export type Outbound = CustomFieldSelectMetadata$Outbound;\n}\n\nexport function customFieldSelectMetadataToJSON(\n  customFieldSelectMetadata: CustomFieldSelectMetadata,\n): string {\n  return JSON.stringify(\n    CustomFieldSelectMetadata$outboundSchema.parse(customFieldSelectMetadata),\n  );\n}\n\nexport function customFieldSelectMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomFieldSelectMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomFieldSelectMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomFieldSelectMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const CustomFieldSelect$inboundSchema: z.ZodType<\n  CustomFieldSelect,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  id: z.string(),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  type: z.literal(\"select\").optional(),\n  slug: z.string(),\n  name: z.string(),\n  organization_id: z.string(),\n  properties: CustomFieldSelectProperties$inboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"organization_id\": \"organizationId\",\n  });\n});\n\n/** @internal */\nexport type CustomFieldSelect$Outbound = {\n  created_at: string;\n  modified_at: string | null;\n  id: string;\n  metadata: { [k: string]: string | number | number | boolean };\n  type: \"select\";\n  slug: string;\n  name: string;\n  organization_id: string;\n  properties: CustomFieldSelectProperties$Outbound;\n};\n\n/** @internal */\nexport const CustomFieldSelect$outboundSchema: z.ZodType<\n  CustomFieldSelect$Outbound,\n  z.ZodTypeDef,\n  CustomFieldSelect\n> = z.object({\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  id: z.string(),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  type: z.literal(\"select\").default(\"select\" as const),\n  slug: z.string(),\n  name: z.string(),\n  organizationId: z.string(),\n  properties: CustomFieldSelectProperties$outboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    organizationId: \"organization_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomFieldSelect$ {\n  /** @deprecated use `CustomFieldSelect$inboundSchema` instead. */\n  export const inboundSchema = CustomFieldSelect$inboundSchema;\n  /** @deprecated use `CustomFieldSelect$outboundSchema` instead. */\n  export const outboundSchema = CustomFieldSelect$outboundSchema;\n  /** @deprecated use `CustomFieldSelect$Outbound` instead. */\n  export type Outbound = CustomFieldSelect$Outbound;\n}\n\nexport function customFieldSelectToJSON(\n  customFieldSelect: CustomFieldSelect,\n): string {\n  return JSON.stringify(\n    CustomFieldSelect$outboundSchema.parse(customFieldSelect),\n  );\n}\n\nexport function customFieldSelectFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomFieldSelect, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomFieldSelect$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomFieldSelect' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 7018, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7024, "column": 0}, "map": {"version":3,"file":"customfieldtextproperties.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customfieldtextproperties.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport type CustomFieldTextProperties = {\n  formLabel?: string | undefined;\n  formHelpText?: string | undefined;\n  formPlaceholder?: string | undefined;\n  textarea?: boolean | undefined;\n  minLength?: number | undefined;\n  maxLength?: number | undefined;\n};\n\n/** @internal */\nexport const CustomFieldTextProperties$inboundSchema: z.ZodType<\n  CustomFieldTextProperties,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  form_label: z.string().optional(),\n  form_help_text: z.string().optional(),\n  form_placeholder: z.string().optional(),\n  textarea: z.boolean().optional(),\n  min_length: z.number().int().optional(),\n  max_length: z.number().int().optional(),\n}).transform((v) => {\n  return remap$(v, {\n    \"form_label\": \"formLabel\",\n    \"form_help_text\": \"formHelpText\",\n    \"form_placeholder\": \"formPlaceholder\",\n    \"min_length\": \"minLength\",\n    \"max_length\": \"maxLength\",\n  });\n});\n\n/** @internal */\nexport type CustomFieldTextProperties$Outbound = {\n  form_label?: string | undefined;\n  form_help_text?: string | undefined;\n  form_placeholder?: string | undefined;\n  textarea?: boolean | undefined;\n  min_length?: number | undefined;\n  max_length?: number | undefined;\n};\n\n/** @internal */\nexport const CustomFieldTextProperties$outboundSchema: z.ZodType<\n  CustomFieldTextProperties$Outbound,\n  z.ZodTypeDef,\n  CustomFieldTextProperties\n> = z.object({\n  formLabel: z.string().optional(),\n  formHelpText: z.string().optional(),\n  formPlaceholder: z.string().optional(),\n  textarea: z.boolean().optional(),\n  minLength: z.number().int().optional(),\n  maxLength: z.number().int().optional(),\n}).transform((v) => {\n  return remap$(v, {\n    formLabel: \"form_label\",\n    formHelpText: \"form_help_text\",\n    formPlaceholder: \"form_placeholder\",\n    minLength: \"min_length\",\n    maxLength: \"max_length\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomFieldTextProperties$ {\n  /** @deprecated use `CustomFieldTextProperties$inboundSchema` instead. */\n  export const inboundSchema = CustomFieldTextProperties$inboundSchema;\n  /** @deprecated use `CustomFieldTextProperties$outboundSchema` instead. */\n  export const outboundSchema = CustomFieldTextProperties$outboundSchema;\n  /** @deprecated use `CustomFieldTextProperties$Outbound` instead. */\n  export type Outbound = CustomFieldTextProperties$Outbound;\n}\n\nexport function customFieldTextPropertiesToJSON(\n  customFieldTextProperties: CustomFieldTextProperties,\n): string {\n  return JSON.stringify(\n    CustomFieldTextProperties$outboundSchema.parse(customFieldTextProperties),\n  );\n}\n\nexport function customFieldTextPropertiesFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomFieldTextProperties, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomFieldTextProperties$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomFieldTextProperties' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;;;;;AAc1C,MAAM,uCAAuC,GAIhD,CAAC,6IAAC,MAAM,CAAC;IACX,UAAU,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IACjC,cAAc,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IACrC,gBAAgB,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IACvC,QAAQ,EAAE,CAAC,6IAAC,OAAO,EAAE,CAAC,QAAQ,EAAE;IAChC,UAAU,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE;IACvC,UAAU,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE;CACxC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAM,AAAN,EAAO,CAAC,EAAE;QACf,YAAY,EAAE,WAAW;QACzB,gBAAgB,EAAE,cAAc;QAChC,kBAAkB,EAAE,iBAAiB;QACrC,YAAY,EAAE,WAAW;QACzB,YAAY,EAAE,WAAW;KAC1B,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAaI,MAAM,wCAAwC,GAIjD,CAAC,6IAAC,MAAM,CAAC;IACX,SAAS,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IAChC,YAAY,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IACnC,eAAe,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IACtC,QAAQ,EAAE,CAAC,6IAAC,OAAO,EAAE,CAAC,QAAQ,EAAE;IAChC,SAAS,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE;IACtC,SAAS,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE;CACvC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,SAAS,EAAE,YAAY;QACvB,YAAY,EAAE,gBAAgB;QAC9B,eAAe,EAAE,kBAAkB;QACnC,SAAS,EAAE,YAAY;QACvB,SAAS,EAAE,YAAY;KACxB,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,0BAA0B,CAO1C;AAPD,CAAA,SAAiB,0BAA0B;IACzC,uEAAA,EAAyE,CAC5D,2BAAA,aAAa,GAAG,uCAAuC,CAAC;IACrE,wEAAA,EAA0E,CAC7D,2BAAA,cAAc,GAAG,wCAAwC,CAAC;AAGzE,CAAC,EAPgB,0BAA0B,IAAA,CAA1B,0BAA0B,GAAA,CAAA,CAAA,GAO1C;AAEK,SAAU,+BAA+B,CAC7C,yBAAoD;IAEpD,OAAO,IAAI,CAAC,SAAS,CACnB,wCAAwC,CAAC,KAAK,CAAC,yBAAyB,CAAC,CAC1E,CAAC;AACJ,CAAC;AAEK,SAAU,iCAAiC,CAC/C,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,sCAAwC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACnE,CAAA,qDAAA,CAAuD,CACxD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 7083, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7089, "column": 0}, "map": {"version":3,"file":"customfieldtext.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customfieldtext.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  CustomFieldTextProperties,\n  CustomFieldTextProperties$inboundSchema,\n  CustomFieldTextProperties$Outbound,\n  CustomFieldTextProperties$outboundSchema,\n} from \"./customfieldtextproperties.js\";\n\nexport type CustomFieldTextMetadata = string | number | number | boolean;\n\n/**\n * Schema for a custom field of type text.\n */\nexport type CustomFieldText = {\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  /**\n   * The ID of the object.\n   */\n  id: string;\n  metadata: { [k: string]: string | number | number | boolean };\n  type?: \"text\" | undefined;\n  /**\n   * Identifier of the custom field. It'll be used as key when storing the value.\n   */\n  slug: string;\n  /**\n   * Name of the custom field.\n   */\n  name: string;\n  /**\n   * The ID of the organization owning the custom field.\n   */\n  organizationId: string;\n  properties: CustomFieldTextProperties;\n};\n\n/** @internal */\nexport const CustomFieldTextMetadata$inboundSchema: z.ZodType<\n  CustomFieldTextMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type CustomFieldTextMetadata$Outbound =\n  | string\n  | number\n  | number\n  | boolean;\n\n/** @internal */\nexport const CustomFieldTextMetadata$outboundSchema: z.ZodType<\n  CustomFieldTextMetadata$Outbound,\n  z.ZodTypeDef,\n  CustomFieldTextMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomFieldTextMetadata$ {\n  /** @deprecated use `CustomFieldTextMetadata$inboundSchema` instead. */\n  export const inboundSchema = CustomFieldTextMetadata$inboundSchema;\n  /** @deprecated use `CustomFieldTextMetadata$outboundSchema` instead. */\n  export const outboundSchema = CustomFieldTextMetadata$outboundSchema;\n  /** @deprecated use `CustomFieldTextMetadata$Outbound` instead. */\n  export type Outbound = CustomFieldTextMetadata$Outbound;\n}\n\nexport function customFieldTextMetadataToJSON(\n  customFieldTextMetadata: CustomFieldTextMetadata,\n): string {\n  return JSON.stringify(\n    CustomFieldTextMetadata$outboundSchema.parse(customFieldTextMetadata),\n  );\n}\n\nexport function customFieldTextMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomFieldTextMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomFieldTextMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomFieldTextMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const CustomFieldText$inboundSchema: z.ZodType<\n  CustomFieldText,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  id: z.string(),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  type: z.literal(\"text\").optional(),\n  slug: z.string(),\n  name: z.string(),\n  organization_id: z.string(),\n  properties: CustomFieldTextProperties$inboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"organization_id\": \"organizationId\",\n  });\n});\n\n/** @internal */\nexport type CustomFieldText$Outbound = {\n  created_at: string;\n  modified_at: string | null;\n  id: string;\n  metadata: { [k: string]: string | number | number | boolean };\n  type: \"text\";\n  slug: string;\n  name: string;\n  organization_id: string;\n  properties: CustomFieldTextProperties$Outbound;\n};\n\n/** @internal */\nexport const CustomFieldText$outboundSchema: z.ZodType<\n  CustomFieldText$Outbound,\n  z.ZodTypeDef,\n  CustomFieldText\n> = z.object({\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  id: z.string(),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  type: z.literal(\"text\").default(\"text\" as const),\n  slug: z.string(),\n  name: z.string(),\n  organizationId: z.string(),\n  properties: CustomFieldTextProperties$outboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    organizationId: \"organization_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomFieldText$ {\n  /** @deprecated use `CustomFieldText$inboundSchema` instead. */\n  export const inboundSchema = CustomFieldText$inboundSchema;\n  /** @deprecated use `CustomFieldText$outboundSchema` instead. */\n  export const outboundSchema = CustomFieldText$outboundSchema;\n  /** @deprecated use `CustomFieldText$Outbound` instead. */\n  export type Outbound = CustomFieldText$Outbound;\n}\n\nexport function customFieldTextToJSON(\n  customFieldText: CustomFieldText,\n): string {\n  return JSON.stringify(CustomFieldText$outboundSchema.parse(customFieldText));\n}\n\nexport function customFieldTextFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomFieldText, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomFieldText$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomFieldText' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 7194, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7200, "column": 0}, "map": {"version":3,"file":"customfield.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customfield.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  CustomFieldCheckbox,\n  CustomFieldCheckbox$inboundSchema,\n  CustomFieldCheckbox$Outbound,\n  CustomFieldCheckbox$outboundSchema,\n} from \"./customfieldcheckbox.js\";\nimport {\n  CustomFieldDate,\n  CustomFieldDate$inboundSchema,\n  CustomFieldDate$Outbound,\n  CustomFieldDate$outboundSchema,\n} from \"./customfielddate.js\";\nimport {\n  CustomFieldNumber,\n  CustomFieldNumber$inboundSchema,\n  CustomFieldNumber$Outbound,\n  CustomFieldNumber$outboundSchema,\n} from \"./customfieldnumber.js\";\nimport {\n  CustomFieldSelect,\n  CustomFieldSelect$inboundSchema,\n  CustomFieldSelect$Outbound,\n  CustomFieldSelect$outboundSchema,\n} from \"./customfieldselect.js\";\nimport {\n  CustomFieldText,\n  CustomFieldText$inboundSchema,\n  CustomFieldText$Outbound,\n  CustomFieldText$outboundSchema,\n} from \"./customfieldtext.js\";\n\nexport type CustomField =\n  | (CustomFieldCheckbox & { type: \"checkbox\" })\n  | (CustomFieldDate & { type: \"date\" })\n  | (CustomFieldNumber & { type: \"number\" })\n  | (CustomFieldSelect & { type: \"select\" })\n  | (CustomFieldText & { type: \"text\" });\n\n/** @internal */\nexport const CustomField$inboundSchema: z.ZodType<\n  CustomField,\n  z.ZodTypeDef,\n  unknown\n> = z.union([\n  CustomFieldCheckbox$inboundSchema.and(\n    z.object({ type: z.literal(\"checkbox\") }).transform((v) => ({\n      type: v.type,\n    })),\n  ),\n  CustomFieldDate$inboundSchema.and(\n    z.object({ type: z.literal(\"date\") }).transform((v) => ({ type: v.type })),\n  ),\n  CustomFieldNumber$inboundSchema.and(\n    z.object({ type: z.literal(\"number\") }).transform((v) => ({\n      type: v.type,\n    })),\n  ),\n  CustomFieldSelect$inboundSchema.and(\n    z.object({ type: z.literal(\"select\") }).transform((v) => ({\n      type: v.type,\n    })),\n  ),\n  CustomFieldText$inboundSchema.and(\n    z.object({ type: z.literal(\"text\") }).transform((v) => ({ type: v.type })),\n  ),\n]);\n\n/** @internal */\nexport type CustomField$Outbound =\n  | (CustomFieldCheckbox$Outbound & { type: \"checkbox\" })\n  | (CustomFieldDate$Outbound & { type: \"date\" })\n  | (CustomFieldNumber$Outbound & { type: \"number\" })\n  | (CustomFieldSelect$Outbound & { type: \"select\" })\n  | (CustomFieldText$Outbound & { type: \"text\" });\n\n/** @internal */\nexport const CustomField$outboundSchema: z.ZodType<\n  CustomField$Outbound,\n  z.ZodTypeDef,\n  CustomField\n> = z.union([\n  CustomFieldCheckbox$outboundSchema.and(\n    z.object({ type: z.literal(\"checkbox\") }).transform((v) => ({\n      type: v.type,\n    })),\n  ),\n  CustomFieldDate$outboundSchema.and(\n    z.object({ type: z.literal(\"date\") }).transform((v) => ({ type: v.type })),\n  ),\n  CustomFieldNumber$outboundSchema.and(\n    z.object({ type: z.literal(\"number\") }).transform((v) => ({\n      type: v.type,\n    })),\n  ),\n  CustomFieldSelect$outboundSchema.and(\n    z.object({ type: z.literal(\"select\") }).transform((v) => ({\n      type: v.type,\n    })),\n  ),\n  CustomFieldText$outboundSchema.and(\n    z.object({ type: z.literal(\"text\") }).transform((v) => ({ type: v.type })),\n  ),\n]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomField$ {\n  /** @deprecated use `CustomField$inboundSchema` instead. */\n  export const inboundSchema = CustomField$inboundSchema;\n  /** @deprecated use `CustomField$outboundSchema` instead. */\n  export const outboundSchema = CustomField$outboundSchema;\n  /** @deprecated use `CustomField$Outbound` instead. */\n  export type Outbound = CustomField$Outbound;\n}\n\nexport function customFieldToJSON(customField: CustomField): string {\n  return JSON.stringify(CustomField$outboundSchema.parse(customField));\n}\n\nexport function customFieldFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomField, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomField$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomField' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 7289, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7295, "column": 0}, "map": {"version":3,"file":"attachedcustomfield.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/attachedcustomfield.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  CustomField,\n  CustomField$inboundSchema,\n  CustomField$Outbound,\n  CustomField$outboundSchema,\n} from \"./customfield.js\";\n\n/**\n * Schema of a custom field attached to a resource.\n */\nexport type AttachedCustomField = {\n  /**\n   * ID of the custom field.\n   */\n  customFieldId: string;\n  customField: CustomField;\n  /**\n   * Order of the custom field in the resource.\n   */\n  order: number;\n  /**\n   * Whether the value is required for this custom field.\n   */\n  required: boolean;\n};\n\n/** @internal */\nexport const AttachedCustomField$inboundSchema: z.ZodType<\n  AttachedCustomField,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  custom_field_id: z.string(),\n  custom_field: CustomField$inboundSchema,\n  order: z.number().int(),\n  required: z.boolean(),\n}).transform((v) => {\n  return remap$(v, {\n    \"custom_field_id\": \"customFieldId\",\n    \"custom_field\": \"customField\",\n  });\n});\n\n/** @internal */\nexport type AttachedCustomField$Outbound = {\n  custom_field_id: string;\n  custom_field: CustomField$Outbound;\n  order: number;\n  required: boolean;\n};\n\n/** @internal */\nexport const AttachedCustomField$outboundSchema: z.ZodType<\n  AttachedCustomField$Outbound,\n  z.ZodTypeDef,\n  AttachedCustomField\n> = z.object({\n  customFieldId: z.string(),\n  customField: CustomField$outboundSchema,\n  order: z.number().int(),\n  required: z.boolean(),\n}).transform((v) => {\n  return remap$(v, {\n    customFieldId: \"custom_field_id\",\n    customField: \"custom_field\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace AttachedCustomField$ {\n  /** @deprecated use `AttachedCustomField$inboundSchema` instead. */\n  export const inboundSchema = AttachedCustomField$inboundSchema;\n  /** @deprecated use `AttachedCustomField$outboundSchema` instead. */\n  export const outboundSchema = AttachedCustomField$outboundSchema;\n  /** @deprecated use `AttachedCustomField$Outbound` instead. */\n  export type Outbound = AttachedCustomField$Outbound;\n}\n\nexport function attachedCustomFieldToJSON(\n  attachedCustomField: AttachedCustomField,\n): string {\n  return JSON.stringify(\n    AttachedCustomField$outboundSchema.parse(attachedCustomField),\n  );\n}\n\nexport function attachedCustomFieldFromJSON(\n  jsonString: string,\n): SafeParseResult<AttachedCustomField, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => AttachedCustomField$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'AttachedCustomField' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,yBAAyB,EAEzB,0BAA0B,GAC3B,MAAM,kBAAkB,CAAC;;;;;;AAsBnB,MAAM,iCAAiC,GAI1C,CAAC,6IAAC,MAAM,CAAC;IACX,eAAe,EAAE,CAAC,6IAAC,MAAM,EAAE;IAC3B,YAAY,+LAAE,4BAAyB;IACvC,KAAK,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IACvB,QAAQ,EAAE,CAAC,6IAAC,OAAO,EAAE;CACtB,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAM,AAAN,EAAO,CAAC,EAAE;QACf,iBAAiB,EAAE,eAAe;QAClC,cAAc,EAAE,aAAa;KAC9B,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAWI,MAAM,kCAAkC,GAI3C,CAAC,6IAAC,MAAM,CAAC;IACX,aAAa,EAAE,CAAC,6IAAC,MAAM,EAAE;IACzB,WAAW,EAAE,0NAA0B;IACvC,KAAK,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IACvB,QAAQ,EAAE,CAAC,6IAAC,OAAO,EAAE;CACtB,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,QAAO,sLAAA,AAAM,EAAC,CAAC,EAAE;QACf,aAAa,EAAE,iBAAiB;QAChC,WAAW,EAAE,cAAc;KAC5B,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,oBAAoB,CAOpC;AAPD,CAAA,SAAiB,oBAAoB;IACnC,iEAAA,EAAmE,CACtD,qBAAA,aAAa,GAAG,iCAAiC,CAAC;IAC/D,kEAAA,EAAoE,CACvD,qBAAA,cAAc,GAAG,kCAAkC,CAAC;AAGnE,CAAC,EAPgB,oBAAoB,IAAA,CAApB,oBAAoB,GAAA,CAAA,CAAA,GAOpC;AAEK,SAAU,yBAAyB,CACvC,mBAAwC;IAExC,OAAO,IAAI,CAAC,SAAS,CACnB,kCAAkC,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAC9D,CAAC;AACJ,CAAC;AAEK,SAAU,2BAA2B,CACzC,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,gCAAkC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC7D,CAAA,+CAAA,CAAiD,CAClD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 7346, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7352, "column": 0}, "map": {"version":3,"file":"checkoutcustomerbillingaddressfields.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/checkoutcustomerbillingaddressfields.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport type CheckoutCustomerBillingAddressFields = {\n  country: boolean;\n  state: boolean;\n  city: boolean;\n  postalCode: boolean;\n  line1: boolean;\n  line2: boolean;\n};\n\n/** @internal */\nexport const CheckoutCustomerBillingAddressFields$inboundSchema: z.ZodType<\n  CheckoutCustomerBillingAddressFields,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  country: z.boolean(),\n  state: z.boolean(),\n  city: z.boolean(),\n  postal_code: z.boolean(),\n  line1: z.boolean(),\n  line2: z.boolean(),\n}).transform((v) => {\n  return remap$(v, {\n    \"postal_code\": \"postalCode\",\n  });\n});\n\n/** @internal */\nexport type CheckoutCustomerBillingAddressFields$Outbound = {\n  country: boolean;\n  state: boolean;\n  city: boolean;\n  postal_code: boolean;\n  line1: boolean;\n  line2: boolean;\n};\n\n/** @internal */\nexport const CheckoutCustomerBillingAddressFields$outboundSchema: z.ZodType<\n  CheckoutCustomerBillingAddressFields$Outbound,\n  z.ZodTypeDef,\n  CheckoutCustomerBillingAddressFields\n> = z.object({\n  country: z.boolean(),\n  state: z.boolean(),\n  city: z.boolean(),\n  postalCode: z.boolean(),\n  line1: z.boolean(),\n  line2: z.boolean(),\n}).transform((v) => {\n  return remap$(v, {\n    postalCode: \"postal_code\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CheckoutCustomerBillingAddressFields$ {\n  /** @deprecated use `CheckoutCustomerBillingAddressFields$inboundSchema` instead. */\n  export const inboundSchema =\n    CheckoutCustomerBillingAddressFields$inboundSchema;\n  /** @deprecated use `CheckoutCustomerBillingAddressFields$outboundSchema` instead. */\n  export const outboundSchema =\n    CheckoutCustomerBillingAddressFields$outboundSchema;\n  /** @deprecated use `CheckoutCustomerBillingAddressFields$Outbound` instead. */\n  export type Outbound = CheckoutCustomerBillingAddressFields$Outbound;\n}\n\nexport function checkoutCustomerBillingAddressFieldsToJSON(\n  checkoutCustomerBillingAddressFields: CheckoutCustomerBillingAddressFields,\n): string {\n  return JSON.stringify(\n    CheckoutCustomerBillingAddressFields$outboundSchema.parse(\n      checkoutCustomerBillingAddressFields,\n    ),\n  );\n}\n\nexport function checkoutCustomerBillingAddressFieldsFromJSON(\n  jsonString: string,\n): SafeParseResult<CheckoutCustomerBillingAddressFields, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) =>\n      CheckoutCustomerBillingAddressFields$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CheckoutCustomerBillingAddressFields' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;;;;;AAc1C,MAAM,kDAAkD,GAI3D,CAAC,6IAAC,MAAM,CAAC;IACX,OAAO,EAAE,CAAC,6IAAC,OAAO,EAAE;IACpB,KAAK,EAAE,CAAC,6IAAC,OAAO,EAAE;IAClB,IAAI,EAAE,CAAC,6IAAC,OAAO,EAAE;IACjB,WAAW,EAAE,CAAC,6IAAC,OAAO,EAAE;IACxB,KAAK,EAAE,CAAC,6IAAC,OAAO,EAAE;IAClB,KAAK,EAAE,CAAC,6IAAC,OAAO,EAAE;CACnB,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAM,AAAN,EAAO,CAAC,EAAE;QACf,aAAa,EAAE,YAAY;KAC5B,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAaI,MAAM,mDAAmD,GAI5D,CAAC,6IAAC,MAAM,CAAC;IACX,OAAO,EAAE,CAAC,6IAAC,OAAO,EAAE;IACpB,KAAK,EAAE,CAAC,6IAAC,OAAO,EAAE;IAClB,IAAI,EAAE,CAAC,6IAAC,OAAO,EAAE;IACjB,UAAU,EAAE,CAAC,6IAAC,OAAO,EAAE;IACvB,KAAK,EAAE,CAAC,6IAAC,OAAO,EAAE;IAClB,KAAK,EAAE,CAAC,6IAAC,OAAO,EAAE;CACnB,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,OAAO,uLAAA,AAAM,EAAC,CAAC,EAAE;QACf,UAAU,EAAE,aAAa;KAC1B,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,qCAAqC,CASrD;AATD,CAAA,SAAiB,qCAAqC;IACpD,kFAAA,EAAoF,CACvE,sCAAA,aAAa,GACxB,kDAAkD,CAAC;IACrD,mFAAA,EAAqF,CACxE,sCAAA,cAAc,GACzB,mDAAmD,CAAC;AAGxD,CAAC,EATgB,qCAAqC,IAAA,CAArC,qCAAqC,GAAA,CAAA,CAAA,GASrD;AAEK,SAAU,0CAA0C,CACxD,oCAA0E;IAE1E,OAAO,IAAI,CAAC,SAAS,CACnB,mDAAmD,CAAC,KAAK,CACvD,oCAAoC,CACrC,CACF,CAAC;AACJ,CAAC;AAEK,SAAU,4CAA4C,CAC1D,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CACF,CADI,iDAC8C,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACzE,CAAA,gEAAA,CAAkE,CACnE,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 7403, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7409, "column": 0}, "map": {"version":3,"file":"checkoutdiscountfixedonceforeverduration.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/checkoutdiscountfixedonceforeverduration.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  DiscountDuration,\n  DiscountDuration$inboundSchema,\n  DiscountDuration$outboundSchema,\n} from \"./discountduration.js\";\nimport {\n  DiscountType,\n  DiscountType$inboundSchema,\n  DiscountType$outboundSchema,\n} from \"./discounttype.js\";\n\n/**\n * Schema for a fixed amount discount that is applied once or forever.\n */\nexport type CheckoutDiscountFixedOnceForeverDuration = {\n  duration: DiscountDuration;\n  type: DiscountType;\n  amount: number;\n  currency: string;\n  /**\n   * The ID of the object.\n   */\n  id: string;\n  name: string;\n  code: string | null;\n};\n\n/** @internal */\nexport const CheckoutDiscountFixedOnceForeverDuration$inboundSchema: z.ZodType<\n  CheckoutDiscountFixedOnceForeverDuration,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  duration: DiscountDuration$inboundSchema,\n  type: DiscountType$inboundSchema,\n  amount: z.number().int(),\n  currency: z.string(),\n  id: z.string(),\n  name: z.string(),\n  code: z.nullable(z.string()),\n});\n\n/** @internal */\nexport type CheckoutDiscountFixedOnceForeverDuration$Outbound = {\n  duration: string;\n  type: string;\n  amount: number;\n  currency: string;\n  id: string;\n  name: string;\n  code: string | null;\n};\n\n/** @internal */\nexport const CheckoutDiscountFixedOnceForeverDuration$outboundSchema: z.ZodType<\n  CheckoutDiscountFixedOnceForeverDuration$Outbound,\n  z.ZodTypeDef,\n  CheckoutDiscountFixedOnceForeverDuration\n> = z.object({\n  duration: DiscountDuration$outboundSchema,\n  type: DiscountType$outboundSchema,\n  amount: z.number().int(),\n  currency: z.string(),\n  id: z.string(),\n  name: z.string(),\n  code: z.nullable(z.string()),\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CheckoutDiscountFixedOnceForeverDuration$ {\n  /** @deprecated use `CheckoutDiscountFixedOnceForeverDuration$inboundSchema` instead. */\n  export const inboundSchema =\n    CheckoutDiscountFixedOnceForeverDuration$inboundSchema;\n  /** @deprecated use `CheckoutDiscountFixedOnceForeverDuration$outboundSchema` instead. */\n  export const outboundSchema =\n    CheckoutDiscountFixedOnceForeverDuration$outboundSchema;\n  /** @deprecated use `CheckoutDiscountFixedOnceForeverDuration$Outbound` instead. */\n  export type Outbound = CheckoutDiscountFixedOnceForeverDuration$Outbound;\n}\n\nexport function checkoutDiscountFixedOnceForeverDurationToJSON(\n  checkoutDiscountFixedOnceForeverDuration:\n    CheckoutDiscountFixedOnceForeverDuration,\n): string {\n  return JSON.stringify(\n    CheckoutDiscountFixedOnceForeverDuration$outboundSchema.parse(\n      checkoutDiscountFixedOnceForeverDuration,\n    ),\n  );\n}\n\nexport function checkoutDiscountFixedOnceForeverDurationFromJSON(\n  jsonString: string,\n): SafeParseResult<\n  CheckoutDiscountFixedOnceForeverDuration,\n  SDKValidationError\n> {\n  return safeParse(\n    jsonString,\n    (x) =>\n      CheckoutDiscountFixedOnceForeverDuration$inboundSchema.parse(\n        JSON.parse(x),\n      ),\n    `Failed to parse 'CheckoutDiscountFixedOnceForeverDuration' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,8BAA8B,EAC9B,+BAA+B,GAChC,MAAM,uBAAuB,CAAC;AAC/B,OAAO,EAEL,0BAA0B,EAC1B,2BAA2B,GAC5B,MAAM,mBAAmB,CAAC;;;;;;AAmBpB,MAAM,sDAAsD,GAI/D,CAAC,6IAAC,MAAM,CAAC;IACX,QAAQ,oMAAE,iCAA8B;IACxC,IAAI,gMAAE,6BAA0B;IAChC,MAAM,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IACxB,QAAQ,EAAE,CAAC,6IAAC,MAAM,EAAE;IACpB,EAAE,EAAE,CAAC,6IAAC,MAAM,EAAE;IACd,IAAI,EAAE,CAAC,6IAAC,MAAM,EAAE;IAChB,IAAI,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;CAC7B,CAAC,CAAC;AAcI,MAAM,uDAAuD,GAIhE,CAAC,6IAAC,MAAM,CAAC;IACX,QAAQ,oMAAE,kCAA+B;IACzC,IAAI,+LAAE,+BAA2B;IACjC,MAAM,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IACxB,QAAQ,EAAE,CAAC,6IAAC,MAAM,EAAE;IACpB,EAAE,EAAE,CAAC,6IAAC,MAAM,EAAE;IACd,IAAI,EAAE,CAAC,6IAAC,MAAM,EAAE;IAChB,IAAI,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;CAC7B,CAAC,CAAC;AAMG,IAAW,yCAAyC,CASzD;AATD,CAAA,SAAiB,yCAAyC;IACxD,sFAAA,EAAwF,CAC3E,0CAAA,aAAa,GACxB,sDAAsD,CAAC;IACzD,uFAAA,EAAyF,CAC5E,0CAAA,cAAc,GACzB,uDAAuD,CAAC;AAG5D,CAAC,EATgB,yCAAyC,IAAA,CAAzC,yCAAyC,GAAA,CAAA,CAAA,GASzD;AAEK,SAAU,8CAA8C,CAC5D,wCAC0C;IAE1C,OAAO,IAAI,CAAC,SAAS,CACnB,uDAAuD,CAAC,KAAK,CAC3D,wCAAwC,CACzC,CACF,CAAC;AACJ,CAAC;AAEK,SAAU,gDAAgD,CAC9D,UAAkB;IAKlB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CACF,CADI,qDACkD,CAAC,KAAK,CAC1D,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CACd,EACH,CAAA,oEAAA,CAAsE,CACvE,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 7456, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7462, "column": 0}, "map": {"version":3,"file":"checkoutdiscountfixedrepeatduration.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/checkoutdiscountfixedrepeatduration.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  DiscountDuration,\n  DiscountDuration$inboundSchema,\n  DiscountDuration$outboundSchema,\n} from \"./discountduration.js\";\nimport {\n  DiscountType,\n  DiscountType$inboundSchema,\n  DiscountType$outboundSchema,\n} from \"./discounttype.js\";\n\n/**\n * Schema for a fixed amount discount that is applied on every invoice\n *\n * @remarks\n * for a certain number of months.\n */\nexport type CheckoutDiscountFixedRepeatDuration = {\n  duration: DiscountDuration;\n  durationInMonths: number;\n  type: DiscountType;\n  amount: number;\n  currency: string;\n  /**\n   * The ID of the object.\n   */\n  id: string;\n  name: string;\n  code: string | null;\n};\n\n/** @internal */\nexport const CheckoutDiscountFixedRepeatDuration$inboundSchema: z.ZodType<\n  CheckoutDiscountFixedRepeatDuration,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  duration: DiscountDuration$inboundSchema,\n  duration_in_months: z.number().int(),\n  type: DiscountType$inboundSchema,\n  amount: z.number().int(),\n  currency: z.string(),\n  id: z.string(),\n  name: z.string(),\n  code: z.nullable(z.string()),\n}).transform((v) => {\n  return remap$(v, {\n    \"duration_in_months\": \"durationInMonths\",\n  });\n});\n\n/** @internal */\nexport type CheckoutDiscountFixedRepeatDuration$Outbound = {\n  duration: string;\n  duration_in_months: number;\n  type: string;\n  amount: number;\n  currency: string;\n  id: string;\n  name: string;\n  code: string | null;\n};\n\n/** @internal */\nexport const CheckoutDiscountFixedRepeatDuration$outboundSchema: z.ZodType<\n  CheckoutDiscountFixedRepeatDuration$Outbound,\n  z.ZodTypeDef,\n  CheckoutDiscountFixedRepeatDuration\n> = z.object({\n  duration: DiscountDuration$outboundSchema,\n  durationInMonths: z.number().int(),\n  type: DiscountType$outboundSchema,\n  amount: z.number().int(),\n  currency: z.string(),\n  id: z.string(),\n  name: z.string(),\n  code: z.nullable(z.string()),\n}).transform((v) => {\n  return remap$(v, {\n    durationInMonths: \"duration_in_months\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CheckoutDiscountFixedRepeatDuration$ {\n  /** @deprecated use `CheckoutDiscountFixedRepeatDuration$inboundSchema` instead. */\n  export const inboundSchema =\n    CheckoutDiscountFixedRepeatDuration$inboundSchema;\n  /** @deprecated use `CheckoutDiscountFixedRepeatDuration$outboundSchema` instead. */\n  export const outboundSchema =\n    CheckoutDiscountFixedRepeatDuration$outboundSchema;\n  /** @deprecated use `CheckoutDiscountFixedRepeatDuration$Outbound` instead. */\n  export type Outbound = CheckoutDiscountFixedRepeatDuration$Outbound;\n}\n\nexport function checkoutDiscountFixedRepeatDurationToJSON(\n  checkoutDiscountFixedRepeatDuration: CheckoutDiscountFixedRepeatDuration,\n): string {\n  return JSON.stringify(\n    CheckoutDiscountFixedRepeatDuration$outboundSchema.parse(\n      checkoutDiscountFixedRepeatDuration,\n    ),\n  );\n}\n\nexport function checkoutDiscountFixedRepeatDurationFromJSON(\n  jsonString: string,\n): SafeParseResult<CheckoutDiscountFixedRepeatDuration, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) =>\n      CheckoutDiscountFixedRepeatDuration$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CheckoutDiscountFixedRepeatDuration' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,8BAA8B,EAC9B,+BAA+B,GAChC,MAAM,uBAAuB,CAAC;AAC/B,OAAO,EAEL,0BAA0B,EAC1B,2BAA2B,GAC5B,MAAM,mBAAmB,CAAC;;;;;;;AAuBpB,MAAM,iDAAiD,GAI1D,CAAC,6IAAC,MAAM,CAAC;IACX,QAAQ,oMAAE,iCAA8B;IACxC,kBAAkB,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IACpC,IAAI,gMAAE,6BAA0B;IAChC,MAAM,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IACxB,QAAQ,EAAE,CAAC,6IAAC,MAAM,EAAE;IACpB,EAAE,EAAE,CAAC,6IAAC,MAAM,EAAE;IACd,IAAI,EAAE,CAAC,6IAAC,MAAM,EAAE;IAChB,IAAI,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;CAC7B,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,QAAO,sLAAA,AAAM,EAAC,CAAC,EAAE;QACf,oBAAoB,EAAE,kBAAkB;KACzC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAeI,MAAM,kDAAkD,GAI3D,CAAC,6IAAC,MAAM,CAAC;IACX,QAAQ,oMAAE,kCAA+B;IACzC,gBAAgB,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAClC,IAAI,gMAAE,8BAA2B;IACjC,MAAM,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IACxB,QAAQ,EAAE,CAAC,6IAAC,MAAM,EAAE;IACpB,EAAE,EAAE,CAAC,6IAAC,MAAM,EAAE;IACd,IAAI,EAAE,CAAC,6IAAC,MAAM,EAAE;IAChB,IAAI,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;CAC7B,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,gBAAgB,EAAE,oBAAoB;KACvC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,oCAAoC,CASpD;AATD,CAAA,SAAiB,oCAAoC;IACnD,iFAAA,EAAmF,CACtE,qCAAA,aAAa,GACxB,iDAAiD,CAAC;IACpD,kFAAA,EAAoF,CACvE,qCAAA,cAAc,GACzB,kDAAkD,CAAC;AAGvD,CAAC,EATgB,oCAAoC,IAAA,CAApC,oCAAoC,GAAA,CAAA,CAAA,GASpD;AAEK,SAAU,yCAAyC,CACvD,mCAAwE;IAExE,OAAO,IAAI,CAAC,SAAS,CACnB,kDAAkD,CAAC,KAAK,CACtD,mCAAmC,CACpC,CACF,CAAC;AACJ,CAAC;AAEK,SAAU,2CAA2C,CACzD,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CACF,CADI,gDAC6C,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACxE,CAAA,+DAAA,CAAiE,CAClE,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 7521, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7527, "column": 0}, "map": {"version":3,"file":"checkoutdiscountpercentageonceforeverduration.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/checkoutdiscountpercentageonceforeverduration.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  DiscountDuration,\n  DiscountDuration$inboundSchema,\n  DiscountDuration$outboundSchema,\n} from \"./discountduration.js\";\nimport {\n  DiscountType,\n  DiscountType$inboundSchema,\n  DiscountType$outboundSchema,\n} from \"./discounttype.js\";\n\n/**\n * Schema for a percentage discount that is applied once or forever.\n */\nexport type CheckoutDiscountPercentageOnceForeverDuration = {\n  duration: DiscountDuration;\n  type: DiscountType;\n  basisPoints: number;\n  /**\n   * The ID of the object.\n   */\n  id: string;\n  name: string;\n  code: string | null;\n};\n\n/** @internal */\nexport const CheckoutDiscountPercentageOnceForeverDuration$inboundSchema:\n  z.ZodType<\n    CheckoutDiscountPercentageOnceForeverDuration,\n    z.ZodTypeDef,\n    unknown\n  > = z.object({\n    duration: DiscountDuration$inboundSchema,\n    type: DiscountType$inboundSchema,\n    basis_points: z.number().int(),\n    id: z.string(),\n    name: z.string(),\n    code: z.nullable(z.string()),\n  }).transform((v) => {\n    return remap$(v, {\n      \"basis_points\": \"basisPoints\",\n    });\n  });\n\n/** @internal */\nexport type CheckoutDiscountPercentageOnceForeverDuration$Outbound = {\n  duration: string;\n  type: string;\n  basis_points: number;\n  id: string;\n  name: string;\n  code: string | null;\n};\n\n/** @internal */\nexport const CheckoutDiscountPercentageOnceForeverDuration$outboundSchema:\n  z.ZodType<\n    CheckoutDiscountPercentageOnceForeverDuration$Outbound,\n    z.ZodTypeDef,\n    CheckoutDiscountPercentageOnceForeverDuration\n  > = z.object({\n    duration: DiscountDuration$outboundSchema,\n    type: DiscountType$outboundSchema,\n    basisPoints: z.number().int(),\n    id: z.string(),\n    name: z.string(),\n    code: z.nullable(z.string()),\n  }).transform((v) => {\n    return remap$(v, {\n      basisPoints: \"basis_points\",\n    });\n  });\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CheckoutDiscountPercentageOnceForeverDuration$ {\n  /** @deprecated use `CheckoutDiscountPercentageOnceForeverDuration$inboundSchema` instead. */\n  export const inboundSchema =\n    CheckoutDiscountPercentageOnceForeverDuration$inboundSchema;\n  /** @deprecated use `CheckoutDiscountPercentageOnceForeverDuration$outboundSchema` instead. */\n  export const outboundSchema =\n    CheckoutDiscountPercentageOnceForeverDuration$outboundSchema;\n  /** @deprecated use `CheckoutDiscountPercentageOnceForeverDuration$Outbound` instead. */\n  export type Outbound = CheckoutDiscountPercentageOnceForeverDuration$Outbound;\n}\n\nexport function checkoutDiscountPercentageOnceForeverDurationToJSON(\n  checkoutDiscountPercentageOnceForeverDuration:\n    CheckoutDiscountPercentageOnceForeverDuration,\n): string {\n  return JSON.stringify(\n    CheckoutDiscountPercentageOnceForeverDuration$outboundSchema.parse(\n      checkoutDiscountPercentageOnceForeverDuration,\n    ),\n  );\n}\n\nexport function checkoutDiscountPercentageOnceForeverDurationFromJSON(\n  jsonString: string,\n): SafeParseResult<\n  CheckoutDiscountPercentageOnceForeverDuration,\n  SDKValidationError\n> {\n  return safeParse(\n    jsonString,\n    (x) =>\n      CheckoutDiscountPercentageOnceForeverDuration$inboundSchema.parse(\n        JSON.parse(x),\n      ),\n    `Failed to parse 'CheckoutDiscountPercentageOnceForeverDuration' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,8BAA8B,EAC9B,+BAA+B,GAChC,MAAM,uBAAuB,CAAC;AAC/B,OAAO,EAEL,0BAA0B,EAC1B,2BAA2B,GAC5B,MAAM,mBAAmB,CAAC;;;;;;;AAkBpB,MAAM,2DAA2D,GAKlE,CAAC,6IAAC,MAAM,CAAC;IACX,QAAQ,oMAAE,iCAA8B;IACxC,IAAI,gMAAE,6BAA0B;IAChC,YAAY,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAC9B,EAAE,EAAE,CAAC,6IAAC,MAAM,EAAE;IACd,IAAI,EAAE,CAAC,6IAAC,MAAM,EAAE;IAChB,IAAI,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;CAC7B,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,QAAO,sLAAA,AAAM,EAAC,CAAC,EAAE;QACf,cAAc,EAAE,aAAa;KAC9B,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAaE,MAAM,4DAA4D,GAKnE,CAAC,6IAAC,MAAM,CAAC;IACX,QAAQ,oMAAE,kCAA+B;IACzC,IAAI,EAAE,4NAA2B;IACjC,WAAW,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAC7B,EAAE,EAAE,CAAC,6IAAC,MAAM,EAAE;IACd,IAAI,EAAE,CAAC,6IAAC,MAAM,EAAE;IAChB,IAAI,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;CAC7B,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAM,AAAN,EAAO,CAAC,EAAE;QACf,WAAW,EAAE,cAAc;KAC5B,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMC,IAAW,8CAA8C,CAS9D;AATD,CAAA,SAAiB,8CAA8C;IAC7D,2FAAA,EAA6F,CAChF,+CAAA,aAAa,GACxB,2DAA2D,CAAC;IAC9D,4FAAA,EAA8F,CACjF,+CAAA,cAAc,GACzB,4DAA4D,CAAC;AAGjE,CAAC,EATgB,8CAA8C,IAAA,CAA9C,8CAA8C,GAAA,CAAA,CAAA,GAS9D;AAEK,SAAU,mDAAmD,CACjE,6CAC+C;IAE/C,OAAO,IAAI,CAAC,SAAS,CACnB,4DAA4D,CAAC,KAAK,CAChE,6CAA6C,CAC9C,CACF,CAAC;AACJ,CAAC;AAEK,SAAU,qDAAqD,CACnE,UAAkB;IAKlB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CACF,CADI,0DACuD,CAAC,KAAK,CAC/D,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CACd,EACH,CAAA,yEAAA,CAA2E,CAC5E,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 7582, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7588, "column": 0}, "map": {"version":3,"file":"checkoutdiscountpercentagerepeatduration.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/checkoutdiscountpercentagerepeatduration.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  DiscountDuration,\n  DiscountDuration$inboundSchema,\n  DiscountDuration$outboundSchema,\n} from \"./discountduration.js\";\nimport {\n  DiscountType,\n  DiscountType$inboundSchema,\n  DiscountType$outboundSchema,\n} from \"./discounttype.js\";\n\n/**\n * Schema for a percentage discount that is applied on every invoice\n *\n * @remarks\n * for a certain number of months.\n */\nexport type CheckoutDiscountPercentageRepeatDuration = {\n  duration: DiscountDuration;\n  durationInMonths: number;\n  type: DiscountType;\n  basisPoints: number;\n  /**\n   * The ID of the object.\n   */\n  id: string;\n  name: string;\n  code: string | null;\n};\n\n/** @internal */\nexport const CheckoutDiscountPercentageRepeatDuration$inboundSchema: z.ZodType<\n  CheckoutDiscountPercentageRepeatDuration,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  duration: DiscountDuration$inboundSchema,\n  duration_in_months: z.number().int(),\n  type: DiscountType$inboundSchema,\n  basis_points: z.number().int(),\n  id: z.string(),\n  name: z.string(),\n  code: z.nullable(z.string()),\n}).transform((v) => {\n  return remap$(v, {\n    \"duration_in_months\": \"durationInMonths\",\n    \"basis_points\": \"basisPoints\",\n  });\n});\n\n/** @internal */\nexport type CheckoutDiscountPercentageRepeatDuration$Outbound = {\n  duration: string;\n  duration_in_months: number;\n  type: string;\n  basis_points: number;\n  id: string;\n  name: string;\n  code: string | null;\n};\n\n/** @internal */\nexport const CheckoutDiscountPercentageRepeatDuration$outboundSchema: z.ZodType<\n  CheckoutDiscountPercentageRepeatDuration$Outbound,\n  z.ZodTypeDef,\n  CheckoutDiscountPercentageRepeatDuration\n> = z.object({\n  duration: DiscountDuration$outboundSchema,\n  durationInMonths: z.number().int(),\n  type: DiscountType$outboundSchema,\n  basisPoints: z.number().int(),\n  id: z.string(),\n  name: z.string(),\n  code: z.nullable(z.string()),\n}).transform((v) => {\n  return remap$(v, {\n    durationInMonths: \"duration_in_months\",\n    basisPoints: \"basis_points\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CheckoutDiscountPercentageRepeatDuration$ {\n  /** @deprecated use `CheckoutDiscountPercentageRepeatDuration$inboundSchema` instead. */\n  export const inboundSchema =\n    CheckoutDiscountPercentageRepeatDuration$inboundSchema;\n  /** @deprecated use `CheckoutDiscountPercentageRepeatDuration$outboundSchema` instead. */\n  export const outboundSchema =\n    CheckoutDiscountPercentageRepeatDuration$outboundSchema;\n  /** @deprecated use `CheckoutDiscountPercentageRepeatDuration$Outbound` instead. */\n  export type Outbound = CheckoutDiscountPercentageRepeatDuration$Outbound;\n}\n\nexport function checkoutDiscountPercentageRepeatDurationToJSON(\n  checkoutDiscountPercentageRepeatDuration:\n    CheckoutDiscountPercentageRepeatDuration,\n): string {\n  return JSON.stringify(\n    CheckoutDiscountPercentageRepeatDuration$outboundSchema.parse(\n      checkoutDiscountPercentageRepeatDuration,\n    ),\n  );\n}\n\nexport function checkoutDiscountPercentageRepeatDurationFromJSON(\n  jsonString: string,\n): SafeParseResult<\n  CheckoutDiscountPercentageRepeatDuration,\n  SDKValidationError\n> {\n  return safeParse(\n    jsonString,\n    (x) =>\n      CheckoutDiscountPercentageRepeatDuration$inboundSchema.parse(\n        JSON.parse(x),\n      ),\n    `Failed to parse 'CheckoutDiscountPercentageRepeatDuration' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,8BAA8B,EAC9B,+BAA+B,GAChC,MAAM,uBAAuB,CAAC;AAC/B,OAAO,EAEL,0BAA0B,EAC1B,2BAA2B,GAC5B,MAAM,mBAAmB,CAAC;;;;;;;AAsBpB,MAAM,sDAAsD,GAI/D,CAAC,6IAAC,MAAM,CAAC;IACX,QAAQ,oMAAE,iCAA8B;IACxC,kBAAkB,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IACpC,IAAI,gMAAE,6BAA0B;IAChC,YAAY,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAC9B,EAAE,EAAE,CAAC,6IAAC,MAAM,EAAE;IACd,IAAI,EAAE,CAAC,6IAAC,MAAM,EAAE;IAChB,IAAI,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;CAC7B,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,QAAO,sLAAA,AAAM,EAAC,CAAC,EAAE;QACf,oBAAoB,EAAE,kBAAkB;QACxC,cAAc,EAAE,aAAa;KAC9B,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAcI,MAAM,uDAAuD,GAIhE,CAAC,6IAAC,MAAM,CAAC;IACX,QAAQ,oMAAE,kCAA+B;IACzC,gBAAgB,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAClC,IAAI,gMAAE,8BAA2B;IACjC,WAAW,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAC7B,EAAE,EAAE,CAAC,6IAAC,MAAM,EAAE;IACd,IAAI,EAAE,CAAC,6IAAC,MAAM,EAAE;IAChB,IAAI,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;CAC7B,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,gBAAgB,EAAE,oBAAoB;QACtC,WAAW,EAAE,cAAc;KAC5B,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,yCAAyC,CASzD;AATD,CAAA,SAAiB,yCAAyC;IACxD,sFAAA,EAAwF,CAC3E,0CAAA,aAAa,GACxB,sDAAsD,CAAC;IACzD,uFAAA,EAAyF,CAC5E,0CAAA,cAAc,GACzB,uDAAuD,CAAC;AAG5D,CAAC,EATgB,yCAAyC,IAAA,CAAzC,yCAAyC,GAAA,CAAA,CAAA,GASzD;AAEK,SAAU,8CAA8C,CAC5D,wCAC0C;IAE1C,OAAO,IAAI,CAAC,SAAS,CACnB,uDAAuD,CAAC,KAAK,CAC3D,wCAAwC,CACzC,CACF,CAAC;AACJ,CAAC;AAEK,SAAU,gDAAgD,CAC9D,UAAkB;IAKlB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CACF,CADI,qDACkD,CAAC,KAAK,CAC1D,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CACd,EACH,CAAA,oEAAA,CAAsE,CACvE,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 7647, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7653, "column": 0}, "map": {"version":3,"file":"checkoutproduct.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/checkoutproduct.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  BenefitPublic,\n  BenefitPublic$inboundSchema,\n  BenefitPublic$Outbound,\n  BenefitPublic$outboundSchema,\n} from \"./benefitpublic.js\";\nimport {\n  LegacyRecurringProductPrice,\n  LegacyRecurringProductPrice$inboundSchema,\n  LegacyRecurringProductPrice$Outbound,\n  LegacyRecurringProductPrice$outboundSchema,\n} from \"./legacyrecurringproductprice.js\";\nimport {\n  ProductMediaFileRead,\n  ProductMediaFileRead$inboundSchema,\n  ProductMediaFileRead$Outbound,\n  ProductMediaFileRead$outboundSchema,\n} from \"./productmediafileread.js\";\nimport {\n  ProductPrice,\n  ProductPrice$inboundSchema,\n  ProductPrice$Outbound,\n  ProductPrice$outboundSchema,\n} from \"./productprice.js\";\nimport {\n  SubscriptionRecurringInterval,\n  SubscriptionRecurringInterval$inboundSchema,\n  SubscriptionRecurringInterval$outboundSchema,\n} from \"./subscriptionrecurringinterval.js\";\n\nexport type CheckoutProductPrices = LegacyRecurringProductPrice | ProductPrice;\n\n/**\n * Product data for a checkout session.\n */\nexport type CheckoutProduct = {\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  /**\n   * The ID of the product.\n   */\n  id: string;\n  /**\n   * The name of the product.\n   */\n  name: string;\n  /**\n   * The description of the product.\n   */\n  description: string | null;\n  /**\n   * The recurring interval of the product. If `None`, the product is a one-time purchase.\n   */\n  recurringInterval: SubscriptionRecurringInterval | null;\n  /**\n   * Whether the product is a subscription.\n   */\n  isRecurring: boolean;\n  /**\n   * Whether the product is archived and no longer available.\n   */\n  isArchived: boolean;\n  /**\n   * The ID of the organization owning the product.\n   */\n  organizationId: string;\n  /**\n   * List of prices for this product.\n   */\n  prices: Array<LegacyRecurringProductPrice | ProductPrice>;\n  /**\n   * List of benefits granted by the product.\n   */\n  benefits: Array<BenefitPublic>;\n  /**\n   * List of medias associated to the product.\n   */\n  medias: Array<ProductMediaFileRead>;\n};\n\n/** @internal */\nexport const CheckoutProductPrices$inboundSchema: z.ZodType<\n  CheckoutProductPrices,\n  z.ZodTypeDef,\n  unknown\n> = z.union([\n  LegacyRecurringProductPrice$inboundSchema,\n  ProductPrice$inboundSchema,\n]);\n\n/** @internal */\nexport type CheckoutProductPrices$Outbound =\n  | LegacyRecurringProductPrice$Outbound\n  | ProductPrice$Outbound;\n\n/** @internal */\nexport const CheckoutProductPrices$outboundSchema: z.ZodType<\n  CheckoutProductPrices$Outbound,\n  z.ZodTypeDef,\n  CheckoutProductPrices\n> = z.union([\n  LegacyRecurringProductPrice$outboundSchema,\n  ProductPrice$outboundSchema,\n]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CheckoutProductPrices$ {\n  /** @deprecated use `CheckoutProductPrices$inboundSchema` instead. */\n  export const inboundSchema = CheckoutProductPrices$inboundSchema;\n  /** @deprecated use `CheckoutProductPrices$outboundSchema` instead. */\n  export const outboundSchema = CheckoutProductPrices$outboundSchema;\n  /** @deprecated use `CheckoutProductPrices$Outbound` instead. */\n  export type Outbound = CheckoutProductPrices$Outbound;\n}\n\nexport function checkoutProductPricesToJSON(\n  checkoutProductPrices: CheckoutProductPrices,\n): string {\n  return JSON.stringify(\n    CheckoutProductPrices$outboundSchema.parse(checkoutProductPrices),\n  );\n}\n\nexport function checkoutProductPricesFromJSON(\n  jsonString: string,\n): SafeParseResult<CheckoutProductPrices, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CheckoutProductPrices$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CheckoutProductPrices' from JSON`,\n  );\n}\n\n/** @internal */\nexport const CheckoutProduct$inboundSchema: z.ZodType<\n  CheckoutProduct,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  id: z.string(),\n  name: z.string(),\n  description: z.nullable(z.string()),\n  recurring_interval: z.nullable(SubscriptionRecurringInterval$inboundSchema),\n  is_recurring: z.boolean(),\n  is_archived: z.boolean(),\n  organization_id: z.string(),\n  prices: z.array(\n    z.union([\n      LegacyRecurringProductPrice$inboundSchema,\n      ProductPrice$inboundSchema,\n    ]),\n  ),\n  benefits: z.array(BenefitPublic$inboundSchema),\n  medias: z.array(ProductMediaFileRead$inboundSchema),\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"recurring_interval\": \"recurringInterval\",\n    \"is_recurring\": \"isRecurring\",\n    \"is_archived\": \"isArchived\",\n    \"organization_id\": \"organizationId\",\n  });\n});\n\n/** @internal */\nexport type CheckoutProduct$Outbound = {\n  created_at: string;\n  modified_at: string | null;\n  id: string;\n  name: string;\n  description: string | null;\n  recurring_interval: string | null;\n  is_recurring: boolean;\n  is_archived: boolean;\n  organization_id: string;\n  prices: Array<LegacyRecurringProductPrice$Outbound | ProductPrice$Outbound>;\n  benefits: Array<BenefitPublic$Outbound>;\n  medias: Array<ProductMediaFileRead$Outbound>;\n};\n\n/** @internal */\nexport const CheckoutProduct$outboundSchema: z.ZodType<\n  CheckoutProduct$Outbound,\n  z.ZodTypeDef,\n  CheckoutProduct\n> = z.object({\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  id: z.string(),\n  name: z.string(),\n  description: z.nullable(z.string()),\n  recurringInterval: z.nullable(SubscriptionRecurringInterval$outboundSchema),\n  isRecurring: z.boolean(),\n  isArchived: z.boolean(),\n  organizationId: z.string(),\n  prices: z.array(\n    z.union([\n      LegacyRecurringProductPrice$outboundSchema,\n      ProductPrice$outboundSchema,\n    ]),\n  ),\n  benefits: z.array(BenefitPublic$outboundSchema),\n  medias: z.array(ProductMediaFileRead$outboundSchema),\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    recurringInterval: \"recurring_interval\",\n    isRecurring: \"is_recurring\",\n    isArchived: \"is_archived\",\n    organizationId: \"organization_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CheckoutProduct$ {\n  /** @deprecated use `CheckoutProduct$inboundSchema` instead. */\n  export const inboundSchema = CheckoutProduct$inboundSchema;\n  /** @deprecated use `CheckoutProduct$outboundSchema` instead. */\n  export const outboundSchema = CheckoutProduct$outboundSchema;\n  /** @deprecated use `CheckoutProduct$Outbound` instead. */\n  export type Outbound = CheckoutProduct$Outbound;\n}\n\nexport function checkoutProductToJSON(\n  checkoutProduct: CheckoutProduct,\n): string {\n  return JSON.stringify(CheckoutProduct$outboundSchema.parse(checkoutProduct));\n}\n\nexport function checkoutProductFromJSON(\n  jsonString: string,\n): SafeParseResult<CheckoutProduct, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CheckoutProduct$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CheckoutProduct' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,2BAA2B,EAE3B,4BAA4B,GAC7B,MAAM,oBAAoB,CAAC;AAC5B,OAAO,EAEL,yCAAyC,EAEzC,0CAA0C,GAC3C,MAAM,kCAAkC,CAAC;AAC1C,OAAO,EAEL,kCAAkC,EAElC,mCAAmC,GACpC,MAAM,2BAA2B,CAAC;AACnC,OAAO,EAEL,0BAA0B,EAE1B,2BAA2B,GAC5B,MAAM,mBAAmB,CAAC;AAC3B,OAAO,EAEL,2CAA2C,EAC3C,4CAA4C,GAC7C,MAAM,oCAAoC,CAAC;;;;;;;;;;AA2DrC,MAAM,mCAAmC,GAI5C,CAAC,6IAAC,KAAK,CAAC;iNACV,4CAAyC;kMACzC,6BAA0B;CAC3B,CAAC,CAAC;AAQI,MAAM,oCAAoC,GAI7C,CAAC,6IAAC,KAAK,CAAC;iNACV,6CAA0C;kMAC1C,8BAA2B;CAC5B,CAAC,CAAC;AAMG,IAAW,sBAAsB,CAOtC;AAPD,CAAA,SAAiB,sBAAsB;IACrC,mEAAA,EAAqE,CACxD,uBAAA,aAAa,GAAG,mCAAmC,CAAC;IACjE,oEAAA,EAAsE,CACzD,uBAAA,cAAc,GAAG,oCAAoC,CAAC;AAGrE,CAAC,EAPgB,sBAAsB,IAAA,CAAtB,sBAAsB,GAAA,CAAA,CAAA,GAOtC;AAEK,SAAU,2BAA2B,CACzC,qBAA4C;IAE5C,OAAO,IAAI,CAAC,SAAS,CACnB,oCAAoC,CAAC,KAAK,CAAC,qBAAqB,CAAC,CAClE,CAAC;AACJ,CAAC;AAEK,SAAU,6BAA6B,CAC3C,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,kCAAoC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC/D,CAAA,iDAAA,CAAmD,CACpD,CAAC;AACJ,CAAC;AAGM,MAAM,6BAA6B,GAItC,CAAC,6IAAC,MAAM,CAAC;IACX,UAAU,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,CAAC;QAAE,MAAM,EAAE,IAAI;IAAA,CAAE,CAAC,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;IAC7E,WAAW,EAAE,CAAC,6IAAC,QAAQ,CACrB,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,CAAC;QAAE,MAAM,EAAE,IAAI;IAAA,CAAE,CAAC,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAClE;IACD,EAAE,EAAE,CAAC,6IAAC,MAAM,EAAE;IACd,IAAI,EAAE,CAAC,6IAAC,MAAM,EAAE;IAChB,WAAW,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;IACnC,kBAAkB,EAAE,CAAC,6IAAC,QAAQ,gNAAC,8CAA2C,CAAC;IAC3E,YAAY,EAAE,CAAC,6IAAC,OAAO,EAAE;IACzB,WAAW,EAAE,CAAC,6IAAC,OAAO,EAAE;IACxB,eAAe,EAAE,CAAC,6IAAC,MAAM,EAAE;IAC3B,MAAM,EAAE,CAAC,6IAAC,KAAK,CACb,CAAC,6IAAC,KAAK,CAAC;QACN,yPAAyC;sMACzC,6BAA0B;KAC3B,CAAC,CACH;IACD,QAAQ,EAAE,CAAC,6IAAC,KAAK,gMAAC,8BAA2B,CAAC;IAC9C,MAAM,EAAE,CAAC,6IAAC,KAAK,uMAAC,qCAAkC,CAAC;CACpD,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,YAAY,EAAE,WAAW;QACzB,aAAa,EAAE,YAAY;QAC3B,oBAAoB,EAAE,mBAAmB;QACzC,cAAc,EAAE,aAAa;QAC7B,aAAa,EAAE,YAAY;QAC3B,iBAAiB,EAAE,gBAAgB;KACpC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAmBI,MAAM,8BAA8B,GAIvC,CAAC,6IAAC,MAAM,CAAC;IACX,SAAS,EAAE,CAAC,6IAAC,IAAI,EAAE,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,WAAW,EAAE,CAAC;IACnD,UAAU,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,IAAI,EAAE,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;IAChE,EAAE,EAAE,CAAC,6IAAC,MAAM,EAAE;IACd,IAAI,EAAE,CAAC,6IAAC,MAAM,EAAE;IAChB,WAAW,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;IACnC,iBAAiB,EAAE,CAAC,6IAAC,QAAQ,gNAAC,+CAA4C,CAAC;IAC3E,WAAW,EAAE,CAAC,6IAAC,OAAO,EAAE;IACxB,UAAU,EAAE,CAAC,6IAAC,OAAO,EAAE;IACvB,cAAc,EAAE,CAAC,6IAAC,MAAM,EAAE;IAC1B,MAAM,EAAE,CAAC,6IAAC,KAAK,CACb,CAAC,6IAAC,KAAK,CAAC;qNACN,6CAA0C;sMAC1C,8BAA2B;KAC5B,CAAC,CACH;IACD,QAAQ,EAAE,CAAC,6IAAC,KAAK,gMAAC,+BAA4B,CAAC;IAC/C,MAAM,EAAE,CAAC,6IAAC,KAAK,uMAAC,sCAAmC,CAAC;CACrD,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,OAAO,uLAAA,AAAM,EAAC,CAAC,EAAE;QACf,SAAS,EAAE,YAAY;QACvB,UAAU,EAAE,aAAa;QACzB,iBAAiB,EAAE,oBAAoB;QACvC,WAAW,EAAE,cAAc;QAC3B,UAAU,EAAE,aAAa;QACzB,cAAc,EAAE,iBAAiB;KAClC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,gBAAgB,CAOhC;AAPD,CAAA,SAAiB,gBAAgB;IAC/B,6DAAA,EAA+D,CAClD,iBAAA,aAAa,GAAG,6BAA6B,CAAC;IAC3D,8DAAA,EAAgE,CACnD,iBAAA,cAAc,GAAG,8BAA8B,CAAC;AAG/D,CAAC,EAPgB,gBAAgB,IAAA,CAAhB,gBAAgB,GAAA,CAAA,CAAA,GAOhC;AAEK,SAAU,qBAAqB,CACnC,eAAgC;IAEhC,OAAO,IAAI,CAAC,SAAS,CAAC,8BAA8B,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,CAAC;AAC/E,CAAC;AAEK,SAAU,uBAAuB,CACrC,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,4BAA8B,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACzD,CAAA,2CAAA,CAA6C,CAC9C,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 7770, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7776, "column": 0}, "map": {"version":3,"file":"organizationfeaturesettings.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/organizationfeaturesettings.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport type OrganizationFeatureSettings = {\n  /**\n   * If this organization has issue funding enabled\n   */\n  issueFundingEnabled?: boolean | undefined;\n  /**\n   * If this organization has usage-based billing enabled\n   */\n  usageBasedBillingEnabled?: boolean | undefined;\n};\n\n/** @internal */\nexport const OrganizationFeatureSettings$inboundSchema: z.ZodType<\n  OrganizationFeatureSettings,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  issue_funding_enabled: z.boolean().default(false),\n  usage_based_billing_enabled: z.boolean().default(false),\n}).transform((v) => {\n  return remap$(v, {\n    \"issue_funding_enabled\": \"issueFundingEnabled\",\n    \"usage_based_billing_enabled\": \"usageBasedBillingEnabled\",\n  });\n});\n\n/** @internal */\nexport type OrganizationFeatureSettings$Outbound = {\n  issue_funding_enabled: boolean;\n  usage_based_billing_enabled: boolean;\n};\n\n/** @internal */\nexport const OrganizationFeatureSettings$outboundSchema: z.ZodType<\n  OrganizationFeatureSettings$Outbound,\n  z.ZodTypeDef,\n  OrganizationFeatureSettings\n> = z.object({\n  issueFundingEnabled: z.boolean().default(false),\n  usageBasedBillingEnabled: z.boolean().default(false),\n}).transform((v) => {\n  return remap$(v, {\n    issueFundingEnabled: \"issue_funding_enabled\",\n    usageBasedBillingEnabled: \"usage_based_billing_enabled\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace OrganizationFeatureSettings$ {\n  /** @deprecated use `OrganizationFeatureSettings$inboundSchema` instead. */\n  export const inboundSchema = OrganizationFeatureSettings$inboundSchema;\n  /** @deprecated use `OrganizationFeatureSettings$outboundSchema` instead. */\n  export const outboundSchema = OrganizationFeatureSettings$outboundSchema;\n  /** @deprecated use `OrganizationFeatureSettings$Outbound` instead. */\n  export type Outbound = OrganizationFeatureSettings$Outbound;\n}\n\nexport function organizationFeatureSettingsToJSON(\n  organizationFeatureSettings: OrganizationFeatureSettings,\n): string {\n  return JSON.stringify(\n    OrganizationFeatureSettings$outboundSchema.parse(\n      organizationFeatureSettings,\n    ),\n  );\n}\n\nexport function organizationFeatureSettingsFromJSON(\n  jsonString: string,\n): SafeParseResult<OrganizationFeatureSettings, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => OrganizationFeatureSettings$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'OrganizationFeatureSettings' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;;;;;AAgB1C,MAAM,yCAAyC,GAIlD,CAAC,6IAAC,MAAM,CAAC;IACX,qBAAqB,EAAE,CAAC,6IAAC,OAAO,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC;IACjD,2BAA2B,EAAE,CAAC,6IAAC,OAAO,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC;CACxD,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,uBAAuB,EAAE,qBAAqB;QAC9C,6BAA6B,EAAE,0BAA0B;KAC1D,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AASI,MAAM,0CAA0C,GAInD,CAAC,6IAAC,MAAM,CAAC;IACX,mBAAmB,EAAE,CAAC,6IAAC,OAAO,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC;IAC/C,wBAAwB,EAAE,CAAC,6IAAC,OAAO,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC;CACrD,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAM,AAAN,EAAO,CAAC,EAAE;QACf,mBAAmB,EAAE,uBAAuB;QAC5C,wBAAwB,EAAE,6BAA6B;KACxD,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,4BAA4B,CAO5C;AAPD,CAAA,SAAiB,4BAA4B;IAC3C,yEAAA,EAA2E,CAC9D,6BAAA,aAAa,GAAG,yCAAyC,CAAC;IACvE,0EAAA,EAA4E,CAC/D,6BAAA,cAAc,GAAG,0CAA0C,CAAC;AAG3E,CAAC,EAPgB,4BAA4B,IAAA,CAA5B,4BAA4B,GAAA,CAAA,CAAA,GAO5C;AAEK,SAAU,iCAAiC,CAC/C,2BAAwD;IAExD,OAAO,IAAI,CAAC,SAAS,CACnB,0CAA0C,CAAC,KAAK,CAC9C,2BAA2B,CAC5B,CACF,CAAC;AACJ,CAAC;AAEK,SAAU,mCAAmC,CACjD,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,wCAA0C,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACrE,CAAA,uDAAA,CAAyD,CAC1D,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 7821, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7827, "column": 0}, "map": {"version":3,"file":"organizationsocialplatforms.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/organizationsocialplatforms.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { ClosedEnum } from \"../../types/enums.js\";\n\nexport const OrganizationSocialPlatforms = {\n  X: \"x\",\n  Github: \"github\",\n  Facebook: \"facebook\",\n  Instagram: \"instagram\",\n  Youtube: \"youtube\",\n  Tiktok: \"tiktok\",\n  Linkedin: \"linkedin\",\n  Other: \"other\",\n} as const;\nexport type OrganizationSocialPlatforms = ClosedEnum<\n  typeof OrganizationSocialPlatforms\n>;\n\n/** @internal */\nexport const OrganizationSocialPlatforms$inboundSchema: z.ZodNativeEnum<\n  typeof OrganizationSocialPlatforms\n> = z.nativeEnum(OrganizationSocialPlatforms);\n\n/** @internal */\nexport const OrganizationSocialPlatforms$outboundSchema: z.ZodNativeEnum<\n  typeof OrganizationSocialPlatforms\n> = OrganizationSocialPlatforms$inboundSchema;\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace OrganizationSocialPlatforms$ {\n  /** @deprecated use `OrganizationSocialPlatforms$inboundSchema` instead. */\n  export const inboundSchema = OrganizationSocialPlatforms$inboundSchema;\n  /** @deprecated use `OrganizationSocialPlatforms$outboundSchema` instead. */\n  export const outboundSchema = OrganizationSocialPlatforms$outboundSchema;\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;AAGlB,MAAM,2BAA2B,GAAG;IACzC,CAAC,EAAE,GAAG;IACN,MAAM,EAAE,QAAQ;IAChB,QAAQ,EAAE,UAAU;IACpB,SAAS,EAAE,WAAW;IACtB,OAAO,EAAE,SAAS;IAClB,MAAM,EAAE,QAAQ;IAChB,QAAQ,EAAE,UAAU;IACpB,KAAK,EAAE,OAAO;CACN,CAAC;AAMJ,MAAM,yCAAyC,GAElD,CAAC,6IAAC,UAAU,CAAC,2BAA2B,CAAC,CAAC;AAGvC,MAAM,0CAA0C,GAEnD,yCAAyC,CAAC;AAMxC,IAAW,4BAA4B,CAK5C;AALD,CAAA,SAAiB,4BAA4B;IAC3C,yEAAA,EAA2E,CAC9D,6BAAA,aAAa,GAAG,yCAAyC,CAAC;IACvE,0EAAA,EAA4E,CAC/D,6BAAA,cAAc,GAAG,0CAA0C,CAAC;AAC3E,CAAC,EALgB,4BAA4B,IAAA,CAA5B,4BAA4B,GAAA,CAAA,CAAA,GAK5C","ignoreList":[0]}},
    {"offset": {"line": 7855, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7861, "column": 0}, "map": {"version":3,"file":"organizationsociallink.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/organizationsociallink.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  OrganizationSocialPlatforms,\n  OrganizationSocialPlatforms$inboundSchema,\n  OrganizationSocialPlatforms$outboundSchema,\n} from \"./organizationsocialplatforms.js\";\n\nexport type OrganizationSocialLink = {\n  platform: OrganizationSocialPlatforms;\n  /**\n   * The URL to the organization profile\n   */\n  url: string;\n};\n\n/** @internal */\nexport const OrganizationSocialLink$inboundSchema: z.ZodType<\n  OrganizationSocialLink,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  platform: OrganizationSocialPlatforms$inboundSchema,\n  url: z.string(),\n});\n\n/** @internal */\nexport type OrganizationSocialLink$Outbound = {\n  platform: string;\n  url: string;\n};\n\n/** @internal */\nexport const OrganizationSocialLink$outboundSchema: z.ZodType<\n  OrganizationSocialLink$Outbound,\n  z.ZodTypeDef,\n  OrganizationSocialLink\n> = z.object({\n  platform: OrganizationSocialPlatforms$outboundSchema,\n  url: z.string(),\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace OrganizationSocialLink$ {\n  /** @deprecated use `OrganizationSocialLink$inboundSchema` instead. */\n  export const inboundSchema = OrganizationSocialLink$inboundSchema;\n  /** @deprecated use `OrganizationSocialLink$outboundSchema` instead. */\n  export const outboundSchema = OrganizationSocialLink$outboundSchema;\n  /** @deprecated use `OrganizationSocialLink$Outbound` instead. */\n  export type Outbound = OrganizationSocialLink$Outbound;\n}\n\nexport function organizationSocialLinkToJSON(\n  organizationSocialLink: OrganizationSocialLink,\n): string {\n  return JSON.stringify(\n    OrganizationSocialLink$outboundSchema.parse(organizationSocialLink),\n  );\n}\n\nexport function organizationSocialLinkFromJSON(\n  jsonString: string,\n): SafeParseResult<OrganizationSocialLink, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => OrganizationSocialLink$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'OrganizationSocialLink' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;AAGH,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,yCAAyC,EACzC,0CAA0C,GAC3C,MAAM,kCAAkC,CAAC;AAR1C,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;;;AAmBlB,MAAM,oCAAoC,GAI7C,CAAC,6IAAC,MAAM,CAAC;IACX,QAAQ,+MAAE,4CAAyC;IACnD,GAAG,EAAE,CAAC,6IAAC,MAAM,EAAE;CAChB,CAAC,CAAC;AASI,MAAM,qCAAqC,GAI9C,CAAC,6IAAC,MAAM,CAAC;IACX,QAAQ,8MAAE,8CAA0C;IACpD,GAAG,EAAE,CAAC,6IAAC,MAAM,EAAE;CAChB,CAAC,CAAC;AAMG,IAAW,uBAAuB,CAOvC;AAPD,CAAA,SAAiB,uBAAuB;IACtC,oEAAA,EAAsE,CACzD,wBAAA,aAAa,GAAG,oCAAoC,CAAC;IAClE,qEAAA,EAAuE,CAC1D,wBAAA,cAAc,GAAG,qCAAqC,CAAC;AAGtE,CAAC,EAPgB,uBAAuB,IAAA,CAAvB,uBAAuB,GAAA,CAAA,CAAA,GAOvC;AAEK,SAAU,4BAA4B,CAC1C,sBAA8C;IAE9C,OAAO,IAAI,CAAC,SAAS,CACnB,qCAAqC,CAAC,KAAK,CAAC,sBAAsB,CAAC,CACpE,CAAC;AACJ,CAAC;AAEK,SAAU,8BAA8B,CAC5C,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,mCAAqC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAChE,CAAA,kDAAA,CAAoD,CACrD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 7896, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7902, "column": 0}, "map": {"version":3,"file":"subscriptionprorationbehavior.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/subscriptionprorationbehavior.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { ClosedEnum } from \"../../types/enums.js\";\n\nexport const SubscriptionProrationBehavior = {\n  Invoice: \"invoice\",\n  Prorate: \"prorate\",\n} as const;\nexport type SubscriptionProrationBehavior = ClosedEnum<\n  typeof SubscriptionProrationBehavior\n>;\n\n/** @internal */\nexport const SubscriptionProrationBehavior$inboundSchema: z.ZodNativeEnum<\n  typeof SubscriptionProrationBehavior\n> = z.nativeEnum(SubscriptionProrationBehavior);\n\n/** @internal */\nexport const SubscriptionProrationBehavior$outboundSchema: z.ZodNativeEnum<\n  typeof SubscriptionProrationBehavior\n> = SubscriptionProrationBehavior$inboundSchema;\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace SubscriptionProrationBehavior$ {\n  /** @deprecated use `SubscriptionProrationBehavior$inboundSchema` instead. */\n  export const inboundSchema = SubscriptionProrationBehavior$inboundSchema;\n  /** @deprecated use `SubscriptionProrationBehavior$outboundSchema` instead. */\n  export const outboundSchema = SubscriptionProrationBehavior$outboundSchema;\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;AAGlB,MAAM,6BAA6B,GAAG;IAC3C,OAAO,EAAE,SAAS;IAClB,OAAO,EAAE,SAAS;CACV,CAAC;AAMJ,MAAM,2CAA2C,GAEpD,CAAC,6IAAC,UAAU,CAAC,6BAA6B,CAAC,CAAC;AAGzC,MAAM,4CAA4C,GAErD,2CAA2C,CAAC;AAM1C,IAAW,8BAA8B,CAK9C;AALD,CAAA,SAAiB,8BAA8B;IAC7C,2EAAA,EAA6E,CAChE,+BAAA,aAAa,GAAG,2CAA2C,CAAC;IACzE,4EAAA,EAA8E,CACjE,+BAAA,cAAc,GAAG,4CAA4C,CAAC;AAC7E,CAAC,EALgB,8BAA8B,IAAA,CAA9B,8BAA8B,GAAA,CAAA,CAAA,GAK9C","ignoreList":[0]}},
    {"offset": {"line": 7924, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7930, "column": 0}, "map": {"version":3,"file":"organizationsubscriptionsettings.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/organizationsubscriptionsettings.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  SubscriptionProrationBehavior,\n  SubscriptionProrationBehavior$inboundSchema,\n  SubscriptionProrationBehavior$outboundSchema,\n} from \"./subscriptionprorationbehavior.js\";\n\nexport type OrganizationSubscriptionSettings = {\n  allowMultipleSubscriptions: boolean;\n  allowCustomerUpdates: boolean;\n  prorationBehavior: SubscriptionProrationBehavior;\n};\n\n/** @internal */\nexport const OrganizationSubscriptionSettings$inboundSchema: z.ZodType<\n  OrganizationSubscriptionSettings,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  allow_multiple_subscriptions: z.boolean(),\n  allow_customer_updates: z.boolean(),\n  proration_behavior: SubscriptionProrationBehavior$inboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    \"allow_multiple_subscriptions\": \"allowMultipleSubscriptions\",\n    \"allow_customer_updates\": \"allowCustomerUpdates\",\n    \"proration_behavior\": \"prorationBehavior\",\n  });\n});\n\n/** @internal */\nexport type OrganizationSubscriptionSettings$Outbound = {\n  allow_multiple_subscriptions: boolean;\n  allow_customer_updates: boolean;\n  proration_behavior: string;\n};\n\n/** @internal */\nexport const OrganizationSubscriptionSettings$outboundSchema: z.ZodType<\n  OrganizationSubscriptionSettings$Outbound,\n  z.ZodTypeDef,\n  OrganizationSubscriptionSettings\n> = z.object({\n  allowMultipleSubscriptions: z.boolean(),\n  allowCustomerUpdates: z.boolean(),\n  prorationBehavior: SubscriptionProrationBehavior$outboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    allowMultipleSubscriptions: \"allow_multiple_subscriptions\",\n    allowCustomerUpdates: \"allow_customer_updates\",\n    prorationBehavior: \"proration_behavior\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace OrganizationSubscriptionSettings$ {\n  /** @deprecated use `OrganizationSubscriptionSettings$inboundSchema` instead. */\n  export const inboundSchema = OrganizationSubscriptionSettings$inboundSchema;\n  /** @deprecated use `OrganizationSubscriptionSettings$outboundSchema` instead. */\n  export const outboundSchema = OrganizationSubscriptionSettings$outboundSchema;\n  /** @deprecated use `OrganizationSubscriptionSettings$Outbound` instead. */\n  export type Outbound = OrganizationSubscriptionSettings$Outbound;\n}\n\nexport function organizationSubscriptionSettingsToJSON(\n  organizationSubscriptionSettings: OrganizationSubscriptionSettings,\n): string {\n  return JSON.stringify(\n    OrganizationSubscriptionSettings$outboundSchema.parse(\n      organizationSubscriptionSettings,\n    ),\n  );\n}\n\nexport function organizationSubscriptionSettingsFromJSON(\n  jsonString: string,\n): SafeParseResult<OrganizationSubscriptionSettings, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => OrganizationSubscriptionSettings$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'OrganizationSubscriptionSettings' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,2CAA2C,EAC3C,4CAA4C,GAC7C,MAAM,oCAAoC,CAAC;;;;;;AASrC,MAAM,8CAA8C,GAIvD,CAAC,6IAAC,MAAM,CAAC;IACX,4BAA4B,EAAE,CAAC,6IAAC,OAAO,EAAE;IACzC,sBAAsB,EAAE,CAAC,6IAAC,OAAO,EAAE;IACnC,kBAAkB,iNAAE,8CAA2C;CAChE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAM,AAAN,EAAO,CAAC,EAAE;QACf,8BAA8B,EAAE,4BAA4B;QAC5D,wBAAwB,EAAE,sBAAsB;QAChD,oBAAoB,EAAE,mBAAmB;KAC1C,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAUI,MAAM,+CAA+C,GAIxD,CAAC,6IAAC,MAAM,CAAC;IACX,0BAA0B,EAAE,CAAC,6IAAC,OAAO,EAAE;IACvC,oBAAoB,EAAE,CAAC,6IAAC,OAAO,EAAE;IACjC,iBAAiB,EAAE,8PAA4C;CAChE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAM,AAAN,EAAO,CAAC,EAAE;QACf,0BAA0B,EAAE,8BAA8B;QAC1D,oBAAoB,EAAE,wBAAwB;QAC9C,iBAAiB,EAAE,oBAAoB;KACxC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,iCAAiC,CAOjD;AAPD,CAAA,SAAiB,iCAAiC;IAChD,8EAAA,EAAgF,CACnE,kCAAA,aAAa,GAAG,8CAA8C,CAAC;IAC5E,+EAAA,EAAiF,CACpE,kCAAA,cAAc,GAAG,+CAA+C,CAAC;AAGhF,CAAC,EAPgB,iCAAiC,IAAA,CAAjC,iCAAiC,GAAA,CAAA,CAAA,GAOjD;AAEK,SAAU,sCAAsC,CACpD,gCAAkE;IAElE,OAAO,IAAI,CAAC,SAAS,CACnB,+CAA+C,CAAC,KAAK,CACnD,gCAAgC,CACjC,CACF,CAAC;AACJ,CAAC;AAEK,SAAU,wCAAwC,CACtD,UAAkB;IAElB,mLAAO,YAAS,AAAT,EACL,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,6CAA+C,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC1E,CAAA,4DAAA,CAA8D,CAC/D,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 7981, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7987, "column": 0}, "map": {"version":3,"file":"organization.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/organization.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  OrganizationFeatureSettings,\n  OrganizationFeatureSettings$inboundSchema,\n  OrganizationFeatureSettings$Outbound,\n  OrganizationFeatureSettings$outboundSchema,\n} from \"./organizationfeaturesettings.js\";\nimport {\n  OrganizationSocialLink,\n  OrganizationSocialLink$inboundSchema,\n  OrganizationSocialLink$Outbound,\n  OrganizationSocialLink$outboundSchema,\n} from \"./organizationsociallink.js\";\nimport {\n  OrganizationSubscriptionSettings,\n  OrganizationSubscriptionSettings$inboundSchema,\n  OrganizationSubscriptionSettings$Outbound,\n  OrganizationSubscriptionSettings$outboundSchema,\n} from \"./organizationsubscriptionsettings.js\";\n\nexport type Organization = {\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  /**\n   * The organization ID.\n   */\n  id: string;\n  /**\n   * Organization name shown in checkout, customer portal, emails etc.\n   */\n  name: string;\n  /**\n   * Unique organization slug in checkout, customer portal and credit card statements.\n   */\n  slug: string;\n  /**\n   * Avatar URL shown in checkout, customer portal, emails etc.\n   */\n  avatarUrl: string | null;\n  /**\n   * Public support email.\n   */\n  email: string | null;\n  /**\n   * Official website of the organization.\n   */\n  website: string | null;\n  /**\n   * Links to social profiles.\n   */\n  socials: Array<OrganizationSocialLink>;\n  /**\n   * When the business details were submitted.\n   */\n  detailsSubmittedAt: Date | null;\n  /**\n   * Organization feature settings\n   */\n  featureSettings: OrganizationFeatureSettings | null;\n  subscriptionSettings: OrganizationSubscriptionSettings;\n};\n\n/** @internal */\nexport const Organization$inboundSchema: z.ZodType<\n  Organization,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  id: z.string(),\n  name: z.string(),\n  slug: z.string(),\n  avatar_url: z.nullable(z.string()),\n  email: z.nullable(z.string()),\n  website: z.nullable(z.string()),\n  socials: z.array(OrganizationSocialLink$inboundSchema),\n  details_submitted_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  feature_settings: z.nullable(OrganizationFeatureSettings$inboundSchema),\n  subscription_settings: OrganizationSubscriptionSettings$inboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"avatar_url\": \"avatarUrl\",\n    \"details_submitted_at\": \"detailsSubmittedAt\",\n    \"feature_settings\": \"featureSettings\",\n    \"subscription_settings\": \"subscriptionSettings\",\n  });\n});\n\n/** @internal */\nexport type Organization$Outbound = {\n  created_at: string;\n  modified_at: string | null;\n  id: string;\n  name: string;\n  slug: string;\n  avatar_url: string | null;\n  email: string | null;\n  website: string | null;\n  socials: Array<OrganizationSocialLink$Outbound>;\n  details_submitted_at: string | null;\n  feature_settings: OrganizationFeatureSettings$Outbound | null;\n  subscription_settings: OrganizationSubscriptionSettings$Outbound;\n};\n\n/** @internal */\nexport const Organization$outboundSchema: z.ZodType<\n  Organization$Outbound,\n  z.ZodTypeDef,\n  Organization\n> = z.object({\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  id: z.string(),\n  name: z.string(),\n  slug: z.string(),\n  avatarUrl: z.nullable(z.string()),\n  email: z.nullable(z.string()),\n  website: z.nullable(z.string()),\n  socials: z.array(OrganizationSocialLink$outboundSchema),\n  detailsSubmittedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  featureSettings: z.nullable(OrganizationFeatureSettings$outboundSchema),\n  subscriptionSettings: OrganizationSubscriptionSettings$outboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    avatarUrl: \"avatar_url\",\n    detailsSubmittedAt: \"details_submitted_at\",\n    featureSettings: \"feature_settings\",\n    subscriptionSettings: \"subscription_settings\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace Organization$ {\n  /** @deprecated use `Organization$inboundSchema` instead. */\n  export const inboundSchema = Organization$inboundSchema;\n  /** @deprecated use `Organization$outboundSchema` instead. */\n  export const outboundSchema = Organization$outboundSchema;\n  /** @deprecated use `Organization$Outbound` instead. */\n  export type Outbound = Organization$Outbound;\n}\n\nexport function organizationToJSON(organization: Organization): string {\n  return JSON.stringify(Organization$outboundSchema.parse(organization));\n}\n\nexport function organizationFromJSON(\n  jsonString: string,\n): SafeParseResult<Organization, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => Organization$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'Organization' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 8072, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8078, "column": 0}, "map": {"version":3,"file":"checkoutpublicconfirmed.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/checkoutpublicconfirmed.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  Address,\n  Address$inboundSchema,\n  Address$Outbound,\n  Address$outboundSchema,\n} from \"./address.js\";\nimport {\n  AttachedCustomField,\n  AttachedCustomField$inboundSchema,\n  AttachedCustomField$Outbound,\n  AttachedCustomField$outboundSchema,\n} from \"./attachedcustomfield.js\";\nimport {\n  CheckoutCustomerBillingAddressFields,\n  CheckoutCustomerBillingAddressFields$inboundSchema,\n  CheckoutCustomerBillingAddressFields$Outbound,\n  CheckoutCustomerBillingAddressFields$outboundSchema,\n} from \"./checkoutcustomerbillingaddressfields.js\";\nimport {\n  CheckoutDiscountFixedOnceForeverDuration,\n  CheckoutDiscountFixedOnceForeverDuration$inboundSchema,\n  CheckoutDiscountFixedOnceForeverDuration$Outbound,\n  CheckoutDiscountFixedOnceForeverDuration$outboundSchema,\n} from \"./checkoutdiscountfixedonceforeverduration.js\";\nimport {\n  CheckoutDiscountFixedRepeatDuration,\n  CheckoutDiscountFixedRepeatDuration$inboundSchema,\n  CheckoutDiscountFixedRepeatDuration$Outbound,\n  CheckoutDiscountFixedRepeatDuration$outboundSchema,\n} from \"./checkoutdiscountfixedrepeatduration.js\";\nimport {\n  CheckoutDiscountPercentageOnceForeverDuration,\n  CheckoutDiscountPercentageOnceForeverDuration$inboundSchema,\n  CheckoutDiscountPercentageOnceForeverDuration$Outbound,\n  CheckoutDiscountPercentageOnceForeverDuration$outboundSchema,\n} from \"./checkoutdiscountpercentageonceforeverduration.js\";\nimport {\n  CheckoutDiscountPercentageRepeatDuration,\n  CheckoutDiscountPercentageRepeatDuration$inboundSchema,\n  CheckoutDiscountPercentageRepeatDuration$Outbound,\n  CheckoutDiscountPercentageRepeatDuration$outboundSchema,\n} from \"./checkoutdiscountpercentagerepeatduration.js\";\nimport {\n  CheckoutProduct,\n  CheckoutProduct$inboundSchema,\n  CheckoutProduct$Outbound,\n  CheckoutProduct$outboundSchema,\n} from \"./checkoutproduct.js\";\nimport {\n  LegacyRecurringProductPrice,\n  LegacyRecurringProductPrice$inboundSchema,\n  LegacyRecurringProductPrice$Outbound,\n  LegacyRecurringProductPrice$outboundSchema,\n} from \"./legacyrecurringproductprice.js\";\nimport {\n  Organization,\n  Organization$inboundSchema,\n  Organization$Outbound,\n  Organization$outboundSchema,\n} from \"./organization.js\";\nimport {\n  PaymentProcessor,\n  PaymentProcessor$inboundSchema,\n  PaymentProcessor$outboundSchema,\n} from \"./paymentprocessor.js\";\nimport {\n  ProductPrice,\n  ProductPrice$inboundSchema,\n  ProductPrice$Outbound,\n  ProductPrice$outboundSchema,\n} from \"./productprice.js\";\n\nexport type CheckoutPublicConfirmedCustomFieldData =\n  | string\n  | number\n  | boolean\n  | Date;\n\n/**\n * Price of the selected product.\n */\nexport type CheckoutPublicConfirmedProductPrice =\n  | LegacyRecurringProductPrice\n  | ProductPrice;\n\nexport type CheckoutPublicConfirmedDiscount =\n  | CheckoutDiscountPercentageOnceForeverDuration\n  | CheckoutDiscountFixedOnceForeverDuration\n  | CheckoutDiscountPercentageRepeatDuration\n  | CheckoutDiscountFixedRepeatDuration;\n\n/**\n * Checkout session data retrieved using the client secret after confirmation.\n *\n * @remarks\n *\n * It contains a customer session token to retrieve order information\n * right after the checkout.\n */\nexport type CheckoutPublicConfirmed = {\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  /**\n   * The ID of the object.\n   */\n  id: string;\n  /**\n   * Key-value object storing custom field values.\n   */\n  customFieldData?:\n    | { [k: string]: string | number | boolean | Date | null }\n    | undefined;\n  paymentProcessor: PaymentProcessor;\n  status?: \"confirmed\" | undefined;\n  /**\n   * Client secret used to update and complete the checkout session from the client.\n   */\n  clientSecret: string;\n  /**\n   * URL where the customer can access the checkout session.\n   */\n  url: string;\n  /**\n   * Expiration date and time of the checkout session.\n   */\n  expiresAt: Date;\n  /**\n   * URL where the customer will be redirected after a successful payment.\n   */\n  successUrl: string;\n  /**\n   * When checkout is embedded, represents the Origin of the page embedding the checkout. Used as a security measure to send messages only to the embedding page.\n   */\n  embedOrigin: string | null;\n  /**\n   * Amount in cents, before discounts and taxes.\n   */\n  amount: number;\n  /**\n   * Discount amount in cents.\n   */\n  discountAmount: number;\n  /**\n   * Amount in cents, after discounts but before taxes.\n   */\n  netAmount: number;\n  /**\n   * Sales tax amount in cents. If `null`, it means there is no enough information yet to calculate it.\n   */\n  taxAmount: number | null;\n  /**\n   * Amount in cents, after discounts and taxes.\n   */\n  totalAmount: number;\n  /**\n   * Currency code of the checkout session.\n   */\n  currency: string;\n  /**\n   * ID of the product to checkout.\n   */\n  productId: string;\n  /**\n   * ID of the product price to checkout.\n   */\n  productPriceId: string;\n  /**\n   * ID of the discount applied to the checkout.\n   */\n  discountId: string | null;\n  /**\n   * Whether to allow the customer to apply discount codes. If you apply a discount through `discount_id`, it'll still be applied, but the customer won't be able to change it.\n   */\n  allowDiscountCodes: boolean;\n  /**\n   * Whether to require the customer to fill their full billing address, instead of just the country. Customers in the US will always be required to fill their full address, regardless of this setting. If you preset the billing address, this setting will be automatically set to `true`.\n   */\n  requireBillingAddress: boolean;\n  /**\n   * Whether the discount is applicable to the checkout. Typically, free and custom prices are not discountable.\n   */\n  isDiscountApplicable: boolean;\n  /**\n   * Whether the product price is free, regardless of discounts.\n   */\n  isFreeProductPrice: boolean;\n  /**\n   * Whether the checkout requires payment, e.g. in case of free products or discounts that cover the total amount.\n   */\n  isPaymentRequired: boolean;\n  /**\n   * Whether the checkout requires setting up a payment method, regardless of the amount, e.g. subscriptions that have first free cycles.\n   */\n  isPaymentSetupRequired: boolean;\n  /**\n   * Whether the checkout requires a payment form, whether because of a payment or payment method setup.\n   */\n  isPaymentFormRequired: boolean;\n  customerId: string | null;\n  /**\n   * Whether the customer is a business or an individual. If `true`, the customer will be required to fill their full billing address and billing name.\n   */\n  isBusinessCustomer: boolean;\n  /**\n   * Name of the customer.\n   */\n  customerName: string | null;\n  /**\n   * Email address of the customer.\n   */\n  customerEmail: string | null;\n  customerIpAddress: string | null;\n  customerBillingName: string | null;\n  customerBillingAddress: Address | null;\n  customerTaxId: string | null;\n  paymentProcessorMetadata: { [k: string]: string };\n  customerBillingAddressFields: CheckoutCustomerBillingAddressFields;\n  /**\n   * List of products available to select.\n   */\n  products: Array<CheckoutProduct>;\n  /**\n   * Product data for a checkout session.\n   */\n  product: CheckoutProduct;\n  /**\n   * Price of the selected product.\n   */\n  productPrice: LegacyRecurringProductPrice | ProductPrice;\n  discount:\n    | CheckoutDiscountPercentageOnceForeverDuration\n    | CheckoutDiscountFixedOnceForeverDuration\n    | CheckoutDiscountPercentageRepeatDuration\n    | CheckoutDiscountFixedRepeatDuration\n    | null;\n  organization: Organization;\n  attachedCustomFields: Array<AttachedCustomField>;\n  customerSessionToken: string;\n};\n\n/** @internal */\nexport const CheckoutPublicConfirmedCustomFieldData$inboundSchema: z.ZodType<\n  CheckoutPublicConfirmedCustomFieldData,\n  z.ZodTypeDef,\n  unknown\n> = z.union([\n  z.string(),\n  z.number().int(),\n  z.boolean(),\n  z.string().datetime({ offset: true }).transform(v => new Date(v)),\n]);\n\n/** @internal */\nexport type CheckoutPublicConfirmedCustomFieldData$Outbound =\n  | string\n  | number\n  | boolean\n  | string;\n\n/** @internal */\nexport const CheckoutPublicConfirmedCustomFieldData$outboundSchema: z.ZodType<\n  CheckoutPublicConfirmedCustomFieldData$Outbound,\n  z.ZodTypeDef,\n  CheckoutPublicConfirmedCustomFieldData\n> = z.union([\n  z.string(),\n  z.number().int(),\n  z.boolean(),\n  z.date().transform(v => v.toISOString()),\n]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CheckoutPublicConfirmedCustomFieldData$ {\n  /** @deprecated use `CheckoutPublicConfirmedCustomFieldData$inboundSchema` instead. */\n  export const inboundSchema =\n    CheckoutPublicConfirmedCustomFieldData$inboundSchema;\n  /** @deprecated use `CheckoutPublicConfirmedCustomFieldData$outboundSchema` instead. */\n  export const outboundSchema =\n    CheckoutPublicConfirmedCustomFieldData$outboundSchema;\n  /** @deprecated use `CheckoutPublicConfirmedCustomFieldData$Outbound` instead. */\n  export type Outbound = CheckoutPublicConfirmedCustomFieldData$Outbound;\n}\n\nexport function checkoutPublicConfirmedCustomFieldDataToJSON(\n  checkoutPublicConfirmedCustomFieldData:\n    CheckoutPublicConfirmedCustomFieldData,\n): string {\n  return JSON.stringify(\n    CheckoutPublicConfirmedCustomFieldData$outboundSchema.parse(\n      checkoutPublicConfirmedCustomFieldData,\n    ),\n  );\n}\n\nexport function checkoutPublicConfirmedCustomFieldDataFromJSON(\n  jsonString: string,\n): SafeParseResult<CheckoutPublicConfirmedCustomFieldData, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) =>\n      CheckoutPublicConfirmedCustomFieldData$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CheckoutPublicConfirmedCustomFieldData' from JSON`,\n  );\n}\n\n/** @internal */\nexport const CheckoutPublicConfirmedProductPrice$inboundSchema: z.ZodType<\n  CheckoutPublicConfirmedProductPrice,\n  z.ZodTypeDef,\n  unknown\n> = z.union([\n  LegacyRecurringProductPrice$inboundSchema,\n  ProductPrice$inboundSchema,\n]);\n\n/** @internal */\nexport type CheckoutPublicConfirmedProductPrice$Outbound =\n  | LegacyRecurringProductPrice$Outbound\n  | ProductPrice$Outbound;\n\n/** @internal */\nexport const CheckoutPublicConfirmedProductPrice$outboundSchema: z.ZodType<\n  CheckoutPublicConfirmedProductPrice$Outbound,\n  z.ZodTypeDef,\n  CheckoutPublicConfirmedProductPrice\n> = z.union([\n  LegacyRecurringProductPrice$outboundSchema,\n  ProductPrice$outboundSchema,\n]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CheckoutPublicConfirmedProductPrice$ {\n  /** @deprecated use `CheckoutPublicConfirmedProductPrice$inboundSchema` instead. */\n  export const inboundSchema =\n    CheckoutPublicConfirmedProductPrice$inboundSchema;\n  /** @deprecated use `CheckoutPublicConfirmedProductPrice$outboundSchema` instead. */\n  export const outboundSchema =\n    CheckoutPublicConfirmedProductPrice$outboundSchema;\n  /** @deprecated use `CheckoutPublicConfirmedProductPrice$Outbound` instead. */\n  export type Outbound = CheckoutPublicConfirmedProductPrice$Outbound;\n}\n\nexport function checkoutPublicConfirmedProductPriceToJSON(\n  checkoutPublicConfirmedProductPrice: CheckoutPublicConfirmedProductPrice,\n): string {\n  return JSON.stringify(\n    CheckoutPublicConfirmedProductPrice$outboundSchema.parse(\n      checkoutPublicConfirmedProductPrice,\n    ),\n  );\n}\n\nexport function checkoutPublicConfirmedProductPriceFromJSON(\n  jsonString: string,\n): SafeParseResult<CheckoutPublicConfirmedProductPrice, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) =>\n      CheckoutPublicConfirmedProductPrice$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CheckoutPublicConfirmedProductPrice' from JSON`,\n  );\n}\n\n/** @internal */\nexport const CheckoutPublicConfirmedDiscount$inboundSchema: z.ZodType<\n  CheckoutPublicConfirmedDiscount,\n  z.ZodTypeDef,\n  unknown\n> = z.union([\n  CheckoutDiscountPercentageOnceForeverDuration$inboundSchema,\n  CheckoutDiscountFixedOnceForeverDuration$inboundSchema,\n  CheckoutDiscountPercentageRepeatDuration$inboundSchema,\n  CheckoutDiscountFixedRepeatDuration$inboundSchema,\n]);\n\n/** @internal */\nexport type CheckoutPublicConfirmedDiscount$Outbound =\n  | CheckoutDiscountPercentageOnceForeverDuration$Outbound\n  | CheckoutDiscountFixedOnceForeverDuration$Outbound\n  | CheckoutDiscountPercentageRepeatDuration$Outbound\n  | CheckoutDiscountFixedRepeatDuration$Outbound;\n\n/** @internal */\nexport const CheckoutPublicConfirmedDiscount$outboundSchema: z.ZodType<\n  CheckoutPublicConfirmedDiscount$Outbound,\n  z.ZodTypeDef,\n  CheckoutPublicConfirmedDiscount\n> = z.union([\n  CheckoutDiscountPercentageOnceForeverDuration$outboundSchema,\n  CheckoutDiscountFixedOnceForeverDuration$outboundSchema,\n  CheckoutDiscountPercentageRepeatDuration$outboundSchema,\n  CheckoutDiscountFixedRepeatDuration$outboundSchema,\n]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CheckoutPublicConfirmedDiscount$ {\n  /** @deprecated use `CheckoutPublicConfirmedDiscount$inboundSchema` instead. */\n  export const inboundSchema = CheckoutPublicConfirmedDiscount$inboundSchema;\n  /** @deprecated use `CheckoutPublicConfirmedDiscount$outboundSchema` instead. */\n  export const outboundSchema = CheckoutPublicConfirmedDiscount$outboundSchema;\n  /** @deprecated use `CheckoutPublicConfirmedDiscount$Outbound` instead. */\n  export type Outbound = CheckoutPublicConfirmedDiscount$Outbound;\n}\n\nexport function checkoutPublicConfirmedDiscountToJSON(\n  checkoutPublicConfirmedDiscount: CheckoutPublicConfirmedDiscount,\n): string {\n  return JSON.stringify(\n    CheckoutPublicConfirmedDiscount$outboundSchema.parse(\n      checkoutPublicConfirmedDiscount,\n    ),\n  );\n}\n\nexport function checkoutPublicConfirmedDiscountFromJSON(\n  jsonString: string,\n): SafeParseResult<CheckoutPublicConfirmedDiscount, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CheckoutPublicConfirmedDiscount$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CheckoutPublicConfirmedDiscount' from JSON`,\n  );\n}\n\n/** @internal */\nexport const CheckoutPublicConfirmed$inboundSchema: z.ZodType<\n  CheckoutPublicConfirmed,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  id: z.string(),\n  custom_field_data: z.record(\n    z.nullable(\n      z.union([\n        z.string(),\n        z.number().int(),\n        z.boolean(),\n        z.string().datetime({ offset: true }).transform(v => new Date(v)),\n      ]),\n    ),\n  ).optional(),\n  payment_processor: PaymentProcessor$inboundSchema,\n  status: z.literal(\"confirmed\").optional(),\n  client_secret: z.string(),\n  url: z.string(),\n  expires_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  success_url: z.string(),\n  embed_origin: z.nullable(z.string()),\n  amount: z.number().int(),\n  discount_amount: z.number().int(),\n  net_amount: z.number().int(),\n  tax_amount: z.nullable(z.number().int()),\n  total_amount: z.number().int(),\n  currency: z.string(),\n  product_id: z.string(),\n  product_price_id: z.string(),\n  discount_id: z.nullable(z.string()),\n  allow_discount_codes: z.boolean(),\n  require_billing_address: z.boolean(),\n  is_discount_applicable: z.boolean(),\n  is_free_product_price: z.boolean(),\n  is_payment_required: z.boolean(),\n  is_payment_setup_required: z.boolean(),\n  is_payment_form_required: z.boolean(),\n  customer_id: z.nullable(z.string()),\n  is_business_customer: z.boolean(),\n  customer_name: z.nullable(z.string()),\n  customer_email: z.nullable(z.string()),\n  customer_ip_address: z.nullable(z.string()),\n  customer_billing_name: z.nullable(z.string()),\n  customer_billing_address: z.nullable(Address$inboundSchema),\n  customer_tax_id: z.nullable(z.string()),\n  payment_processor_metadata: z.record(z.string()),\n  customer_billing_address_fields:\n    CheckoutCustomerBillingAddressFields$inboundSchema,\n  products: z.array(CheckoutProduct$inboundSchema),\n  product: CheckoutProduct$inboundSchema,\n  product_price: z.union([\n    LegacyRecurringProductPrice$inboundSchema,\n    ProductPrice$inboundSchema,\n  ]),\n  discount: z.nullable(\n    z.union([\n      CheckoutDiscountPercentageOnceForeverDuration$inboundSchema,\n      CheckoutDiscountFixedOnceForeverDuration$inboundSchema,\n      CheckoutDiscountPercentageRepeatDuration$inboundSchema,\n      CheckoutDiscountFixedRepeatDuration$inboundSchema,\n    ]),\n  ),\n  organization: Organization$inboundSchema,\n  attached_custom_fields: z.array(AttachedCustomField$inboundSchema),\n  customer_session_token: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"custom_field_data\": \"customFieldData\",\n    \"payment_processor\": \"paymentProcessor\",\n    \"client_secret\": \"clientSecret\",\n    \"expires_at\": \"expiresAt\",\n    \"success_url\": \"successUrl\",\n    \"embed_origin\": \"embedOrigin\",\n    \"discount_amount\": \"discountAmount\",\n    \"net_amount\": \"netAmount\",\n    \"tax_amount\": \"taxAmount\",\n    \"total_amount\": \"totalAmount\",\n    \"product_id\": \"productId\",\n    \"product_price_id\": \"productPriceId\",\n    \"discount_id\": \"discountId\",\n    \"allow_discount_codes\": \"allowDiscountCodes\",\n    \"require_billing_address\": \"requireBillingAddress\",\n    \"is_discount_applicable\": \"isDiscountApplicable\",\n    \"is_free_product_price\": \"isFreeProductPrice\",\n    \"is_payment_required\": \"isPaymentRequired\",\n    \"is_payment_setup_required\": \"isPaymentSetupRequired\",\n    \"is_payment_form_required\": \"isPaymentFormRequired\",\n    \"customer_id\": \"customerId\",\n    \"is_business_customer\": \"isBusinessCustomer\",\n    \"customer_name\": \"customerName\",\n    \"customer_email\": \"customerEmail\",\n    \"customer_ip_address\": \"customerIpAddress\",\n    \"customer_billing_name\": \"customerBillingName\",\n    \"customer_billing_address\": \"customerBillingAddress\",\n    \"customer_tax_id\": \"customerTaxId\",\n    \"payment_processor_metadata\": \"paymentProcessorMetadata\",\n    \"customer_billing_address_fields\": \"customerBillingAddressFields\",\n    \"product_price\": \"productPrice\",\n    \"attached_custom_fields\": \"attachedCustomFields\",\n    \"customer_session_token\": \"customerSessionToken\",\n  });\n});\n\n/** @internal */\nexport type CheckoutPublicConfirmed$Outbound = {\n  created_at: string;\n  modified_at: string | null;\n  id: string;\n  custom_field_data?:\n    | { [k: string]: string | number | boolean | string | null }\n    | undefined;\n  payment_processor: string;\n  status: \"confirmed\";\n  client_secret: string;\n  url: string;\n  expires_at: string;\n  success_url: string;\n  embed_origin: string | null;\n  amount: number;\n  discount_amount: number;\n  net_amount: number;\n  tax_amount: number | null;\n  total_amount: number;\n  currency: string;\n  product_id: string;\n  product_price_id: string;\n  discount_id: string | null;\n  allow_discount_codes: boolean;\n  require_billing_address: boolean;\n  is_discount_applicable: boolean;\n  is_free_product_price: boolean;\n  is_payment_required: boolean;\n  is_payment_setup_required: boolean;\n  is_payment_form_required: boolean;\n  customer_id: string | null;\n  is_business_customer: boolean;\n  customer_name: string | null;\n  customer_email: string | null;\n  customer_ip_address: string | null;\n  customer_billing_name: string | null;\n  customer_billing_address: Address$Outbound | null;\n  customer_tax_id: string | null;\n  payment_processor_metadata: { [k: string]: string };\n  customer_billing_address_fields:\n    CheckoutCustomerBillingAddressFields$Outbound;\n  products: Array<CheckoutProduct$Outbound>;\n  product: CheckoutProduct$Outbound;\n  product_price: LegacyRecurringProductPrice$Outbound | ProductPrice$Outbound;\n  discount:\n    | CheckoutDiscountPercentageOnceForeverDuration$Outbound\n    | CheckoutDiscountFixedOnceForeverDuration$Outbound\n    | CheckoutDiscountPercentageRepeatDuration$Outbound\n    | CheckoutDiscountFixedRepeatDuration$Outbound\n    | null;\n  organization: Organization$Outbound;\n  attached_custom_fields: Array<AttachedCustomField$Outbound>;\n  customer_session_token: string;\n};\n\n/** @internal */\nexport const CheckoutPublicConfirmed$outboundSchema: z.ZodType<\n  CheckoutPublicConfirmed$Outbound,\n  z.ZodTypeDef,\n  CheckoutPublicConfirmed\n> = z.object({\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  id: z.string(),\n  customFieldData: z.record(\n    z.nullable(\n      z.union([\n        z.string(),\n        z.number().int(),\n        z.boolean(),\n        z.date().transform(v => v.toISOString()),\n      ]),\n    ),\n  ).optional(),\n  paymentProcessor: PaymentProcessor$outboundSchema,\n  status: z.literal(\"confirmed\").default(\"confirmed\" as const),\n  clientSecret: z.string(),\n  url: z.string(),\n  expiresAt: z.date().transform(v => v.toISOString()),\n  successUrl: z.string(),\n  embedOrigin: z.nullable(z.string()),\n  amount: z.number().int(),\n  discountAmount: z.number().int(),\n  netAmount: z.number().int(),\n  taxAmount: z.nullable(z.number().int()),\n  totalAmount: z.number().int(),\n  currency: z.string(),\n  productId: z.string(),\n  productPriceId: z.string(),\n  discountId: z.nullable(z.string()),\n  allowDiscountCodes: z.boolean(),\n  requireBillingAddress: z.boolean(),\n  isDiscountApplicable: z.boolean(),\n  isFreeProductPrice: z.boolean(),\n  isPaymentRequired: z.boolean(),\n  isPaymentSetupRequired: z.boolean(),\n  isPaymentFormRequired: z.boolean(),\n  customerId: z.nullable(z.string()),\n  isBusinessCustomer: z.boolean(),\n  customerName: z.nullable(z.string()),\n  customerEmail: z.nullable(z.string()),\n  customerIpAddress: z.nullable(z.string()),\n  customerBillingName: z.nullable(z.string()),\n  customerBillingAddress: z.nullable(Address$outboundSchema),\n  customerTaxId: z.nullable(z.string()),\n  paymentProcessorMetadata: z.record(z.string()),\n  customerBillingAddressFields:\n    CheckoutCustomerBillingAddressFields$outboundSchema,\n  products: z.array(CheckoutProduct$outboundSchema),\n  product: CheckoutProduct$outboundSchema,\n  productPrice: z.union([\n    LegacyRecurringProductPrice$outboundSchema,\n    ProductPrice$outboundSchema,\n  ]),\n  discount: z.nullable(\n    z.union([\n      CheckoutDiscountPercentageOnceForeverDuration$outboundSchema,\n      CheckoutDiscountFixedOnceForeverDuration$outboundSchema,\n      CheckoutDiscountPercentageRepeatDuration$outboundSchema,\n      CheckoutDiscountFixedRepeatDuration$outboundSchema,\n    ]),\n  ),\n  organization: Organization$outboundSchema,\n  attachedCustomFields: z.array(AttachedCustomField$outboundSchema),\n  customerSessionToken: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    customFieldData: \"custom_field_data\",\n    paymentProcessor: \"payment_processor\",\n    clientSecret: \"client_secret\",\n    expiresAt: \"expires_at\",\n    successUrl: \"success_url\",\n    embedOrigin: \"embed_origin\",\n    discountAmount: \"discount_amount\",\n    netAmount: \"net_amount\",\n    taxAmount: \"tax_amount\",\n    totalAmount: \"total_amount\",\n    productId: \"product_id\",\n    productPriceId: \"product_price_id\",\n    discountId: \"discount_id\",\n    allowDiscountCodes: \"allow_discount_codes\",\n    requireBillingAddress: \"require_billing_address\",\n    isDiscountApplicable: \"is_discount_applicable\",\n    isFreeProductPrice: \"is_free_product_price\",\n    isPaymentRequired: \"is_payment_required\",\n    isPaymentSetupRequired: \"is_payment_setup_required\",\n    isPaymentFormRequired: \"is_payment_form_required\",\n    customerId: \"customer_id\",\n    isBusinessCustomer: \"is_business_customer\",\n    customerName: \"customer_name\",\n    customerEmail: \"customer_email\",\n    customerIpAddress: \"customer_ip_address\",\n    customerBillingName: \"customer_billing_name\",\n    customerBillingAddress: \"customer_billing_address\",\n    customerTaxId: \"customer_tax_id\",\n    paymentProcessorMetadata: \"payment_processor_metadata\",\n    customerBillingAddressFields: \"customer_billing_address_fields\",\n    productPrice: \"product_price\",\n    attachedCustomFields: \"attached_custom_fields\",\n    customerSessionToken: \"customer_session_token\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CheckoutPublicConfirmed$ {\n  /** @deprecated use `CheckoutPublicConfirmed$inboundSchema` instead. */\n  export const inboundSchema = CheckoutPublicConfirmed$inboundSchema;\n  /** @deprecated use `CheckoutPublicConfirmed$outboundSchema` instead. */\n  export const outboundSchema = CheckoutPublicConfirmed$outboundSchema;\n  /** @deprecated use `CheckoutPublicConfirmed$Outbound` instead. */\n  export type Outbound = CheckoutPublicConfirmed$Outbound;\n}\n\nexport function checkoutPublicConfirmedToJSON(\n  checkoutPublicConfirmed: CheckoutPublicConfirmed,\n): string {\n  return JSON.stringify(\n    CheckoutPublicConfirmed$outboundSchema.parse(checkoutPublicConfirmed),\n  );\n}\n\nexport function checkoutPublicConfirmedFromJSON(\n  jsonString: string,\n): SafeParseResult<CheckoutPublicConfirmed, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CheckoutPublicConfirmed$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CheckoutPublicConfirmed' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 8413, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8419, "column": 0}, "map": {"version":3,"file":"checkoutconfirmstripe.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/checkoutconfirmstripe.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  Address,\n  Address$inboundSchema,\n  Address$Outbound,\n  Address$outboundSchema,\n} from \"./address.js\";\n\nexport type CheckoutConfirmStripeCustomFieldData =\n  | string\n  | number\n  | boolean\n  | Date;\n\n/**\n * Confirm a checkout session using a Stripe confirmation token.\n */\nexport type CheckoutConfirmStripe = {\n  /**\n   * Key-value object storing custom field values.\n   */\n  customFieldData?:\n    | { [k: string]: string | number | boolean | Date | null }\n    | undefined;\n  /**\n   * ID of the product to checkout. Must be present in the checkout's product list.\n   */\n  productId?: string | null | undefined;\n  /**\n   * ID of the product price to checkout. Must correspond to a price present in the checkout's product list.\n   *\n   * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.\n   */\n  productPriceId?: string | null | undefined;\n  amount?: number | null | undefined;\n  isBusinessCustomer?: boolean | null | undefined;\n  customerName?: string | null | undefined;\n  customerEmail?: string | null | undefined;\n  customerBillingName?: string | null | undefined;\n  customerBillingAddress?: Address | null | undefined;\n  customerTaxId?: string | null | undefined;\n  /**\n   * Discount code to apply to the checkout.\n   */\n  discountCode?: string | null | undefined;\n  /**\n   * ID of the Stripe confirmation token. Required for fixed prices and custom prices.\n   */\n  confirmationTokenId?: string | null | undefined;\n};\n\n/** @internal */\nexport const CheckoutConfirmStripeCustomFieldData$inboundSchema: z.ZodType<\n  CheckoutConfirmStripeCustomFieldData,\n  z.ZodTypeDef,\n  unknown\n> = z.union([\n  z.string(),\n  z.number().int(),\n  z.boolean(),\n  z.string().datetime({ offset: true }).transform(v => new Date(v)),\n]);\n\n/** @internal */\nexport type CheckoutConfirmStripeCustomFieldData$Outbound =\n  | string\n  | number\n  | boolean\n  | string;\n\n/** @internal */\nexport const CheckoutConfirmStripeCustomFieldData$outboundSchema: z.ZodType<\n  CheckoutConfirmStripeCustomFieldData$Outbound,\n  z.ZodTypeDef,\n  CheckoutConfirmStripeCustomFieldData\n> = z.union([\n  z.string(),\n  z.number().int(),\n  z.boolean(),\n  z.date().transform(v => v.toISOString()),\n]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CheckoutConfirmStripeCustomFieldData$ {\n  /** @deprecated use `CheckoutConfirmStripeCustomFieldData$inboundSchema` instead. */\n  export const inboundSchema =\n    CheckoutConfirmStripeCustomFieldData$inboundSchema;\n  /** @deprecated use `CheckoutConfirmStripeCustomFieldData$outboundSchema` instead. */\n  export const outboundSchema =\n    CheckoutConfirmStripeCustomFieldData$outboundSchema;\n  /** @deprecated use `CheckoutConfirmStripeCustomFieldData$Outbound` instead. */\n  export type Outbound = CheckoutConfirmStripeCustomFieldData$Outbound;\n}\n\nexport function checkoutConfirmStripeCustomFieldDataToJSON(\n  checkoutConfirmStripeCustomFieldData: CheckoutConfirmStripeCustomFieldData,\n): string {\n  return JSON.stringify(\n    CheckoutConfirmStripeCustomFieldData$outboundSchema.parse(\n      checkoutConfirmStripeCustomFieldData,\n    ),\n  );\n}\n\nexport function checkoutConfirmStripeCustomFieldDataFromJSON(\n  jsonString: string,\n): SafeParseResult<CheckoutConfirmStripeCustomFieldData, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) =>\n      CheckoutConfirmStripeCustomFieldData$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CheckoutConfirmStripeCustomFieldData' from JSON`,\n  );\n}\n\n/** @internal */\nexport const CheckoutConfirmStripe$inboundSchema: z.ZodType<\n  CheckoutConfirmStripe,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  custom_field_data: z.record(\n    z.nullable(\n      z.union([\n        z.string(),\n        z.number().int(),\n        z.boolean(),\n        z.string().datetime({ offset: true }).transform(v => new Date(v)),\n      ]),\n    ),\n  ).optional(),\n  product_id: z.nullable(z.string()).optional(),\n  product_price_id: z.nullable(z.string()).optional(),\n  amount: z.nullable(z.number().int()).optional(),\n  is_business_customer: z.nullable(z.boolean()).optional(),\n  customer_name: z.nullable(z.string()).optional(),\n  customer_email: z.nullable(z.string()).optional(),\n  customer_billing_name: z.nullable(z.string()).optional(),\n  customer_billing_address: z.nullable(Address$inboundSchema).optional(),\n  customer_tax_id: z.nullable(z.string()).optional(),\n  discount_code: z.nullable(z.string()).optional(),\n  confirmation_token_id: z.nullable(z.string()).optional(),\n}).transform((v) => {\n  return remap$(v, {\n    \"custom_field_data\": \"customFieldData\",\n    \"product_id\": \"productId\",\n    \"product_price_id\": \"productPriceId\",\n    \"is_business_customer\": \"isBusinessCustomer\",\n    \"customer_name\": \"customerName\",\n    \"customer_email\": \"customerEmail\",\n    \"customer_billing_name\": \"customerBillingName\",\n    \"customer_billing_address\": \"customerBillingAddress\",\n    \"customer_tax_id\": \"customerTaxId\",\n    \"discount_code\": \"discountCode\",\n    \"confirmation_token_id\": \"confirmationTokenId\",\n  });\n});\n\n/** @internal */\nexport type CheckoutConfirmStripe$Outbound = {\n  custom_field_data?:\n    | { [k: string]: string | number | boolean | string | null }\n    | undefined;\n  product_id?: string | null | undefined;\n  product_price_id?: string | null | undefined;\n  amount?: number | null | undefined;\n  is_business_customer?: boolean | null | undefined;\n  customer_name?: string | null | undefined;\n  customer_email?: string | null | undefined;\n  customer_billing_name?: string | null | undefined;\n  customer_billing_address?: Address$Outbound | null | undefined;\n  customer_tax_id?: string | null | undefined;\n  discount_code?: string | null | undefined;\n  confirmation_token_id?: string | null | undefined;\n};\n\n/** @internal */\nexport const CheckoutConfirmStripe$outboundSchema: z.ZodType<\n  CheckoutConfirmStripe$Outbound,\n  z.ZodTypeDef,\n  CheckoutConfirmStripe\n> = z.object({\n  customFieldData: z.record(\n    z.nullable(\n      z.union([\n        z.string(),\n        z.number().int(),\n        z.boolean(),\n        z.date().transform(v => v.toISOString()),\n      ]),\n    ),\n  ).optional(),\n  productId: z.nullable(z.string()).optional(),\n  productPriceId: z.nullable(z.string()).optional(),\n  amount: z.nullable(z.number().int()).optional(),\n  isBusinessCustomer: z.nullable(z.boolean()).optional(),\n  customerName: z.nullable(z.string()).optional(),\n  customerEmail: z.nullable(z.string()).optional(),\n  customerBillingName: z.nullable(z.string()).optional(),\n  customerBillingAddress: z.nullable(Address$outboundSchema).optional(),\n  customerTaxId: z.nullable(z.string()).optional(),\n  discountCode: z.nullable(z.string()).optional(),\n  confirmationTokenId: z.nullable(z.string()).optional(),\n}).transform((v) => {\n  return remap$(v, {\n    customFieldData: \"custom_field_data\",\n    productId: \"product_id\",\n    productPriceId: \"product_price_id\",\n    isBusinessCustomer: \"is_business_customer\",\n    customerName: \"customer_name\",\n    customerEmail: \"customer_email\",\n    customerBillingName: \"customer_billing_name\",\n    customerBillingAddress: \"customer_billing_address\",\n    customerTaxId: \"customer_tax_id\",\n    discountCode: \"discount_code\",\n    confirmationTokenId: \"confirmation_token_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CheckoutConfirmStripe$ {\n  /** @deprecated use `CheckoutConfirmStripe$inboundSchema` instead. */\n  export const inboundSchema = CheckoutConfirmStripe$inboundSchema;\n  /** @deprecated use `CheckoutConfirmStripe$outboundSchema` instead. */\n  export const outboundSchema = CheckoutConfirmStripe$outboundSchema;\n  /** @deprecated use `CheckoutConfirmStripe$Outbound` instead. */\n  export type Outbound = CheckoutConfirmStripe$Outbound;\n}\n\nexport function checkoutConfirmStripeToJSON(\n  checkoutConfirmStripe: CheckoutConfirmStripe,\n): string {\n  return JSON.stringify(\n    CheckoutConfirmStripe$outboundSchema.parse(checkoutConfirmStripe),\n  );\n}\n\nexport function checkoutConfirmStripeFromJSON(\n  jsonString: string,\n): SafeParseResult<CheckoutConfirmStripe, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CheckoutConfirmStripe$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CheckoutConfirmStripe' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 8546, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8552, "column": 0}, "map": {"version":3,"file":"checkoutstatus.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/checkoutstatus.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { ClosedEnum } from \"../../types/enums.js\";\n\nexport const CheckoutStatus = {\n  Open: \"open\",\n  Expired: \"expired\",\n  Confirmed: \"confirmed\",\n  Succeeded: \"succeeded\",\n  Failed: \"failed\",\n} as const;\nexport type CheckoutStatus = ClosedEnum<typeof CheckoutStatus>;\n\n/** @internal */\nexport const CheckoutStatus$inboundSchema: z.ZodNativeEnum<\n  typeof CheckoutStatus\n> = z.nativeEnum(CheckoutStatus);\n\n/** @internal */\nexport const CheckoutStatus$outboundSchema: z.ZodNativeEnum<\n  typeof CheckoutStatus\n> = CheckoutStatus$inboundSchema;\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CheckoutStatus$ {\n  /** @deprecated use `CheckoutStatus$inboundSchema` instead. */\n  export const inboundSchema = CheckoutStatus$inboundSchema;\n  /** @deprecated use `CheckoutStatus$outboundSchema` instead. */\n  export const outboundSchema = CheckoutStatus$outboundSchema;\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;AAGlB,MAAM,cAAc,GAAG;IAC5B,IAAI,EAAE,MAAM;IACZ,OAAO,EAAE,SAAS;IAClB,SAAS,EAAE,WAAW;IACtB,SAAS,EAAE,WAAW;IACtB,MAAM,EAAE,QAAQ;CACR,CAAC;AAIJ,MAAM,4BAA4B,GAErC,CAAC,6IAAC,UAAU,CAAC,cAAc,CAAC,CAAC;AAG1B,MAAM,6BAA6B,GAEtC,4BAA4B,CAAC;AAM3B,IAAW,eAAe,CAK/B;AALD,CAAA,SAAiB,eAAe;IAC9B,4DAAA,EAA8D,CACjD,gBAAA,aAAa,GAAG,4BAA4B,CAAC;IAC1D,6DAAA,EAA+D,CAClD,gBAAA,cAAc,GAAG,6BAA6B,CAAC;AAC9D,CAAC,EALgB,eAAe,IAAA,CAAf,eAAe,GAAA,CAAA,CAAA,GAK/B","ignoreList":[0]}},
    {"offset": {"line": 8577, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8583, "column": 0}, "map": {"version":3,"file":"checkoutpublic.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/checkoutpublic.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  Address,\n  Address$inboundSchema,\n  Address$Outbound,\n  Address$outboundSchema,\n} from \"./address.js\";\nimport {\n  AttachedCustomField,\n  AttachedCustomField$inboundSchema,\n  AttachedCustomField$Outbound,\n  AttachedCustomField$outboundSchema,\n} from \"./attachedcustomfield.js\";\nimport {\n  CheckoutCustomerBillingAddressFields,\n  CheckoutCustomerBillingAddressFields$inboundSchema,\n  CheckoutCustomerBillingAddressFields$Outbound,\n  CheckoutCustomerBillingAddressFields$outboundSchema,\n} from \"./checkoutcustomerbillingaddressfields.js\";\nimport {\n  CheckoutDiscountFixedOnceForeverDuration,\n  CheckoutDiscountFixedOnceForeverDuration$inboundSchema,\n  CheckoutDiscountFixedOnceForeverDuration$Outbound,\n  CheckoutDiscountFixedOnceForeverDuration$outboundSchema,\n} from \"./checkoutdiscountfixedonceforeverduration.js\";\nimport {\n  CheckoutDiscountFixedRepeatDuration,\n  CheckoutDiscountFixedRepeatDuration$inboundSchema,\n  CheckoutDiscountFixedRepeatDuration$Outbound,\n  CheckoutDiscountFixedRepeatDuration$outboundSchema,\n} from \"./checkoutdiscountfixedrepeatduration.js\";\nimport {\n  CheckoutDiscountPercentageOnceForeverDuration,\n  CheckoutDiscountPercentageOnceForeverDuration$inboundSchema,\n  CheckoutDiscountPercentageOnceForeverDuration$Outbound,\n  CheckoutDiscountPercentageOnceForeverDuration$outboundSchema,\n} from \"./checkoutdiscountpercentageonceforeverduration.js\";\nimport {\n  CheckoutDiscountPercentageRepeatDuration,\n  CheckoutDiscountPercentageRepeatDuration$inboundSchema,\n  CheckoutDiscountPercentageRepeatDuration$Outbound,\n  CheckoutDiscountPercentageRepeatDuration$outboundSchema,\n} from \"./checkoutdiscountpercentagerepeatduration.js\";\nimport {\n  CheckoutProduct,\n  CheckoutProduct$inboundSchema,\n  CheckoutProduct$Outbound,\n  CheckoutProduct$outboundSchema,\n} from \"./checkoutproduct.js\";\nimport {\n  CheckoutStatus,\n  CheckoutStatus$inboundSchema,\n  CheckoutStatus$outboundSchema,\n} from \"./checkoutstatus.js\";\nimport {\n  LegacyRecurringProductPrice,\n  LegacyRecurringProductPrice$inboundSchema,\n  LegacyRecurringProductPrice$Outbound,\n  LegacyRecurringProductPrice$outboundSchema,\n} from \"./legacyrecurringproductprice.js\";\nimport {\n  Organization,\n  Organization$inboundSchema,\n  Organization$Outbound,\n  Organization$outboundSchema,\n} from \"./organization.js\";\nimport {\n  PaymentProcessor,\n  PaymentProcessor$inboundSchema,\n  PaymentProcessor$outboundSchema,\n} from \"./paymentprocessor.js\";\nimport {\n  ProductPrice,\n  ProductPrice$inboundSchema,\n  ProductPrice$Outbound,\n  ProductPrice$outboundSchema,\n} from \"./productprice.js\";\n\nexport type CheckoutPublicCustomFieldData = string | number | boolean | Date;\n\n/**\n * Price of the selected product.\n */\nexport type CheckoutPublicProductPrice =\n  | LegacyRecurringProductPrice\n  | ProductPrice;\n\nexport type CheckoutPublicDiscount =\n  | CheckoutDiscountPercentageOnceForeverDuration\n  | CheckoutDiscountFixedOnceForeverDuration\n  | CheckoutDiscountPercentageRepeatDuration\n  | CheckoutDiscountFixedRepeatDuration;\n\n/**\n * Checkout session data retrieved using the client secret.\n */\nexport type CheckoutPublic = {\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  /**\n   * The ID of the object.\n   */\n  id: string;\n  /**\n   * Key-value object storing custom field values.\n   */\n  customFieldData?:\n    | { [k: string]: string | number | boolean | Date | null }\n    | undefined;\n  paymentProcessor: PaymentProcessor;\n  status: CheckoutStatus;\n  /**\n   * Client secret used to update and complete the checkout session from the client.\n   */\n  clientSecret: string;\n  /**\n   * URL where the customer can access the checkout session.\n   */\n  url: string;\n  /**\n   * Expiration date and time of the checkout session.\n   */\n  expiresAt: Date;\n  /**\n   * URL where the customer will be redirected after a successful payment.\n   */\n  successUrl: string;\n  /**\n   * When checkout is embedded, represents the Origin of the page embedding the checkout. Used as a security measure to send messages only to the embedding page.\n   */\n  embedOrigin: string | null;\n  /**\n   * Amount in cents, before discounts and taxes.\n   */\n  amount: number;\n  /**\n   * Discount amount in cents.\n   */\n  discountAmount: number;\n  /**\n   * Amount in cents, after discounts but before taxes.\n   */\n  netAmount: number;\n  /**\n   * Sales tax amount in cents. If `null`, it means there is no enough information yet to calculate it.\n   */\n  taxAmount: number | null;\n  /**\n   * Amount in cents, after discounts and taxes.\n   */\n  totalAmount: number;\n  /**\n   * Currency code of the checkout session.\n   */\n  currency: string;\n  /**\n   * ID of the product to checkout.\n   */\n  productId: string;\n  /**\n   * ID of the product price to checkout.\n   */\n  productPriceId: string;\n  /**\n   * ID of the discount applied to the checkout.\n   */\n  discountId: string | null;\n  /**\n   * Whether to allow the customer to apply discount codes. If you apply a discount through `discount_id`, it'll still be applied, but the customer won't be able to change it.\n   */\n  allowDiscountCodes: boolean;\n  /**\n   * Whether to require the customer to fill their full billing address, instead of just the country. Customers in the US will always be required to fill their full address, regardless of this setting. If you preset the billing address, this setting will be automatically set to `true`.\n   */\n  requireBillingAddress: boolean;\n  /**\n   * Whether the discount is applicable to the checkout. Typically, free and custom prices are not discountable.\n   */\n  isDiscountApplicable: boolean;\n  /**\n   * Whether the product price is free, regardless of discounts.\n   */\n  isFreeProductPrice: boolean;\n  /**\n   * Whether the checkout requires payment, e.g. in case of free products or discounts that cover the total amount.\n   */\n  isPaymentRequired: boolean;\n  /**\n   * Whether the checkout requires setting up a payment method, regardless of the amount, e.g. subscriptions that have first free cycles.\n   */\n  isPaymentSetupRequired: boolean;\n  /**\n   * Whether the checkout requires a payment form, whether because of a payment or payment method setup.\n   */\n  isPaymentFormRequired: boolean;\n  customerId: string | null;\n  /**\n   * Whether the customer is a business or an individual. If `true`, the customer will be required to fill their full billing address and billing name.\n   */\n  isBusinessCustomer: boolean;\n  /**\n   * Name of the customer.\n   */\n  customerName: string | null;\n  /**\n   * Email address of the customer.\n   */\n  customerEmail: string | null;\n  customerIpAddress: string | null;\n  customerBillingName: string | null;\n  customerBillingAddress: Address | null;\n  customerTaxId: string | null;\n  paymentProcessorMetadata: { [k: string]: string };\n  customerBillingAddressFields: CheckoutCustomerBillingAddressFields;\n  /**\n   * List of products available to select.\n   */\n  products: Array<CheckoutProduct>;\n  /**\n   * Product data for a checkout session.\n   */\n  product: CheckoutProduct;\n  /**\n   * Price of the selected product.\n   */\n  productPrice: LegacyRecurringProductPrice | ProductPrice;\n  discount:\n    | CheckoutDiscountPercentageOnceForeverDuration\n    | CheckoutDiscountFixedOnceForeverDuration\n    | CheckoutDiscountPercentageRepeatDuration\n    | CheckoutDiscountFixedRepeatDuration\n    | null;\n  organization: Organization;\n  attachedCustomFields: Array<AttachedCustomField>;\n};\n\n/** @internal */\nexport const CheckoutPublicCustomFieldData$inboundSchema: z.ZodType<\n  CheckoutPublicCustomFieldData,\n  z.ZodTypeDef,\n  unknown\n> = z.union([\n  z.string(),\n  z.number().int(),\n  z.boolean(),\n  z.string().datetime({ offset: true }).transform(v => new Date(v)),\n]);\n\n/** @internal */\nexport type CheckoutPublicCustomFieldData$Outbound =\n  | string\n  | number\n  | boolean\n  | string;\n\n/** @internal */\nexport const CheckoutPublicCustomFieldData$outboundSchema: z.ZodType<\n  CheckoutPublicCustomFieldData$Outbound,\n  z.ZodTypeDef,\n  CheckoutPublicCustomFieldData\n> = z.union([\n  z.string(),\n  z.number().int(),\n  z.boolean(),\n  z.date().transform(v => v.toISOString()),\n]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CheckoutPublicCustomFieldData$ {\n  /** @deprecated use `CheckoutPublicCustomFieldData$inboundSchema` instead. */\n  export const inboundSchema = CheckoutPublicCustomFieldData$inboundSchema;\n  /** @deprecated use `CheckoutPublicCustomFieldData$outboundSchema` instead. */\n  export const outboundSchema = CheckoutPublicCustomFieldData$outboundSchema;\n  /** @deprecated use `CheckoutPublicCustomFieldData$Outbound` instead. */\n  export type Outbound = CheckoutPublicCustomFieldData$Outbound;\n}\n\nexport function checkoutPublicCustomFieldDataToJSON(\n  checkoutPublicCustomFieldData: CheckoutPublicCustomFieldData,\n): string {\n  return JSON.stringify(\n    CheckoutPublicCustomFieldData$outboundSchema.parse(\n      checkoutPublicCustomFieldData,\n    ),\n  );\n}\n\nexport function checkoutPublicCustomFieldDataFromJSON(\n  jsonString: string,\n): SafeParseResult<CheckoutPublicCustomFieldData, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CheckoutPublicCustomFieldData$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CheckoutPublicCustomFieldData' from JSON`,\n  );\n}\n\n/** @internal */\nexport const CheckoutPublicProductPrice$inboundSchema: z.ZodType<\n  CheckoutPublicProductPrice,\n  z.ZodTypeDef,\n  unknown\n> = z.union([\n  LegacyRecurringProductPrice$inboundSchema,\n  ProductPrice$inboundSchema,\n]);\n\n/** @internal */\nexport type CheckoutPublicProductPrice$Outbound =\n  | LegacyRecurringProductPrice$Outbound\n  | ProductPrice$Outbound;\n\n/** @internal */\nexport const CheckoutPublicProductPrice$outboundSchema: z.ZodType<\n  CheckoutPublicProductPrice$Outbound,\n  z.ZodTypeDef,\n  CheckoutPublicProductPrice\n> = z.union([\n  LegacyRecurringProductPrice$outboundSchema,\n  ProductPrice$outboundSchema,\n]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CheckoutPublicProductPrice$ {\n  /** @deprecated use `CheckoutPublicProductPrice$inboundSchema` instead. */\n  export const inboundSchema = CheckoutPublicProductPrice$inboundSchema;\n  /** @deprecated use `CheckoutPublicProductPrice$outboundSchema` instead. */\n  export const outboundSchema = CheckoutPublicProductPrice$outboundSchema;\n  /** @deprecated use `CheckoutPublicProductPrice$Outbound` instead. */\n  export type Outbound = CheckoutPublicProductPrice$Outbound;\n}\n\nexport function checkoutPublicProductPriceToJSON(\n  checkoutPublicProductPrice: CheckoutPublicProductPrice,\n): string {\n  return JSON.stringify(\n    CheckoutPublicProductPrice$outboundSchema.parse(checkoutPublicProductPrice),\n  );\n}\n\nexport function checkoutPublicProductPriceFromJSON(\n  jsonString: string,\n): SafeParseResult<CheckoutPublicProductPrice, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CheckoutPublicProductPrice$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CheckoutPublicProductPrice' from JSON`,\n  );\n}\n\n/** @internal */\nexport const CheckoutPublicDiscount$inboundSchema: z.ZodType<\n  CheckoutPublicDiscount,\n  z.ZodTypeDef,\n  unknown\n> = z.union([\n  CheckoutDiscountPercentageOnceForeverDuration$inboundSchema,\n  CheckoutDiscountFixedOnceForeverDuration$inboundSchema,\n  CheckoutDiscountPercentageRepeatDuration$inboundSchema,\n  CheckoutDiscountFixedRepeatDuration$inboundSchema,\n]);\n\n/** @internal */\nexport type CheckoutPublicDiscount$Outbound =\n  | CheckoutDiscountPercentageOnceForeverDuration$Outbound\n  | CheckoutDiscountFixedOnceForeverDuration$Outbound\n  | CheckoutDiscountPercentageRepeatDuration$Outbound\n  | CheckoutDiscountFixedRepeatDuration$Outbound;\n\n/** @internal */\nexport const CheckoutPublicDiscount$outboundSchema: z.ZodType<\n  CheckoutPublicDiscount$Outbound,\n  z.ZodTypeDef,\n  CheckoutPublicDiscount\n> = z.union([\n  CheckoutDiscountPercentageOnceForeverDuration$outboundSchema,\n  CheckoutDiscountFixedOnceForeverDuration$outboundSchema,\n  CheckoutDiscountPercentageRepeatDuration$outboundSchema,\n  CheckoutDiscountFixedRepeatDuration$outboundSchema,\n]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CheckoutPublicDiscount$ {\n  /** @deprecated use `CheckoutPublicDiscount$inboundSchema` instead. */\n  export const inboundSchema = CheckoutPublicDiscount$inboundSchema;\n  /** @deprecated use `CheckoutPublicDiscount$outboundSchema` instead. */\n  export const outboundSchema = CheckoutPublicDiscount$outboundSchema;\n  /** @deprecated use `CheckoutPublicDiscount$Outbound` instead. */\n  export type Outbound = CheckoutPublicDiscount$Outbound;\n}\n\nexport function checkoutPublicDiscountToJSON(\n  checkoutPublicDiscount: CheckoutPublicDiscount,\n): string {\n  return JSON.stringify(\n    CheckoutPublicDiscount$outboundSchema.parse(checkoutPublicDiscount),\n  );\n}\n\nexport function checkoutPublicDiscountFromJSON(\n  jsonString: string,\n): SafeParseResult<CheckoutPublicDiscount, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CheckoutPublicDiscount$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CheckoutPublicDiscount' from JSON`,\n  );\n}\n\n/** @internal */\nexport const CheckoutPublic$inboundSchema: z.ZodType<\n  CheckoutPublic,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  id: z.string(),\n  custom_field_data: z.record(\n    z.nullable(\n      z.union([\n        z.string(),\n        z.number().int(),\n        z.boolean(),\n        z.string().datetime({ offset: true }).transform(v => new Date(v)),\n      ]),\n    ),\n  ).optional(),\n  payment_processor: PaymentProcessor$inboundSchema,\n  status: CheckoutStatus$inboundSchema,\n  client_secret: z.string(),\n  url: z.string(),\n  expires_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  success_url: z.string(),\n  embed_origin: z.nullable(z.string()),\n  amount: z.number().int(),\n  discount_amount: z.number().int(),\n  net_amount: z.number().int(),\n  tax_amount: z.nullable(z.number().int()),\n  total_amount: z.number().int(),\n  currency: z.string(),\n  product_id: z.string(),\n  product_price_id: z.string(),\n  discount_id: z.nullable(z.string()),\n  allow_discount_codes: z.boolean(),\n  require_billing_address: z.boolean(),\n  is_discount_applicable: z.boolean(),\n  is_free_product_price: z.boolean(),\n  is_payment_required: z.boolean(),\n  is_payment_setup_required: z.boolean(),\n  is_payment_form_required: z.boolean(),\n  customer_id: z.nullable(z.string()),\n  is_business_customer: z.boolean(),\n  customer_name: z.nullable(z.string()),\n  customer_email: z.nullable(z.string()),\n  customer_ip_address: z.nullable(z.string()),\n  customer_billing_name: z.nullable(z.string()),\n  customer_billing_address: z.nullable(Address$inboundSchema),\n  customer_tax_id: z.nullable(z.string()),\n  payment_processor_metadata: z.record(z.string()),\n  customer_billing_address_fields:\n    CheckoutCustomerBillingAddressFields$inboundSchema,\n  products: z.array(CheckoutProduct$inboundSchema),\n  product: CheckoutProduct$inboundSchema,\n  product_price: z.union([\n    LegacyRecurringProductPrice$inboundSchema,\n    ProductPrice$inboundSchema,\n  ]),\n  discount: z.nullable(\n    z.union([\n      CheckoutDiscountPercentageOnceForeverDuration$inboundSchema,\n      CheckoutDiscountFixedOnceForeverDuration$inboundSchema,\n      CheckoutDiscountPercentageRepeatDuration$inboundSchema,\n      CheckoutDiscountFixedRepeatDuration$inboundSchema,\n    ]),\n  ),\n  organization: Organization$inboundSchema,\n  attached_custom_fields: z.array(AttachedCustomField$inboundSchema),\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"custom_field_data\": \"customFieldData\",\n    \"payment_processor\": \"paymentProcessor\",\n    \"client_secret\": \"clientSecret\",\n    \"expires_at\": \"expiresAt\",\n    \"success_url\": \"successUrl\",\n    \"embed_origin\": \"embedOrigin\",\n    \"discount_amount\": \"discountAmount\",\n    \"net_amount\": \"netAmount\",\n    \"tax_amount\": \"taxAmount\",\n    \"total_amount\": \"totalAmount\",\n    \"product_id\": \"productId\",\n    \"product_price_id\": \"productPriceId\",\n    \"discount_id\": \"discountId\",\n    \"allow_discount_codes\": \"allowDiscountCodes\",\n    \"require_billing_address\": \"requireBillingAddress\",\n    \"is_discount_applicable\": \"isDiscountApplicable\",\n    \"is_free_product_price\": \"isFreeProductPrice\",\n    \"is_payment_required\": \"isPaymentRequired\",\n    \"is_payment_setup_required\": \"isPaymentSetupRequired\",\n    \"is_payment_form_required\": \"isPaymentFormRequired\",\n    \"customer_id\": \"customerId\",\n    \"is_business_customer\": \"isBusinessCustomer\",\n    \"customer_name\": \"customerName\",\n    \"customer_email\": \"customerEmail\",\n    \"customer_ip_address\": \"customerIpAddress\",\n    \"customer_billing_name\": \"customerBillingName\",\n    \"customer_billing_address\": \"customerBillingAddress\",\n    \"customer_tax_id\": \"customerTaxId\",\n    \"payment_processor_metadata\": \"paymentProcessorMetadata\",\n    \"customer_billing_address_fields\": \"customerBillingAddressFields\",\n    \"product_price\": \"productPrice\",\n    \"attached_custom_fields\": \"attachedCustomFields\",\n  });\n});\n\n/** @internal */\nexport type CheckoutPublic$Outbound = {\n  created_at: string;\n  modified_at: string | null;\n  id: string;\n  custom_field_data?:\n    | { [k: string]: string | number | boolean | string | null }\n    | undefined;\n  payment_processor: string;\n  status: string;\n  client_secret: string;\n  url: string;\n  expires_at: string;\n  success_url: string;\n  embed_origin: string | null;\n  amount: number;\n  discount_amount: number;\n  net_amount: number;\n  tax_amount: number | null;\n  total_amount: number;\n  currency: string;\n  product_id: string;\n  product_price_id: string;\n  discount_id: string | null;\n  allow_discount_codes: boolean;\n  require_billing_address: boolean;\n  is_discount_applicable: boolean;\n  is_free_product_price: boolean;\n  is_payment_required: boolean;\n  is_payment_setup_required: boolean;\n  is_payment_form_required: boolean;\n  customer_id: string | null;\n  is_business_customer: boolean;\n  customer_name: string | null;\n  customer_email: string | null;\n  customer_ip_address: string | null;\n  customer_billing_name: string | null;\n  customer_billing_address: Address$Outbound | null;\n  customer_tax_id: string | null;\n  payment_processor_metadata: { [k: string]: string };\n  customer_billing_address_fields:\n    CheckoutCustomerBillingAddressFields$Outbound;\n  products: Array<CheckoutProduct$Outbound>;\n  product: CheckoutProduct$Outbound;\n  product_price: LegacyRecurringProductPrice$Outbound | ProductPrice$Outbound;\n  discount:\n    | CheckoutDiscountPercentageOnceForeverDuration$Outbound\n    | CheckoutDiscountFixedOnceForeverDuration$Outbound\n    | CheckoutDiscountPercentageRepeatDuration$Outbound\n    | CheckoutDiscountFixedRepeatDuration$Outbound\n    | null;\n  organization: Organization$Outbound;\n  attached_custom_fields: Array<AttachedCustomField$Outbound>;\n};\n\n/** @internal */\nexport const CheckoutPublic$outboundSchema: z.ZodType<\n  CheckoutPublic$Outbound,\n  z.ZodTypeDef,\n  CheckoutPublic\n> = z.object({\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  id: z.string(),\n  customFieldData: z.record(\n    z.nullable(\n      z.union([\n        z.string(),\n        z.number().int(),\n        z.boolean(),\n        z.date().transform(v => v.toISOString()),\n      ]),\n    ),\n  ).optional(),\n  paymentProcessor: PaymentProcessor$outboundSchema,\n  status: CheckoutStatus$outboundSchema,\n  clientSecret: z.string(),\n  url: z.string(),\n  expiresAt: z.date().transform(v => v.toISOString()),\n  successUrl: z.string(),\n  embedOrigin: z.nullable(z.string()),\n  amount: z.number().int(),\n  discountAmount: z.number().int(),\n  netAmount: z.number().int(),\n  taxAmount: z.nullable(z.number().int()),\n  totalAmount: z.number().int(),\n  currency: z.string(),\n  productId: z.string(),\n  productPriceId: z.string(),\n  discountId: z.nullable(z.string()),\n  allowDiscountCodes: z.boolean(),\n  requireBillingAddress: z.boolean(),\n  isDiscountApplicable: z.boolean(),\n  isFreeProductPrice: z.boolean(),\n  isPaymentRequired: z.boolean(),\n  isPaymentSetupRequired: z.boolean(),\n  isPaymentFormRequired: z.boolean(),\n  customerId: z.nullable(z.string()),\n  isBusinessCustomer: z.boolean(),\n  customerName: z.nullable(z.string()),\n  customerEmail: z.nullable(z.string()),\n  customerIpAddress: z.nullable(z.string()),\n  customerBillingName: z.nullable(z.string()),\n  customerBillingAddress: z.nullable(Address$outboundSchema),\n  customerTaxId: z.nullable(z.string()),\n  paymentProcessorMetadata: z.record(z.string()),\n  customerBillingAddressFields:\n    CheckoutCustomerBillingAddressFields$outboundSchema,\n  products: z.array(CheckoutProduct$outboundSchema),\n  product: CheckoutProduct$outboundSchema,\n  productPrice: z.union([\n    LegacyRecurringProductPrice$outboundSchema,\n    ProductPrice$outboundSchema,\n  ]),\n  discount: z.nullable(\n    z.union([\n      CheckoutDiscountPercentageOnceForeverDuration$outboundSchema,\n      CheckoutDiscountFixedOnceForeverDuration$outboundSchema,\n      CheckoutDiscountPercentageRepeatDuration$outboundSchema,\n      CheckoutDiscountFixedRepeatDuration$outboundSchema,\n    ]),\n  ),\n  organization: Organization$outboundSchema,\n  attachedCustomFields: z.array(AttachedCustomField$outboundSchema),\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    customFieldData: \"custom_field_data\",\n    paymentProcessor: \"payment_processor\",\n    clientSecret: \"client_secret\",\n    expiresAt: \"expires_at\",\n    successUrl: \"success_url\",\n    embedOrigin: \"embed_origin\",\n    discountAmount: \"discount_amount\",\n    netAmount: \"net_amount\",\n    taxAmount: \"tax_amount\",\n    totalAmount: \"total_amount\",\n    productId: \"product_id\",\n    productPriceId: \"product_price_id\",\n    discountId: \"discount_id\",\n    allowDiscountCodes: \"allow_discount_codes\",\n    requireBillingAddress: \"require_billing_address\",\n    isDiscountApplicable: \"is_discount_applicable\",\n    isFreeProductPrice: \"is_free_product_price\",\n    isPaymentRequired: \"is_payment_required\",\n    isPaymentSetupRequired: \"is_payment_setup_required\",\n    isPaymentFormRequired: \"is_payment_form_required\",\n    customerId: \"customer_id\",\n    isBusinessCustomer: \"is_business_customer\",\n    customerName: \"customer_name\",\n    customerEmail: \"customer_email\",\n    customerIpAddress: \"customer_ip_address\",\n    customerBillingName: \"customer_billing_name\",\n    customerBillingAddress: \"customer_billing_address\",\n    customerTaxId: \"customer_tax_id\",\n    paymentProcessorMetadata: \"payment_processor_metadata\",\n    customerBillingAddressFields: \"customer_billing_address_fields\",\n    productPrice: \"product_price\",\n    attachedCustomFields: \"attached_custom_fields\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CheckoutPublic$ {\n  /** @deprecated use `CheckoutPublic$inboundSchema` instead. */\n  export const inboundSchema = CheckoutPublic$inboundSchema;\n  /** @deprecated use `CheckoutPublic$outboundSchema` instead. */\n  export const outboundSchema = CheckoutPublic$outboundSchema;\n  /** @deprecated use `CheckoutPublic$Outbound` instead. */\n  export type Outbound = CheckoutPublic$Outbound;\n}\n\nexport function checkoutPublicToJSON(checkoutPublic: CheckoutPublic): string {\n  return JSON.stringify(CheckoutPublic$outboundSchema.parse(checkoutPublic));\n}\n\nexport function checkoutPublicFromJSON(\n  jsonString: string,\n): SafeParseResult<CheckoutPublic, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CheckoutPublic$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CheckoutPublic' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 8916, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8922, "column": 0}, "map": {"version":3,"file":"checkoutupdatepublic.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/checkoutupdatepublic.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  Address,\n  Address$inboundSchema,\n  Address$Outbound,\n  Address$outboundSchema,\n} from \"./address.js\";\n\nexport type CheckoutUpdatePublicCustomFieldData =\n  | string\n  | number\n  | boolean\n  | Date;\n\n/**\n * Update an existing checkout session using the client secret.\n */\nexport type CheckoutUpdatePublic = {\n  /**\n   * Key-value object storing custom field values.\n   */\n  customFieldData?:\n    | { [k: string]: string | number | boolean | Date | null }\n    | undefined;\n  /**\n   * ID of the product to checkout. Must be present in the checkout's product list.\n   */\n  productId?: string | null | undefined;\n  /**\n   * ID of the product price to checkout. Must correspond to a price present in the checkout's product list.\n   *\n   * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.\n   */\n  productPriceId?: string | null | undefined;\n  amount?: number | null | undefined;\n  isBusinessCustomer?: boolean | null | undefined;\n  customerName?: string | null | undefined;\n  customerEmail?: string | null | undefined;\n  customerBillingName?: string | null | undefined;\n  customerBillingAddress?: Address | null | undefined;\n  customerTaxId?: string | null | undefined;\n  /**\n   * Discount code to apply to the checkout.\n   */\n  discountCode?: string | null | undefined;\n};\n\n/** @internal */\nexport const CheckoutUpdatePublicCustomFieldData$inboundSchema: z.ZodType<\n  CheckoutUpdatePublicCustomFieldData,\n  z.ZodTypeDef,\n  unknown\n> = z.union([\n  z.string(),\n  z.number().int(),\n  z.boolean(),\n  z.string().datetime({ offset: true }).transform(v => new Date(v)),\n]);\n\n/** @internal */\nexport type CheckoutUpdatePublicCustomFieldData$Outbound =\n  | string\n  | number\n  | boolean\n  | string;\n\n/** @internal */\nexport const CheckoutUpdatePublicCustomFieldData$outboundSchema: z.ZodType<\n  CheckoutUpdatePublicCustomFieldData$Outbound,\n  z.ZodTypeDef,\n  CheckoutUpdatePublicCustomFieldData\n> = z.union([\n  z.string(),\n  z.number().int(),\n  z.boolean(),\n  z.date().transform(v => v.toISOString()),\n]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CheckoutUpdatePublicCustomFieldData$ {\n  /** @deprecated use `CheckoutUpdatePublicCustomFieldData$inboundSchema` instead. */\n  export const inboundSchema =\n    CheckoutUpdatePublicCustomFieldData$inboundSchema;\n  /** @deprecated use `CheckoutUpdatePublicCustomFieldData$outboundSchema` instead. */\n  export const outboundSchema =\n    CheckoutUpdatePublicCustomFieldData$outboundSchema;\n  /** @deprecated use `CheckoutUpdatePublicCustomFieldData$Outbound` instead. */\n  export type Outbound = CheckoutUpdatePublicCustomFieldData$Outbound;\n}\n\nexport function checkoutUpdatePublicCustomFieldDataToJSON(\n  checkoutUpdatePublicCustomFieldData: CheckoutUpdatePublicCustomFieldData,\n): string {\n  return JSON.stringify(\n    CheckoutUpdatePublicCustomFieldData$outboundSchema.parse(\n      checkoutUpdatePublicCustomFieldData,\n    ),\n  );\n}\n\nexport function checkoutUpdatePublicCustomFieldDataFromJSON(\n  jsonString: string,\n): SafeParseResult<CheckoutUpdatePublicCustomFieldData, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) =>\n      CheckoutUpdatePublicCustomFieldData$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CheckoutUpdatePublicCustomFieldData' from JSON`,\n  );\n}\n\n/** @internal */\nexport const CheckoutUpdatePublic$inboundSchema: z.ZodType<\n  CheckoutUpdatePublic,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  custom_field_data: z.record(\n    z.nullable(\n      z.union([\n        z.string(),\n        z.number().int(),\n        z.boolean(),\n        z.string().datetime({ offset: true }).transform(v => new Date(v)),\n      ]),\n    ),\n  ).optional(),\n  product_id: z.nullable(z.string()).optional(),\n  product_price_id: z.nullable(z.string()).optional(),\n  amount: z.nullable(z.number().int()).optional(),\n  is_business_customer: z.nullable(z.boolean()).optional(),\n  customer_name: z.nullable(z.string()).optional(),\n  customer_email: z.nullable(z.string()).optional(),\n  customer_billing_name: z.nullable(z.string()).optional(),\n  customer_billing_address: z.nullable(Address$inboundSchema).optional(),\n  customer_tax_id: z.nullable(z.string()).optional(),\n  discount_code: z.nullable(z.string()).optional(),\n}).transform((v) => {\n  return remap$(v, {\n    \"custom_field_data\": \"customFieldData\",\n    \"product_id\": \"productId\",\n    \"product_price_id\": \"productPriceId\",\n    \"is_business_customer\": \"isBusinessCustomer\",\n    \"customer_name\": \"customerName\",\n    \"customer_email\": \"customerEmail\",\n    \"customer_billing_name\": \"customerBillingName\",\n    \"customer_billing_address\": \"customerBillingAddress\",\n    \"customer_tax_id\": \"customerTaxId\",\n    \"discount_code\": \"discountCode\",\n  });\n});\n\n/** @internal */\nexport type CheckoutUpdatePublic$Outbound = {\n  custom_field_data?:\n    | { [k: string]: string | number | boolean | string | null }\n    | undefined;\n  product_id?: string | null | undefined;\n  product_price_id?: string | null | undefined;\n  amount?: number | null | undefined;\n  is_business_customer?: boolean | null | undefined;\n  customer_name?: string | null | undefined;\n  customer_email?: string | null | undefined;\n  customer_billing_name?: string | null | undefined;\n  customer_billing_address?: Address$Outbound | null | undefined;\n  customer_tax_id?: string | null | undefined;\n  discount_code?: string | null | undefined;\n};\n\n/** @internal */\nexport const CheckoutUpdatePublic$outboundSchema: z.ZodType<\n  CheckoutUpdatePublic$Outbound,\n  z.ZodTypeDef,\n  CheckoutUpdatePublic\n> = z.object({\n  customFieldData: z.record(\n    z.nullable(\n      z.union([\n        z.string(),\n        z.number().int(),\n        z.boolean(),\n        z.date().transform(v => v.toISOString()),\n      ]),\n    ),\n  ).optional(),\n  productId: z.nullable(z.string()).optional(),\n  productPriceId: z.nullable(z.string()).optional(),\n  amount: z.nullable(z.number().int()).optional(),\n  isBusinessCustomer: z.nullable(z.boolean()).optional(),\n  customerName: z.nullable(z.string()).optional(),\n  customerEmail: z.nullable(z.string()).optional(),\n  customerBillingName: z.nullable(z.string()).optional(),\n  customerBillingAddress: z.nullable(Address$outboundSchema).optional(),\n  customerTaxId: z.nullable(z.string()).optional(),\n  discountCode: z.nullable(z.string()).optional(),\n}).transform((v) => {\n  return remap$(v, {\n    customFieldData: \"custom_field_data\",\n    productId: \"product_id\",\n    productPriceId: \"product_price_id\",\n    isBusinessCustomer: \"is_business_customer\",\n    customerName: \"customer_name\",\n    customerEmail: \"customer_email\",\n    customerBillingName: \"customer_billing_name\",\n    customerBillingAddress: \"customer_billing_address\",\n    customerTaxId: \"customer_tax_id\",\n    discountCode: \"discount_code\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CheckoutUpdatePublic$ {\n  /** @deprecated use `CheckoutUpdatePublic$inboundSchema` instead. */\n  export const inboundSchema = CheckoutUpdatePublic$inboundSchema;\n  /** @deprecated use `CheckoutUpdatePublic$outboundSchema` instead. */\n  export const outboundSchema = CheckoutUpdatePublic$outboundSchema;\n  /** @deprecated use `CheckoutUpdatePublic$Outbound` instead. */\n  export type Outbound = CheckoutUpdatePublic$Outbound;\n}\n\nexport function checkoutUpdatePublicToJSON(\n  checkoutUpdatePublic: CheckoutUpdatePublic,\n): string {\n  return JSON.stringify(\n    CheckoutUpdatePublic$outboundSchema.parse(checkoutUpdatePublic),\n  );\n}\n\nexport function checkoutUpdatePublicFromJSON(\n  jsonString: string,\n): SafeParseResult<CheckoutUpdatePublic, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CheckoutUpdatePublic$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CheckoutUpdatePublic' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 9045, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9051, "column": 0}, "map": {"version":3,"file":"checkout.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/checkout.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  Address,\n  Address$inboundSchema,\n  Address$Outbound,\n  Address$outboundSchema,\n} from \"./address.js\";\nimport {\n  AttachedCustomField,\n  AttachedCustomField$inboundSchema,\n  AttachedCustomField$Outbound,\n  AttachedCustomField$outboundSchema,\n} from \"./attachedcustomfield.js\";\nimport {\n  CheckoutCustomerBillingAddressFields,\n  CheckoutCustomerBillingAddressFields$inboundSchema,\n  CheckoutCustomerBillingAddressFields$Outbound,\n  CheckoutCustomerBillingAddressFields$outboundSchema,\n} from \"./checkoutcustomerbillingaddressfields.js\";\nimport {\n  CheckoutDiscountFixedOnceForeverDuration,\n  CheckoutDiscountFixedOnceForeverDuration$inboundSchema,\n  CheckoutDiscountFixedOnceForeverDuration$Outbound,\n  CheckoutDiscountFixedOnceForeverDuration$outboundSchema,\n} from \"./checkoutdiscountfixedonceforeverduration.js\";\nimport {\n  CheckoutDiscountFixedRepeatDuration,\n  CheckoutDiscountFixedRepeatDuration$inboundSchema,\n  CheckoutDiscountFixedRepeatDuration$Outbound,\n  CheckoutDiscountFixedRepeatDuration$outboundSchema,\n} from \"./checkoutdiscountfixedrepeatduration.js\";\nimport {\n  CheckoutDiscountPercentageOnceForeverDuration,\n  CheckoutDiscountPercentageOnceForeverDuration$inboundSchema,\n  CheckoutDiscountPercentageOnceForeverDuration$Outbound,\n  CheckoutDiscountPercentageOnceForeverDuration$outboundSchema,\n} from \"./checkoutdiscountpercentageonceforeverduration.js\";\nimport {\n  CheckoutDiscountPercentageRepeatDuration,\n  CheckoutDiscountPercentageRepeatDuration$inboundSchema,\n  CheckoutDiscountPercentageRepeatDuration$Outbound,\n  CheckoutDiscountPercentageRepeatDuration$outboundSchema,\n} from \"./checkoutdiscountpercentagerepeatduration.js\";\nimport {\n  CheckoutProduct,\n  CheckoutProduct$inboundSchema,\n  CheckoutProduct$Outbound,\n  CheckoutProduct$outboundSchema,\n} from \"./checkoutproduct.js\";\nimport {\n  CheckoutStatus,\n  CheckoutStatus$inboundSchema,\n  CheckoutStatus$outboundSchema,\n} from \"./checkoutstatus.js\";\nimport {\n  LegacyRecurringProductPrice,\n  LegacyRecurringProductPrice$inboundSchema,\n  LegacyRecurringProductPrice$Outbound,\n  LegacyRecurringProductPrice$outboundSchema,\n} from \"./legacyrecurringproductprice.js\";\nimport {\n  PaymentProcessor,\n  PaymentProcessor$inboundSchema,\n  PaymentProcessor$outboundSchema,\n} from \"./paymentprocessor.js\";\nimport {\n  ProductPrice,\n  ProductPrice$inboundSchema,\n  ProductPrice$Outbound,\n  ProductPrice$outboundSchema,\n} from \"./productprice.js\";\n\nexport type CheckoutCustomFieldData = string | number | boolean | Date;\n\nexport type CheckoutMetadata = string | number | number | boolean;\n\n/**\n * Price of the selected product.\n */\nexport type CheckoutProductPrice = LegacyRecurringProductPrice | ProductPrice;\n\nexport type CheckoutDiscount =\n  | CheckoutDiscountPercentageOnceForeverDuration\n  | CheckoutDiscountFixedOnceForeverDuration\n  | CheckoutDiscountPercentageRepeatDuration\n  | CheckoutDiscountFixedRepeatDuration;\n\nexport type CustomerMetadata = string | number | boolean;\n\n/**\n * Checkout session data retrieved using an access token.\n */\nexport type Checkout = {\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  /**\n   * The ID of the object.\n   */\n  id: string;\n  /**\n   * Key-value object storing custom field values.\n   */\n  customFieldData?:\n    | { [k: string]: string | number | boolean | Date | null }\n    | undefined;\n  paymentProcessor: PaymentProcessor;\n  status: CheckoutStatus;\n  /**\n   * Client secret used to update and complete the checkout session from the client.\n   */\n  clientSecret: string;\n  /**\n   * URL where the customer can access the checkout session.\n   */\n  url: string;\n  /**\n   * Expiration date and time of the checkout session.\n   */\n  expiresAt: Date;\n  /**\n   * URL where the customer will be redirected after a successful payment.\n   */\n  successUrl: string;\n  /**\n   * When checkout is embedded, represents the Origin of the page embedding the checkout. Used as a security measure to send messages only to the embedding page.\n   */\n  embedOrigin: string | null;\n  /**\n   * Amount in cents, before discounts and taxes.\n   */\n  amount: number;\n  /**\n   * Discount amount in cents.\n   */\n  discountAmount: number;\n  /**\n   * Amount in cents, after discounts but before taxes.\n   */\n  netAmount: number;\n  /**\n   * Sales tax amount in cents. If `null`, it means there is no enough information yet to calculate it.\n   */\n  taxAmount: number | null;\n  /**\n   * Amount in cents, after discounts and taxes.\n   */\n  totalAmount: number;\n  /**\n   * Currency code of the checkout session.\n   */\n  currency: string;\n  /**\n   * ID of the product to checkout.\n   */\n  productId: string;\n  /**\n   * ID of the product price to checkout.\n   */\n  productPriceId: string;\n  /**\n   * ID of the discount applied to the checkout.\n   */\n  discountId: string | null;\n  /**\n   * Whether to allow the customer to apply discount codes. If you apply a discount through `discount_id`, it'll still be applied, but the customer won't be able to change it.\n   */\n  allowDiscountCodes: boolean;\n  /**\n   * Whether to require the customer to fill their full billing address, instead of just the country. Customers in the US will always be required to fill their full address, regardless of this setting. If you preset the billing address, this setting will be automatically set to `true`.\n   */\n  requireBillingAddress: boolean;\n  /**\n   * Whether the discount is applicable to the checkout. Typically, free and custom prices are not discountable.\n   */\n  isDiscountApplicable: boolean;\n  /**\n   * Whether the product price is free, regardless of discounts.\n   */\n  isFreeProductPrice: boolean;\n  /**\n   * Whether the checkout requires payment, e.g. in case of free products or discounts that cover the total amount.\n   */\n  isPaymentRequired: boolean;\n  /**\n   * Whether the checkout requires setting up a payment method, regardless of the amount, e.g. subscriptions that have first free cycles.\n   */\n  isPaymentSetupRequired: boolean;\n  /**\n   * Whether the checkout requires a payment form, whether because of a payment or payment method setup.\n   */\n  isPaymentFormRequired: boolean;\n  customerId: string | null;\n  /**\n   * Whether the customer is a business or an individual. If `true`, the customer will be required to fill their full billing address and billing name.\n   */\n  isBusinessCustomer: boolean;\n  /**\n   * Name of the customer.\n   */\n  customerName: string | null;\n  /**\n   * Email address of the customer.\n   */\n  customerEmail: string | null;\n  customerIpAddress: string | null;\n  customerBillingName: string | null;\n  customerBillingAddress: Address | null;\n  customerTaxId: string | null;\n  paymentProcessorMetadata: { [k: string]: string };\n  customerBillingAddressFields: CheckoutCustomerBillingAddressFields;\n  metadata: { [k: string]: string | number | number | boolean };\n  /**\n   * ID of the customer in your system. If a matching customer exists on Polar, the resulting order will be linked to this customer. Otherwise, a new customer will be created with this external ID set.\n   */\n  externalCustomerId: string | null;\n  /**\n   * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.\n   */\n  customerExternalId: string | null;\n  /**\n   * List of products available to select.\n   */\n  products: Array<CheckoutProduct>;\n  /**\n   * Product data for a checkout session.\n   */\n  product: CheckoutProduct;\n  /**\n   * Price of the selected product.\n   */\n  productPrice: LegacyRecurringProductPrice | ProductPrice;\n  discount:\n    | CheckoutDiscountPercentageOnceForeverDuration\n    | CheckoutDiscountFixedOnceForeverDuration\n    | CheckoutDiscountPercentageRepeatDuration\n    | CheckoutDiscountFixedRepeatDuration\n    | null;\n  subscriptionId: string | null;\n  attachedCustomFields: Array<AttachedCustomField>;\n  customerMetadata: { [k: string]: string | number | boolean };\n};\n\n/** @internal */\nexport const CheckoutCustomFieldData$inboundSchema: z.ZodType<\n  CheckoutCustomFieldData,\n  z.ZodTypeDef,\n  unknown\n> = z.union([\n  z.string(),\n  z.number().int(),\n  z.boolean(),\n  z.string().datetime({ offset: true }).transform(v => new Date(v)),\n]);\n\n/** @internal */\nexport type CheckoutCustomFieldData$Outbound =\n  | string\n  | number\n  | boolean\n  | string;\n\n/** @internal */\nexport const CheckoutCustomFieldData$outboundSchema: z.ZodType<\n  CheckoutCustomFieldData$Outbound,\n  z.ZodTypeDef,\n  CheckoutCustomFieldData\n> = z.union([\n  z.string(),\n  z.number().int(),\n  z.boolean(),\n  z.date().transform(v => v.toISOString()),\n]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CheckoutCustomFieldData$ {\n  /** @deprecated use `CheckoutCustomFieldData$inboundSchema` instead. */\n  export const inboundSchema = CheckoutCustomFieldData$inboundSchema;\n  /** @deprecated use `CheckoutCustomFieldData$outboundSchema` instead. */\n  export const outboundSchema = CheckoutCustomFieldData$outboundSchema;\n  /** @deprecated use `CheckoutCustomFieldData$Outbound` instead. */\n  export type Outbound = CheckoutCustomFieldData$Outbound;\n}\n\nexport function checkoutCustomFieldDataToJSON(\n  checkoutCustomFieldData: CheckoutCustomFieldData,\n): string {\n  return JSON.stringify(\n    CheckoutCustomFieldData$outboundSchema.parse(checkoutCustomFieldData),\n  );\n}\n\nexport function checkoutCustomFieldDataFromJSON(\n  jsonString: string,\n): SafeParseResult<CheckoutCustomFieldData, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CheckoutCustomFieldData$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CheckoutCustomFieldData' from JSON`,\n  );\n}\n\n/** @internal */\nexport const CheckoutMetadata$inboundSchema: z.ZodType<\n  CheckoutMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type CheckoutMetadata$Outbound = string | number | number | boolean;\n\n/** @internal */\nexport const CheckoutMetadata$outboundSchema: z.ZodType<\n  CheckoutMetadata$Outbound,\n  z.ZodTypeDef,\n  CheckoutMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CheckoutMetadata$ {\n  /** @deprecated use `CheckoutMetadata$inboundSchema` instead. */\n  export const inboundSchema = CheckoutMetadata$inboundSchema;\n  /** @deprecated use `CheckoutMetadata$outboundSchema` instead. */\n  export const outboundSchema = CheckoutMetadata$outboundSchema;\n  /** @deprecated use `CheckoutMetadata$Outbound` instead. */\n  export type Outbound = CheckoutMetadata$Outbound;\n}\n\nexport function checkoutMetadataToJSON(\n  checkoutMetadata: CheckoutMetadata,\n): string {\n  return JSON.stringify(\n    CheckoutMetadata$outboundSchema.parse(checkoutMetadata),\n  );\n}\n\nexport function checkoutMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<CheckoutMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CheckoutMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CheckoutMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const CheckoutProductPrice$inboundSchema: z.ZodType<\n  CheckoutProductPrice,\n  z.ZodTypeDef,\n  unknown\n> = z.union([\n  LegacyRecurringProductPrice$inboundSchema,\n  ProductPrice$inboundSchema,\n]);\n\n/** @internal */\nexport type CheckoutProductPrice$Outbound =\n  | LegacyRecurringProductPrice$Outbound\n  | ProductPrice$Outbound;\n\n/** @internal */\nexport const CheckoutProductPrice$outboundSchema: z.ZodType<\n  CheckoutProductPrice$Outbound,\n  z.ZodTypeDef,\n  CheckoutProductPrice\n> = z.union([\n  LegacyRecurringProductPrice$outboundSchema,\n  ProductPrice$outboundSchema,\n]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CheckoutProductPrice$ {\n  /** @deprecated use `CheckoutProductPrice$inboundSchema` instead. */\n  export const inboundSchema = CheckoutProductPrice$inboundSchema;\n  /** @deprecated use `CheckoutProductPrice$outboundSchema` instead. */\n  export const outboundSchema = CheckoutProductPrice$outboundSchema;\n  /** @deprecated use `CheckoutProductPrice$Outbound` instead. */\n  export type Outbound = CheckoutProductPrice$Outbound;\n}\n\nexport function checkoutProductPriceToJSON(\n  checkoutProductPrice: CheckoutProductPrice,\n): string {\n  return JSON.stringify(\n    CheckoutProductPrice$outboundSchema.parse(checkoutProductPrice),\n  );\n}\n\nexport function checkoutProductPriceFromJSON(\n  jsonString: string,\n): SafeParseResult<CheckoutProductPrice, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CheckoutProductPrice$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CheckoutProductPrice' from JSON`,\n  );\n}\n\n/** @internal */\nexport const CheckoutDiscount$inboundSchema: z.ZodType<\n  CheckoutDiscount,\n  z.ZodTypeDef,\n  unknown\n> = z.union([\n  CheckoutDiscountPercentageOnceForeverDuration$inboundSchema,\n  CheckoutDiscountFixedOnceForeverDuration$inboundSchema,\n  CheckoutDiscountPercentageRepeatDuration$inboundSchema,\n  CheckoutDiscountFixedRepeatDuration$inboundSchema,\n]);\n\n/** @internal */\nexport type CheckoutDiscount$Outbound =\n  | CheckoutDiscountPercentageOnceForeverDuration$Outbound\n  | CheckoutDiscountFixedOnceForeverDuration$Outbound\n  | CheckoutDiscountPercentageRepeatDuration$Outbound\n  | CheckoutDiscountFixedRepeatDuration$Outbound;\n\n/** @internal */\nexport const CheckoutDiscount$outboundSchema: z.ZodType<\n  CheckoutDiscount$Outbound,\n  z.ZodTypeDef,\n  CheckoutDiscount\n> = z.union([\n  CheckoutDiscountPercentageOnceForeverDuration$outboundSchema,\n  CheckoutDiscountFixedOnceForeverDuration$outboundSchema,\n  CheckoutDiscountPercentageRepeatDuration$outboundSchema,\n  CheckoutDiscountFixedRepeatDuration$outboundSchema,\n]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CheckoutDiscount$ {\n  /** @deprecated use `CheckoutDiscount$inboundSchema` instead. */\n  export const inboundSchema = CheckoutDiscount$inboundSchema;\n  /** @deprecated use `CheckoutDiscount$outboundSchema` instead. */\n  export const outboundSchema = CheckoutDiscount$outboundSchema;\n  /** @deprecated use `CheckoutDiscount$Outbound` instead. */\n  export type Outbound = CheckoutDiscount$Outbound;\n}\n\nexport function checkoutDiscountToJSON(\n  checkoutDiscount: CheckoutDiscount,\n): string {\n  return JSON.stringify(\n    CheckoutDiscount$outboundSchema.parse(checkoutDiscount),\n  );\n}\n\nexport function checkoutDiscountFromJSON(\n  jsonString: string,\n): SafeParseResult<CheckoutDiscount, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CheckoutDiscount$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CheckoutDiscount' from JSON`,\n  );\n}\n\n/** @internal */\nexport const CustomerMetadata$inboundSchema: z.ZodType<\n  CustomerMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.boolean()]);\n\n/** @internal */\nexport type CustomerMetadata$Outbound = string | number | boolean;\n\n/** @internal */\nexport const CustomerMetadata$outboundSchema: z.ZodType<\n  CustomerMetadata$Outbound,\n  z.ZodTypeDef,\n  CustomerMetadata\n> = z.union([z.string(), z.number().int(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomerMetadata$ {\n  /** @deprecated use `CustomerMetadata$inboundSchema` instead. */\n  export const inboundSchema = CustomerMetadata$inboundSchema;\n  /** @deprecated use `CustomerMetadata$outboundSchema` instead. */\n  export const outboundSchema = CustomerMetadata$outboundSchema;\n  /** @deprecated use `CustomerMetadata$Outbound` instead. */\n  export type Outbound = CustomerMetadata$Outbound;\n}\n\nexport function customerMetadataToJSON(\n  customerMetadata: CustomerMetadata,\n): string {\n  return JSON.stringify(\n    CustomerMetadata$outboundSchema.parse(customerMetadata),\n  );\n}\n\nexport function customerMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomerMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomerMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomerMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const Checkout$inboundSchema: z.ZodType<\n  Checkout,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  id: z.string(),\n  custom_field_data: z.record(\n    z.nullable(\n      z.union([\n        z.string(),\n        z.number().int(),\n        z.boolean(),\n        z.string().datetime({ offset: true }).transform(v => new Date(v)),\n      ]),\n    ),\n  ).optional(),\n  payment_processor: PaymentProcessor$inboundSchema,\n  status: CheckoutStatus$inboundSchema,\n  client_secret: z.string(),\n  url: z.string(),\n  expires_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  success_url: z.string(),\n  embed_origin: z.nullable(z.string()),\n  amount: z.number().int(),\n  discount_amount: z.number().int(),\n  net_amount: z.number().int(),\n  tax_amount: z.nullable(z.number().int()),\n  total_amount: z.number().int(),\n  currency: z.string(),\n  product_id: z.string(),\n  product_price_id: z.string(),\n  discount_id: z.nullable(z.string()),\n  allow_discount_codes: z.boolean(),\n  require_billing_address: z.boolean(),\n  is_discount_applicable: z.boolean(),\n  is_free_product_price: z.boolean(),\n  is_payment_required: z.boolean(),\n  is_payment_setup_required: z.boolean(),\n  is_payment_form_required: z.boolean(),\n  customer_id: z.nullable(z.string()),\n  is_business_customer: z.boolean(),\n  customer_name: z.nullable(z.string()),\n  customer_email: z.nullable(z.string()),\n  customer_ip_address: z.nullable(z.string()),\n  customer_billing_name: z.nullable(z.string()),\n  customer_billing_address: z.nullable(Address$inboundSchema),\n  customer_tax_id: z.nullable(z.string()),\n  payment_processor_metadata: z.record(z.string()),\n  customer_billing_address_fields:\n    CheckoutCustomerBillingAddressFields$inboundSchema,\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  external_customer_id: z.nullable(z.string()),\n  customer_external_id: z.nullable(z.string()),\n  products: z.array(CheckoutProduct$inboundSchema),\n  product: CheckoutProduct$inboundSchema,\n  product_price: z.union([\n    LegacyRecurringProductPrice$inboundSchema,\n    ProductPrice$inboundSchema,\n  ]),\n  discount: z.nullable(\n    z.union([\n      CheckoutDiscountPercentageOnceForeverDuration$inboundSchema,\n      CheckoutDiscountFixedOnceForeverDuration$inboundSchema,\n      CheckoutDiscountPercentageRepeatDuration$inboundSchema,\n      CheckoutDiscountFixedRepeatDuration$inboundSchema,\n    ]),\n  ),\n  subscription_id: z.nullable(z.string()),\n  attached_custom_fields: z.array(AttachedCustomField$inboundSchema),\n  customer_metadata: z.record(\n    z.union([z.string(), z.number().int(), z.boolean()]),\n  ),\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"custom_field_data\": \"customFieldData\",\n    \"payment_processor\": \"paymentProcessor\",\n    \"client_secret\": \"clientSecret\",\n    \"expires_at\": \"expiresAt\",\n    \"success_url\": \"successUrl\",\n    \"embed_origin\": \"embedOrigin\",\n    \"discount_amount\": \"discountAmount\",\n    \"net_amount\": \"netAmount\",\n    \"tax_amount\": \"taxAmount\",\n    \"total_amount\": \"totalAmount\",\n    \"product_id\": \"productId\",\n    \"product_price_id\": \"productPriceId\",\n    \"discount_id\": \"discountId\",\n    \"allow_discount_codes\": \"allowDiscountCodes\",\n    \"require_billing_address\": \"requireBillingAddress\",\n    \"is_discount_applicable\": \"isDiscountApplicable\",\n    \"is_free_product_price\": \"isFreeProductPrice\",\n    \"is_payment_required\": \"isPaymentRequired\",\n    \"is_payment_setup_required\": \"isPaymentSetupRequired\",\n    \"is_payment_form_required\": \"isPaymentFormRequired\",\n    \"customer_id\": \"customerId\",\n    \"is_business_customer\": \"isBusinessCustomer\",\n    \"customer_name\": \"customerName\",\n    \"customer_email\": \"customerEmail\",\n    \"customer_ip_address\": \"customerIpAddress\",\n    \"customer_billing_name\": \"customerBillingName\",\n    \"customer_billing_address\": \"customerBillingAddress\",\n    \"customer_tax_id\": \"customerTaxId\",\n    \"payment_processor_metadata\": \"paymentProcessorMetadata\",\n    \"customer_billing_address_fields\": \"customerBillingAddressFields\",\n    \"external_customer_id\": \"externalCustomerId\",\n    \"customer_external_id\": \"customerExternalId\",\n    \"product_price\": \"productPrice\",\n    \"subscription_id\": \"subscriptionId\",\n    \"attached_custom_fields\": \"attachedCustomFields\",\n    \"customer_metadata\": \"customerMetadata\",\n  });\n});\n\n/** @internal */\nexport type Checkout$Outbound = {\n  created_at: string;\n  modified_at: string | null;\n  id: string;\n  custom_field_data?:\n    | { [k: string]: string | number | boolean | string | null }\n    | undefined;\n  payment_processor: string;\n  status: string;\n  client_secret: string;\n  url: string;\n  expires_at: string;\n  success_url: string;\n  embed_origin: string | null;\n  amount: number;\n  discount_amount: number;\n  net_amount: number;\n  tax_amount: number | null;\n  total_amount: number;\n  currency: string;\n  product_id: string;\n  product_price_id: string;\n  discount_id: string | null;\n  allow_discount_codes: boolean;\n  require_billing_address: boolean;\n  is_discount_applicable: boolean;\n  is_free_product_price: boolean;\n  is_payment_required: boolean;\n  is_payment_setup_required: boolean;\n  is_payment_form_required: boolean;\n  customer_id: string | null;\n  is_business_customer: boolean;\n  customer_name: string | null;\n  customer_email: string | null;\n  customer_ip_address: string | null;\n  customer_billing_name: string | null;\n  customer_billing_address: Address$Outbound | null;\n  customer_tax_id: string | null;\n  payment_processor_metadata: { [k: string]: string };\n  customer_billing_address_fields:\n    CheckoutCustomerBillingAddressFields$Outbound;\n  metadata: { [k: string]: string | number | number | boolean };\n  external_customer_id: string | null;\n  customer_external_id: string | null;\n  products: Array<CheckoutProduct$Outbound>;\n  product: CheckoutProduct$Outbound;\n  product_price: LegacyRecurringProductPrice$Outbound | ProductPrice$Outbound;\n  discount:\n    | CheckoutDiscountPercentageOnceForeverDuration$Outbound\n    | CheckoutDiscountFixedOnceForeverDuration$Outbound\n    | CheckoutDiscountPercentageRepeatDuration$Outbound\n    | CheckoutDiscountFixedRepeatDuration$Outbound\n    | null;\n  subscription_id: string | null;\n  attached_custom_fields: Array<AttachedCustomField$Outbound>;\n  customer_metadata: { [k: string]: string | number | boolean };\n};\n\n/** @internal */\nexport const Checkout$outboundSchema: z.ZodType<\n  Checkout$Outbound,\n  z.ZodTypeDef,\n  Checkout\n> = z.object({\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  id: z.string(),\n  customFieldData: z.record(\n    z.nullable(\n      z.union([\n        z.string(),\n        z.number().int(),\n        z.boolean(),\n        z.date().transform(v => v.toISOString()),\n      ]),\n    ),\n  ).optional(),\n  paymentProcessor: PaymentProcessor$outboundSchema,\n  status: CheckoutStatus$outboundSchema,\n  clientSecret: z.string(),\n  url: z.string(),\n  expiresAt: z.date().transform(v => v.toISOString()),\n  successUrl: z.string(),\n  embedOrigin: z.nullable(z.string()),\n  amount: z.number().int(),\n  discountAmount: z.number().int(),\n  netAmount: z.number().int(),\n  taxAmount: z.nullable(z.number().int()),\n  totalAmount: z.number().int(),\n  currency: z.string(),\n  productId: z.string(),\n  productPriceId: z.string(),\n  discountId: z.nullable(z.string()),\n  allowDiscountCodes: z.boolean(),\n  requireBillingAddress: z.boolean(),\n  isDiscountApplicable: z.boolean(),\n  isFreeProductPrice: z.boolean(),\n  isPaymentRequired: z.boolean(),\n  isPaymentSetupRequired: z.boolean(),\n  isPaymentFormRequired: z.boolean(),\n  customerId: z.nullable(z.string()),\n  isBusinessCustomer: z.boolean(),\n  customerName: z.nullable(z.string()),\n  customerEmail: z.nullable(z.string()),\n  customerIpAddress: z.nullable(z.string()),\n  customerBillingName: z.nullable(z.string()),\n  customerBillingAddress: z.nullable(Address$outboundSchema),\n  customerTaxId: z.nullable(z.string()),\n  paymentProcessorMetadata: z.record(z.string()),\n  customerBillingAddressFields:\n    CheckoutCustomerBillingAddressFields$outboundSchema,\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  externalCustomerId: z.nullable(z.string()),\n  customerExternalId: z.nullable(z.string()),\n  products: z.array(CheckoutProduct$outboundSchema),\n  product: CheckoutProduct$outboundSchema,\n  productPrice: z.union([\n    LegacyRecurringProductPrice$outboundSchema,\n    ProductPrice$outboundSchema,\n  ]),\n  discount: z.nullable(\n    z.union([\n      CheckoutDiscountPercentageOnceForeverDuration$outboundSchema,\n      CheckoutDiscountFixedOnceForeverDuration$outboundSchema,\n      CheckoutDiscountPercentageRepeatDuration$outboundSchema,\n      CheckoutDiscountFixedRepeatDuration$outboundSchema,\n    ]),\n  ),\n  subscriptionId: z.nullable(z.string()),\n  attachedCustomFields: z.array(AttachedCustomField$outboundSchema),\n  customerMetadata: z.record(\n    z.union([z.string(), z.number().int(), z.boolean()]),\n  ),\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    customFieldData: \"custom_field_data\",\n    paymentProcessor: \"payment_processor\",\n    clientSecret: \"client_secret\",\n    expiresAt: \"expires_at\",\n    successUrl: \"success_url\",\n    embedOrigin: \"embed_origin\",\n    discountAmount: \"discount_amount\",\n    netAmount: \"net_amount\",\n    taxAmount: \"tax_amount\",\n    totalAmount: \"total_amount\",\n    productId: \"product_id\",\n    productPriceId: \"product_price_id\",\n    discountId: \"discount_id\",\n    allowDiscountCodes: \"allow_discount_codes\",\n    requireBillingAddress: \"require_billing_address\",\n    isDiscountApplicable: \"is_discount_applicable\",\n    isFreeProductPrice: \"is_free_product_price\",\n    isPaymentRequired: \"is_payment_required\",\n    isPaymentSetupRequired: \"is_payment_setup_required\",\n    isPaymentFormRequired: \"is_payment_form_required\",\n    customerId: \"customer_id\",\n    isBusinessCustomer: \"is_business_customer\",\n    customerName: \"customer_name\",\n    customerEmail: \"customer_email\",\n    customerIpAddress: \"customer_ip_address\",\n    customerBillingName: \"customer_billing_name\",\n    customerBillingAddress: \"customer_billing_address\",\n    customerTaxId: \"customer_tax_id\",\n    paymentProcessorMetadata: \"payment_processor_metadata\",\n    customerBillingAddressFields: \"customer_billing_address_fields\",\n    externalCustomerId: \"external_customer_id\",\n    customerExternalId: \"customer_external_id\",\n    productPrice: \"product_price\",\n    subscriptionId: \"subscription_id\",\n    attachedCustomFields: \"attached_custom_fields\",\n    customerMetadata: \"customer_metadata\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace Checkout$ {\n  /** @deprecated use `Checkout$inboundSchema` instead. */\n  export const inboundSchema = Checkout$inboundSchema;\n  /** @deprecated use `Checkout$outboundSchema` instead. */\n  export const outboundSchema = Checkout$outboundSchema;\n  /** @deprecated use `Checkout$Outbound` instead. */\n  export type Outbound = Checkout$Outbound;\n}\n\nexport function checkoutToJSON(checkout: Checkout): string {\n  return JSON.stringify(Checkout$outboundSchema.parse(checkout));\n}\n\nexport function checkoutFromJSON(\n  jsonString: string,\n): SafeParseResult<Checkout, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => Checkout$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'Checkout' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 9470, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9476, "column": 0}, "map": {"version":3,"file":"checkoutcreate.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/checkoutcreate.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  Address,\n  Address$inboundSchema,\n  Address$Outbound,\n  Address$outboundSchema,\n} from \"./address.js\";\n\nexport type CheckoutCreateMetadata = string | number | number | boolean;\n\nexport type CheckoutCreateCustomFieldData = string | number | boolean | Date;\n\nexport type CheckoutCreateCustomerMetadata = string | number | number | boolean;\n\n/**\n * Create a new checkout session from a list of products.\n *\n * @remarks\n * Customers will be able to switch between those products.\n *\n * Metadata set on the checkout will be copied\n * to the resulting order and/or subscription.\n */\nexport type CheckoutCreate = {\n  /**\n   * Key-value object allowing you to store additional information.\n   *\n   * @remarks\n   *\n   * The key must be a string with a maximum length of **40 characters**.\n   * The value must be either:\n   *\n   * * A string with a maximum length of **500 characters**\n   * * An integer\n   * * A floating-point number\n   * * A boolean\n   *\n   * You can store up to **50 key-value pairs**.\n   */\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  /**\n   * Key-value object storing custom field values.\n   */\n  customFieldData?:\n    | { [k: string]: string | number | boolean | Date | null }\n    | undefined;\n  /**\n   * ID of the discount to apply to the checkout.\n   */\n  discountId?: string | null | undefined;\n  /**\n   * Whether to allow the customer to apply discount codes. If you apply a discount through `discount_id`, it'll still be applied, but the customer won't be able to change it.\n   */\n  allowDiscountCodes?: boolean | undefined;\n  /**\n   * Whether to require the customer to fill their full billing address, instead of just the country. Customers in the US will always be required to fill their full address, regardless of this setting. If you preset the billing address, this setting will be automatically set to `true`.\n   */\n  requireBillingAddress?: boolean | undefined;\n  amount?: number | null | undefined;\n  /**\n   * ID of an existing customer in the organization. The customer data will be pre-filled in the checkout form. The resulting order will be linked to this customer.\n   */\n  customerId?: string | null | undefined;\n  /**\n   * Whether the customer is a business or an individual. If `true`, the customer will be required to fill their full billing address and billing name.\n   */\n  isBusinessCustomer?: boolean | undefined;\n  /**\n   * ID of the customer in your system. If a matching customer exists on Polar, the resulting order will be linked to this customer. Otherwise, a new customer will be created with this external ID set.\n   */\n  externalCustomerId?: string | null | undefined;\n  customerName?: string | null | undefined;\n  customerEmail?: string | null | undefined;\n  customerIpAddress?: string | null | undefined;\n  customerBillingName?: string | null | undefined;\n  customerBillingAddress?: Address | null | undefined;\n  customerTaxId?: string | null | undefined;\n  /**\n   * Key-value object allowing you to store additional information that'll be copied to the created customer.\n   *\n   * @remarks\n   *\n   * The key must be a string with a maximum length of **40 characters**.\n   * The value must be either:\n   *\n   * * A string with a maximum length of **500 characters**\n   * * An integer\n   * * A floating-point number\n   * * A boolean\n   *\n   * You can store up to **50 key-value pairs**.\n   */\n  customerMetadata?:\n    | { [k: string]: string | number | number | boolean }\n    | undefined;\n  /**\n   * ID of a subscription to upgrade. It must be on a free pricing. If checkout is successful, metadata set on this checkout will be copied to the subscription, and existing keys will be overwritten.\n   */\n  subscriptionId?: string | null | undefined;\n  /**\n   * URL where the customer will be redirected after a successful payment.You can add the `checkout_id={CHECKOUT_ID}` query parameter to retrieve the checkout session id.\n   */\n  successUrl?: string | null | undefined;\n  /**\n   * If you plan to embed the checkout session, set this to the Origin of the embedding page. It'll allow the Polar iframe to communicate with the parent page.\n   */\n  embedOrigin?: string | null | undefined;\n  /**\n   * List of product IDs available to select at that checkout. The first one will be selected by default.\n   */\n  products: Array<string>;\n};\n\n/** @internal */\nexport const CheckoutCreateMetadata$inboundSchema: z.ZodType<\n  CheckoutCreateMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type CheckoutCreateMetadata$Outbound =\n  | string\n  | number\n  | number\n  | boolean;\n\n/** @internal */\nexport const CheckoutCreateMetadata$outboundSchema: z.ZodType<\n  CheckoutCreateMetadata$Outbound,\n  z.ZodTypeDef,\n  CheckoutCreateMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CheckoutCreateMetadata$ {\n  /** @deprecated use `CheckoutCreateMetadata$inboundSchema` instead. */\n  export const inboundSchema = CheckoutCreateMetadata$inboundSchema;\n  /** @deprecated use `CheckoutCreateMetadata$outboundSchema` instead. */\n  export const outboundSchema = CheckoutCreateMetadata$outboundSchema;\n  /** @deprecated use `CheckoutCreateMetadata$Outbound` instead. */\n  export type Outbound = CheckoutCreateMetadata$Outbound;\n}\n\nexport function checkoutCreateMetadataToJSON(\n  checkoutCreateMetadata: CheckoutCreateMetadata,\n): string {\n  return JSON.stringify(\n    CheckoutCreateMetadata$outboundSchema.parse(checkoutCreateMetadata),\n  );\n}\n\nexport function checkoutCreateMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<CheckoutCreateMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CheckoutCreateMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CheckoutCreateMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const CheckoutCreateCustomFieldData$inboundSchema: z.ZodType<\n  CheckoutCreateCustomFieldData,\n  z.ZodTypeDef,\n  unknown\n> = z.union([\n  z.string(),\n  z.number().int(),\n  z.boolean(),\n  z.string().datetime({ offset: true }).transform(v => new Date(v)),\n]);\n\n/** @internal */\nexport type CheckoutCreateCustomFieldData$Outbound =\n  | string\n  | number\n  | boolean\n  | string;\n\n/** @internal */\nexport const CheckoutCreateCustomFieldData$outboundSchema: z.ZodType<\n  CheckoutCreateCustomFieldData$Outbound,\n  z.ZodTypeDef,\n  CheckoutCreateCustomFieldData\n> = z.union([\n  z.string(),\n  z.number().int(),\n  z.boolean(),\n  z.date().transform(v => v.toISOString()),\n]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CheckoutCreateCustomFieldData$ {\n  /** @deprecated use `CheckoutCreateCustomFieldData$inboundSchema` instead. */\n  export const inboundSchema = CheckoutCreateCustomFieldData$inboundSchema;\n  /** @deprecated use `CheckoutCreateCustomFieldData$outboundSchema` instead. */\n  export const outboundSchema = CheckoutCreateCustomFieldData$outboundSchema;\n  /** @deprecated use `CheckoutCreateCustomFieldData$Outbound` instead. */\n  export type Outbound = CheckoutCreateCustomFieldData$Outbound;\n}\n\nexport function checkoutCreateCustomFieldDataToJSON(\n  checkoutCreateCustomFieldData: CheckoutCreateCustomFieldData,\n): string {\n  return JSON.stringify(\n    CheckoutCreateCustomFieldData$outboundSchema.parse(\n      checkoutCreateCustomFieldData,\n    ),\n  );\n}\n\nexport function checkoutCreateCustomFieldDataFromJSON(\n  jsonString: string,\n): SafeParseResult<CheckoutCreateCustomFieldData, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CheckoutCreateCustomFieldData$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CheckoutCreateCustomFieldData' from JSON`,\n  );\n}\n\n/** @internal */\nexport const CheckoutCreateCustomerMetadata$inboundSchema: z.ZodType<\n  CheckoutCreateCustomerMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type CheckoutCreateCustomerMetadata$Outbound =\n  | string\n  | number\n  | number\n  | boolean;\n\n/** @internal */\nexport const CheckoutCreateCustomerMetadata$outboundSchema: z.ZodType<\n  CheckoutCreateCustomerMetadata$Outbound,\n  z.ZodTypeDef,\n  CheckoutCreateCustomerMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CheckoutCreateCustomerMetadata$ {\n  /** @deprecated use `CheckoutCreateCustomerMetadata$inboundSchema` instead. */\n  export const inboundSchema = CheckoutCreateCustomerMetadata$inboundSchema;\n  /** @deprecated use `CheckoutCreateCustomerMetadata$outboundSchema` instead. */\n  export const outboundSchema = CheckoutCreateCustomerMetadata$outboundSchema;\n  /** @deprecated use `CheckoutCreateCustomerMetadata$Outbound` instead. */\n  export type Outbound = CheckoutCreateCustomerMetadata$Outbound;\n}\n\nexport function checkoutCreateCustomerMetadataToJSON(\n  checkoutCreateCustomerMetadata: CheckoutCreateCustomerMetadata,\n): string {\n  return JSON.stringify(\n    CheckoutCreateCustomerMetadata$outboundSchema.parse(\n      checkoutCreateCustomerMetadata,\n    ),\n  );\n}\n\nexport function checkoutCreateCustomerMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<CheckoutCreateCustomerMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CheckoutCreateCustomerMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CheckoutCreateCustomerMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const CheckoutCreate$inboundSchema: z.ZodType<\n  CheckoutCreate,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  custom_field_data: z.record(\n    z.nullable(\n      z.union([\n        z.string(),\n        z.number().int(),\n        z.boolean(),\n        z.string().datetime({ offset: true }).transform(v => new Date(v)),\n      ]),\n    ),\n  ).optional(),\n  discount_id: z.nullable(z.string()).optional(),\n  allow_discount_codes: z.boolean().default(true),\n  require_billing_address: z.boolean().default(false),\n  amount: z.nullable(z.number().int()).optional(),\n  customer_id: z.nullable(z.string()).optional(),\n  is_business_customer: z.boolean().default(false),\n  external_customer_id: z.nullable(z.string()).optional(),\n  customer_name: z.nullable(z.string()).optional(),\n  customer_email: z.nullable(z.string()).optional(),\n  customer_ip_address: z.nullable(z.string()).optional(),\n  customer_billing_name: z.nullable(z.string()).optional(),\n  customer_billing_address: z.nullable(Address$inboundSchema).optional(),\n  customer_tax_id: z.nullable(z.string()).optional(),\n  customer_metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  subscription_id: z.nullable(z.string()).optional(),\n  success_url: z.nullable(z.string()).optional(),\n  embed_origin: z.nullable(z.string()).optional(),\n  products: z.array(z.string()),\n}).transform((v) => {\n  return remap$(v, {\n    \"custom_field_data\": \"customFieldData\",\n    \"discount_id\": \"discountId\",\n    \"allow_discount_codes\": \"allowDiscountCodes\",\n    \"require_billing_address\": \"requireBillingAddress\",\n    \"customer_id\": \"customerId\",\n    \"is_business_customer\": \"isBusinessCustomer\",\n    \"external_customer_id\": \"externalCustomerId\",\n    \"customer_name\": \"customerName\",\n    \"customer_email\": \"customerEmail\",\n    \"customer_ip_address\": \"customerIpAddress\",\n    \"customer_billing_name\": \"customerBillingName\",\n    \"customer_billing_address\": \"customerBillingAddress\",\n    \"customer_tax_id\": \"customerTaxId\",\n    \"customer_metadata\": \"customerMetadata\",\n    \"subscription_id\": \"subscriptionId\",\n    \"success_url\": \"successUrl\",\n    \"embed_origin\": \"embedOrigin\",\n  });\n});\n\n/** @internal */\nexport type CheckoutCreate$Outbound = {\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  custom_field_data?:\n    | { [k: string]: string | number | boolean | string | null }\n    | undefined;\n  discount_id?: string | null | undefined;\n  allow_discount_codes: boolean;\n  require_billing_address: boolean;\n  amount?: number | null | undefined;\n  customer_id?: string | null | undefined;\n  is_business_customer: boolean;\n  external_customer_id?: string | null | undefined;\n  customer_name?: string | null | undefined;\n  customer_email?: string | null | undefined;\n  customer_ip_address?: string | null | undefined;\n  customer_billing_name?: string | null | undefined;\n  customer_billing_address?: Address$Outbound | null | undefined;\n  customer_tax_id?: string | null | undefined;\n  customer_metadata?:\n    | { [k: string]: string | number | number | boolean }\n    | undefined;\n  subscription_id?: string | null | undefined;\n  success_url?: string | null | undefined;\n  embed_origin?: string | null | undefined;\n  products: Array<string>;\n};\n\n/** @internal */\nexport const CheckoutCreate$outboundSchema: z.ZodType<\n  CheckoutCreate$Outbound,\n  z.ZodTypeDef,\n  CheckoutCreate\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  customFieldData: z.record(\n    z.nullable(\n      z.union([\n        z.string(),\n        z.number().int(),\n        z.boolean(),\n        z.date().transform(v => v.toISOString()),\n      ]),\n    ),\n  ).optional(),\n  discountId: z.nullable(z.string()).optional(),\n  allowDiscountCodes: z.boolean().default(true),\n  requireBillingAddress: z.boolean().default(false),\n  amount: z.nullable(z.number().int()).optional(),\n  customerId: z.nullable(z.string()).optional(),\n  isBusinessCustomer: z.boolean().default(false),\n  externalCustomerId: z.nullable(z.string()).optional(),\n  customerName: z.nullable(z.string()).optional(),\n  customerEmail: z.nullable(z.string()).optional(),\n  customerIpAddress: z.nullable(z.string()).optional(),\n  customerBillingName: z.nullable(z.string()).optional(),\n  customerBillingAddress: z.nullable(Address$outboundSchema).optional(),\n  customerTaxId: z.nullable(z.string()).optional(),\n  customerMetadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  subscriptionId: z.nullable(z.string()).optional(),\n  successUrl: z.nullable(z.string()).optional(),\n  embedOrigin: z.nullable(z.string()).optional(),\n  products: z.array(z.string()),\n}).transform((v) => {\n  return remap$(v, {\n    customFieldData: \"custom_field_data\",\n    discountId: \"discount_id\",\n    allowDiscountCodes: \"allow_discount_codes\",\n    requireBillingAddress: \"require_billing_address\",\n    customerId: \"customer_id\",\n    isBusinessCustomer: \"is_business_customer\",\n    externalCustomerId: \"external_customer_id\",\n    customerName: \"customer_name\",\n    customerEmail: \"customer_email\",\n    customerIpAddress: \"customer_ip_address\",\n    customerBillingName: \"customer_billing_name\",\n    customerBillingAddress: \"customer_billing_address\",\n    customerTaxId: \"customer_tax_id\",\n    customerMetadata: \"customer_metadata\",\n    subscriptionId: \"subscription_id\",\n    successUrl: \"success_url\",\n    embedOrigin: \"embed_origin\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CheckoutCreate$ {\n  /** @deprecated use `CheckoutCreate$inboundSchema` instead. */\n  export const inboundSchema = CheckoutCreate$inboundSchema;\n  /** @deprecated use `CheckoutCreate$outboundSchema` instead. */\n  export const outboundSchema = CheckoutCreate$outboundSchema;\n  /** @deprecated use `CheckoutCreate$Outbound` instead. */\n  export type Outbound = CheckoutCreate$Outbound;\n}\n\nexport function checkoutCreateToJSON(checkoutCreate: CheckoutCreate): string {\n  return JSON.stringify(CheckoutCreate$outboundSchema.parse(checkoutCreate));\n}\n\nexport function checkoutCreateFromJSON(\n  jsonString: string,\n): SafeParseResult<CheckoutCreate, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CheckoutCreate$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CheckoutCreate' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 9707, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9713, "column": 0}, "map": {"version":3,"file":"checkoutsortproperty.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/checkoutsortproperty.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { ClosedEnum } from \"../../types/enums.js\";\n\nexport const CheckoutSortProperty = {\n  CreatedAt: \"created_at\",\n  MinusCreatedAt: \"-created_at\",\n  ExpiresAt: \"expires_at\",\n  MinusExpiresAt: \"-expires_at\",\n  Status: \"status\",\n  MinusStatus: \"-status\",\n} as const;\nexport type CheckoutSortProperty = ClosedEnum<typeof CheckoutSortProperty>;\n\n/** @internal */\nexport const CheckoutSortProperty$inboundSchema: z.ZodNativeEnum<\n  typeof CheckoutSortProperty\n> = z.nativeEnum(CheckoutSortProperty);\n\n/** @internal */\nexport const CheckoutSortProperty$outboundSchema: z.ZodNativeEnum<\n  typeof CheckoutSortProperty\n> = CheckoutSortProperty$inboundSchema;\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CheckoutSortProperty$ {\n  /** @deprecated use `CheckoutSortProperty$inboundSchema` instead. */\n  export const inboundSchema = CheckoutSortProperty$inboundSchema;\n  /** @deprecated use `CheckoutSortProperty$outboundSchema` instead. */\n  export const outboundSchema = CheckoutSortProperty$outboundSchema;\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;AAGlB,MAAM,oBAAoB,GAAG;IAClC,SAAS,EAAE,YAAY;IACvB,cAAc,EAAE,aAAa;IAC7B,SAAS,EAAE,YAAY;IACvB,cAAc,EAAE,aAAa;IAC7B,MAAM,EAAE,QAAQ;IAChB,WAAW,EAAE,SAAS;CACd,CAAC;AAIJ,MAAM,kCAAkC,GAE3C,CAAC,6IAAC,UAAU,CAAC,oBAAoB,CAAC,CAAC;AAGhC,MAAM,mCAAmC,GAE5C,kCAAkC,CAAC;AAMjC,IAAW,qBAAqB,CAKrC;AALD,CAAA,SAAiB,qBAAqB;IACpC,kEAAA,EAAoE,CACvD,sBAAA,aAAa,GAAG,kCAAkC,CAAC;IAChE,mEAAA,EAAqE,CACxD,sBAAA,cAAc,GAAG,mCAAmC,CAAC;AACpE,CAAC,EALgB,qBAAqB,IAAA,CAArB,qBAAqB,GAAA,CAAA,CAAA,GAKrC","ignoreList":[0]}},
    {"offset": {"line": 9739, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9745, "column": 0}, "map": {"version":3,"file":"listresourcecheckout.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/listresourcecheckout.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  Checkout,\n  Checkout$inboundSchema,\n  Checkout$Outbound,\n  Checkout$outboundSchema,\n} from \"./checkout.js\";\nimport {\n  Pagination,\n  Pagination$inboundSchema,\n  Pagination$Outbound,\n  Pagination$outboundSchema,\n} from \"./pagination.js\";\n\nexport type ListResourceCheckout = {\n  items: Array<Checkout>;\n  pagination: Pagination;\n};\n\n/** @internal */\nexport const ListResourceCheckout$inboundSchema: z.ZodType<\n  ListResourceCheckout,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  items: z.array(Checkout$inboundSchema),\n  pagination: Pagination$inboundSchema,\n});\n\n/** @internal */\nexport type ListResourceCheckout$Outbound = {\n  items: Array<Checkout$Outbound>;\n  pagination: Pagination$Outbound;\n};\n\n/** @internal */\nexport const ListResourceCheckout$outboundSchema: z.ZodType<\n  ListResourceCheckout$Outbound,\n  z.ZodTypeDef,\n  ListResourceCheckout\n> = z.object({\n  items: z.array(Checkout$outboundSchema),\n  pagination: Pagination$outboundSchema,\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace ListResourceCheckout$ {\n  /** @deprecated use `ListResourceCheckout$inboundSchema` instead. */\n  export const inboundSchema = ListResourceCheckout$inboundSchema;\n  /** @deprecated use `ListResourceCheckout$outboundSchema` instead. */\n  export const outboundSchema = ListResourceCheckout$outboundSchema;\n  /** @deprecated use `ListResourceCheckout$Outbound` instead. */\n  export type Outbound = ListResourceCheckout$Outbound;\n}\n\nexport function listResourceCheckoutToJSON(\n  listResourceCheckout: ListResourceCheckout,\n): string {\n  return JSON.stringify(\n    ListResourceCheckout$outboundSchema.parse(listResourceCheckout),\n  );\n}\n\nexport function listResourceCheckoutFromJSON(\n  jsonString: string,\n): SafeParseResult<ListResourceCheckout, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => ListResourceCheckout$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'ListResourceCheckout' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;AAGH,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,sBAAsB,EAEtB,uBAAuB,GACxB,MAAM,eAAe,CAAC;AACvB,OAAO,EAEL,wBAAwB,EAExB,yBAAyB,GAC1B,MAAM,iBAAiB,CAAC;AAfzB,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;;;;AAuBlB,MAAM,kCAAkC,GAI3C,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,KAAK,2LAAC,yBAAsB,CAAC;IACtC,UAAU,8LAAE,2BAAwB;CACrC,CAAC,CAAC;AASI,MAAM,mCAAmC,GAI5C,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,KAAK,2LAAC,0BAAuB,CAAC;IACvC,UAAU,8LAAE,4BAAyB;CACtC,CAAC,CAAC;AAMG,IAAW,qBAAqB,CAOrC;AAPD,CAAA,SAAiB,qBAAqB;IACpC,kEAAA,EAAoE,CACvD,sBAAA,aAAa,GAAG,kCAAkC,CAAC;IAChE,mEAAA,EAAqE,CACxD,sBAAA,cAAc,GAAG,mCAAmC,CAAC;AAGpE,CAAC,EAPgB,qBAAqB,IAAA,CAArB,qBAAqB,GAAA,CAAA,CAAA,GAOrC;AAEK,SAAU,0BAA0B,CACxC,oBAA0C;IAE1C,OAAO,IAAI,CAAC,SAAS,CACnB,mCAAmC,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAChE,CAAC;AACJ,CAAC;AAEK,SAAU,4BAA4B,CAC1C,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,iCAAmC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC9D,CAAA,gDAAA,CAAkD,CACnD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 9782, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9788, "column": 0}, "map": {"version":3,"file":"checkoutupdate.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/checkoutupdate.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  Address,\n  Address$inboundSchema,\n  Address$Outbound,\n  Address$outboundSchema,\n} from \"./address.js\";\n\nexport type CheckoutUpdateCustomFieldData = string | number | boolean | Date;\n\nexport type CheckoutUpdateMetadata = string | number | number | boolean;\n\nexport type CheckoutUpdateCustomerMetadata = string | number | number | boolean;\n\n/**\n * Update an existing checkout session using an access token.\n */\nexport type CheckoutUpdate = {\n  /**\n   * Key-value object storing custom field values.\n   */\n  customFieldData?:\n    | { [k: string]: string | number | boolean | Date | null }\n    | undefined;\n  /**\n   * ID of the product to checkout. Must be present in the checkout's product list.\n   */\n  productId?: string | null | undefined;\n  /**\n   * ID of the product price to checkout. Must correspond to a price present in the checkout's product list.\n   *\n   * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.\n   */\n  productPriceId?: string | null | undefined;\n  amount?: number | null | undefined;\n  isBusinessCustomer?: boolean | null | undefined;\n  customerName?: string | null | undefined;\n  customerEmail?: string | null | undefined;\n  customerBillingName?: string | null | undefined;\n  customerBillingAddress?: Address | null | undefined;\n  customerTaxId?: string | null | undefined;\n  /**\n   * Key-value object allowing you to store additional information.\n   *\n   * @remarks\n   *\n   * The key must be a string with a maximum length of **40 characters**.\n   * The value must be either:\n   *\n   * * A string with a maximum length of **500 characters**\n   * * An integer\n   * * A floating-point number\n   * * A boolean\n   *\n   * You can store up to **50 key-value pairs**.\n   */\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  /**\n   * ID of the discount to apply to the checkout.\n   */\n  discountId?: string | null | undefined;\n  /**\n   * Whether to allow the customer to apply discount codes. If you apply a discount through `discount_id`, it'll still be applied, but the customer won't be able to change it.\n   */\n  allowDiscountCodes?: boolean | null | undefined;\n  /**\n   * Whether to require the customer to fill their full billing address, instead of just the country. Customers in the US will always be required to fill their full address, regardless of this setting. If you preset the billing address, this setting will be automatically set to `true`.\n   */\n  requireBillingAddress?: boolean | null | undefined;\n  customerIpAddress?: string | null | undefined;\n  /**\n   * Key-value object allowing you to store additional information that'll be copied to the created customer.\n   *\n   * @remarks\n   *\n   * The key must be a string with a maximum length of **40 characters**.\n   * The value must be either:\n   *\n   * * A string with a maximum length of **500 characters**\n   * * An integer\n   * * A floating-point number\n   * * A boolean\n   *\n   * You can store up to **50 key-value pairs**.\n   */\n  customerMetadata?:\n    | { [k: string]: string | number | number | boolean }\n    | null\n    | undefined;\n  /**\n   * URL where the customer will be redirected after a successful payment.You can add the `checkout_id={CHECKOUT_ID}` query parameter to retrieve the checkout session id.\n   */\n  successUrl?: string | null | undefined;\n  /**\n   * If you plan to embed the checkout session, set this to the Origin of the embedding page. It'll allow the Polar iframe to communicate with the parent page.\n   */\n  embedOrigin?: string | null | undefined;\n};\n\n/** @internal */\nexport const CheckoutUpdateCustomFieldData$inboundSchema: z.ZodType<\n  CheckoutUpdateCustomFieldData,\n  z.ZodTypeDef,\n  unknown\n> = z.union([\n  z.string(),\n  z.number().int(),\n  z.boolean(),\n  z.string().datetime({ offset: true }).transform(v => new Date(v)),\n]);\n\n/** @internal */\nexport type CheckoutUpdateCustomFieldData$Outbound =\n  | string\n  | number\n  | boolean\n  | string;\n\n/** @internal */\nexport const CheckoutUpdateCustomFieldData$outboundSchema: z.ZodType<\n  CheckoutUpdateCustomFieldData$Outbound,\n  z.ZodTypeDef,\n  CheckoutUpdateCustomFieldData\n> = z.union([\n  z.string(),\n  z.number().int(),\n  z.boolean(),\n  z.date().transform(v => v.toISOString()),\n]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CheckoutUpdateCustomFieldData$ {\n  /** @deprecated use `CheckoutUpdateCustomFieldData$inboundSchema` instead. */\n  export const inboundSchema = CheckoutUpdateCustomFieldData$inboundSchema;\n  /** @deprecated use `CheckoutUpdateCustomFieldData$outboundSchema` instead. */\n  export const outboundSchema = CheckoutUpdateCustomFieldData$outboundSchema;\n  /** @deprecated use `CheckoutUpdateCustomFieldData$Outbound` instead. */\n  export type Outbound = CheckoutUpdateCustomFieldData$Outbound;\n}\n\nexport function checkoutUpdateCustomFieldDataToJSON(\n  checkoutUpdateCustomFieldData: CheckoutUpdateCustomFieldData,\n): string {\n  return JSON.stringify(\n    CheckoutUpdateCustomFieldData$outboundSchema.parse(\n      checkoutUpdateCustomFieldData,\n    ),\n  );\n}\n\nexport function checkoutUpdateCustomFieldDataFromJSON(\n  jsonString: string,\n): SafeParseResult<CheckoutUpdateCustomFieldData, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CheckoutUpdateCustomFieldData$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CheckoutUpdateCustomFieldData' from JSON`,\n  );\n}\n\n/** @internal */\nexport const CheckoutUpdateMetadata$inboundSchema: z.ZodType<\n  CheckoutUpdateMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type CheckoutUpdateMetadata$Outbound =\n  | string\n  | number\n  | number\n  | boolean;\n\n/** @internal */\nexport const CheckoutUpdateMetadata$outboundSchema: z.ZodType<\n  CheckoutUpdateMetadata$Outbound,\n  z.ZodTypeDef,\n  CheckoutUpdateMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CheckoutUpdateMetadata$ {\n  /** @deprecated use `CheckoutUpdateMetadata$inboundSchema` instead. */\n  export const inboundSchema = CheckoutUpdateMetadata$inboundSchema;\n  /** @deprecated use `CheckoutUpdateMetadata$outboundSchema` instead. */\n  export const outboundSchema = CheckoutUpdateMetadata$outboundSchema;\n  /** @deprecated use `CheckoutUpdateMetadata$Outbound` instead. */\n  export type Outbound = CheckoutUpdateMetadata$Outbound;\n}\n\nexport function checkoutUpdateMetadataToJSON(\n  checkoutUpdateMetadata: CheckoutUpdateMetadata,\n): string {\n  return JSON.stringify(\n    CheckoutUpdateMetadata$outboundSchema.parse(checkoutUpdateMetadata),\n  );\n}\n\nexport function checkoutUpdateMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<CheckoutUpdateMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CheckoutUpdateMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CheckoutUpdateMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const CheckoutUpdateCustomerMetadata$inboundSchema: z.ZodType<\n  CheckoutUpdateCustomerMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type CheckoutUpdateCustomerMetadata$Outbound =\n  | string\n  | number\n  | number\n  | boolean;\n\n/** @internal */\nexport const CheckoutUpdateCustomerMetadata$outboundSchema: z.ZodType<\n  CheckoutUpdateCustomerMetadata$Outbound,\n  z.ZodTypeDef,\n  CheckoutUpdateCustomerMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CheckoutUpdateCustomerMetadata$ {\n  /** @deprecated use `CheckoutUpdateCustomerMetadata$inboundSchema` instead. */\n  export const inboundSchema = CheckoutUpdateCustomerMetadata$inboundSchema;\n  /** @deprecated use `CheckoutUpdateCustomerMetadata$outboundSchema` instead. */\n  export const outboundSchema = CheckoutUpdateCustomerMetadata$outboundSchema;\n  /** @deprecated use `CheckoutUpdateCustomerMetadata$Outbound` instead. */\n  export type Outbound = CheckoutUpdateCustomerMetadata$Outbound;\n}\n\nexport function checkoutUpdateCustomerMetadataToJSON(\n  checkoutUpdateCustomerMetadata: CheckoutUpdateCustomerMetadata,\n): string {\n  return JSON.stringify(\n    CheckoutUpdateCustomerMetadata$outboundSchema.parse(\n      checkoutUpdateCustomerMetadata,\n    ),\n  );\n}\n\nexport function checkoutUpdateCustomerMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<CheckoutUpdateCustomerMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CheckoutUpdateCustomerMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CheckoutUpdateCustomerMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const CheckoutUpdate$inboundSchema: z.ZodType<\n  CheckoutUpdate,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  custom_field_data: z.record(\n    z.nullable(\n      z.union([\n        z.string(),\n        z.number().int(),\n        z.boolean(),\n        z.string().datetime({ offset: true }).transform(v => new Date(v)),\n      ]),\n    ),\n  ).optional(),\n  product_id: z.nullable(z.string()).optional(),\n  product_price_id: z.nullable(z.string()).optional(),\n  amount: z.nullable(z.number().int()).optional(),\n  is_business_customer: z.nullable(z.boolean()).optional(),\n  customer_name: z.nullable(z.string()).optional(),\n  customer_email: z.nullable(z.string()).optional(),\n  customer_billing_name: z.nullable(z.string()).optional(),\n  customer_billing_address: z.nullable(Address$inboundSchema).optional(),\n  customer_tax_id: z.nullable(z.string()).optional(),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  discount_id: z.nullable(z.string()).optional(),\n  allow_discount_codes: z.nullable(z.boolean()).optional(),\n  require_billing_address: z.nullable(z.boolean()).optional(),\n  customer_ip_address: z.nullable(z.string()).optional(),\n  customer_metadata: z.nullable(\n    z.record(z.union([z.string(), z.number().int(), z.number(), z.boolean()])),\n  ).optional(),\n  success_url: z.nullable(z.string()).optional(),\n  embed_origin: z.nullable(z.string()).optional(),\n}).transform((v) => {\n  return remap$(v, {\n    \"custom_field_data\": \"customFieldData\",\n    \"product_id\": \"productId\",\n    \"product_price_id\": \"productPriceId\",\n    \"is_business_customer\": \"isBusinessCustomer\",\n    \"customer_name\": \"customerName\",\n    \"customer_email\": \"customerEmail\",\n    \"customer_billing_name\": \"customerBillingName\",\n    \"customer_billing_address\": \"customerBillingAddress\",\n    \"customer_tax_id\": \"customerTaxId\",\n    \"discount_id\": \"discountId\",\n    \"allow_discount_codes\": \"allowDiscountCodes\",\n    \"require_billing_address\": \"requireBillingAddress\",\n    \"customer_ip_address\": \"customerIpAddress\",\n    \"customer_metadata\": \"customerMetadata\",\n    \"success_url\": \"successUrl\",\n    \"embed_origin\": \"embedOrigin\",\n  });\n});\n\n/** @internal */\nexport type CheckoutUpdate$Outbound = {\n  custom_field_data?:\n    | { [k: string]: string | number | boolean | string | null }\n    | undefined;\n  product_id?: string | null | undefined;\n  product_price_id?: string | null | undefined;\n  amount?: number | null | undefined;\n  is_business_customer?: boolean | null | undefined;\n  customer_name?: string | null | undefined;\n  customer_email?: string | null | undefined;\n  customer_billing_name?: string | null | undefined;\n  customer_billing_address?: Address$Outbound | null | undefined;\n  customer_tax_id?: string | null | undefined;\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  discount_id?: string | null | undefined;\n  allow_discount_codes?: boolean | null | undefined;\n  require_billing_address?: boolean | null | undefined;\n  customer_ip_address?: string | null | undefined;\n  customer_metadata?:\n    | { [k: string]: string | number | number | boolean }\n    | null\n    | undefined;\n  success_url?: string | null | undefined;\n  embed_origin?: string | null | undefined;\n};\n\n/** @internal */\nexport const CheckoutUpdate$outboundSchema: z.ZodType<\n  CheckoutUpdate$Outbound,\n  z.ZodTypeDef,\n  CheckoutUpdate\n> = z.object({\n  customFieldData: z.record(\n    z.nullable(\n      z.union([\n        z.string(),\n        z.number().int(),\n        z.boolean(),\n        z.date().transform(v => v.toISOString()),\n      ]),\n    ),\n  ).optional(),\n  productId: z.nullable(z.string()).optional(),\n  productPriceId: z.nullable(z.string()).optional(),\n  amount: z.nullable(z.number().int()).optional(),\n  isBusinessCustomer: z.nullable(z.boolean()).optional(),\n  customerName: z.nullable(z.string()).optional(),\n  customerEmail: z.nullable(z.string()).optional(),\n  customerBillingName: z.nullable(z.string()).optional(),\n  customerBillingAddress: z.nullable(Address$outboundSchema).optional(),\n  customerTaxId: z.nullable(z.string()).optional(),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  discountId: z.nullable(z.string()).optional(),\n  allowDiscountCodes: z.nullable(z.boolean()).optional(),\n  requireBillingAddress: z.nullable(z.boolean()).optional(),\n  customerIpAddress: z.nullable(z.string()).optional(),\n  customerMetadata: z.nullable(\n    z.record(z.union([z.string(), z.number().int(), z.number(), z.boolean()])),\n  ).optional(),\n  successUrl: z.nullable(z.string()).optional(),\n  embedOrigin: z.nullable(z.string()).optional(),\n}).transform((v) => {\n  return remap$(v, {\n    customFieldData: \"custom_field_data\",\n    productId: \"product_id\",\n    productPriceId: \"product_price_id\",\n    isBusinessCustomer: \"is_business_customer\",\n    customerName: \"customer_name\",\n    customerEmail: \"customer_email\",\n    customerBillingName: \"customer_billing_name\",\n    customerBillingAddress: \"customer_billing_address\",\n    customerTaxId: \"customer_tax_id\",\n    discountId: \"discount_id\",\n    allowDiscountCodes: \"allow_discount_codes\",\n    requireBillingAddress: \"require_billing_address\",\n    customerIpAddress: \"customer_ip_address\",\n    customerMetadata: \"customer_metadata\",\n    successUrl: \"success_url\",\n    embedOrigin: \"embed_origin\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CheckoutUpdate$ {\n  /** @deprecated use `CheckoutUpdate$inboundSchema` instead. */\n  export const inboundSchema = CheckoutUpdate$inboundSchema;\n  /** @deprecated use `CheckoutUpdate$outboundSchema` instead. */\n  export const outboundSchema = CheckoutUpdate$outboundSchema;\n  /** @deprecated use `CheckoutUpdate$Outbound` instead. */\n  export type Outbound = CheckoutUpdate$Outbound;\n}\n\nexport function checkoutUpdateToJSON(checkoutUpdate: CheckoutUpdate): string {\n  return JSON.stringify(CheckoutUpdate$outboundSchema.parse(checkoutUpdate));\n}\n\nexport function checkoutUpdateFromJSON(\n  jsonString: string,\n): SafeParseResult<CheckoutUpdate, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CheckoutUpdate$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CheckoutUpdate' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 10013, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10019, "column": 0}, "map": {"version":3,"file":"countaggregation.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/countaggregation.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport type CountAggregation = {\n  func?: \"count\" | undefined;\n};\n\n/** @internal */\nexport const CountAggregation$inboundSchema: z.ZodType<\n  CountAggregation,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  func: z.literal(\"count\").default(\"count\"),\n});\n\n/** @internal */\nexport type CountAggregation$Outbound = {\n  func: \"count\";\n};\n\n/** @internal */\nexport const CountAggregation$outboundSchema: z.ZodType<\n  CountAggregation$Outbound,\n  z.ZodTypeDef,\n  CountAggregation\n> = z.object({\n  func: z.literal(\"count\").default(\"count\" as const),\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CountAggregation$ {\n  /** @deprecated use `CountAggregation$inboundSchema` instead. */\n  export const inboundSchema = CountAggregation$inboundSchema;\n  /** @deprecated use `CountAggregation$outboundSchema` instead. */\n  export const outboundSchema = CountAggregation$outboundSchema;\n  /** @deprecated use `CountAggregation$Outbound` instead. */\n  export type Outbound = CountAggregation$Outbound;\n}\n\nexport function countAggregationToJSON(\n  countAggregation: CountAggregation,\n): string {\n  return JSON.stringify(\n    CountAggregation$outboundSchema.parse(countAggregation),\n  );\n}\n\nexport function countAggregationFromJSON(\n  jsonString: string,\n): SafeParseResult<CountAggregation, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CountAggregation$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CountAggregation' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;AAGH,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AADjD,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;;AAUlB,MAAM,8BAA8B,GAIvC,CAAC,6IAAC,MAAM,CAAC;IACX,IAAI,EAAE,CAAC,6IAAC,OAAO,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC;CAC1C,CAAC,CAAC;AAQI,MAAM,+BAA+B,GAIxC,CAAC,6IAAC,MAAM,CAAC;IACX,IAAI,EAAE,CAAC,6IAAC,OAAO,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,OAAgB,CAAC;CACnD,CAAC,CAAC;AAMG,IAAW,iBAAiB,CAOjC;AAPD,CAAA,SAAiB,iBAAiB;IAChC,8DAAA,EAAgE,CACnD,kBAAA,aAAa,GAAG,8BAA8B,CAAC;IAC5D,+DAAA,EAAiE,CACpD,kBAAA,cAAc,GAAG,+BAA+B,CAAC;AAGhE,CAAC,EAPgB,iBAAiB,IAAA,CAAjB,iBAAiB,GAAA,CAAA,CAAA,GAOjC;AAEK,SAAU,sBAAsB,CACpC,gBAAkC;IAElC,OAAO,IAAI,CAAC,SAAS,CACnB,+BAA+B,CAAC,KAAK,CAAC,gBAAgB,CAAC,CACxD,CAAC;AACJ,CAAC;AAEK,SAAU,wBAAwB,CACtC,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,6BAA+B,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC1D,CAAA,4CAAA,CAA8C,CAC/C,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 10050, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10056, "column": 0}, "map": {"version":3,"file":"filteroperator.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/filteroperator.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { ClosedEnum } from \"../../types/enums.js\";\n\nexport const FilterOperator = {\n  Eq: \"eq\",\n  Ne: \"ne\",\n  Gt: \"gt\",\n  Gte: \"gte\",\n  Lt: \"lt\",\n  Lte: \"lte\",\n  Like: \"like\",\n  NotLike: \"not_like\",\n} as const;\nexport type FilterOperator = ClosedEnum<typeof FilterOperator>;\n\n/** @internal */\nexport const FilterOperator$inboundSchema: z.ZodNativeEnum<\n  typeof FilterOperator\n> = z.nativeEnum(FilterOperator);\n\n/** @internal */\nexport const FilterOperator$outboundSchema: z.ZodNativeEnum<\n  typeof FilterOperator\n> = FilterOperator$inboundSchema;\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace FilterOperator$ {\n  /** @deprecated use `FilterOperator$inboundSchema` instead. */\n  export const inboundSchema = FilterOperator$inboundSchema;\n  /** @deprecated use `FilterOperator$outboundSchema` instead. */\n  export const outboundSchema = FilterOperator$outboundSchema;\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;AAGlB,MAAM,cAAc,GAAG;IAC5B,EAAE,EAAE,IAAI;IACR,EAAE,EAAE,IAAI;IACR,EAAE,EAAE,IAAI;IACR,GAAG,EAAE,KAAK;IACV,EAAE,EAAE,IAAI;IACR,GAAG,EAAE,KAAK;IACV,IAAI,EAAE,MAAM;IACZ,OAAO,EAAE,UAAU;CACX,CAAC;AAIJ,MAAM,4BAA4B,GAErC,CAAC,6IAAC,UAAU,CAAC,cAAc,CAAC,CAAC;AAG1B,MAAM,6BAA6B,GAEtC,4BAA4B,CAAC;AAM3B,IAAW,eAAe,CAK/B;AALD,CAAA,SAAiB,eAAe;IAC9B,4DAAA,EAA8D,CACjD,gBAAA,aAAa,GAAG,4BAA4B,CAAC;IAC1D,6DAAA,EAA+D,CAClD,gBAAA,cAAc,GAAG,6BAA6B,CAAC;AAC9D,CAAC,EALgB,eAAe,IAAA,CAAf,eAAe,GAAA,CAAA,CAAA,GAK/B","ignoreList":[0]}},
    {"offset": {"line": 10084, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10090, "column": 0}, "map": {"version":3,"file":"filterclause.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/filterclause.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  FilterOperator,\n  FilterOperator$inboundSchema,\n  FilterOperator$outboundSchema,\n} from \"./filteroperator.js\";\n\nexport type Value = string | number | boolean;\n\nexport type FilterClause = {\n  property: string;\n  operator: FilterOperator;\n  value: string | number | boolean;\n};\n\n/** @internal */\nexport const Value$inboundSchema: z.ZodType<Value, z.ZodTypeDef, unknown> = z\n  .union([z.string(), z.number().int(), z.boolean()]);\n\n/** @internal */\nexport type Value$Outbound = string | number | boolean;\n\n/** @internal */\nexport const Value$outboundSchema: z.ZodType<\n  Value$Outbound,\n  z.ZodTypeDef,\n  Value\n> = z.union([z.string(), z.number().int(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace Value$ {\n  /** @deprecated use `Value$inboundSchema` instead. */\n  export const inboundSchema = Value$inboundSchema;\n  /** @deprecated use `Value$outboundSchema` instead. */\n  export const outboundSchema = Value$outboundSchema;\n  /** @deprecated use `Value$Outbound` instead. */\n  export type Outbound = Value$Outbound;\n}\n\nexport function valueToJSON(value: Value): string {\n  return JSON.stringify(Value$outboundSchema.parse(value));\n}\n\nexport function valueFromJSON(\n  jsonString: string,\n): SafeParseResult<Value, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => Value$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'Value' from JSON`,\n  );\n}\n\n/** @internal */\nexport const FilterClause$inboundSchema: z.ZodType<\n  FilterClause,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  property: z.string(),\n  operator: FilterOperator$inboundSchema,\n  value: z.union([z.string(), z.number().int(), z.boolean()]),\n});\n\n/** @internal */\nexport type FilterClause$Outbound = {\n  property: string;\n  operator: string;\n  value: string | number | boolean;\n};\n\n/** @internal */\nexport const FilterClause$outboundSchema: z.ZodType<\n  FilterClause$Outbound,\n  z.ZodTypeDef,\n  FilterClause\n> = z.object({\n  property: z.string(),\n  operator: FilterOperator$outboundSchema,\n  value: z.union([z.string(), z.number().int(), z.boolean()]),\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace FilterClause$ {\n  /** @deprecated use `FilterClause$inboundSchema` instead. */\n  export const inboundSchema = FilterClause$inboundSchema;\n  /** @deprecated use `FilterClause$outboundSchema` instead. */\n  export const outboundSchema = FilterClause$outboundSchema;\n  /** @deprecated use `FilterClause$Outbound` instead. */\n  export type Outbound = FilterClause$Outbound;\n}\n\nexport function filterClauseToJSON(filterClause: FilterClause): string {\n  return JSON.stringify(FilterClause$outboundSchema.parse(filterClause));\n}\n\nexport function filterClauseFromJSON(\n  jsonString: string,\n): SafeParseResult<FilterClause, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => FilterClause$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'FilterClause' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,4BAA4B,EAC5B,6BAA6B,GAC9B,MAAM,qBAAqB,CAAC;;;;;AAWtB,MAAM,mBAAmB,GAA4C,CAAC,6IAC1E,KAAK,CAAC;IAAC,CAAC,6IAAC,MAAM,EAAE;IAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAAE,CAAC,6IAAC,OAAO,EAAE;CAAC,CAAC,CAAC;AAM/C,MAAM,oBAAoB,GAI7B,CAAC,6IAAC,KAAK,CAAC;IAAC,CAAC,6IAAC,MAAM,EAAE;IAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAAE,CAAC,6IAAC,OAAO,EAAE;CAAC,CAAC,CAAC;AAMnD,IAAW,MAAM,CAOtB;AAPD,CAAA,SAAiB,MAAM;IACrB,mDAAA,EAAqD,CACxC,OAAA,aAAa,GAAG,mBAAmB,CAAC;IACjD,oDAAA,EAAsD,CACzC,OAAA,cAAc,GAAG,oBAAoB,CAAC;AAGrD,CAAC,EAPgB,MAAM,IAAA,CAAN,MAAM,GAAA,CAAA,CAAA,GAOtB;AAEK,SAAU,WAAW,CAAC,KAAY;IACtC,OAAO,IAAI,CAAC,SAAS,CAAC,oBAAoB,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;AAC3D,CAAC;AAEK,SAAU,aAAa,CAC3B,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,kBAAoB,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC/C,CAAA,iCAAA,CAAmC,CACpC,CAAC;AACJ,CAAC;AAGM,MAAM,0BAA0B,GAInC,CAAC,6IAAC,MAAM,CAAC;IACX,QAAQ,EAAE,CAAC,6IAAC,MAAM,EAAE;IACpB,QAAQ,kMAAE,+BAA4B;IACtC,KAAK,EAAE,CAAC,6IAAC,KAAK,CAAC;QAAC,CAAC,6IAAC,MAAM,EAAE;QAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;QAAE,CAAC,6IAAC,OAAO,EAAE;KAAC,CAAC;CAC5D,CAAC,CAAC;AAUI,MAAM,2BAA2B,GAIpC,CAAC,6IAAC,MAAM,CAAC;IACX,QAAQ,EAAE,CAAC,6IAAC,MAAM,EAAE;IACpB,QAAQ,kMAAE,gCAA6B;IACvC,KAAK,EAAE,CAAC,6IAAC,KAAK,CAAC;QAAC,CAAC,6IAAC,MAAM,EAAE;QAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;QAAE,CAAC,6IAAC,OAAO,EAAE;KAAC,CAAC;CAC5D,CAAC,CAAC;AAMG,IAAW,aAAa,CAO7B;AAPD,CAAA,SAAiB,aAAa;IAC5B,0DAAA,EAA4D,CAC/C,cAAA,aAAa,GAAG,0BAA0B,CAAC;IACxD,2DAAA,EAA6D,CAChD,cAAA,cAAc,GAAG,2BAA2B,CAAC;AAG5D,CAAC,EAPgB,aAAa,IAAA,CAAb,aAAa,GAAA,CAAA,CAAA,GAO7B;AAEK,SAAU,kBAAkB,CAAC,YAA0B;IAC3D,OAAO,IAAI,CAAC,SAAS,CAAC,2BAA2B,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC;AACzE,CAAC;AAEK,SAAU,oBAAoB,CAClC,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,yBAA2B,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACtD,CAAA,wCAAA,CAA0C,CAC3C,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 10161, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10167, "column": 0}, "map": {"version":3,"file":"filterconjunction.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/filterconjunction.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { ClosedEnum } from \"../../types/enums.js\";\n\nexport const FilterConjunction = {\n  And: \"and\",\n  Or: \"or\",\n} as const;\nexport type FilterConjunction = ClosedEnum<typeof FilterConjunction>;\n\n/** @internal */\nexport const FilterConjunction$inboundSchema: z.ZodNativeEnum<\n  typeof FilterConjunction\n> = z.nativeEnum(FilterConjunction);\n\n/** @internal */\nexport const FilterConjunction$outboundSchema: z.ZodNativeEnum<\n  typeof FilterConjunction\n> = FilterConjunction$inboundSchema;\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace FilterConjunction$ {\n  /** @deprecated use `FilterConjunction$inboundSchema` instead. */\n  export const inboundSchema = FilterConjunction$inboundSchema;\n  /** @deprecated use `FilterConjunction$outboundSchema` instead. */\n  export const outboundSchema = FilterConjunction$outboundSchema;\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;AAGlB,MAAM,iBAAiB,GAAG;IAC/B,GAAG,EAAE,KAAK;IACV,EAAE,EAAE,IAAI;CACA,CAAC;AAIJ,MAAM,+BAA+B,GAExC,CAAC,6IAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC;AAG7B,MAAM,gCAAgC,GAEzC,+BAA+B,CAAC;AAM9B,IAAW,kBAAkB,CAKlC;AALD,CAAA,SAAiB,kBAAkB;IACjC,+DAAA,EAAiE,CACpD,mBAAA,aAAa,GAAG,+BAA+B,CAAC;IAC7D,gEAAA,EAAkE,CACrD,mBAAA,cAAc,GAAG,gCAAgC,CAAC;AACjE,CAAC,EALgB,kBAAkB,IAAA,CAAlB,kBAAkB,GAAA,CAAA,CAAA,GAKlC","ignoreList":[0]}},
    {"offset": {"line": 10189, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10195, "column": 0}, "map": {"version":3,"file":"filter.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/filter.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  FilterClause,\n  FilterClause$inboundSchema,\n  FilterClause$Outbound,\n  FilterClause$outboundSchema,\n} from \"./filterclause.js\";\nimport {\n  FilterConjunction,\n  FilterConjunction$inboundSchema,\n  FilterConjunction$outboundSchema,\n} from \"./filterconjunction.js\";\n\nexport type Clauses = Filter | FilterClause;\n\nexport type Filter = {\n  conjunction: FilterConjunction;\n  clauses: Array<Filter | FilterClause>;\n};\n\n/** @internal */\nexport const Clauses$inboundSchema: z.ZodType<Clauses, z.ZodTypeDef, unknown> =\n  z.union([z.lazy(() => Filter$inboundSchema), FilterClause$inboundSchema]);\n\n/** @internal */\nexport type Clauses$Outbound = Filter$Outbound | FilterClause$Outbound;\n\n/** @internal */\nexport const Clauses$outboundSchema: z.ZodType<\n  Clauses$Outbound,\n  z.ZodTypeDef,\n  Clauses\n> = z.union([z.lazy(() => Filter$outboundSchema), FilterClause$outboundSchema]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace Clauses$ {\n  /** @deprecated use `Clauses$inboundSchema` instead. */\n  export const inboundSchema = Clauses$inboundSchema;\n  /** @deprecated use `Clauses$outboundSchema` instead. */\n  export const outboundSchema = Clauses$outboundSchema;\n  /** @deprecated use `Clauses$Outbound` instead. */\n  export type Outbound = Clauses$Outbound;\n}\n\nexport function clausesToJSON(clauses: Clauses): string {\n  return JSON.stringify(Clauses$outboundSchema.parse(clauses));\n}\n\nexport function clausesFromJSON(\n  jsonString: string,\n): SafeParseResult<Clauses, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => Clauses$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'Clauses' from JSON`,\n  );\n}\n\n/** @internal */\nexport const Filter$inboundSchema: z.ZodType<Filter, z.ZodTypeDef, unknown> = z\n  .object({\n    conjunction: FilterConjunction$inboundSchema,\n    clauses: z.array(\n      z.union([z.lazy(() => Filter$inboundSchema), FilterClause$inboundSchema]),\n    ),\n  });\n\n/** @internal */\nexport type Filter$Outbound = {\n  conjunction: string;\n  clauses: Array<Filter$Outbound | FilterClause$Outbound>;\n};\n\n/** @internal */\nexport const Filter$outboundSchema: z.ZodType<\n  Filter$Outbound,\n  z.ZodTypeDef,\n  Filter\n> = z.object({\n  conjunction: FilterConjunction$outboundSchema,\n  clauses: z.array(\n    z.union([z.lazy(() => Filter$outboundSchema), FilterClause$outboundSchema]),\n  ),\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace Filter$ {\n  /** @deprecated use `Filter$inboundSchema` instead. */\n  export const inboundSchema = Filter$inboundSchema;\n  /** @deprecated use `Filter$outboundSchema` instead. */\n  export const outboundSchema = Filter$outboundSchema;\n  /** @deprecated use `Filter$Outbound` instead. */\n  export type Outbound = Filter$Outbound;\n}\n\nexport function filterToJSON(filter: Filter): string {\n  return JSON.stringify(Filter$outboundSchema.parse(filter));\n}\n\nexport function filterFromJSON(\n  jsonString: string,\n): SafeParseResult<Filter, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => Filter$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'Filter' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,0BAA0B,EAE1B,2BAA2B,GAC5B,MAAM,mBAAmB,CAAC;AAC3B,OAAO,EAEL,+BAA+B,EAC/B,gCAAgC,GACjC,MAAM,wBAAwB,CAAC;;;;;;AAUzB,MAAM,qBAAqB,GAChC,CAAC,6IAAC,KAAK,CAAC;IAAC,CAAC,6IAAC,IAAI,CAAC,GAAG,CAAG,CAAD,mBAAqB,CAAC;kMAAE,6BAA0B;CAAC,CAAC,CAAC;AAMrE,MAAM,sBAAsB,GAI/B,CAAC,6IAAC,KAAK,CAAC;IAAC,CAAC,6IAAC,IAAI,CAAC,GAAG,CAAG,CAAD,oBAAsB,CAAC;kMAAE,8BAA2B;CAAC,CAAC,CAAC;AAM1E,IAAW,QAAQ,CAOxB;AAPD,CAAA,SAAiB,QAAQ;IACvB,qDAAA,EAAuD,CAC1C,SAAA,aAAa,GAAG,qBAAqB,CAAC;IACnD,sDAAA,EAAwD,CAC3C,SAAA,cAAc,GAAG,sBAAsB,CAAC;AAGvD,CAAC,EAPgB,QAAQ,IAAA,CAAR,QAAQ,GAAA,CAAA,CAAA,GAOxB;AAEK,SAAU,aAAa,CAAC,OAAgB;IAC5C,OAAO,IAAI,CAAC,SAAS,CAAC,sBAAsB,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;AAC/D,CAAC;AAEK,SAAU,eAAe,CAC7B,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,oBAAsB,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACjD,CAAA,mCAAA,CAAqC,CACtC,CAAC;AACJ,CAAC;AAGM,MAAM,oBAAoB,GAA6C,CAAC,6IAC5E,MAAM,CAAC;IACN,WAAW,qMAAE,kCAA+B;IAC5C,OAAO,EAAE,CAAC,6IAAC,KAAK,CACd,CAAC,6IAAC,KAAK,CAAC;QAAC,CAAC,6IAAC,IAAI,CAAC,GAAG,CAAG,CAAD,mBAAqB,CAAC;QAAE,2NAA0B;KAAC,CAAC,CAC1E;CACF,CAAC,CAAC;AASE,MAAM,qBAAqB,GAI9B,CAAC,6IAAC,MAAM,CAAC;IACX,WAAW,qMAAE,mCAAgC;IAC7C,OAAO,EAAE,CAAC,6IAAC,KAAK,CACd,CAAC,6IAAC,KAAK,CAAC;QAAC,CAAC,6IAAC,IAAI,CAAC,GAAG,CAAG,CAAD,oBAAsB,CAAC;QAAE,4NAA2B;KAAC,CAAC,CAC5E;CACF,CAAC,CAAC;AAMG,IAAW,OAAO,CAOvB;AAPD,CAAA,SAAiB,OAAO;IACtB,oDAAA,EAAsD,CACzC,QAAA,aAAa,GAAG,oBAAoB,CAAC;IAClD,qDAAA,EAAuD,CAC1C,QAAA,cAAc,GAAG,qBAAqB,CAAC;AAGtD,CAAC,EAPgB,OAAO,IAAA,CAAP,OAAO,GAAA,CAAA,CAAA,GAOvB;AAEK,SAAU,YAAY,CAAC,MAAc;IACzC,OAAO,IAAI,CAAC,SAAS,CAAC,qBAAqB,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;AAC7D,CAAC;AAEK,SAAU,cAAc,CAC5B,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,mBAAqB,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAChD,CAAA,kCAAA,CAAoC,CACrC,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 10262, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10268, "column": 0}, "map": {"version":3,"file":"propertyaggregation.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/propertyaggregation.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { ClosedEnum } from \"../../types/enums.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport const Func = {\n  Sum: \"sum\",\n  Max: \"max\",\n  Min: \"min\",\n  Avg: \"avg\",\n} as const;\nexport type Func = ClosedEnum<typeof Func>;\n\nexport type PropertyAggregation = {\n  func: Func;\n  property: string;\n};\n\n/** @internal */\nexport const Func$inboundSchema: z.ZodNativeEnum<typeof Func> = z.nativeEnum(\n  Func,\n);\n\n/** @internal */\nexport const Func$outboundSchema: z.ZodNativeEnum<typeof Func> =\n  Func$inboundSchema;\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace Func$ {\n  /** @deprecated use `Func$inboundSchema` instead. */\n  export const inboundSchema = Func$inboundSchema;\n  /** @deprecated use `Func$outboundSchema` instead. */\n  export const outboundSchema = Func$outboundSchema;\n}\n\n/** @internal */\nexport const PropertyAggregation$inboundSchema: z.ZodType<\n  PropertyAggregation,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  func: Func$inboundSchema,\n  property: z.string(),\n});\n\n/** @internal */\nexport type PropertyAggregation$Outbound = {\n  func: string;\n  property: string;\n};\n\n/** @internal */\nexport const PropertyAggregation$outboundSchema: z.ZodType<\n  PropertyAggregation$Outbound,\n  z.ZodTypeDef,\n  PropertyAggregation\n> = z.object({\n  func: Func$outboundSchema,\n  property: z.string(),\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace PropertyAggregation$ {\n  /** @deprecated use `PropertyAggregation$inboundSchema` instead. */\n  export const inboundSchema = PropertyAggregation$inboundSchema;\n  /** @deprecated use `PropertyAggregation$outboundSchema` instead. */\n  export const outboundSchema = PropertyAggregation$outboundSchema;\n  /** @deprecated use `PropertyAggregation$Outbound` instead. */\n  export type Outbound = PropertyAggregation$Outbound;\n}\n\nexport function propertyAggregationToJSON(\n  propertyAggregation: PropertyAggregation,\n): string {\n  return JSON.stringify(\n    PropertyAggregation$outboundSchema.parse(propertyAggregation),\n  );\n}\n\nexport function propertyAggregationFromJSON(\n  jsonString: string,\n): SafeParseResult<PropertyAggregation, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => PropertyAggregation$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'PropertyAggregation' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;;;;AAK1C,MAAM,IAAI,GAAG;IAClB,GAAG,EAAE,KAAK;IACV,GAAG,EAAE,KAAK;IACV,GAAG,EAAE,KAAK;IACV,GAAG,EAAE,KAAK;CACF,CAAC;AASJ,MAAM,kBAAkB,GAAiC,CAAC,6IAAC,UAAU,CAC1E,IAAI,CACL,CAAC;AAGK,MAAM,mBAAmB,GAC9B,kBAAkB,CAAC;AAMf,IAAW,KAAK,CAKrB;AALD,CAAA,SAAiB,KAAK;IACpB,kDAAA,EAAoD,CACvC,MAAA,aAAa,GAAG,kBAAkB,CAAC;IAChD,mDAAA,EAAqD,CACxC,MAAA,cAAc,GAAG,mBAAmB,CAAC;AACpD,CAAC,EALgB,KAAK,IAAA,CAAL,KAAK,GAAA,CAAA,CAAA,GAKrB;AAGM,MAAM,iCAAiC,GAI1C,CAAC,6IAAC,MAAM,CAAC;IACX,IAAI,EAAE,kBAAkB;IACxB,QAAQ,EAAE,CAAC,6IAAC,MAAM,EAAE;CACrB,CAAC,CAAC;AASI,MAAM,kCAAkC,GAI3C,CAAC,6IAAC,MAAM,CAAC;IACX,IAAI,EAAE,mBAAmB;IACzB,QAAQ,EAAE,CAAC,6IAAC,MAAM,EAAE;CACrB,CAAC,CAAC;AAMG,IAAW,oBAAoB,CAOpC;AAPD,CAAA,SAAiB,oBAAoB;IACnC,iEAAA,EAAmE,CACtD,qBAAA,aAAa,GAAG,iCAAiC,CAAC;IAC/D,kEAAA,EAAoE,CACvD,qBAAA,cAAc,GAAG,kCAAkC,CAAC;AAGnE,CAAC,EAPgB,oBAAoB,IAAA,CAApB,oBAAoB,GAAA,CAAA,CAAA,GAOpC;AAEK,SAAU,yBAAyB,CACvC,mBAAwC;IAExC,OAAO,IAAI,CAAC,SAAS,CACnB,kCAAkC,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAC9D,CAAC;AACJ,CAAC;AAEK,SAAU,2BAA2B,CACzC,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,gCAAkC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC7D,CAAA,+CAAA,CAAiD,CAClD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 10318, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10324, "column": 0}, "map": {"version":3,"file":"meter.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/meter.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  CountAggregation,\n  CountAggregation$inboundSchema,\n  CountAggregation$Outbound,\n  CountAggregation$outboundSchema,\n} from \"./countaggregation.js\";\nimport {\n  Filter,\n  Filter$inboundSchema,\n  Filter$Outbound,\n  Filter$outboundSchema,\n} from \"./filter.js\";\nimport {\n  PropertyAggregation,\n  PropertyAggregation$inboundSchema,\n  PropertyAggregation$Outbound,\n  PropertyAggregation$outboundSchema,\n} from \"./propertyaggregation.js\";\n\nexport type MeterMetadata = string | number | number | boolean;\n\n/**\n * The aggregation to apply on the filtered events to calculate the meter.\n */\nexport type MeterAggregation =\n  | (CountAggregation & { func: \"count\" })\n  | (PropertyAggregation & { func: \"avg\" })\n  | (PropertyAggregation & { func: \"max\" })\n  | (PropertyAggregation & { func: \"min\" })\n  | (PropertyAggregation & { func: \"sum\" });\n\nexport type Meter = {\n  metadata: { [k: string]: string | number | number | boolean };\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  /**\n   * The ID of the object.\n   */\n  id: string;\n  /**\n   * The name of the meter. Will be shown on customer's invoices and usage.\n   */\n  name: string;\n  filter: Filter;\n  /**\n   * The aggregation to apply on the filtered events to calculate the meter.\n   */\n  aggregation:\n    | (CountAggregation & { func: \"count\" })\n    | (PropertyAggregation & { func: \"avg\" })\n    | (PropertyAggregation & { func: \"max\" })\n    | (PropertyAggregation & { func: \"min\" })\n    | (PropertyAggregation & { func: \"sum\" });\n  /**\n   * The ID of the organization owning the meter.\n   */\n  organizationId: string;\n};\n\n/** @internal */\nexport const MeterMetadata$inboundSchema: z.ZodType<\n  MeterMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type MeterMetadata$Outbound = string | number | number | boolean;\n\n/** @internal */\nexport const MeterMetadata$outboundSchema: z.ZodType<\n  MeterMetadata$Outbound,\n  z.ZodTypeDef,\n  MeterMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace MeterMetadata$ {\n  /** @deprecated use `MeterMetadata$inboundSchema` instead. */\n  export const inboundSchema = MeterMetadata$inboundSchema;\n  /** @deprecated use `MeterMetadata$outboundSchema` instead. */\n  export const outboundSchema = MeterMetadata$outboundSchema;\n  /** @deprecated use `MeterMetadata$Outbound` instead. */\n  export type Outbound = MeterMetadata$Outbound;\n}\n\nexport function meterMetadataToJSON(meterMetadata: MeterMetadata): string {\n  return JSON.stringify(MeterMetadata$outboundSchema.parse(meterMetadata));\n}\n\nexport function meterMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<MeterMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => MeterMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'MeterMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const MeterAggregation$inboundSchema: z.ZodType<\n  MeterAggregation,\n  z.ZodTypeDef,\n  unknown\n> = z.union([\n  CountAggregation$inboundSchema.and(\n    z.object({ func: z.literal(\"count\") }).transform((v) => ({ func: v.func })),\n  ),\n  PropertyAggregation$inboundSchema.and(\n    z.object({ func: z.literal(\"avg\") }).transform((v) => ({ func: v.func })),\n  ),\n  PropertyAggregation$inboundSchema.and(\n    z.object({ func: z.literal(\"max\") }).transform((v) => ({ func: v.func })),\n  ),\n  PropertyAggregation$inboundSchema.and(\n    z.object({ func: z.literal(\"min\") }).transform((v) => ({ func: v.func })),\n  ),\n  PropertyAggregation$inboundSchema.and(\n    z.object({ func: z.literal(\"sum\") }).transform((v) => ({ func: v.func })),\n  ),\n]);\n\n/** @internal */\nexport type MeterAggregation$Outbound =\n  | (CountAggregation$Outbound & { func: \"count\" })\n  | (PropertyAggregation$Outbound & { func: \"avg\" })\n  | (PropertyAggregation$Outbound & { func: \"max\" })\n  | (PropertyAggregation$Outbound & { func: \"min\" })\n  | (PropertyAggregation$Outbound & { func: \"sum\" });\n\n/** @internal */\nexport const MeterAggregation$outboundSchema: z.ZodType<\n  MeterAggregation$Outbound,\n  z.ZodTypeDef,\n  MeterAggregation\n> = z.union([\n  CountAggregation$outboundSchema.and(\n    z.object({ func: z.literal(\"count\") }).transform((v) => ({ func: v.func })),\n  ),\n  PropertyAggregation$outboundSchema.and(\n    z.object({ func: z.literal(\"avg\") }).transform((v) => ({ func: v.func })),\n  ),\n  PropertyAggregation$outboundSchema.and(\n    z.object({ func: z.literal(\"max\") }).transform((v) => ({ func: v.func })),\n  ),\n  PropertyAggregation$outboundSchema.and(\n    z.object({ func: z.literal(\"min\") }).transform((v) => ({ func: v.func })),\n  ),\n  PropertyAggregation$outboundSchema.and(\n    z.object({ func: z.literal(\"sum\") }).transform((v) => ({ func: v.func })),\n  ),\n]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace MeterAggregation$ {\n  /** @deprecated use `MeterAggregation$inboundSchema` instead. */\n  export const inboundSchema = MeterAggregation$inboundSchema;\n  /** @deprecated use `MeterAggregation$outboundSchema` instead. */\n  export const outboundSchema = MeterAggregation$outboundSchema;\n  /** @deprecated use `MeterAggregation$Outbound` instead. */\n  export type Outbound = MeterAggregation$Outbound;\n}\n\nexport function meterAggregationToJSON(\n  meterAggregation: MeterAggregation,\n): string {\n  return JSON.stringify(\n    MeterAggregation$outboundSchema.parse(meterAggregation),\n  );\n}\n\nexport function meterAggregationFromJSON(\n  jsonString: string,\n): SafeParseResult<MeterAggregation, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => MeterAggregation$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'MeterAggregation' from JSON`,\n  );\n}\n\n/** @internal */\nexport const Meter$inboundSchema: z.ZodType<Meter, z.ZodTypeDef, unknown> = z\n  .object({\n    metadata: z.record(\n      z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n    ),\n    created_at: z.string().datetime({ offset: true }).transform(v =>\n      new Date(v)\n    ),\n    modified_at: z.nullable(\n      z.string().datetime({ offset: true }).transform(v => new Date(v)),\n    ),\n    id: z.string(),\n    name: z.string(),\n    filter: Filter$inboundSchema,\n    aggregation: z.union([\n      CountAggregation$inboundSchema.and(\n        z.object({ func: z.literal(\"count\") }).transform((v) => ({\n          func: v.func,\n        })),\n      ),\n      PropertyAggregation$inboundSchema.and(\n        z.object({ func: z.literal(\"avg\") }).transform((v) => ({\n          func: v.func,\n        })),\n      ),\n      PropertyAggregation$inboundSchema.and(\n        z.object({ func: z.literal(\"max\") }).transform((v) => ({\n          func: v.func,\n        })),\n      ),\n      PropertyAggregation$inboundSchema.and(\n        z.object({ func: z.literal(\"min\") }).transform((v) => ({\n          func: v.func,\n        })),\n      ),\n      PropertyAggregation$inboundSchema.and(\n        z.object({ func: z.literal(\"sum\") }).transform((v) => ({\n          func: v.func,\n        })),\n      ),\n    ]),\n    organization_id: z.string(),\n  }).transform((v) => {\n    return remap$(v, {\n      \"created_at\": \"createdAt\",\n      \"modified_at\": \"modifiedAt\",\n      \"organization_id\": \"organizationId\",\n    });\n  });\n\n/** @internal */\nexport type Meter$Outbound = {\n  metadata: { [k: string]: string | number | number | boolean };\n  created_at: string;\n  modified_at: string | null;\n  id: string;\n  name: string;\n  filter: Filter$Outbound;\n  aggregation:\n    | (CountAggregation$Outbound & { func: \"count\" })\n    | (PropertyAggregation$Outbound & { func: \"avg\" })\n    | (PropertyAggregation$Outbound & { func: \"max\" })\n    | (PropertyAggregation$Outbound & { func: \"min\" })\n    | (PropertyAggregation$Outbound & { func: \"sum\" });\n  organization_id: string;\n};\n\n/** @internal */\nexport const Meter$outboundSchema: z.ZodType<\n  Meter$Outbound,\n  z.ZodTypeDef,\n  Meter\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  id: z.string(),\n  name: z.string(),\n  filter: Filter$outboundSchema,\n  aggregation: z.union([\n    CountAggregation$outboundSchema.and(\n      z.object({ func: z.literal(\"count\") }).transform((v) => ({\n        func: v.func,\n      })),\n    ),\n    PropertyAggregation$outboundSchema.and(\n      z.object({ func: z.literal(\"avg\") }).transform((v) => ({ func: v.func })),\n    ),\n    PropertyAggregation$outboundSchema.and(\n      z.object({ func: z.literal(\"max\") }).transform((v) => ({ func: v.func })),\n    ),\n    PropertyAggregation$outboundSchema.and(\n      z.object({ func: z.literal(\"min\") }).transform((v) => ({ func: v.func })),\n    ),\n    PropertyAggregation$outboundSchema.and(\n      z.object({ func: z.literal(\"sum\") }).transform((v) => ({ func: v.func })),\n    ),\n  ]),\n  organizationId: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    organizationId: \"organization_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace Meter$ {\n  /** @deprecated use `Meter$inboundSchema` instead. */\n  export const inboundSchema = Meter$inboundSchema;\n  /** @deprecated use `Meter$outboundSchema` instead. */\n  export const outboundSchema = Meter$outboundSchema;\n  /** @deprecated use `Meter$Outbound` instead. */\n  export type Outbound = Meter$Outbound;\n}\n\nexport function meterToJSON(meter: Meter): string {\n  return JSON.stringify(Meter$outboundSchema.parse(meter));\n}\n\nexport function meterFromJSON(\n  jsonString: string,\n): SafeParseResult<Meter, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => Meter$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'Meter' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 10553, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10559, "column": 0}, "map": {"version":3,"file":"customermeter.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customermeter.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  Customer,\n  Customer$inboundSchema,\n  Customer$Outbound,\n  Customer$outboundSchema,\n} from \"./customer.js\";\nimport {\n  Meter,\n  Meter$inboundSchema,\n  Meter$Outbound,\n  Meter$outboundSchema,\n} from \"./meter.js\";\n\n/**\n * An active customer meter, with current consumed and credited units.\n */\nexport type CustomerMeter = {\n  /**\n   * The ID of the object.\n   */\n  id: string;\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  /**\n   * The ID of the customer.\n   */\n  customerId: string;\n  /**\n   * The ID of the meter.\n   */\n  meterId: string;\n  /**\n   * The number of consumed units.\n   */\n  consumedUnits: number;\n  /**\n   * The number of credited units.\n   */\n  creditedUnits: number;\n  /**\n   * The balance of the meter, i.e. the difference between credited and consumed units.\n   */\n  balance: number;\n  /**\n   * A customer in an organization.\n   */\n  customer: Customer;\n  meter: Meter;\n};\n\n/** @internal */\nexport const CustomerMeter$inboundSchema: z.ZodType<\n  CustomerMeter,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  id: z.string(),\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  customer_id: z.string(),\n  meter_id: z.string(),\n  consumed_units: z.number(),\n  credited_units: z.number().int(),\n  balance: z.number(),\n  customer: Customer$inboundSchema,\n  meter: Meter$inboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"customer_id\": \"customerId\",\n    \"meter_id\": \"meterId\",\n    \"consumed_units\": \"consumedUnits\",\n    \"credited_units\": \"creditedUnits\",\n  });\n});\n\n/** @internal */\nexport type CustomerMeter$Outbound = {\n  id: string;\n  created_at: string;\n  modified_at: string | null;\n  customer_id: string;\n  meter_id: string;\n  consumed_units: number;\n  credited_units: number;\n  balance: number;\n  customer: Customer$Outbound;\n  meter: Meter$Outbound;\n};\n\n/** @internal */\nexport const CustomerMeter$outboundSchema: z.ZodType<\n  CustomerMeter$Outbound,\n  z.ZodTypeDef,\n  CustomerMeter\n> = z.object({\n  id: z.string(),\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  customerId: z.string(),\n  meterId: z.string(),\n  consumedUnits: z.number(),\n  creditedUnits: z.number().int(),\n  balance: z.number(),\n  customer: Customer$outboundSchema,\n  meter: Meter$outboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    customerId: \"customer_id\",\n    meterId: \"meter_id\",\n    consumedUnits: \"consumed_units\",\n    creditedUnits: \"credited_units\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomerMeter$ {\n  /** @deprecated use `CustomerMeter$inboundSchema` instead. */\n  export const inboundSchema = CustomerMeter$inboundSchema;\n  /** @deprecated use `CustomerMeter$outboundSchema` instead. */\n  export const outboundSchema = CustomerMeter$outboundSchema;\n  /** @deprecated use `CustomerMeter$Outbound` instead. */\n  export type Outbound = CustomerMeter$Outbound;\n}\n\nexport function customerMeterToJSON(customerMeter: CustomerMeter): string {\n  return JSON.stringify(CustomerMeter$outboundSchema.parse(customerMeter));\n}\n\nexport function customerMeterFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomerMeter, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomerMeter$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomerMeter' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 10636, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10642, "column": 0}, "map": {"version":3,"file":"customermetersortproperty.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customermetersortproperty.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { ClosedEnum } from \"../../types/enums.js\";\n\nexport const CustomerMeterSortProperty = {\n  CreatedAt: \"created_at\",\n  MinusCreatedAt: \"-created_at\",\n  ModifiedAt: \"modified_at\",\n  MinusModifiedAt: \"-modified_at\",\n  CustomerId: \"customer_id\",\n  MinusCustomerId: \"-customer_id\",\n  CustomerName: \"customer_name\",\n  MinusCustomerName: \"-customer_name\",\n  MeterId: \"meter_id\",\n  MinusMeterId: \"-meter_id\",\n  MeterName: \"meter_name\",\n  MinusMeterName: \"-meter_name\",\n  ConsumedUnits: \"consumed_units\",\n  MinusConsumedUnits: \"-consumed_units\",\n  CreditedUnits: \"credited_units\",\n  MinusCreditedUnits: \"-credited_units\",\n  Balance: \"balance\",\n  MinusBalance: \"-balance\",\n} as const;\nexport type CustomerMeterSortProperty = ClosedEnum<\n  typeof CustomerMeterSortProperty\n>;\n\n/** @internal */\nexport const CustomerMeterSortProperty$inboundSchema: z.ZodNativeEnum<\n  typeof CustomerMeterSortProperty\n> = z.nativeEnum(CustomerMeterSortProperty);\n\n/** @internal */\nexport const CustomerMeterSortProperty$outboundSchema: z.ZodNativeEnum<\n  typeof CustomerMeterSortProperty\n> = CustomerMeterSortProperty$inboundSchema;\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomerMeterSortProperty$ {\n  /** @deprecated use `CustomerMeterSortProperty$inboundSchema` instead. */\n  export const inboundSchema = CustomerMeterSortProperty$inboundSchema;\n  /** @deprecated use `CustomerMeterSortProperty$outboundSchema` instead. */\n  export const outboundSchema = CustomerMeterSortProperty$outboundSchema;\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;AAGlB,MAAM,yBAAyB,GAAG;IACvC,SAAS,EAAE,YAAY;IACvB,cAAc,EAAE,aAAa;IAC7B,UAAU,EAAE,aAAa;IACzB,eAAe,EAAE,cAAc;IAC/B,UAAU,EAAE,aAAa;IACzB,eAAe,EAAE,cAAc;IAC/B,YAAY,EAAE,eAAe;IAC7B,iBAAiB,EAAE,gBAAgB;IACnC,OAAO,EAAE,UAAU;IACnB,YAAY,EAAE,WAAW;IACzB,SAAS,EAAE,YAAY;IACvB,cAAc,EAAE,aAAa;IAC7B,aAAa,EAAE,gBAAgB;IAC/B,kBAAkB,EAAE,iBAAiB;IACrC,aAAa,EAAE,gBAAgB;IAC/B,kBAAkB,EAAE,iBAAiB;IACrC,OAAO,EAAE,SAAS;IAClB,YAAY,EAAE,UAAU;CAChB,CAAC;AAMJ,MAAM,uCAAuC,GAEhD,CAAC,6IAAC,UAAU,CAAC,yBAAyB,CAAC,CAAC;AAGrC,MAAM,wCAAwC,GAEjD,uCAAuC,CAAC;AAMtC,IAAW,0BAA0B,CAK1C;AALD,CAAA,SAAiB,0BAA0B;IACzC,uEAAA,EAAyE,CAC5D,2BAAA,aAAa,GAAG,uCAAuC,CAAC;IACrE,wEAAA,EAA0E,CAC7D,2BAAA,cAAc,GAAG,wCAAwC,CAAC;AACzE,CAAC,EALgB,0BAA0B,IAAA,CAA1B,0BAA0B,GAAA,CAAA,CAAA,GAK1C","ignoreList":[0]}},
    {"offset": {"line": 10680, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10686, "column": 0}, "map": {"version":3,"file":"listresourcecustomermeter.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/listresourcecustomermeter.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  CustomerMeter,\n  CustomerMeter$inboundSchema,\n  CustomerMeter$Outbound,\n  CustomerMeter$outboundSchema,\n} from \"./customermeter.js\";\nimport {\n  Pagination,\n  Pagination$inboundSchema,\n  Pagination$Outbound,\n  Pagination$outboundSchema,\n} from \"./pagination.js\";\n\nexport type ListResourceCustomerMeter = {\n  items: Array<CustomerMeter>;\n  pagination: Pagination;\n};\n\n/** @internal */\nexport const ListResourceCustomerMeter$inboundSchema: z.ZodType<\n  ListResourceCustomerMeter,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  items: z.array(CustomerMeter$inboundSchema),\n  pagination: Pagination$inboundSchema,\n});\n\n/** @internal */\nexport type ListResourceCustomerMeter$Outbound = {\n  items: Array<CustomerMeter$Outbound>;\n  pagination: Pagination$Outbound;\n};\n\n/** @internal */\nexport const ListResourceCustomerMeter$outboundSchema: z.ZodType<\n  ListResourceCustomerMeter$Outbound,\n  z.ZodTypeDef,\n  ListResourceCustomerMeter\n> = z.object({\n  items: z.array(CustomerMeter$outboundSchema),\n  pagination: Pagination$outboundSchema,\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace ListResourceCustomerMeter$ {\n  /** @deprecated use `ListResourceCustomerMeter$inboundSchema` instead. */\n  export const inboundSchema = ListResourceCustomerMeter$inboundSchema;\n  /** @deprecated use `ListResourceCustomerMeter$outboundSchema` instead. */\n  export const outboundSchema = ListResourceCustomerMeter$outboundSchema;\n  /** @deprecated use `ListResourceCustomerMeter$Outbound` instead. */\n  export type Outbound = ListResourceCustomerMeter$Outbound;\n}\n\nexport function listResourceCustomerMeterToJSON(\n  listResourceCustomerMeter: ListResourceCustomerMeter,\n): string {\n  return JSON.stringify(\n    ListResourceCustomerMeter$outboundSchema.parse(listResourceCustomerMeter),\n  );\n}\n\nexport function listResourceCustomerMeterFromJSON(\n  jsonString: string,\n): SafeParseResult<ListResourceCustomerMeter, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => ListResourceCustomerMeter$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'ListResourceCustomerMeter' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;AAGH,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,2BAA2B,EAE3B,4BAA4B,GAC7B,MAAM,oBAAoB,CAAC;AAC5B,OAAO,EAEL,wBAAwB,EAExB,yBAAyB,GAC1B,MAAM,iBAAiB,CAAC;AAfzB,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;;;;AAuBlB,MAAM,uCAAuC,GAIhD,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,KAAK,gMAAC,8BAA2B,CAAC;IAC3C,UAAU,8LAAE,2BAAwB;CACrC,CAAC,CAAC;AASI,MAAM,wCAAwC,GAIjD,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,KAAK,gMAAC,+BAA4B,CAAC;IAC5C,UAAU,8LAAE,4BAAyB;CACtC,CAAC,CAAC;AAMG,IAAW,0BAA0B,CAO1C;AAPD,CAAA,SAAiB,0BAA0B;IACzC,uEAAA,EAAyE,CAC5D,2BAAA,aAAa,GAAG,uCAAuC,CAAC;IACrE,wEAAA,EAA0E,CAC7D,2BAAA,cAAc,GAAG,wCAAwC,CAAC;AAGzE,CAAC,EAPgB,0BAA0B,IAAA,CAA1B,0BAA0B,GAAA,CAAA,CAAA,GAO1C;AAEK,SAAU,+BAA+B,CAC7C,yBAAoD;IAEpD,OAAO,IAAI,CAAC,SAAS,CACnB,wCAAwC,CAAC,KAAK,CAAC,yBAAyB,CAAC,CAC1E,CAAC;AACJ,CAAC;AAEK,SAAU,iCAAiC,CAC/C,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,sCAAwC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACnE,CAAA,qDAAA,CAAuD,CACxD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 10723, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10729, "column": 0}, "map": {"version":3,"file":"benefitcustomsubscriberproperties.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/benefitcustomsubscriberproperties.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\n/**\n * Properties available to subscribers for a benefit of type `custom`.\n */\nexport type BenefitCustomSubscriberProperties = {\n  note: string | null;\n};\n\n/** @internal */\nexport const BenefitCustomSubscriberProperties$inboundSchema: z.ZodType<\n  BenefitCustomSubscriberProperties,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  note: z.nullable(z.string()),\n});\n\n/** @internal */\nexport type BenefitCustomSubscriberProperties$Outbound = {\n  note: string | null;\n};\n\n/** @internal */\nexport const BenefitCustomSubscriberProperties$outboundSchema: z.ZodType<\n  BenefitCustomSubscriberProperties$Outbound,\n  z.ZodTypeDef,\n  BenefitCustomSubscriberProperties\n> = z.object({\n  note: z.nullable(z.string()),\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitCustomSubscriberProperties$ {\n  /** @deprecated use `BenefitCustomSubscriberProperties$inboundSchema` instead. */\n  export const inboundSchema = BenefitCustomSubscriberProperties$inboundSchema;\n  /** @deprecated use `BenefitCustomSubscriberProperties$outboundSchema` instead. */\n  export const outboundSchema =\n    BenefitCustomSubscriberProperties$outboundSchema;\n  /** @deprecated use `BenefitCustomSubscriberProperties$Outbound` instead. */\n  export type Outbound = BenefitCustomSubscriberProperties$Outbound;\n}\n\nexport function benefitCustomSubscriberPropertiesToJSON(\n  benefitCustomSubscriberProperties: BenefitCustomSubscriberProperties,\n): string {\n  return JSON.stringify(\n    BenefitCustomSubscriberProperties$outboundSchema.parse(\n      benefitCustomSubscriberProperties,\n    ),\n  );\n}\n\nexport function benefitCustomSubscriberPropertiesFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitCustomSubscriberProperties, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => BenefitCustomSubscriberProperties$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitCustomSubscriberProperties' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;AAGH,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AADjD,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;;AAalB,MAAM,+CAA+C,GAIxD,CAAC,6IAAC,MAAM,CAAC;IACX,IAAI,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;CAC7B,CAAC,CAAC;AAQI,MAAM,gDAAgD,GAIzD,CAAC,6IAAC,MAAM,CAAC;IACX,IAAI,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;CAC7B,CAAC,CAAC;AAMG,IAAW,kCAAkC,CAQlD;AARD,CAAA,SAAiB,kCAAkC;IACjD,+EAAA,EAAiF,CACpE,mCAAA,aAAa,GAAG,+CAA+C,CAAC;IAC7E,gFAAA,EAAkF,CACrE,mCAAA,cAAc,GACzB,gDAAgD,CAAC;AAGrD,CAAC,EARgB,kCAAkC,IAAA,CAAlC,kCAAkC,GAAA,CAAA,CAAA,GAQlD;AAEK,SAAU,uCAAuC,CACrD,iCAAoE;IAEpE,OAAO,IAAI,CAAC,SAAS,CACnB,gDAAgD,CAAC,KAAK,CACpD,iCAAiC,CAClC,CACF,CAAC;AACJ,CAAC;AAEK,SAAU,yCAAyC,CACvD,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,8CAAgD,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC3E,CAAA,6DAAA,CAA+D,CAChE,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 10760, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10766, "column": 0}, "map": {"version":3,"file":"benefitcustomsubscriber.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/benefitcustomsubscriber.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  BenefitCustomSubscriberProperties,\n  BenefitCustomSubscriberProperties$inboundSchema,\n  BenefitCustomSubscriberProperties$Outbound,\n  BenefitCustomSubscriberProperties$outboundSchema,\n} from \"./benefitcustomsubscriberproperties.js\";\nimport {\n  Organization,\n  Organization$inboundSchema,\n  Organization$Outbound,\n  Organization$outboundSchema,\n} from \"./organization.js\";\n\nexport type BenefitCustomSubscriberMetadata =\n  | string\n  | number\n  | number\n  | boolean;\n\nexport type BenefitCustomSubscriber = {\n  /**\n   * The ID of the benefit.\n   */\n  id: string;\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  type?: \"custom\" | undefined;\n  /**\n   * The description of the benefit.\n   */\n  description: string;\n  /**\n   * Whether the benefit is selectable when creating a product.\n   */\n  selectable: boolean;\n  /**\n   * Whether the benefit is deletable.\n   */\n  deletable: boolean;\n  /**\n   * The ID of the organization owning the benefit.\n   */\n  organizationId: string;\n  metadata: { [k: string]: string | number | number | boolean };\n  organization: Organization;\n  /**\n   * Properties available to subscribers for a benefit of type `custom`.\n   */\n  properties: BenefitCustomSubscriberProperties;\n};\n\n/** @internal */\nexport const BenefitCustomSubscriberMetadata$inboundSchema: z.ZodType<\n  BenefitCustomSubscriberMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type BenefitCustomSubscriberMetadata$Outbound =\n  | string\n  | number\n  | number\n  | boolean;\n\n/** @internal */\nexport const BenefitCustomSubscriberMetadata$outboundSchema: z.ZodType<\n  BenefitCustomSubscriberMetadata$Outbound,\n  z.ZodTypeDef,\n  BenefitCustomSubscriberMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitCustomSubscriberMetadata$ {\n  /** @deprecated use `BenefitCustomSubscriberMetadata$inboundSchema` instead. */\n  export const inboundSchema = BenefitCustomSubscriberMetadata$inboundSchema;\n  /** @deprecated use `BenefitCustomSubscriberMetadata$outboundSchema` instead. */\n  export const outboundSchema = BenefitCustomSubscriberMetadata$outboundSchema;\n  /** @deprecated use `BenefitCustomSubscriberMetadata$Outbound` instead. */\n  export type Outbound = BenefitCustomSubscriberMetadata$Outbound;\n}\n\nexport function benefitCustomSubscriberMetadataToJSON(\n  benefitCustomSubscriberMetadata: BenefitCustomSubscriberMetadata,\n): string {\n  return JSON.stringify(\n    BenefitCustomSubscriberMetadata$outboundSchema.parse(\n      benefitCustomSubscriberMetadata,\n    ),\n  );\n}\n\nexport function benefitCustomSubscriberMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitCustomSubscriberMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => BenefitCustomSubscriberMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitCustomSubscriberMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const BenefitCustomSubscriber$inboundSchema: z.ZodType<\n  BenefitCustomSubscriber,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  id: z.string(),\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  type: z.literal(\"custom\").optional(),\n  description: z.string(),\n  selectable: z.boolean(),\n  deletable: z.boolean(),\n  organization_id: z.string(),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  organization: Organization$inboundSchema,\n  properties: BenefitCustomSubscriberProperties$inboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"organization_id\": \"organizationId\",\n  });\n});\n\n/** @internal */\nexport type BenefitCustomSubscriber$Outbound = {\n  id: string;\n  created_at: string;\n  modified_at: string | null;\n  type: \"custom\";\n  description: string;\n  selectable: boolean;\n  deletable: boolean;\n  organization_id: string;\n  metadata: { [k: string]: string | number | number | boolean };\n  organization: Organization$Outbound;\n  properties: BenefitCustomSubscriberProperties$Outbound;\n};\n\n/** @internal */\nexport const BenefitCustomSubscriber$outboundSchema: z.ZodType<\n  BenefitCustomSubscriber$Outbound,\n  z.ZodTypeDef,\n  BenefitCustomSubscriber\n> = z.object({\n  id: z.string(),\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  type: z.literal(\"custom\").default(\"custom\" as const),\n  description: z.string(),\n  selectable: z.boolean(),\n  deletable: z.boolean(),\n  organizationId: z.string(),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  organization: Organization$outboundSchema,\n  properties: BenefitCustomSubscriberProperties$outboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    organizationId: \"organization_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitCustomSubscriber$ {\n  /** @deprecated use `BenefitCustomSubscriber$inboundSchema` instead. */\n  export const inboundSchema = BenefitCustomSubscriber$inboundSchema;\n  /** @deprecated use `BenefitCustomSubscriber$outboundSchema` instead. */\n  export const outboundSchema = BenefitCustomSubscriber$outboundSchema;\n  /** @deprecated use `BenefitCustomSubscriber$Outbound` instead. */\n  export type Outbound = BenefitCustomSubscriber$Outbound;\n}\n\nexport function benefitCustomSubscriberToJSON(\n  benefitCustomSubscriber: BenefitCustomSubscriber,\n): string {\n  return JSON.stringify(\n    BenefitCustomSubscriber$outboundSchema.parse(benefitCustomSubscriber),\n  );\n}\n\nexport function benefitCustomSubscriberFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitCustomSubscriber, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => BenefitCustomSubscriber$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitCustomSubscriber' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 10877, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10883, "column": 0}, "map": {"version":3,"file":"customerportaloauthaccount.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customerportaloauthaccount.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport type CustomerPortalOAuthAccount = {\n  accountId: string;\n  accountUsername: string | null;\n};\n\n/** @internal */\nexport const CustomerPortalOAuthAccount$inboundSchema: z.ZodType<\n  CustomerPortalOAuthAccount,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  account_id: z.string(),\n  account_username: z.nullable(z.string()),\n}).transform((v) => {\n  return remap$(v, {\n    \"account_id\": \"accountId\",\n    \"account_username\": \"accountUsername\",\n  });\n});\n\n/** @internal */\nexport type CustomerPortalOAuthAccount$Outbound = {\n  account_id: string;\n  account_username: string | null;\n};\n\n/** @internal */\nexport const CustomerPortalOAuthAccount$outboundSchema: z.ZodType<\n  CustomerPortalOAuthAccount$Outbound,\n  z.ZodTypeDef,\n  CustomerPortalOAuthAccount\n> = z.object({\n  accountId: z.string(),\n  accountUsername: z.nullable(z.string()),\n}).transform((v) => {\n  return remap$(v, {\n    accountId: \"account_id\",\n    accountUsername: \"account_username\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomerPortalOAuthAccount$ {\n  /** @deprecated use `CustomerPortalOAuthAccount$inboundSchema` instead. */\n  export const inboundSchema = CustomerPortalOAuthAccount$inboundSchema;\n  /** @deprecated use `CustomerPortalOAuthAccount$outboundSchema` instead. */\n  export const outboundSchema = CustomerPortalOAuthAccount$outboundSchema;\n  /** @deprecated use `CustomerPortalOAuthAccount$Outbound` instead. */\n  export type Outbound = CustomerPortalOAuthAccount$Outbound;\n}\n\nexport function customerPortalOAuthAccountToJSON(\n  customerPortalOAuthAccount: CustomerPortalOAuthAccount,\n): string {\n  return JSON.stringify(\n    CustomerPortalOAuthAccount$outboundSchema.parse(customerPortalOAuthAccount),\n  );\n}\n\nexport function customerPortalOAuthAccountFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomerPortalOAuthAccount, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomerPortalOAuthAccount$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomerPortalOAuthAccount' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;;;;;AAU1C,MAAM,wCAAwC,GAIjD,CAAC,6IAAC,MAAM,CAAC;IACX,UAAU,EAAE,CAAC,6IAAC,MAAM,EAAE;IACtB,gBAAgB,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;CACzC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,YAAY,EAAE,WAAW;QACzB,kBAAkB,EAAE,iBAAiB;KACtC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AASI,MAAM,yCAAyC,GAIlD,CAAC,6IAAC,MAAM,CAAC;IACX,SAAS,EAAE,CAAC,6IAAC,MAAM,EAAE;IACrB,eAAe,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;CACxC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,SAAS,EAAE,YAAY;QACvB,eAAe,EAAE,kBAAkB;KACpC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,2BAA2B,CAO3C;AAPD,CAAA,SAAiB,2BAA2B;IAC1C,wEAAA,EAA0E,CAC7D,4BAAA,aAAa,GAAG,wCAAwC,CAAC;IACtE,yEAAA,EAA2E,CAC9D,4BAAA,cAAc,GAAG,yCAAyC,CAAC;AAG1E,CAAC,EAPgB,2BAA2B,IAAA,CAA3B,2BAA2B,GAAA,CAAA,CAAA,GAO3C;AAEK,SAAU,gCAAgC,CAC9C,0BAAsD;IAEtD,OAAO,IAAI,CAAC,SAAS,CACnB,yCAAyC,CAAC,KAAK,CAAC,0BAA0B,CAAC,CAC5E,CAAC;AACJ,CAAC;AAEK,SAAU,kCAAkC,CAChD,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,uCAAyC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACpE,CAAA,sDAAA,CAAwD,CACzD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 10928, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10934, "column": 0}, "map": {"version":3,"file":"customerportalcustomer.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customerportalcustomer.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  Address,\n  Address$inboundSchema,\n  Address$Outbound,\n  Address$outboundSchema,\n} from \"./address.js\";\nimport {\n  CustomerPortalOAuthAccount,\n  CustomerPortalOAuthAccount$inboundSchema,\n  CustomerPortalOAuthAccount$Outbound,\n  CustomerPortalOAuthAccount$outboundSchema,\n} from \"./customerportaloauthaccount.js\";\nimport {\n  TaxIDFormat,\n  TaxIDFormat$inboundSchema,\n  TaxIDFormat$outboundSchema,\n} from \"./taxidformat.js\";\n\nexport type CustomerPortalCustomerTaxId = string | TaxIDFormat;\n\nexport type CustomerPortalCustomer = {\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  /**\n   * The ID of the object.\n   */\n  id: string;\n  email: string;\n  emailVerified: boolean;\n  name: string | null;\n  billingAddress: Address | null;\n  taxId: Array<string | TaxIDFormat | null> | null;\n  oauthAccounts: { [k: string]: CustomerPortalOAuthAccount };\n};\n\n/** @internal */\nexport const CustomerPortalCustomerTaxId$inboundSchema: z.ZodType<\n  CustomerPortalCustomerTaxId,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), TaxIDFormat$inboundSchema]);\n\n/** @internal */\nexport type CustomerPortalCustomerTaxId$Outbound = string | string;\n\n/** @internal */\nexport const CustomerPortalCustomerTaxId$outboundSchema: z.ZodType<\n  CustomerPortalCustomerTaxId$Outbound,\n  z.ZodTypeDef,\n  CustomerPortalCustomerTaxId\n> = z.union([z.string(), TaxIDFormat$outboundSchema]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomerPortalCustomerTaxId$ {\n  /** @deprecated use `CustomerPortalCustomerTaxId$inboundSchema` instead. */\n  export const inboundSchema = CustomerPortalCustomerTaxId$inboundSchema;\n  /** @deprecated use `CustomerPortalCustomerTaxId$outboundSchema` instead. */\n  export const outboundSchema = CustomerPortalCustomerTaxId$outboundSchema;\n  /** @deprecated use `CustomerPortalCustomerTaxId$Outbound` instead. */\n  export type Outbound = CustomerPortalCustomerTaxId$Outbound;\n}\n\nexport function customerPortalCustomerTaxIdToJSON(\n  customerPortalCustomerTaxId: CustomerPortalCustomerTaxId,\n): string {\n  return JSON.stringify(\n    CustomerPortalCustomerTaxId$outboundSchema.parse(\n      customerPortalCustomerTaxId,\n    ),\n  );\n}\n\nexport function customerPortalCustomerTaxIdFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomerPortalCustomerTaxId, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomerPortalCustomerTaxId$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomerPortalCustomerTaxId' from JSON`,\n  );\n}\n\n/** @internal */\nexport const CustomerPortalCustomer$inboundSchema: z.ZodType<\n  CustomerPortalCustomer,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  id: z.string(),\n  email: z.string(),\n  email_verified: z.boolean(),\n  name: z.nullable(z.string()),\n  billing_address: z.nullable(Address$inboundSchema),\n  tax_id: z.nullable(\n    z.array(z.nullable(z.union([z.string(), TaxIDFormat$inboundSchema]))),\n  ),\n  oauth_accounts: z.record(CustomerPortalOAuthAccount$inboundSchema),\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"email_verified\": \"emailVerified\",\n    \"billing_address\": \"billingAddress\",\n    \"tax_id\": \"taxId\",\n    \"oauth_accounts\": \"oauthAccounts\",\n  });\n});\n\n/** @internal */\nexport type CustomerPortalCustomer$Outbound = {\n  created_at: string;\n  modified_at: string | null;\n  id: string;\n  email: string;\n  email_verified: boolean;\n  name: string | null;\n  billing_address: Address$Outbound | null;\n  tax_id: Array<string | string | null> | null;\n  oauth_accounts: { [k: string]: CustomerPortalOAuthAccount$Outbound };\n};\n\n/** @internal */\nexport const CustomerPortalCustomer$outboundSchema: z.ZodType<\n  CustomerPortalCustomer$Outbound,\n  z.ZodTypeDef,\n  CustomerPortalCustomer\n> = z.object({\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  id: z.string(),\n  email: z.string(),\n  emailVerified: z.boolean(),\n  name: z.nullable(z.string()),\n  billingAddress: z.nullable(Address$outboundSchema),\n  taxId: z.nullable(\n    z.array(z.nullable(z.union([z.string(), TaxIDFormat$outboundSchema]))),\n  ),\n  oauthAccounts: z.record(CustomerPortalOAuthAccount$outboundSchema),\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    emailVerified: \"email_verified\",\n    billingAddress: \"billing_address\",\n    taxId: \"tax_id\",\n    oauthAccounts: \"oauth_accounts\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomerPortalCustomer$ {\n  /** @deprecated use `CustomerPortalCustomer$inboundSchema` instead. */\n  export const inboundSchema = CustomerPortalCustomer$inboundSchema;\n  /** @deprecated use `CustomerPortalCustomer$outboundSchema` instead. */\n  export const outboundSchema = CustomerPortalCustomer$outboundSchema;\n  /** @deprecated use `CustomerPortalCustomer$Outbound` instead. */\n  export type Outbound = CustomerPortalCustomer$Outbound;\n}\n\nexport function customerPortalCustomerToJSON(\n  customerPortalCustomer: CustomerPortalCustomer,\n): string {\n  return JSON.stringify(\n    CustomerPortalCustomer$outboundSchema.parse(customerPortalCustomer),\n  );\n}\n\nexport function customerPortalCustomerFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomerPortalCustomer, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomerPortalCustomer$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomerPortalCustomer' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,qBAAqB,EAErB,sBAAsB,GACvB,MAAM,cAAc,CAAC;AACtB,OAAO,EAEL,wCAAwC,EAExC,yCAAyC,GAC1C,MAAM,iCAAiC,CAAC;AACzC,OAAO,EAEL,yBAAyB,EACzB,0BAA0B,GAC3B,MAAM,kBAAkB,CAAC;;;;;;;;AA0BnB,MAAM,yCAAyC,GAIlD,CAAC,6IAAC,KAAK,CAAC;IAAC,CAAC,6IAAC,MAAM,EAAE;iMAAE,4BAAyB;CAAC,CAAC,CAAC;AAM9C,MAAM,0CAA0C,GAInD,CAAC,6IAAC,KAAK,CAAC;IAAC,CAAC,6IAAC,MAAM,EAAE;iMAAE,6BAA0B;CAAC,CAAC,CAAC;AAMhD,IAAW,4BAA4B,CAO5C;AAPD,CAAA,SAAiB,4BAA4B;IAC3C,yEAAA,EAA2E,CAC9D,6BAAA,aAAa,GAAG,yCAAyC,CAAC;IACvE,0EAAA,EAA4E,CAC/D,6BAAA,cAAc,GAAG,0CAA0C,CAAC;AAG3E,CAAC,EAPgB,4BAA4B,IAAA,CAA5B,4BAA4B,GAAA,CAAA,CAAA,GAO5C;AAEK,SAAU,iCAAiC,CAC/C,2BAAwD;IAExD,OAAO,IAAI,CAAC,SAAS,CACnB,0CAA0C,CAAC,KAAK,CAC9C,2BAA2B,CAC5B,CACF,CAAC;AACJ,CAAC;AAEK,SAAU,mCAAmC,CACjD,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,wCAA0C,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACrE,CAAA,uDAAA,CAAyD,CAC1D,CAAC;AACJ,CAAC;AAGM,MAAM,oCAAoC,GAI7C,CAAC,6IAAC,MAAM,CAAC;IACX,UAAU,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,CAAC;QAAE,MAAM,EAAE,IAAI;IAAA,CAAE,CAAC,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;IAC7E,WAAW,EAAE,CAAC,6IAAC,QAAQ,CACrB,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,CAAC;QAAE,MAAM,EAAE,IAAI;IAAA,CAAE,CAAC,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAClE;IACD,EAAE,EAAE,CAAC,6IAAC,MAAM,EAAE;IACd,KAAK,EAAE,CAAC,6IAAC,MAAM,EAAE;IACjB,cAAc,EAAE,CAAC,6IAAC,OAAO,EAAE;IAC3B,IAAI,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;IAC5B,eAAe,EAAE,CAAC,6IAAC,QAAQ,0LAAC,wBAAqB,CAAC;IAClD,MAAM,EAAE,CAAC,6IAAC,QAAQ,CAChB,CAAC,6IAAC,KAAK,CAAC,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,KAAK,CAAC;QAAC,CAAC,6IAAC,MAAM,EAAE;qMAAE,4BAAyB;KAAC,CAAC,CAAC,CAAC,CACtE;IACD,cAAc,EAAE,CAAC,6IAAC,MAAM,6MAAC,2CAAwC,CAAC;CACnE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,QAAO,sLAAA,AAAM,EAAC,CAAC,EAAE;QACf,YAAY,EAAE,WAAW;QACzB,aAAa,EAAE,YAAY;QAC3B,gBAAgB,EAAE,eAAe;QACjC,iBAAiB,EAAE,gBAAgB;QACnC,QAAQ,EAAE,OAAO;QACjB,gBAAgB,EAAE,eAAe;KAClC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAgBI,MAAM,qCAAqC,GAI9C,CAAC,6IAAC,MAAM,CAAC;IACX,SAAS,EAAE,CAAC,6IAAC,IAAI,EAAE,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,WAAW,EAAE,CAAC;IACnD,UAAU,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,IAAI,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;IAChE,EAAE,EAAE,CAAC,6IAAC,MAAM,EAAE;IACd,KAAK,EAAE,CAAC,6IAAC,MAAM,EAAE;IACjB,aAAa,EAAE,CAAC,6IAAC,OAAO,EAAE;IAC1B,IAAI,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;IAC5B,cAAc,EAAE,CAAC,6IAAC,QAAQ,yLAAC,0BAAsB,CAAC;IAClD,KAAK,EAAE,CAAC,6IAAC,QAAQ,CACf,CAAC,6IAAC,KAAK,CAAC,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,KAAK,CAAC;QAAC,CAAC,6IAAC,MAAM,EAAE;QAAE,0NAA0B;KAAC,CAAC,CAAC,CAAC,CACvE;IACD,aAAa,EAAE,CAAC,6IAAC,MAAM,6MAAC,4CAAyC,CAAC;CACnE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,SAAS,EAAE,YAAY;QACvB,UAAU,EAAE,aAAa;QACzB,aAAa,EAAE,gBAAgB;QAC/B,cAAc,EAAE,iBAAiB;QACjC,KAAK,EAAE,QAAQ;QACf,aAAa,EAAE,gBAAgB;KAChC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,uBAAuB,CAOvC;AAPD,CAAA,SAAiB,uBAAuB;IACtC,oEAAA,EAAsE,CACzD,wBAAA,aAAa,GAAG,oCAAoC,CAAC;IAClE,qEAAA,EAAuE,CAC1D,wBAAA,cAAc,GAAG,qCAAqC,CAAC;AAGtE,CAAC,EAPgB,uBAAuB,IAAA,CAAvB,uBAAuB,GAAA,CAAA,CAAA,GAOvC;AAEK,SAAU,4BAA4B,CAC1C,sBAA8C;IAE9C,OAAO,IAAI,CAAC,SAAS,CACnB,qCAAqC,CAAC,KAAK,CAAC,sBAAsB,CAAC,CACpE,CAAC;AACJ,CAAC;AAEK,SAAU,8BAA8B,CAC5C,UAAkB;IAElB,mLAAO,YAAS,AAAT,EACL,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,mCAAqC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAChE,CAAA,kDAAA,CAAoD,CACrD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 11041, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11047, "column": 0}, "map": {"version":3,"file":"customerbenefitgrantcustom.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customerbenefitgrantcustom.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  BenefitCustomSubscriber,\n  BenefitCustomSubscriber$inboundSchema,\n  BenefitCustomSubscriber$Outbound,\n  BenefitCustomSubscriber$outboundSchema,\n} from \"./benefitcustomsubscriber.js\";\nimport {\n  BenefitGrantCustomProperties,\n  BenefitGrantCustomProperties$inboundSchema,\n  BenefitGrantCustomProperties$Outbound,\n  BenefitGrantCustomProperties$outboundSchema,\n} from \"./benefitgrantcustomproperties.js\";\nimport {\n  CustomerPortalCustomer,\n  CustomerPortalCustomer$inboundSchema,\n  CustomerPortalCustomer$Outbound,\n  CustomerPortalCustomer$outboundSchema,\n} from \"./customerportalcustomer.js\";\n\nexport type CustomerBenefitGrantCustom = {\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  /**\n   * The ID of the object.\n   */\n  id: string;\n  grantedAt: Date | null;\n  revokedAt: Date | null;\n  customerId: string;\n  benefitId: string;\n  subscriptionId: string | null;\n  orderId: string | null;\n  isGranted: boolean;\n  isRevoked: boolean;\n  customer: CustomerPortalCustomer;\n  benefit: BenefitCustomSubscriber;\n  properties: BenefitGrantCustomProperties;\n};\n\n/** @internal */\nexport const CustomerBenefitGrantCustom$inboundSchema: z.ZodType<\n  CustomerBenefitGrantCustom,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  id: z.string(),\n  granted_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  revoked_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  customer_id: z.string(),\n  benefit_id: z.string(),\n  subscription_id: z.nullable(z.string()),\n  order_id: z.nullable(z.string()),\n  is_granted: z.boolean(),\n  is_revoked: z.boolean(),\n  customer: CustomerPortalCustomer$inboundSchema,\n  benefit: BenefitCustomSubscriber$inboundSchema,\n  properties: BenefitGrantCustomProperties$inboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"granted_at\": \"grantedAt\",\n    \"revoked_at\": \"revokedAt\",\n    \"customer_id\": \"customerId\",\n    \"benefit_id\": \"benefitId\",\n    \"subscription_id\": \"subscriptionId\",\n    \"order_id\": \"orderId\",\n    \"is_granted\": \"isGranted\",\n    \"is_revoked\": \"isRevoked\",\n  });\n});\n\n/** @internal */\nexport type CustomerBenefitGrantCustom$Outbound = {\n  created_at: string;\n  modified_at: string | null;\n  id: string;\n  granted_at: string | null;\n  revoked_at: string | null;\n  customer_id: string;\n  benefit_id: string;\n  subscription_id: string | null;\n  order_id: string | null;\n  is_granted: boolean;\n  is_revoked: boolean;\n  customer: CustomerPortalCustomer$Outbound;\n  benefit: BenefitCustomSubscriber$Outbound;\n  properties: BenefitGrantCustomProperties$Outbound;\n};\n\n/** @internal */\nexport const CustomerBenefitGrantCustom$outboundSchema: z.ZodType<\n  CustomerBenefitGrantCustom$Outbound,\n  z.ZodTypeDef,\n  CustomerBenefitGrantCustom\n> = z.object({\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  id: z.string(),\n  grantedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  revokedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  customerId: z.string(),\n  benefitId: z.string(),\n  subscriptionId: z.nullable(z.string()),\n  orderId: z.nullable(z.string()),\n  isGranted: z.boolean(),\n  isRevoked: z.boolean(),\n  customer: CustomerPortalCustomer$outboundSchema,\n  benefit: BenefitCustomSubscriber$outboundSchema,\n  properties: BenefitGrantCustomProperties$outboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    grantedAt: \"granted_at\",\n    revokedAt: \"revoked_at\",\n    customerId: \"customer_id\",\n    benefitId: \"benefit_id\",\n    subscriptionId: \"subscription_id\",\n    orderId: \"order_id\",\n    isGranted: \"is_granted\",\n    isRevoked: \"is_revoked\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomerBenefitGrantCustom$ {\n  /** @deprecated use `CustomerBenefitGrantCustom$inboundSchema` instead. */\n  export const inboundSchema = CustomerBenefitGrantCustom$inboundSchema;\n  /** @deprecated use `CustomerBenefitGrantCustom$outboundSchema` instead. */\n  export const outboundSchema = CustomerBenefitGrantCustom$outboundSchema;\n  /** @deprecated use `CustomerBenefitGrantCustom$Outbound` instead. */\n  export type Outbound = CustomerBenefitGrantCustom$Outbound;\n}\n\nexport function customerBenefitGrantCustomToJSON(\n  customerBenefitGrantCustom: CustomerBenefitGrantCustom,\n): string {\n  return JSON.stringify(\n    CustomerBenefitGrantCustom$outboundSchema.parse(customerBenefitGrantCustom),\n  );\n}\n\nexport function customerBenefitGrantCustomFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomerBenefitGrantCustom, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomerBenefitGrantCustom$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomerBenefitGrantCustom' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,qCAAqC,EAErC,sCAAsC,GACvC,MAAM,8BAA8B,CAAC;AACtC,OAAO,EAEL,0CAA0C,EAE1C,2CAA2C,GAC5C,MAAM,mCAAmC,CAAC;AAC3C,OAAO,EAEL,oCAAoC,EAEpC,qCAAqC,GACtC,MAAM,6BAA6B,CAAC;;;;;;;;AA6B9B,MAAM,wCAAwC,GAIjD,CAAC,6IAAC,MAAM,CAAC;IACX,UAAU,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,CAAC;QAAE,MAAM,EAAE,IAAI;IAAA,CAAE,CAAC,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;IAC7E,WAAW,EAAE,CAAC,6IAAC,QAAQ,CACrB,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,CAAC;QAAE,MAAM,EAAE,IAAI;IAAA,CAAE,CAAC,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAClE;IACD,EAAE,EAAE,CAAC,6IAAC,MAAM,EAAE;IACd,UAAU,EAAE,CAAC,6IAAC,QAAQ,CACpB,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,CAAC;QAAE,MAAM,EAAE,IAAI;IAAA,CAAE,CAAC,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAClE;IACD,UAAU,EAAE,CAAC,6IAAC,QAAQ,CACpB,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,CAAC;QAAE,MAAM,EAAE,IAAI;IAAA,CAAE,CAAC,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAClE;IACD,WAAW,EAAE,CAAC,6IAAC,MAAM,EAAE;IACvB,UAAU,EAAE,CAAC,6IAAC,MAAM,EAAE;IACtB,eAAe,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;IACvC,QAAQ,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;IAChC,UAAU,EAAE,CAAC,6IAAC,OAAO,EAAE;IACvB,UAAU,EAAE,CAAC,6IAAC,OAAO,EAAE;IACvB,QAAQ,0MAAE,uCAAoC;IAC9C,OAAO,2MAAE,wCAAqC;IAC9C,UAAU,gNAAE,6CAA0C;CACvD,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,WAAO,mLAAA,AAAM,EAAC,CAAC,EAAE;QACf,YAAY,EAAE,WAAW;QACzB,aAAa,EAAE,YAAY;QAC3B,YAAY,EAAE,WAAW;QACzB,YAAY,EAAE,WAAW;QACzB,aAAa,EAAE,YAAY;QAC3B,YAAY,EAAE,WAAW;QACzB,iBAAiB,EAAE,gBAAgB;QACnC,UAAU,EAAE,SAAS;QACrB,YAAY,EAAE,WAAW;QACzB,YAAY,EAAE,WAAW;KAC1B,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAqBI,MAAM,yCAAyC,GAIlD,CAAC,6IAAC,MAAM,CAAC;IACX,SAAS,EAAE,CAAC,6IAAC,IAAI,EAAE,CAAC,SAAS,EAAC,CAAC,CAAC,EAAG,AAAD,CAAE,CAAC,WAAW,EAAE,CAAC;IACnD,UAAU,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,IAAI,EAAE,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;IAChE,EAAE,EAAE,CAAC,6IAAC,MAAM,EAAE;IACd,SAAS,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,IAAI,EAAE,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;IAC/D,SAAS,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,IAAI,EAAE,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;IAC/D,UAAU,EAAE,CAAC,6IAAC,MAAM,EAAE;IACtB,SAAS,EAAE,CAAC,6IAAC,MAAM,EAAE;IACrB,cAAc,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;IACtC,OAAO,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;IAC/B,SAAS,EAAE,CAAC,6IAAC,OAAO,EAAE;IACtB,SAAS,EAAE,CAAC,6IAAC,OAAO,EAAE;IACtB,QAAQ,0MAAE,wCAAqC;IAC/C,OAAO,2MAAE,yCAAsC;IAC/C,UAAU,gNAAE,8CAA2C;CACxD,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,SAAS,EAAE,YAAY;QACvB,UAAU,EAAE,aAAa;QACzB,SAAS,EAAE,YAAY;QACvB,SAAS,EAAE,YAAY;QACvB,UAAU,EAAE,aAAa;QACzB,SAAS,EAAE,YAAY;QACvB,cAAc,EAAE,iBAAiB;QACjC,OAAO,EAAE,UAAU;QACnB,SAAS,EAAE,YAAY;QACvB,SAAS,EAAE,YAAY;KACxB,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,2BAA2B,CAO3C;AAPD,CAAA,SAAiB,2BAA2B;IAC1C,wEAAA,EAA0E,CAC7D,4BAAA,aAAa,GAAG,wCAAwC,CAAC;IACtE,yEAAA,EAA2E,CAC9D,4BAAA,cAAc,GAAG,yCAAyC,CAAC;AAG1E,CAAC,EAPgB,2BAA2B,IAAA,CAA3B,2BAA2B,GAAA,CAAA,CAAA,GAO3C;AAEK,SAAU,gCAAgC,CAC9C,0BAAsD;IAEtD,OAAO,IAAI,CAAC,SAAS,CACnB,yCAAyC,CAAC,KAAK,CAAC,0BAA0B,CAAC,CAC5E,CAAC;AACJ,CAAC;AAEK,SAAU,kCAAkC,CAChD,UAAkB;IAElB,OAAO,wLAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,uCAAyC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACpE,CAAA,sDAAA,CAAwD,CACzD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 11146, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11152, "column": 0}, "map": {"version":3,"file":"benefitdiscordsubscriberproperties.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/benefitdiscordsubscriberproperties.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\n/**\n * Properties available to subscribers for a benefit of type `discord`.\n */\nexport type BenefitDiscordSubscriberProperties = {\n  /**\n   * The ID of the Discord server.\n   */\n  guildId: string;\n};\n\n/** @internal */\nexport const BenefitDiscordSubscriberProperties$inboundSchema: z.ZodType<\n  BenefitDiscordSubscriberProperties,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  guild_id: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    \"guild_id\": \"guildId\",\n  });\n});\n\n/** @internal */\nexport type BenefitDiscordSubscriberProperties$Outbound = {\n  guild_id: string;\n};\n\n/** @internal */\nexport const BenefitDiscordSubscriberProperties$outboundSchema: z.ZodType<\n  BenefitDiscordSubscriberProperties$Outbound,\n  z.ZodTypeDef,\n  BenefitDiscordSubscriberProperties\n> = z.object({\n  guildId: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    guildId: \"guild_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitDiscordSubscriberProperties$ {\n  /** @deprecated use `BenefitDiscordSubscriberProperties$inboundSchema` instead. */\n  export const inboundSchema = BenefitDiscordSubscriberProperties$inboundSchema;\n  /** @deprecated use `BenefitDiscordSubscriberProperties$outboundSchema` instead. */\n  export const outboundSchema =\n    BenefitDiscordSubscriberProperties$outboundSchema;\n  /** @deprecated use `BenefitDiscordSubscriberProperties$Outbound` instead. */\n  export type Outbound = BenefitDiscordSubscriberProperties$Outbound;\n}\n\nexport function benefitDiscordSubscriberPropertiesToJSON(\n  benefitDiscordSubscriberProperties: BenefitDiscordSubscriberProperties,\n): string {\n  return JSON.stringify(\n    BenefitDiscordSubscriberProperties$outboundSchema.parse(\n      benefitDiscordSubscriberProperties,\n    ),\n  );\n}\n\nexport function benefitDiscordSubscriberPropertiesFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitDiscordSubscriberProperties, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) =>\n      BenefitDiscordSubscriberProperties$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitDiscordSubscriberProperties' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;;;;;AAe1C,MAAM,gDAAgD,GAIzD,CAAC,6IAAC,MAAM,CAAC;IACX,QAAQ,EAAE,CAAC,6IAAC,MAAM,EAAE;CACrB,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,WAAO,mLAAA,AAAM,EAAC,CAAC,EAAE;QACf,UAAU,EAAE,SAAS;KACtB,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAQI,MAAM,iDAAiD,GAI1D,CAAC,6IAAC,MAAM,CAAC;IACX,OAAO,EAAE,CAAC,6IAAC,MAAM,EAAE;CACpB,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,OAAO,EAAE,UAAU;KACpB,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,mCAAmC,CAQnD;AARD,CAAA,SAAiB,mCAAmC;IAClD,gFAAA,EAAkF,CACrE,oCAAA,aAAa,GAAG,gDAAgD,CAAC;IAC9E,iFAAA,EAAmF,CACtE,oCAAA,cAAc,GACzB,iDAAiD,CAAC;AAGtD,CAAC,EARgB,mCAAmC,IAAA,CAAnC,mCAAmC,GAAA,CAAA,CAAA,GAQnD;AAEK,SAAU,wCAAwC,CACtD,kCAAsE;IAEtE,OAAO,IAAI,CAAC,SAAS,CACnB,iDAAiD,CAAC,KAAK,CACrD,kCAAkC,CACnC,CACF,CAAC;AACJ,CAAC;AAEK,SAAU,0CAA0C,CACxD,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CACF,CADI,+CAC4C,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACvE,CAAA,8DAAA,CAAgE,CACjE,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 11193, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11199, "column": 0}, "map": {"version":3,"file":"benefitdiscordsubscriber.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/benefitdiscordsubscriber.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  BenefitDiscordSubscriberProperties,\n  BenefitDiscordSubscriberProperties$inboundSchema,\n  BenefitDiscordSubscriberProperties$Outbound,\n  BenefitDiscordSubscriberProperties$outboundSchema,\n} from \"./benefitdiscordsubscriberproperties.js\";\nimport {\n  Organization,\n  Organization$inboundSchema,\n  Organization$Outbound,\n  Organization$outboundSchema,\n} from \"./organization.js\";\n\nexport type BenefitDiscordSubscriberMetadata =\n  | string\n  | number\n  | number\n  | boolean;\n\nexport type BenefitDiscordSubscriber = {\n  /**\n   * The ID of the benefit.\n   */\n  id: string;\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  type?: \"discord\" | undefined;\n  /**\n   * The description of the benefit.\n   */\n  description: string;\n  /**\n   * Whether the benefit is selectable when creating a product.\n   */\n  selectable: boolean;\n  /**\n   * Whether the benefit is deletable.\n   */\n  deletable: boolean;\n  /**\n   * The ID of the organization owning the benefit.\n   */\n  organizationId: string;\n  metadata: { [k: string]: string | number | number | boolean };\n  organization: Organization;\n  /**\n   * Properties available to subscribers for a benefit of type `discord`.\n   */\n  properties: BenefitDiscordSubscriberProperties;\n};\n\n/** @internal */\nexport const BenefitDiscordSubscriberMetadata$inboundSchema: z.ZodType<\n  BenefitDiscordSubscriberMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type BenefitDiscordSubscriberMetadata$Outbound =\n  | string\n  | number\n  | number\n  | boolean;\n\n/** @internal */\nexport const BenefitDiscordSubscriberMetadata$outboundSchema: z.ZodType<\n  BenefitDiscordSubscriberMetadata$Outbound,\n  z.ZodTypeDef,\n  BenefitDiscordSubscriberMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitDiscordSubscriberMetadata$ {\n  /** @deprecated use `BenefitDiscordSubscriberMetadata$inboundSchema` instead. */\n  export const inboundSchema = BenefitDiscordSubscriberMetadata$inboundSchema;\n  /** @deprecated use `BenefitDiscordSubscriberMetadata$outboundSchema` instead. */\n  export const outboundSchema = BenefitDiscordSubscriberMetadata$outboundSchema;\n  /** @deprecated use `BenefitDiscordSubscriberMetadata$Outbound` instead. */\n  export type Outbound = BenefitDiscordSubscriberMetadata$Outbound;\n}\n\nexport function benefitDiscordSubscriberMetadataToJSON(\n  benefitDiscordSubscriberMetadata: BenefitDiscordSubscriberMetadata,\n): string {\n  return JSON.stringify(\n    BenefitDiscordSubscriberMetadata$outboundSchema.parse(\n      benefitDiscordSubscriberMetadata,\n    ),\n  );\n}\n\nexport function benefitDiscordSubscriberMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitDiscordSubscriberMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => BenefitDiscordSubscriberMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitDiscordSubscriberMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const BenefitDiscordSubscriber$inboundSchema: z.ZodType<\n  BenefitDiscordSubscriber,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  id: z.string(),\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  type: z.literal(\"discord\").optional(),\n  description: z.string(),\n  selectable: z.boolean(),\n  deletable: z.boolean(),\n  organization_id: z.string(),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  organization: Organization$inboundSchema,\n  properties: BenefitDiscordSubscriberProperties$inboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"organization_id\": \"organizationId\",\n  });\n});\n\n/** @internal */\nexport type BenefitDiscordSubscriber$Outbound = {\n  id: string;\n  created_at: string;\n  modified_at: string | null;\n  type: \"discord\";\n  description: string;\n  selectable: boolean;\n  deletable: boolean;\n  organization_id: string;\n  metadata: { [k: string]: string | number | number | boolean };\n  organization: Organization$Outbound;\n  properties: BenefitDiscordSubscriberProperties$Outbound;\n};\n\n/** @internal */\nexport const BenefitDiscordSubscriber$outboundSchema: z.ZodType<\n  BenefitDiscordSubscriber$Outbound,\n  z.ZodTypeDef,\n  BenefitDiscordSubscriber\n> = z.object({\n  id: z.string(),\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  type: z.literal(\"discord\").default(\"discord\" as const),\n  description: z.string(),\n  selectable: z.boolean(),\n  deletable: z.boolean(),\n  organizationId: z.string(),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  organization: Organization$outboundSchema,\n  properties: BenefitDiscordSubscriberProperties$outboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    organizationId: \"organization_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitDiscordSubscriber$ {\n  /** @deprecated use `BenefitDiscordSubscriber$inboundSchema` instead. */\n  export const inboundSchema = BenefitDiscordSubscriber$inboundSchema;\n  /** @deprecated use `BenefitDiscordSubscriber$outboundSchema` instead. */\n  export const outboundSchema = BenefitDiscordSubscriber$outboundSchema;\n  /** @deprecated use `BenefitDiscordSubscriber$Outbound` instead. */\n  export type Outbound = BenefitDiscordSubscriber$Outbound;\n}\n\nexport function benefitDiscordSubscriberToJSON(\n  benefitDiscordSubscriber: BenefitDiscordSubscriber,\n): string {\n  return JSON.stringify(\n    BenefitDiscordSubscriber$outboundSchema.parse(benefitDiscordSubscriber),\n  );\n}\n\nexport function benefitDiscordSubscriberFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitDiscordSubscriber, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => BenefitDiscordSubscriber$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitDiscordSubscriber' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 11310, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11316, "column": 0}, "map": {"version":3,"file":"customerbenefitgrantdiscord.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customerbenefitgrantdiscord.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  BenefitDiscordSubscriber,\n  BenefitDiscordSubscriber$inboundSchema,\n  BenefitDiscordSubscriber$Outbound,\n  BenefitDiscordSubscriber$outboundSchema,\n} from \"./benefitdiscordsubscriber.js\";\nimport {\n  BenefitGrantDiscordProperties,\n  BenefitGrantDiscordProperties$inboundSchema,\n  BenefitGrantDiscordProperties$Outbound,\n  BenefitGrantDiscordProperties$outboundSchema,\n} from \"./benefitgrantdiscordproperties.js\";\nimport {\n  CustomerPortalCustomer,\n  CustomerPortalCustomer$inboundSchema,\n  CustomerPortalCustomer$Outbound,\n  CustomerPortalCustomer$outboundSchema,\n} from \"./customerportalcustomer.js\";\n\nexport type CustomerBenefitGrantDiscord = {\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  /**\n   * The ID of the object.\n   */\n  id: string;\n  grantedAt: Date | null;\n  revokedAt: Date | null;\n  customerId: string;\n  benefitId: string;\n  subscriptionId: string | null;\n  orderId: string | null;\n  isGranted: boolean;\n  isRevoked: boolean;\n  customer: CustomerPortalCustomer;\n  benefit: BenefitDiscordSubscriber;\n  properties: BenefitGrantDiscordProperties;\n};\n\n/** @internal */\nexport const CustomerBenefitGrantDiscord$inboundSchema: z.ZodType<\n  CustomerBenefitGrantDiscord,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  id: z.string(),\n  granted_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  revoked_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  customer_id: z.string(),\n  benefit_id: z.string(),\n  subscription_id: z.nullable(z.string()),\n  order_id: z.nullable(z.string()),\n  is_granted: z.boolean(),\n  is_revoked: z.boolean(),\n  customer: CustomerPortalCustomer$inboundSchema,\n  benefit: BenefitDiscordSubscriber$inboundSchema,\n  properties: BenefitGrantDiscordProperties$inboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"granted_at\": \"grantedAt\",\n    \"revoked_at\": \"revokedAt\",\n    \"customer_id\": \"customerId\",\n    \"benefit_id\": \"benefitId\",\n    \"subscription_id\": \"subscriptionId\",\n    \"order_id\": \"orderId\",\n    \"is_granted\": \"isGranted\",\n    \"is_revoked\": \"isRevoked\",\n  });\n});\n\n/** @internal */\nexport type CustomerBenefitGrantDiscord$Outbound = {\n  created_at: string;\n  modified_at: string | null;\n  id: string;\n  granted_at: string | null;\n  revoked_at: string | null;\n  customer_id: string;\n  benefit_id: string;\n  subscription_id: string | null;\n  order_id: string | null;\n  is_granted: boolean;\n  is_revoked: boolean;\n  customer: CustomerPortalCustomer$Outbound;\n  benefit: BenefitDiscordSubscriber$Outbound;\n  properties: BenefitGrantDiscordProperties$Outbound;\n};\n\n/** @internal */\nexport const CustomerBenefitGrantDiscord$outboundSchema: z.ZodType<\n  CustomerBenefitGrantDiscord$Outbound,\n  z.ZodTypeDef,\n  CustomerBenefitGrantDiscord\n> = z.object({\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  id: z.string(),\n  grantedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  revokedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  customerId: z.string(),\n  benefitId: z.string(),\n  subscriptionId: z.nullable(z.string()),\n  orderId: z.nullable(z.string()),\n  isGranted: z.boolean(),\n  isRevoked: z.boolean(),\n  customer: CustomerPortalCustomer$outboundSchema,\n  benefit: BenefitDiscordSubscriber$outboundSchema,\n  properties: BenefitGrantDiscordProperties$outboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    grantedAt: \"granted_at\",\n    revokedAt: \"revoked_at\",\n    customerId: \"customer_id\",\n    benefitId: \"benefit_id\",\n    subscriptionId: \"subscription_id\",\n    orderId: \"order_id\",\n    isGranted: \"is_granted\",\n    isRevoked: \"is_revoked\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomerBenefitGrantDiscord$ {\n  /** @deprecated use `CustomerBenefitGrantDiscord$inboundSchema` instead. */\n  export const inboundSchema = CustomerBenefitGrantDiscord$inboundSchema;\n  /** @deprecated use `CustomerBenefitGrantDiscord$outboundSchema` instead. */\n  export const outboundSchema = CustomerBenefitGrantDiscord$outboundSchema;\n  /** @deprecated use `CustomerBenefitGrantDiscord$Outbound` instead. */\n  export type Outbound = CustomerBenefitGrantDiscord$Outbound;\n}\n\nexport function customerBenefitGrantDiscordToJSON(\n  customerBenefitGrantDiscord: CustomerBenefitGrantDiscord,\n): string {\n  return JSON.stringify(\n    CustomerBenefitGrantDiscord$outboundSchema.parse(\n      customerBenefitGrantDiscord,\n    ),\n  );\n}\n\nexport function customerBenefitGrantDiscordFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomerBenefitGrantDiscord, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomerBenefitGrantDiscord$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomerBenefitGrantDiscord' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 11415, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11421, "column": 0}, "map": {"version":3,"file":"benefitdownloadablessubscriberproperties.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/benefitdownloadablessubscriberproperties.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport type BenefitDownloadablesSubscriberProperties = {\n  activeFiles: Array<string>;\n};\n\n/** @internal */\nexport const BenefitDownloadablesSubscriberProperties$inboundSchema: z.ZodType<\n  BenefitDownloadablesSubscriberProperties,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  active_files: z.array(z.string()),\n}).transform((v) => {\n  return remap$(v, {\n    \"active_files\": \"activeFiles\",\n  });\n});\n\n/** @internal */\nexport type BenefitDownloadablesSubscriberProperties$Outbound = {\n  active_files: Array<string>;\n};\n\n/** @internal */\nexport const BenefitDownloadablesSubscriberProperties$outboundSchema: z.ZodType<\n  BenefitDownloadablesSubscriberProperties$Outbound,\n  z.ZodTypeDef,\n  BenefitDownloadablesSubscriberProperties\n> = z.object({\n  activeFiles: z.array(z.string()),\n}).transform((v) => {\n  return remap$(v, {\n    activeFiles: \"active_files\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitDownloadablesSubscriberProperties$ {\n  /** @deprecated use `BenefitDownloadablesSubscriberProperties$inboundSchema` instead. */\n  export const inboundSchema =\n    BenefitDownloadablesSubscriberProperties$inboundSchema;\n  /** @deprecated use `BenefitDownloadablesSubscriberProperties$outboundSchema` instead. */\n  export const outboundSchema =\n    BenefitDownloadablesSubscriberProperties$outboundSchema;\n  /** @deprecated use `BenefitDownloadablesSubscriberProperties$Outbound` instead. */\n  export type Outbound = BenefitDownloadablesSubscriberProperties$Outbound;\n}\n\nexport function benefitDownloadablesSubscriberPropertiesToJSON(\n  benefitDownloadablesSubscriberProperties:\n    BenefitDownloadablesSubscriberProperties,\n): string {\n  return JSON.stringify(\n    BenefitDownloadablesSubscriberProperties$outboundSchema.parse(\n      benefitDownloadablesSubscriberProperties,\n    ),\n  );\n}\n\nexport function benefitDownloadablesSubscriberPropertiesFromJSON(\n  jsonString: string,\n): SafeParseResult<\n  BenefitDownloadablesSubscriberProperties,\n  SDKValidationError\n> {\n  return safeParse(\n    jsonString,\n    (x) =>\n      BenefitDownloadablesSubscriberProperties$inboundSchema.parse(\n        JSON.parse(x),\n      ),\n    `Failed to parse 'BenefitDownloadablesSubscriberProperties' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;;;;;AAS1C,MAAM,sDAAsD,GAI/D,CAAC,6IAAC,MAAM,CAAC;IACX,YAAY,EAAE,CAAC,6IAAC,KAAK,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;CAClC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,cAAc,EAAE,aAAa;KAC9B,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAQI,MAAM,uDAAuD,GAIhE,CAAC,6IAAC,MAAM,CAAC;IACX,WAAW,EAAE,CAAC,6IAAC,KAAK,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;CACjC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,QAAO,sLAAA,AAAM,EAAC,CAAC,EAAE;QACf,WAAW,EAAE,cAAc;KAC5B,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,yCAAyC,CASzD;AATD,CAAA,SAAiB,yCAAyC;IACxD,sFAAA,EAAwF,CAC3E,0CAAA,aAAa,GACxB,sDAAsD,CAAC;IACzD,uFAAA,EAAyF,CAC5E,0CAAA,cAAc,GACzB,uDAAuD,CAAC;AAG5D,CAAC,EATgB,yCAAyC,IAAA,CAAzC,yCAAyC,GAAA,CAAA,CAAA,GASzD;AAEK,SAAU,8CAA8C,CAC5D,wCAC0C;IAE1C,OAAO,IAAI,CAAC,SAAS,CACnB,uDAAuD,CAAC,KAAK,CAC3D,wCAAwC,CACzC,CACF,CAAC;AACJ,CAAC;AAEK,SAAU,gDAAgD,CAC9D,UAAkB;IAKlB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CACF,CADI,qDACkD,CAAC,KAAK,CAC1D,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CACd,EACH,CAAA,oEAAA,CAAsE,CACvE,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 11462, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11468, "column": 0}, "map": {"version":3,"file":"benefitdownloadablessubscriber.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/benefitdownloadablessubscriber.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  BenefitDownloadablesSubscriberProperties,\n  BenefitDownloadablesSubscriberProperties$inboundSchema,\n  BenefitDownloadablesSubscriberProperties$Outbound,\n  BenefitDownloadablesSubscriberProperties$outboundSchema,\n} from \"./benefitdownloadablessubscriberproperties.js\";\nimport {\n  Organization,\n  Organization$inboundSchema,\n  Organization$Outbound,\n  Organization$outboundSchema,\n} from \"./organization.js\";\n\nexport type BenefitDownloadablesSubscriberMetadata =\n  | string\n  | number\n  | number\n  | boolean;\n\nexport type BenefitDownloadablesSubscriber = {\n  /**\n   * The ID of the benefit.\n   */\n  id: string;\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  type?: \"downloadables\" | undefined;\n  /**\n   * The description of the benefit.\n   */\n  description: string;\n  /**\n   * Whether the benefit is selectable when creating a product.\n   */\n  selectable: boolean;\n  /**\n   * Whether the benefit is deletable.\n   */\n  deletable: boolean;\n  /**\n   * The ID of the organization owning the benefit.\n   */\n  organizationId: string;\n  metadata: { [k: string]: string | number | number | boolean };\n  organization: Organization;\n  properties: BenefitDownloadablesSubscriberProperties;\n};\n\n/** @internal */\nexport const BenefitDownloadablesSubscriberMetadata$inboundSchema: z.ZodType<\n  BenefitDownloadablesSubscriberMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type BenefitDownloadablesSubscriberMetadata$Outbound =\n  | string\n  | number\n  | number\n  | boolean;\n\n/** @internal */\nexport const BenefitDownloadablesSubscriberMetadata$outboundSchema: z.ZodType<\n  BenefitDownloadablesSubscriberMetadata$Outbound,\n  z.ZodTypeDef,\n  BenefitDownloadablesSubscriberMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitDownloadablesSubscriberMetadata$ {\n  /** @deprecated use `BenefitDownloadablesSubscriberMetadata$inboundSchema` instead. */\n  export const inboundSchema =\n    BenefitDownloadablesSubscriberMetadata$inboundSchema;\n  /** @deprecated use `BenefitDownloadablesSubscriberMetadata$outboundSchema` instead. */\n  export const outboundSchema =\n    BenefitDownloadablesSubscriberMetadata$outboundSchema;\n  /** @deprecated use `BenefitDownloadablesSubscriberMetadata$Outbound` instead. */\n  export type Outbound = BenefitDownloadablesSubscriberMetadata$Outbound;\n}\n\nexport function benefitDownloadablesSubscriberMetadataToJSON(\n  benefitDownloadablesSubscriberMetadata:\n    BenefitDownloadablesSubscriberMetadata,\n): string {\n  return JSON.stringify(\n    BenefitDownloadablesSubscriberMetadata$outboundSchema.parse(\n      benefitDownloadablesSubscriberMetadata,\n    ),\n  );\n}\n\nexport function benefitDownloadablesSubscriberMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitDownloadablesSubscriberMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) =>\n      BenefitDownloadablesSubscriberMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitDownloadablesSubscriberMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const BenefitDownloadablesSubscriber$inboundSchema: z.ZodType<\n  BenefitDownloadablesSubscriber,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  id: z.string(),\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  type: z.literal(\"downloadables\").optional(),\n  description: z.string(),\n  selectable: z.boolean(),\n  deletable: z.boolean(),\n  organization_id: z.string(),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  organization: Organization$inboundSchema,\n  properties: BenefitDownloadablesSubscriberProperties$inboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"organization_id\": \"organizationId\",\n  });\n});\n\n/** @internal */\nexport type BenefitDownloadablesSubscriber$Outbound = {\n  id: string;\n  created_at: string;\n  modified_at: string | null;\n  type: \"downloadables\";\n  description: string;\n  selectable: boolean;\n  deletable: boolean;\n  organization_id: string;\n  metadata: { [k: string]: string | number | number | boolean };\n  organization: Organization$Outbound;\n  properties: BenefitDownloadablesSubscriberProperties$Outbound;\n};\n\n/** @internal */\nexport const BenefitDownloadablesSubscriber$outboundSchema: z.ZodType<\n  BenefitDownloadablesSubscriber$Outbound,\n  z.ZodTypeDef,\n  BenefitDownloadablesSubscriber\n> = z.object({\n  id: z.string(),\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  type: z.literal(\"downloadables\").default(\"downloadables\" as const),\n  description: z.string(),\n  selectable: z.boolean(),\n  deletable: z.boolean(),\n  organizationId: z.string(),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  organization: Organization$outboundSchema,\n  properties: BenefitDownloadablesSubscriberProperties$outboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    organizationId: \"organization_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitDownloadablesSubscriber$ {\n  /** @deprecated use `BenefitDownloadablesSubscriber$inboundSchema` instead. */\n  export const inboundSchema = BenefitDownloadablesSubscriber$inboundSchema;\n  /** @deprecated use `BenefitDownloadablesSubscriber$outboundSchema` instead. */\n  export const outboundSchema = BenefitDownloadablesSubscriber$outboundSchema;\n  /** @deprecated use `BenefitDownloadablesSubscriber$Outbound` instead. */\n  export type Outbound = BenefitDownloadablesSubscriber$Outbound;\n}\n\nexport function benefitDownloadablesSubscriberToJSON(\n  benefitDownloadablesSubscriber: BenefitDownloadablesSubscriber,\n): string {\n  return JSON.stringify(\n    BenefitDownloadablesSubscriber$outboundSchema.parse(\n      benefitDownloadablesSubscriber,\n    ),\n  );\n}\n\nexport function benefitDownloadablesSubscriberFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitDownloadablesSubscriber, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => BenefitDownloadablesSubscriber$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitDownloadablesSubscriber' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,sDAAsD,EAEtD,uDAAuD,GACxD,MAAM,+CAA+C,CAAC;AACvD,OAAO,EAEL,0BAA0B,EAE1B,2BAA2B,GAC5B,MAAM,mBAAmB,CAAC;;;;;;;AA4CpB,MAAM,oDAAoD,GAI7D,CAAC,6IAAC,KAAK,CAAC;IAAC,CAAC,6IAAC,MAAM,EAAE;IAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAAE,CAAC,6IAAC,MAAM,EAAE;IAAE,CAAC,6IAAC,OAAO,EAAE;CAAC,CAAC,CAAC;AAU9D,MAAM,qDAAqD,GAI9D,CAAC,6IAAC,KAAK,CAAC;IAAC,CAAC,6IAAC,MAAM,EAAE;IAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAAE,CAAC,6IAAC,MAAM,EAAE;IAAE,CAAC,6IAAC,OAAO,EAAE;CAAC,CAAC,CAAC;AAM/D,IAAW,uCAAuC,CASvD;AATD,CAAA,SAAiB,uCAAuC;IACtD,oFAAA,EAAsF,CACzE,wCAAA,aAAa,GACxB,oDAAoD,CAAC;IACvD,qFAAA,EAAuF,CAC1E,wCAAA,cAAc,GACzB,qDAAqD,CAAC;AAG1D,CAAC,EATgB,uCAAuC,IAAA,CAAvC,uCAAuC,GAAA,CAAA,CAAA,GASvD;AAEK,SAAU,4CAA4C,CAC1D,sCACwC;IAExC,OAAO,IAAI,CAAC,SAAS,CACnB,qDAAqD,CAAC,KAAK,CACzD,sCAAsC,CACvC,CACF,CAAC;AACJ,CAAC;AAEK,SAAU,8CAA8C,CAC5D,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CACF,CADI,mDACgD,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC3E,CAAA,kEAAA,CAAoE,CACrE,CAAC;AACJ,CAAC;AAGM,MAAM,4CAA4C,GAIrD,CAAC,6IAAC,MAAM,CAAC;IACX,EAAE,EAAE,CAAC,6IAAC,MAAM,EAAE;IACd,UAAU,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,CAAC;QAAE,MAAM,EAAE,IAAI;IAAA,CAAE,CAAC,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;IAC7E,WAAW,EAAE,CAAC,6IAAC,QAAQ,CACrB,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,CAAC;QAAE,MAAM,EAAE,IAAI;IAAA,CAAE,CAAC,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAClE;IACD,IAAI,EAAE,CAAC,6IAAC,OAAO,CAAC,eAAe,CAAC,CAAC,QAAQ,EAAE;IAC3C,WAAW,EAAE,CAAC,6IAAC,MAAM,EAAE;IACvB,UAAU,EAAE,CAAC,6IAAC,OAAO,EAAE;IACvB,SAAS,EAAE,CAAC,6IAAC,OAAO,EAAE;IACtB,eAAe,EAAE,CAAC,6IAAC,MAAM,EAAE;IAC3B,QAAQ,EAAE,CAAC,6IAAC,MAAM,CAChB,CAAC,6IAAC,KAAK,CAAC;QAAC,CAAC,6IAAC,MAAM,EAAE;QAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;QAAE,CAAC,6IAAC,MAAM,EAAE;QAAE,CAAC,6IAAC,OAAO,EAAE;KAAC,CAAC,CACjE;IACD,YAAY,gMAAE,6BAA0B;IACxC,UAAU,4NAAE,yDAAsD;CACnE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAM,AAAN,EAAO,CAAC,EAAE;QACf,YAAY,EAAE,WAAW;QACzB,aAAa,EAAE,YAAY;QAC3B,iBAAiB,EAAE,gBAAgB;KACpC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAkBI,MAAM,6CAA6C,GAItD,CAAC,6IAAC,MAAM,CAAC;IACX,EAAE,EAAE,CAAC,6IAAC,MAAM,EAAE;IACd,SAAS,EAAE,CAAC,6IAAC,IAAI,EAAE,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,WAAW,EAAE,CAAC;IACnD,UAAU,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,IAAI,EAAE,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;IAChE,IAAI,EAAE,CAAC,6IAAC,OAAO,CAAC,eAAe,CAAC,CAAC,OAAO,CAAC,eAAwB,CAAC;IAClE,WAAW,EAAE,CAAC,6IAAC,MAAM,EAAE;IACvB,UAAU,EAAE,CAAC,6IAAC,OAAO,EAAE;IACvB,SAAS,EAAE,CAAC,6IAAC,OAAO,EAAE;IACtB,cAAc,EAAE,CAAC,6IAAC,MAAM,EAAE;IAC1B,QAAQ,EAAE,CAAC,6IAAC,MAAM,CAChB,CAAC,6IAAC,KAAK,CAAC;QAAC,CAAC,6IAAC,MAAM,EAAE;QAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;QAAE,CAAC,6IAAC,MAAM,EAAE;QAAE,CAAC,6IAAC,OAAO,EAAE;KAAC,CAAC,CACjE;IACD,YAAY,gMAAE,8BAA2B;IACzC,UAAU,4NAAE,0DAAuD;CACpE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,SAAS,EAAE,YAAY;QACvB,UAAU,EAAE,aAAa;QACzB,cAAc,EAAE,iBAAiB;KAClC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,+BAA+B,CAO/C;AAPD,CAAA,SAAiB,+BAA+B;IAC9C,4EAAA,EAA8E,CACjE,gCAAA,aAAa,GAAG,4CAA4C,CAAC;IAC1E,6EAAA,EAA+E,CAClE,gCAAA,cAAc,GAAG,6CAA6C,CAAC;AAG9E,CAAC,EAPgB,+BAA+B,IAAA,CAA/B,+BAA+B,GAAA,CAAA,CAAA,GAO/C;AAEK,SAAU,oCAAoC,CAClD,8BAA8D;IAE9D,OAAO,IAAI,CAAC,SAAS,CACnB,6CAA6C,CAAC,KAAK,CACjD,8BAA8B,CAC/B,CACF,CAAC;AACJ,CAAC;AAEK,SAAU,sCAAsC,CACpD,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,2CAA6C,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACxE,CAAA,0DAAA,CAA4D,CAC7D,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 11579, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11585, "column": 0}, "map": {"version":3,"file":"customerbenefitgrantdownloadables.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customerbenefitgrantdownloadables.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  BenefitDownloadablesSubscriber,\n  BenefitDownloadablesSubscriber$inboundSchema,\n  BenefitDownloadablesSubscriber$Outbound,\n  BenefitDownloadablesSubscriber$outboundSchema,\n} from \"./benefitdownloadablessubscriber.js\";\nimport {\n  BenefitGrantDownloadablesProperties,\n  BenefitGrantDownloadablesProperties$inboundSchema,\n  BenefitGrantDownloadablesProperties$Outbound,\n  BenefitGrantDownloadablesProperties$outboundSchema,\n} from \"./benefitgrantdownloadablesproperties.js\";\nimport {\n  CustomerPortalCustomer,\n  CustomerPortalCustomer$inboundSchema,\n  CustomerPortalCustomer$Outbound,\n  CustomerPortalCustomer$outboundSchema,\n} from \"./customerportalcustomer.js\";\n\nexport type CustomerBenefitGrantDownloadables = {\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  /**\n   * The ID of the object.\n   */\n  id: string;\n  grantedAt: Date | null;\n  revokedAt: Date | null;\n  customerId: string;\n  benefitId: string;\n  subscriptionId: string | null;\n  orderId: string | null;\n  isGranted: boolean;\n  isRevoked: boolean;\n  customer: CustomerPortalCustomer;\n  benefit: BenefitDownloadablesSubscriber;\n  properties: BenefitGrantDownloadablesProperties;\n};\n\n/** @internal */\nexport const CustomerBenefitGrantDownloadables$inboundSchema: z.ZodType<\n  CustomerBenefitGrantDownloadables,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  id: z.string(),\n  granted_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  revoked_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  customer_id: z.string(),\n  benefit_id: z.string(),\n  subscription_id: z.nullable(z.string()),\n  order_id: z.nullable(z.string()),\n  is_granted: z.boolean(),\n  is_revoked: z.boolean(),\n  customer: CustomerPortalCustomer$inboundSchema,\n  benefit: BenefitDownloadablesSubscriber$inboundSchema,\n  properties: BenefitGrantDownloadablesProperties$inboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"granted_at\": \"grantedAt\",\n    \"revoked_at\": \"revokedAt\",\n    \"customer_id\": \"customerId\",\n    \"benefit_id\": \"benefitId\",\n    \"subscription_id\": \"subscriptionId\",\n    \"order_id\": \"orderId\",\n    \"is_granted\": \"isGranted\",\n    \"is_revoked\": \"isRevoked\",\n  });\n});\n\n/** @internal */\nexport type CustomerBenefitGrantDownloadables$Outbound = {\n  created_at: string;\n  modified_at: string | null;\n  id: string;\n  granted_at: string | null;\n  revoked_at: string | null;\n  customer_id: string;\n  benefit_id: string;\n  subscription_id: string | null;\n  order_id: string | null;\n  is_granted: boolean;\n  is_revoked: boolean;\n  customer: CustomerPortalCustomer$Outbound;\n  benefit: BenefitDownloadablesSubscriber$Outbound;\n  properties: BenefitGrantDownloadablesProperties$Outbound;\n};\n\n/** @internal */\nexport const CustomerBenefitGrantDownloadables$outboundSchema: z.ZodType<\n  CustomerBenefitGrantDownloadables$Outbound,\n  z.ZodTypeDef,\n  CustomerBenefitGrantDownloadables\n> = z.object({\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  id: z.string(),\n  grantedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  revokedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  customerId: z.string(),\n  benefitId: z.string(),\n  subscriptionId: z.nullable(z.string()),\n  orderId: z.nullable(z.string()),\n  isGranted: z.boolean(),\n  isRevoked: z.boolean(),\n  customer: CustomerPortalCustomer$outboundSchema,\n  benefit: BenefitDownloadablesSubscriber$outboundSchema,\n  properties: BenefitGrantDownloadablesProperties$outboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    grantedAt: \"granted_at\",\n    revokedAt: \"revoked_at\",\n    customerId: \"customer_id\",\n    benefitId: \"benefit_id\",\n    subscriptionId: \"subscription_id\",\n    orderId: \"order_id\",\n    isGranted: \"is_granted\",\n    isRevoked: \"is_revoked\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomerBenefitGrantDownloadables$ {\n  /** @deprecated use `CustomerBenefitGrantDownloadables$inboundSchema` instead. */\n  export const inboundSchema = CustomerBenefitGrantDownloadables$inboundSchema;\n  /** @deprecated use `CustomerBenefitGrantDownloadables$outboundSchema` instead. */\n  export const outboundSchema =\n    CustomerBenefitGrantDownloadables$outboundSchema;\n  /** @deprecated use `CustomerBenefitGrantDownloadables$Outbound` instead. */\n  export type Outbound = CustomerBenefitGrantDownloadables$Outbound;\n}\n\nexport function customerBenefitGrantDownloadablesToJSON(\n  customerBenefitGrantDownloadables: CustomerBenefitGrantDownloadables,\n): string {\n  return JSON.stringify(\n    CustomerBenefitGrantDownloadables$outboundSchema.parse(\n      customerBenefitGrantDownloadables,\n    ),\n  );\n}\n\nexport function customerBenefitGrantDownloadablesFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomerBenefitGrantDownloadables, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomerBenefitGrantDownloadables$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomerBenefitGrantDownloadables' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 11684, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11690, "column": 0}, "map": {"version":3,"file":"benefitgithubrepositorysubscriberproperties.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/benefitgithubrepositorysubscriberproperties.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\n/**\n * Properties available to subscribers for a benefit of type `github_repository`.\n */\nexport type BenefitGitHubRepositorySubscriberProperties = {\n  /**\n   * The owner of the repository.\n   */\n  repositoryOwner: string;\n  /**\n   * The name of the repository.\n   */\n  repositoryName: string;\n};\n\n/** @internal */\nexport const BenefitGitHubRepositorySubscriberProperties$inboundSchema:\n  z.ZodType<\n    BenefitGitHubRepositorySubscriberProperties,\n    z.ZodTypeDef,\n    unknown\n  > = z.object({\n    repository_owner: z.string(),\n    repository_name: z.string(),\n  }).transform((v) => {\n    return remap$(v, {\n      \"repository_owner\": \"repositoryOwner\",\n      \"repository_name\": \"repositoryName\",\n    });\n  });\n\n/** @internal */\nexport type BenefitGitHubRepositorySubscriberProperties$Outbound = {\n  repository_owner: string;\n  repository_name: string;\n};\n\n/** @internal */\nexport const BenefitGitHubRepositorySubscriberProperties$outboundSchema:\n  z.ZodType<\n    BenefitGitHubRepositorySubscriberProperties$Outbound,\n    z.ZodTypeDef,\n    BenefitGitHubRepositorySubscriberProperties\n  > = z.object({\n    repositoryOwner: z.string(),\n    repositoryName: z.string(),\n  }).transform((v) => {\n    return remap$(v, {\n      repositoryOwner: \"repository_owner\",\n      repositoryName: \"repository_name\",\n    });\n  });\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitGitHubRepositorySubscriberProperties$ {\n  /** @deprecated use `BenefitGitHubRepositorySubscriberProperties$inboundSchema` instead. */\n  export const inboundSchema =\n    BenefitGitHubRepositorySubscriberProperties$inboundSchema;\n  /** @deprecated use `BenefitGitHubRepositorySubscriberProperties$outboundSchema` instead. */\n  export const outboundSchema =\n    BenefitGitHubRepositorySubscriberProperties$outboundSchema;\n  /** @deprecated use `BenefitGitHubRepositorySubscriberProperties$Outbound` instead. */\n  export type Outbound = BenefitGitHubRepositorySubscriberProperties$Outbound;\n}\n\nexport function benefitGitHubRepositorySubscriberPropertiesToJSON(\n  benefitGitHubRepositorySubscriberProperties:\n    BenefitGitHubRepositorySubscriberProperties,\n): string {\n  return JSON.stringify(\n    BenefitGitHubRepositorySubscriberProperties$outboundSchema.parse(\n      benefitGitHubRepositorySubscriberProperties,\n    ),\n  );\n}\n\nexport function benefitGitHubRepositorySubscriberPropertiesFromJSON(\n  jsonString: string,\n): SafeParseResult<\n  BenefitGitHubRepositorySubscriberProperties,\n  SDKValidationError\n> {\n  return safeParse(\n    jsonString,\n    (x) =>\n      BenefitGitHubRepositorySubscriberProperties$inboundSchema.parse(\n        JSON.parse(x),\n      ),\n    `Failed to parse 'BenefitGitHubRepositorySubscriberProperties' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;;;;;AAmB1C,MAAM,yDAAyD,GAKhE,CAAC,6IAAC,MAAM,CAAC;IACX,gBAAgB,EAAE,CAAC,6IAAC,MAAM,EAAE;IAC5B,eAAe,EAAE,CAAC,6IAAC,MAAM,EAAE;CAC5B,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,kBAAkB,EAAE,iBAAiB;QACrC,iBAAiB,EAAE,gBAAgB;KACpC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AASE,MAAM,0DAA0D,GAKjE,CAAC,6IAAC,MAAM,CAAC;IACX,eAAe,EAAE,CAAC,6IAAC,MAAM,EAAE;IAC3B,cAAc,EAAE,CAAC,6IAAC,MAAM,EAAE;CAC3B,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,QAAO,sLAAA,AAAM,EAAC,CAAC,EAAE;QACf,eAAe,EAAE,kBAAkB;QACnC,cAAc,EAAE,iBAAiB;KAClC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMC,IAAW,4CAA4C,CAS5D;AATD,CAAA,SAAiB,4CAA4C;IAC3D,yFAAA,EAA2F,CAC9E,6CAAA,aAAa,GACxB,yDAAyD,CAAC;IAC5D,0FAAA,EAA4F,CAC/E,6CAAA,cAAc,GACzB,0DAA0D,CAAC;AAG/D,CAAC,EATgB,4CAA4C,IAAA,CAA5C,4CAA4C,GAAA,CAAA,CAAA,GAS5D;AAEK,SAAU,iDAAiD,CAC/D,2CAC6C;IAE7C,OAAO,IAAI,CAAC,SAAS,CACnB,0DAA0D,CAAC,KAAK,CAC9D,2CAA2C,CAC5C,CACF,CAAC;AACJ,CAAC;AAEK,SAAU,mDAAmD,CACjE,UAAkB;IAKlB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CACF,CADI,wDACqD,CAAC,KAAK,CAC7D,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CACd,EACH,CAAA,uEAAA,CAAyE,CAC1E,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 11735, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11741, "column": 0}, "map": {"version":3,"file":"benefitgithubrepositorysubscriber.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/benefitgithubrepositorysubscriber.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  BenefitGitHubRepositorySubscriberProperties,\n  BenefitGitHubRepositorySubscriberProperties$inboundSchema,\n  BenefitGitHubRepositorySubscriberProperties$Outbound,\n  BenefitGitHubRepositorySubscriberProperties$outboundSchema,\n} from \"./benefitgithubrepositorysubscriberproperties.js\";\nimport {\n  Organization,\n  Organization$inboundSchema,\n  Organization$Outbound,\n  Organization$outboundSchema,\n} from \"./organization.js\";\n\nexport type BenefitGitHubRepositorySubscriberMetadata =\n  | string\n  | number\n  | number\n  | boolean;\n\nexport type BenefitGitHubRepositorySubscriber = {\n  /**\n   * The ID of the benefit.\n   */\n  id: string;\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  type?: \"github_repository\" | undefined;\n  /**\n   * The description of the benefit.\n   */\n  description: string;\n  /**\n   * Whether the benefit is selectable when creating a product.\n   */\n  selectable: boolean;\n  /**\n   * Whether the benefit is deletable.\n   */\n  deletable: boolean;\n  /**\n   * The ID of the organization owning the benefit.\n   */\n  organizationId: string;\n  metadata: { [k: string]: string | number | number | boolean };\n  organization: Organization;\n  /**\n   * Properties available to subscribers for a benefit of type `github_repository`.\n   */\n  properties: BenefitGitHubRepositorySubscriberProperties;\n};\n\n/** @internal */\nexport const BenefitGitHubRepositorySubscriberMetadata$inboundSchema: z.ZodType<\n  BenefitGitHubRepositorySubscriberMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type BenefitGitHubRepositorySubscriberMetadata$Outbound =\n  | string\n  | number\n  | number\n  | boolean;\n\n/** @internal */\nexport const BenefitGitHubRepositorySubscriberMetadata$outboundSchema:\n  z.ZodType<\n    BenefitGitHubRepositorySubscriberMetadata$Outbound,\n    z.ZodTypeDef,\n    BenefitGitHubRepositorySubscriberMetadata\n  > = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitGitHubRepositorySubscriberMetadata$ {\n  /** @deprecated use `BenefitGitHubRepositorySubscriberMetadata$inboundSchema` instead. */\n  export const inboundSchema =\n    BenefitGitHubRepositorySubscriberMetadata$inboundSchema;\n  /** @deprecated use `BenefitGitHubRepositorySubscriberMetadata$outboundSchema` instead. */\n  export const outboundSchema =\n    BenefitGitHubRepositorySubscriberMetadata$outboundSchema;\n  /** @deprecated use `BenefitGitHubRepositorySubscriberMetadata$Outbound` instead. */\n  export type Outbound = BenefitGitHubRepositorySubscriberMetadata$Outbound;\n}\n\nexport function benefitGitHubRepositorySubscriberMetadataToJSON(\n  benefitGitHubRepositorySubscriberMetadata:\n    BenefitGitHubRepositorySubscriberMetadata,\n): string {\n  return JSON.stringify(\n    BenefitGitHubRepositorySubscriberMetadata$outboundSchema.parse(\n      benefitGitHubRepositorySubscriberMetadata,\n    ),\n  );\n}\n\nexport function benefitGitHubRepositorySubscriberMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<\n  BenefitGitHubRepositorySubscriberMetadata,\n  SDKValidationError\n> {\n  return safeParse(\n    jsonString,\n    (x) =>\n      BenefitGitHubRepositorySubscriberMetadata$inboundSchema.parse(\n        JSON.parse(x),\n      ),\n    `Failed to parse 'BenefitGitHubRepositorySubscriberMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const BenefitGitHubRepositorySubscriber$inboundSchema: z.ZodType<\n  BenefitGitHubRepositorySubscriber,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  id: z.string(),\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  type: z.literal(\"github_repository\").optional(),\n  description: z.string(),\n  selectable: z.boolean(),\n  deletable: z.boolean(),\n  organization_id: z.string(),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  organization: Organization$inboundSchema,\n  properties: BenefitGitHubRepositorySubscriberProperties$inboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"organization_id\": \"organizationId\",\n  });\n});\n\n/** @internal */\nexport type BenefitGitHubRepositorySubscriber$Outbound = {\n  id: string;\n  created_at: string;\n  modified_at: string | null;\n  type: \"github_repository\";\n  description: string;\n  selectable: boolean;\n  deletable: boolean;\n  organization_id: string;\n  metadata: { [k: string]: string | number | number | boolean };\n  organization: Organization$Outbound;\n  properties: BenefitGitHubRepositorySubscriberProperties$Outbound;\n};\n\n/** @internal */\nexport const BenefitGitHubRepositorySubscriber$outboundSchema: z.ZodType<\n  BenefitGitHubRepositorySubscriber$Outbound,\n  z.ZodTypeDef,\n  BenefitGitHubRepositorySubscriber\n> = z.object({\n  id: z.string(),\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  type: z.literal(\"github_repository\").default(\"github_repository\" as const),\n  description: z.string(),\n  selectable: z.boolean(),\n  deletable: z.boolean(),\n  organizationId: z.string(),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  organization: Organization$outboundSchema,\n  properties: BenefitGitHubRepositorySubscriberProperties$outboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    organizationId: \"organization_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitGitHubRepositorySubscriber$ {\n  /** @deprecated use `BenefitGitHubRepositorySubscriber$inboundSchema` instead. */\n  export const inboundSchema = BenefitGitHubRepositorySubscriber$inboundSchema;\n  /** @deprecated use `BenefitGitHubRepositorySubscriber$outboundSchema` instead. */\n  export const outboundSchema =\n    BenefitGitHubRepositorySubscriber$outboundSchema;\n  /** @deprecated use `BenefitGitHubRepositorySubscriber$Outbound` instead. */\n  export type Outbound = BenefitGitHubRepositorySubscriber$Outbound;\n}\n\nexport function benefitGitHubRepositorySubscriberToJSON(\n  benefitGitHubRepositorySubscriber: BenefitGitHubRepositorySubscriber,\n): string {\n  return JSON.stringify(\n    BenefitGitHubRepositorySubscriber$outboundSchema.parse(\n      benefitGitHubRepositorySubscriber,\n    ),\n  );\n}\n\nexport function benefitGitHubRepositorySubscriberFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitGitHubRepositorySubscriber, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => BenefitGitHubRepositorySubscriber$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitGitHubRepositorySubscriber' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 11852, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11858, "column": 0}, "map": {"version":3,"file":"customerbenefitgrantgithubrepository.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customerbenefitgrantgithubrepository.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  BenefitGitHubRepositorySubscriber,\n  BenefitGitHubRepositorySubscriber$inboundSchema,\n  BenefitGitHubRepositorySubscriber$Outbound,\n  BenefitGitHubRepositorySubscriber$outboundSchema,\n} from \"./benefitgithubrepositorysubscriber.js\";\nimport {\n  BenefitGrantGitHubRepositoryProperties,\n  BenefitGrantGitHubRepositoryProperties$inboundSchema,\n  BenefitGrantGitHubRepositoryProperties$Outbound,\n  BenefitGrantGitHubRepositoryProperties$outboundSchema,\n} from \"./benefitgrantgithubrepositoryproperties.js\";\nimport {\n  CustomerPortalCustomer,\n  CustomerPortalCustomer$inboundSchema,\n  CustomerPortalCustomer$Outbound,\n  CustomerPortalCustomer$outboundSchema,\n} from \"./customerportalcustomer.js\";\n\nexport type CustomerBenefitGrantGitHubRepository = {\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  /**\n   * The ID of the object.\n   */\n  id: string;\n  grantedAt: Date | null;\n  revokedAt: Date | null;\n  customerId: string;\n  benefitId: string;\n  subscriptionId: string | null;\n  orderId: string | null;\n  isGranted: boolean;\n  isRevoked: boolean;\n  customer: CustomerPortalCustomer;\n  benefit: BenefitGitHubRepositorySubscriber;\n  properties: BenefitGrantGitHubRepositoryProperties;\n};\n\n/** @internal */\nexport const CustomerBenefitGrantGitHubRepository$inboundSchema: z.ZodType<\n  CustomerBenefitGrantGitHubRepository,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  id: z.string(),\n  granted_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  revoked_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  customer_id: z.string(),\n  benefit_id: z.string(),\n  subscription_id: z.nullable(z.string()),\n  order_id: z.nullable(z.string()),\n  is_granted: z.boolean(),\n  is_revoked: z.boolean(),\n  customer: CustomerPortalCustomer$inboundSchema,\n  benefit: BenefitGitHubRepositorySubscriber$inboundSchema,\n  properties: BenefitGrantGitHubRepositoryProperties$inboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"granted_at\": \"grantedAt\",\n    \"revoked_at\": \"revokedAt\",\n    \"customer_id\": \"customerId\",\n    \"benefit_id\": \"benefitId\",\n    \"subscription_id\": \"subscriptionId\",\n    \"order_id\": \"orderId\",\n    \"is_granted\": \"isGranted\",\n    \"is_revoked\": \"isRevoked\",\n  });\n});\n\n/** @internal */\nexport type CustomerBenefitGrantGitHubRepository$Outbound = {\n  created_at: string;\n  modified_at: string | null;\n  id: string;\n  granted_at: string | null;\n  revoked_at: string | null;\n  customer_id: string;\n  benefit_id: string;\n  subscription_id: string | null;\n  order_id: string | null;\n  is_granted: boolean;\n  is_revoked: boolean;\n  customer: CustomerPortalCustomer$Outbound;\n  benefit: BenefitGitHubRepositorySubscriber$Outbound;\n  properties: BenefitGrantGitHubRepositoryProperties$Outbound;\n};\n\n/** @internal */\nexport const CustomerBenefitGrantGitHubRepository$outboundSchema: z.ZodType<\n  CustomerBenefitGrantGitHubRepository$Outbound,\n  z.ZodTypeDef,\n  CustomerBenefitGrantGitHubRepository\n> = z.object({\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  id: z.string(),\n  grantedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  revokedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  customerId: z.string(),\n  benefitId: z.string(),\n  subscriptionId: z.nullable(z.string()),\n  orderId: z.nullable(z.string()),\n  isGranted: z.boolean(),\n  isRevoked: z.boolean(),\n  customer: CustomerPortalCustomer$outboundSchema,\n  benefit: BenefitGitHubRepositorySubscriber$outboundSchema,\n  properties: BenefitGrantGitHubRepositoryProperties$outboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    grantedAt: \"granted_at\",\n    revokedAt: \"revoked_at\",\n    customerId: \"customer_id\",\n    benefitId: \"benefit_id\",\n    subscriptionId: \"subscription_id\",\n    orderId: \"order_id\",\n    isGranted: \"is_granted\",\n    isRevoked: \"is_revoked\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomerBenefitGrantGitHubRepository$ {\n  /** @deprecated use `CustomerBenefitGrantGitHubRepository$inboundSchema` instead. */\n  export const inboundSchema =\n    CustomerBenefitGrantGitHubRepository$inboundSchema;\n  /** @deprecated use `CustomerBenefitGrantGitHubRepository$outboundSchema` instead. */\n  export const outboundSchema =\n    CustomerBenefitGrantGitHubRepository$outboundSchema;\n  /** @deprecated use `CustomerBenefitGrantGitHubRepository$Outbound` instead. */\n  export type Outbound = CustomerBenefitGrantGitHubRepository$Outbound;\n}\n\nexport function customerBenefitGrantGitHubRepositoryToJSON(\n  customerBenefitGrantGitHubRepository: CustomerBenefitGrantGitHubRepository,\n): string {\n  return JSON.stringify(\n    CustomerBenefitGrantGitHubRepository$outboundSchema.parse(\n      customerBenefitGrantGitHubRepository,\n    ),\n  );\n}\n\nexport function customerBenefitGrantGitHubRepositoryFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomerBenefitGrantGitHubRepository, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) =>\n      CustomerBenefitGrantGitHubRepository$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomerBenefitGrantGitHubRepository' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,+CAA+C,EAE/C,gDAAgD,GACjD,MAAM,wCAAwC,CAAC;AAChD,OAAO,EAEL,oDAAoD,EAEpD,qDAAqD,GACtD,MAAM,6CAA6C,CAAC;AACrD,OAAO,EAEL,oCAAoC,EAEpC,qCAAqC,GACtC,MAAM,6BAA6B,CAAC;;;;;;;;AA6B9B,MAAM,kDAAkD,GAI3D,CAAC,6IAAC,MAAM,CAAC;IACX,UAAU,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,CAAC;QAAE,MAAM,EAAE,IAAI;IAAA,CAAE,CAAC,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;IAC7E,WAAW,EAAE,CAAC,6IAAC,QAAQ,CACrB,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,CAAC;QAAE,MAAM,EAAE,IAAI;IAAA,CAAE,CAAC,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAClE;IACD,EAAE,EAAE,CAAC,6IAAC,MAAM,EAAE;IACd,UAAU,EAAE,CAAC,6IAAC,QAAQ,CACpB,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,CAAC;QAAE,MAAM,EAAE,IAAI;IAAA,CAAE,CAAC,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAClE;IACD,UAAU,EAAE,CAAC,6IAAC,QAAQ,CACpB,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,CAAC;QAAE,MAAM,EAAE,IAAI;IAAA,CAAE,CAAC,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAClE;IACD,WAAW,EAAE,CAAC,6IAAC,MAAM,EAAE;IACvB,UAAU,EAAE,CAAC,6IAAC,MAAM,EAAE;IACtB,eAAe,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;IACvC,QAAQ,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;IAChC,UAAU,EAAE,CAAC,6IAAC,OAAO,EAAE;IACvB,UAAU,EAAE,CAAC,6IAAC,OAAO,EAAE;IACvB,QAAQ,0MAAE,uCAAoC;IAC9C,OAAO,qNAAE,kDAA+C;IACxD,UAAU,0NAAE,uDAAoD;CACjE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,WAAO,mLAAA,AAAM,EAAC,CAAC,EAAE;QACf,YAAY,EAAE,WAAW;QACzB,aAAa,EAAE,YAAY;QAC3B,YAAY,EAAE,WAAW;QACzB,YAAY,EAAE,WAAW;QACzB,aAAa,EAAE,YAAY;QAC3B,YAAY,EAAE,WAAW;QACzB,iBAAiB,EAAE,gBAAgB;QACnC,UAAU,EAAE,SAAS;QACrB,YAAY,EAAE,WAAW;QACzB,YAAY,EAAE,WAAW;KAC1B,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAqBI,MAAM,mDAAmD,GAI5D,CAAC,6IAAC,MAAM,CAAC;IACX,SAAS,EAAE,CAAC,6IAAC,IAAI,EAAE,CAAC,SAAS,EAAC,CAAC,CAAC,EAAG,AAAD,CAAE,CAAC,WAAW,EAAE,CAAC;IACnD,UAAU,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,IAAI,EAAE,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;IAChE,EAAE,EAAE,CAAC,6IAAC,MAAM,EAAE;IACd,SAAS,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,IAAI,EAAE,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;IAC/D,SAAS,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,IAAI,EAAE,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;IAC/D,UAAU,EAAE,CAAC,6IAAC,MAAM,EAAE;IACtB,SAAS,EAAE,CAAC,6IAAC,MAAM,EAAE;IACrB,cAAc,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;IACtC,OAAO,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;IAC/B,SAAS,EAAE,CAAC,6IAAC,OAAO,EAAE;IACtB,SAAS,EAAE,CAAC,6IAAC,OAAO,EAAE;IACtB,QAAQ,0MAAE,wCAAqC;IAC/C,OAAO,qNAAE,mDAAgD;IACzD,UAAU,0NAAE,wDAAqD;CAClE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,SAAS,EAAE,YAAY;QACvB,UAAU,EAAE,aAAa;QACzB,SAAS,EAAE,YAAY;QACvB,SAAS,EAAE,YAAY;QACvB,UAAU,EAAE,aAAa;QACzB,SAAS,EAAE,YAAY;QACvB,cAAc,EAAE,iBAAiB;QACjC,OAAO,EAAE,UAAU;QACnB,SAAS,EAAE,YAAY;QACvB,SAAS,EAAE,YAAY;KACxB,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,qCAAqC,CASrD;AATD,CAAA,SAAiB,qCAAqC;IACpD,kFAAA,EAAoF,CACvE,sCAAA,aAAa,GACxB,kDAAkD,CAAC;IACrD,mFAAA,EAAqF,CACxE,sCAAA,cAAc,GACzB,mDAAmD,CAAC;AAGxD,CAAC,EATgB,qCAAqC,IAAA,CAArC,qCAAqC,GAAA,CAAA,CAAA,GASrD;AAEK,SAAU,0CAA0C,CACxD,oCAA0E;IAE1E,OAAO,IAAI,CAAC,SAAS,CACnB,mDAAmD,CAAC,KAAK,CACvD,oCAAoC,CACrC,CACF,CAAC;AACJ,CAAC;AAEK,SAAU,4CAA4C,CAC1D,UAAkB;IAElB,OAAO,wLAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CACF,CADI,iDAC8C,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACzE,CAAA,gEAAA,CAAkE,CACnE,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 11957, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11963, "column": 0}, "map": {"version":3,"file":"benefitlicensekeyssubscriberproperties.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/benefitlicensekeyssubscriberproperties.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  BenefitLicenseKeyActivationProperties,\n  BenefitLicenseKeyActivationProperties$inboundSchema,\n  BenefitLicenseKeyActivationProperties$Outbound,\n  BenefitLicenseKeyActivationProperties$outboundSchema,\n} from \"./benefitlicensekeyactivationproperties.js\";\nimport {\n  BenefitLicenseKeyExpirationProperties,\n  BenefitLicenseKeyExpirationProperties$inboundSchema,\n  BenefitLicenseKeyExpirationProperties$Outbound,\n  BenefitLicenseKeyExpirationProperties$outboundSchema,\n} from \"./benefitlicensekeyexpirationproperties.js\";\n\nexport type BenefitLicenseKeysSubscriberProperties = {\n  prefix: string | null;\n  expires: BenefitLicenseKeyExpirationProperties | null;\n  activations: BenefitLicenseKeyActivationProperties | null;\n  limitUsage: number | null;\n};\n\n/** @internal */\nexport const BenefitLicenseKeysSubscriberProperties$inboundSchema: z.ZodType<\n  BenefitLicenseKeysSubscriberProperties,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  prefix: z.nullable(z.string()),\n  expires: z.nullable(BenefitLicenseKeyExpirationProperties$inboundSchema),\n  activations: z.nullable(BenefitLicenseKeyActivationProperties$inboundSchema),\n  limit_usage: z.nullable(z.number().int()),\n}).transform((v) => {\n  return remap$(v, {\n    \"limit_usage\": \"limitUsage\",\n  });\n});\n\n/** @internal */\nexport type BenefitLicenseKeysSubscriberProperties$Outbound = {\n  prefix: string | null;\n  expires: BenefitLicenseKeyExpirationProperties$Outbound | null;\n  activations: BenefitLicenseKeyActivationProperties$Outbound | null;\n  limit_usage: number | null;\n};\n\n/** @internal */\nexport const BenefitLicenseKeysSubscriberProperties$outboundSchema: z.ZodType<\n  BenefitLicenseKeysSubscriberProperties$Outbound,\n  z.ZodTypeDef,\n  BenefitLicenseKeysSubscriberProperties\n> = z.object({\n  prefix: z.nullable(z.string()),\n  expires: z.nullable(BenefitLicenseKeyExpirationProperties$outboundSchema),\n  activations: z.nullable(BenefitLicenseKeyActivationProperties$outboundSchema),\n  limitUsage: z.nullable(z.number().int()),\n}).transform((v) => {\n  return remap$(v, {\n    limitUsage: \"limit_usage\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitLicenseKeysSubscriberProperties$ {\n  /** @deprecated use `BenefitLicenseKeysSubscriberProperties$inboundSchema` instead. */\n  export const inboundSchema =\n    BenefitLicenseKeysSubscriberProperties$inboundSchema;\n  /** @deprecated use `BenefitLicenseKeysSubscriberProperties$outboundSchema` instead. */\n  export const outboundSchema =\n    BenefitLicenseKeysSubscriberProperties$outboundSchema;\n  /** @deprecated use `BenefitLicenseKeysSubscriberProperties$Outbound` instead. */\n  export type Outbound = BenefitLicenseKeysSubscriberProperties$Outbound;\n}\n\nexport function benefitLicenseKeysSubscriberPropertiesToJSON(\n  benefitLicenseKeysSubscriberProperties:\n    BenefitLicenseKeysSubscriberProperties,\n): string {\n  return JSON.stringify(\n    BenefitLicenseKeysSubscriberProperties$outboundSchema.parse(\n      benefitLicenseKeysSubscriberProperties,\n    ),\n  );\n}\n\nexport function benefitLicenseKeysSubscriberPropertiesFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitLicenseKeysSubscriberProperties, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) =>\n      BenefitLicenseKeysSubscriberProperties$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitLicenseKeysSubscriberProperties' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,mDAAmD,EAEnD,oDAAoD,GACrD,MAAM,4CAA4C,CAAC;AACpD,OAAO,EAEL,mDAAmD,EAEnD,oDAAoD,GACrD,MAAM,4CAA4C,CAAC;;;;;;;AAU7C,MAAM,oDAAoD,GAI7D,CAAC,6IAAC,MAAM,CAAC;IACX,MAAM,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;IAC9B,OAAO,EAAE,CAAC,6IAAC,QAAQ,wNAAC,sDAAmD,CAAC;IACxE,WAAW,EAAE,CAAC,6IAAC,QAAQ,wNAAC,sDAAmD,CAAC;IAC5E,WAAW,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC;CAC1C,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,QAAO,sLAAM,AAAN,EAAO,CAAC,EAAE;QACf,aAAa,EAAE,YAAY;KAC5B,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAWI,MAAM,qDAAqD,GAI9D,CAAC,6IAAC,MAAM,CAAC;IACX,MAAM,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;IAC9B,OAAO,EAAE,CAAC,6IAAC,QAAQ,wNAAC,uDAAoD,CAAC;IACzE,WAAW,EAAE,CAAC,6IAAC,QAAQ,wNAAC,uDAAoD,CAAC;IAC7E,UAAU,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC;CACzC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,UAAU,EAAE,aAAa;KAC1B,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,uCAAuC,CASvD;AATD,CAAA,SAAiB,uCAAuC;IACtD,oFAAA,EAAsF,CACzE,wCAAA,aAAa,GACxB,oDAAoD,CAAC;IACvD,qFAAA,EAAuF,CAC1E,wCAAA,cAAc,GACzB,qDAAqD,CAAC;AAG1D,CAAC,EATgB,uCAAuC,IAAA,CAAvC,uCAAuC,GAAA,CAAA,CAAA,GASvD;AAEK,SAAU,4CAA4C,CAC1D,sCACwC;IAExC,OAAO,IAAI,CAAC,SAAS,CACnB,qDAAqD,CAAC,KAAK,CACzD,sCAAsC,CACvC,CACF,CAAC;AACJ,CAAC;AAEK,SAAU,8CAA8C,CAC5D,UAAkB;IAElB,OAAO,wLAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CACF,CADI,mDACgD,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC3E,CAAA,kEAAA,CAAoE,CACrE,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 12014, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12020, "column": 0}, "map": {"version":3,"file":"benefitlicensekeyssubscriber.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/benefitlicensekeyssubscriber.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  BenefitLicenseKeysSubscriberProperties,\n  BenefitLicenseKeysSubscriberProperties$inboundSchema,\n  BenefitLicenseKeysSubscriberProperties$Outbound,\n  BenefitLicenseKeysSubscriberProperties$outboundSchema,\n} from \"./benefitlicensekeyssubscriberproperties.js\";\nimport {\n  Organization,\n  Organization$inboundSchema,\n  Organization$Outbound,\n  Organization$outboundSchema,\n} from \"./organization.js\";\n\nexport type BenefitLicenseKeysSubscriberMetadata =\n  | string\n  | number\n  | number\n  | boolean;\n\nexport type BenefitLicenseKeysSubscriber = {\n  /**\n   * The ID of the benefit.\n   */\n  id: string;\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  type?: \"license_keys\" | undefined;\n  /**\n   * The description of the benefit.\n   */\n  description: string;\n  /**\n   * Whether the benefit is selectable when creating a product.\n   */\n  selectable: boolean;\n  /**\n   * Whether the benefit is deletable.\n   */\n  deletable: boolean;\n  /**\n   * The ID of the organization owning the benefit.\n   */\n  organizationId: string;\n  metadata: { [k: string]: string | number | number | boolean };\n  organization: Organization;\n  properties: BenefitLicenseKeysSubscriberProperties;\n};\n\n/** @internal */\nexport const BenefitLicenseKeysSubscriberMetadata$inboundSchema: z.ZodType<\n  BenefitLicenseKeysSubscriberMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type BenefitLicenseKeysSubscriberMetadata$Outbound =\n  | string\n  | number\n  | number\n  | boolean;\n\n/** @internal */\nexport const BenefitLicenseKeysSubscriberMetadata$outboundSchema: z.ZodType<\n  BenefitLicenseKeysSubscriberMetadata$Outbound,\n  z.ZodTypeDef,\n  BenefitLicenseKeysSubscriberMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitLicenseKeysSubscriberMetadata$ {\n  /** @deprecated use `BenefitLicenseKeysSubscriberMetadata$inboundSchema` instead. */\n  export const inboundSchema =\n    BenefitLicenseKeysSubscriberMetadata$inboundSchema;\n  /** @deprecated use `BenefitLicenseKeysSubscriberMetadata$outboundSchema` instead. */\n  export const outboundSchema =\n    BenefitLicenseKeysSubscriberMetadata$outboundSchema;\n  /** @deprecated use `BenefitLicenseKeysSubscriberMetadata$Outbound` instead. */\n  export type Outbound = BenefitLicenseKeysSubscriberMetadata$Outbound;\n}\n\nexport function benefitLicenseKeysSubscriberMetadataToJSON(\n  benefitLicenseKeysSubscriberMetadata: BenefitLicenseKeysSubscriberMetadata,\n): string {\n  return JSON.stringify(\n    BenefitLicenseKeysSubscriberMetadata$outboundSchema.parse(\n      benefitLicenseKeysSubscriberMetadata,\n    ),\n  );\n}\n\nexport function benefitLicenseKeysSubscriberMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitLicenseKeysSubscriberMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) =>\n      BenefitLicenseKeysSubscriberMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitLicenseKeysSubscriberMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const BenefitLicenseKeysSubscriber$inboundSchema: z.ZodType<\n  BenefitLicenseKeysSubscriber,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  id: z.string(),\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  type: z.literal(\"license_keys\").optional(),\n  description: z.string(),\n  selectable: z.boolean(),\n  deletable: z.boolean(),\n  organization_id: z.string(),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  organization: Organization$inboundSchema,\n  properties: BenefitLicenseKeysSubscriberProperties$inboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"organization_id\": \"organizationId\",\n  });\n});\n\n/** @internal */\nexport type BenefitLicenseKeysSubscriber$Outbound = {\n  id: string;\n  created_at: string;\n  modified_at: string | null;\n  type: \"license_keys\";\n  description: string;\n  selectable: boolean;\n  deletable: boolean;\n  organization_id: string;\n  metadata: { [k: string]: string | number | number | boolean };\n  organization: Organization$Outbound;\n  properties: BenefitLicenseKeysSubscriberProperties$Outbound;\n};\n\n/** @internal */\nexport const BenefitLicenseKeysSubscriber$outboundSchema: z.ZodType<\n  BenefitLicenseKeysSubscriber$Outbound,\n  z.ZodTypeDef,\n  BenefitLicenseKeysSubscriber\n> = z.object({\n  id: z.string(),\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  type: z.literal(\"license_keys\").default(\"license_keys\" as const),\n  description: z.string(),\n  selectable: z.boolean(),\n  deletable: z.boolean(),\n  organizationId: z.string(),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  organization: Organization$outboundSchema,\n  properties: BenefitLicenseKeysSubscriberProperties$outboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    organizationId: \"organization_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitLicenseKeysSubscriber$ {\n  /** @deprecated use `BenefitLicenseKeysSubscriber$inboundSchema` instead. */\n  export const inboundSchema = BenefitLicenseKeysSubscriber$inboundSchema;\n  /** @deprecated use `BenefitLicenseKeysSubscriber$outboundSchema` instead. */\n  export const outboundSchema = BenefitLicenseKeysSubscriber$outboundSchema;\n  /** @deprecated use `BenefitLicenseKeysSubscriber$Outbound` instead. */\n  export type Outbound = BenefitLicenseKeysSubscriber$Outbound;\n}\n\nexport function benefitLicenseKeysSubscriberToJSON(\n  benefitLicenseKeysSubscriber: BenefitLicenseKeysSubscriber,\n): string {\n  return JSON.stringify(\n    BenefitLicenseKeysSubscriber$outboundSchema.parse(\n      benefitLicenseKeysSubscriber,\n    ),\n  );\n}\n\nexport function benefitLicenseKeysSubscriberFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitLicenseKeysSubscriber, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => BenefitLicenseKeysSubscriber$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitLicenseKeysSubscriber' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 12131, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12137, "column": 0}, "map": {"version":3,"file":"customerbenefitgrantlicensekeys.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customerbenefitgrantlicensekeys.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  BenefitGrantLicenseKeysProperties,\n  BenefitGrantLicenseKeysProperties$inboundSchema,\n  BenefitGrantLicenseKeysProperties$Outbound,\n  BenefitGrantLicenseKeysProperties$outboundSchema,\n} from \"./benefitgrantlicensekeysproperties.js\";\nimport {\n  BenefitLicenseKeysSubscriber,\n  BenefitLicenseKeysSubscriber$inboundSchema,\n  BenefitLicenseKeysSubscriber$Outbound,\n  BenefitLicenseKeysSubscriber$outboundSchema,\n} from \"./benefitlicensekeyssubscriber.js\";\nimport {\n  CustomerPortalCustomer,\n  CustomerPortalCustomer$inboundSchema,\n  CustomerPortalCustomer$Outbound,\n  CustomerPortalCustomer$outboundSchema,\n} from \"./customerportalcustomer.js\";\n\nexport type CustomerBenefitGrantLicenseKeys = {\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  /**\n   * The ID of the object.\n   */\n  id: string;\n  grantedAt: Date | null;\n  revokedAt: Date | null;\n  customerId: string;\n  benefitId: string;\n  subscriptionId: string | null;\n  orderId: string | null;\n  isGranted: boolean;\n  isRevoked: boolean;\n  customer: CustomerPortalCustomer;\n  benefit: BenefitLicenseKeysSubscriber;\n  properties: BenefitGrantLicenseKeysProperties;\n};\n\n/** @internal */\nexport const CustomerBenefitGrantLicenseKeys$inboundSchema: z.ZodType<\n  CustomerBenefitGrantLicenseKeys,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  id: z.string(),\n  granted_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  revoked_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  customer_id: z.string(),\n  benefit_id: z.string(),\n  subscription_id: z.nullable(z.string()),\n  order_id: z.nullable(z.string()),\n  is_granted: z.boolean(),\n  is_revoked: z.boolean(),\n  customer: CustomerPortalCustomer$inboundSchema,\n  benefit: BenefitLicenseKeysSubscriber$inboundSchema,\n  properties: BenefitGrantLicenseKeysProperties$inboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"granted_at\": \"grantedAt\",\n    \"revoked_at\": \"revokedAt\",\n    \"customer_id\": \"customerId\",\n    \"benefit_id\": \"benefitId\",\n    \"subscription_id\": \"subscriptionId\",\n    \"order_id\": \"orderId\",\n    \"is_granted\": \"isGranted\",\n    \"is_revoked\": \"isRevoked\",\n  });\n});\n\n/** @internal */\nexport type CustomerBenefitGrantLicenseKeys$Outbound = {\n  created_at: string;\n  modified_at: string | null;\n  id: string;\n  granted_at: string | null;\n  revoked_at: string | null;\n  customer_id: string;\n  benefit_id: string;\n  subscription_id: string | null;\n  order_id: string | null;\n  is_granted: boolean;\n  is_revoked: boolean;\n  customer: CustomerPortalCustomer$Outbound;\n  benefit: BenefitLicenseKeysSubscriber$Outbound;\n  properties: BenefitGrantLicenseKeysProperties$Outbound;\n};\n\n/** @internal */\nexport const CustomerBenefitGrantLicenseKeys$outboundSchema: z.ZodType<\n  CustomerBenefitGrantLicenseKeys$Outbound,\n  z.ZodTypeDef,\n  CustomerBenefitGrantLicenseKeys\n> = z.object({\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  id: z.string(),\n  grantedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  revokedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  customerId: z.string(),\n  benefitId: z.string(),\n  subscriptionId: z.nullable(z.string()),\n  orderId: z.nullable(z.string()),\n  isGranted: z.boolean(),\n  isRevoked: z.boolean(),\n  customer: CustomerPortalCustomer$outboundSchema,\n  benefit: BenefitLicenseKeysSubscriber$outboundSchema,\n  properties: BenefitGrantLicenseKeysProperties$outboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    grantedAt: \"granted_at\",\n    revokedAt: \"revoked_at\",\n    customerId: \"customer_id\",\n    benefitId: \"benefit_id\",\n    subscriptionId: \"subscription_id\",\n    orderId: \"order_id\",\n    isGranted: \"is_granted\",\n    isRevoked: \"is_revoked\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomerBenefitGrantLicenseKeys$ {\n  /** @deprecated use `CustomerBenefitGrantLicenseKeys$inboundSchema` instead. */\n  export const inboundSchema = CustomerBenefitGrantLicenseKeys$inboundSchema;\n  /** @deprecated use `CustomerBenefitGrantLicenseKeys$outboundSchema` instead. */\n  export const outboundSchema = CustomerBenefitGrantLicenseKeys$outboundSchema;\n  /** @deprecated use `CustomerBenefitGrantLicenseKeys$Outbound` instead. */\n  export type Outbound = CustomerBenefitGrantLicenseKeys$Outbound;\n}\n\nexport function customerBenefitGrantLicenseKeysToJSON(\n  customerBenefitGrantLicenseKeys: CustomerBenefitGrantLicenseKeys,\n): string {\n  return JSON.stringify(\n    CustomerBenefitGrantLicenseKeys$outboundSchema.parse(\n      customerBenefitGrantLicenseKeys,\n    ),\n  );\n}\n\nexport function customerBenefitGrantLicenseKeysFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomerBenefitGrantLicenseKeys, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomerBenefitGrantLicenseKeys$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomerBenefitGrantLicenseKeys' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 12236, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12242, "column": 0}, "map": {"version":3,"file":"benefitgrantmetercreditproperties.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/benefitgrantmetercreditproperties.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport type BenefitGrantMeterCreditProperties = {\n  lastCreditedMeterId: string;\n  lastCreditedUnits: number;\n  lastCreditedAt: string;\n};\n\n/** @internal */\nexport const BenefitGrantMeterCreditProperties$inboundSchema: z.ZodType<\n  BenefitGrantMeterCreditProperties,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  last_credited_meter_id: z.string(),\n  last_credited_units: z.number().int(),\n  last_credited_at: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    \"last_credited_meter_id\": \"lastCreditedMeterId\",\n    \"last_credited_units\": \"lastCreditedUnits\",\n    \"last_credited_at\": \"lastCreditedAt\",\n  });\n});\n\n/** @internal */\nexport type BenefitGrantMeterCreditProperties$Outbound = {\n  last_credited_meter_id: string;\n  last_credited_units: number;\n  last_credited_at: string;\n};\n\n/** @internal */\nexport const BenefitGrantMeterCreditProperties$outboundSchema: z.ZodType<\n  BenefitGrantMeterCreditProperties$Outbound,\n  z.ZodTypeDef,\n  BenefitGrantMeterCreditProperties\n> = z.object({\n  lastCreditedMeterId: z.string(),\n  lastCreditedUnits: z.number().int(),\n  lastCreditedAt: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    lastCreditedMeterId: \"last_credited_meter_id\",\n    lastCreditedUnits: \"last_credited_units\",\n    lastCreditedAt: \"last_credited_at\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitGrantMeterCreditProperties$ {\n  /** @deprecated use `BenefitGrantMeterCreditProperties$inboundSchema` instead. */\n  export const inboundSchema = BenefitGrantMeterCreditProperties$inboundSchema;\n  /** @deprecated use `BenefitGrantMeterCreditProperties$outboundSchema` instead. */\n  export const outboundSchema =\n    BenefitGrantMeterCreditProperties$outboundSchema;\n  /** @deprecated use `BenefitGrantMeterCreditProperties$Outbound` instead. */\n  export type Outbound = BenefitGrantMeterCreditProperties$Outbound;\n}\n\nexport function benefitGrantMeterCreditPropertiesToJSON(\n  benefitGrantMeterCreditProperties: BenefitGrantMeterCreditProperties,\n): string {\n  return JSON.stringify(\n    BenefitGrantMeterCreditProperties$outboundSchema.parse(\n      benefitGrantMeterCreditProperties,\n    ),\n  );\n}\n\nexport function benefitGrantMeterCreditPropertiesFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitGrantMeterCreditProperties, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => BenefitGrantMeterCreditProperties$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitGrantMeterCreditProperties' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;;;;;AAW1C,MAAM,+CAA+C,GAIxD,CAAC,6IAAC,MAAM,CAAC;IACX,sBAAsB,EAAE,CAAC,6IAAC,MAAM,EAAE;IAClC,mBAAmB,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IACrC,gBAAgB,EAAE,CAAC,6IAAC,MAAM,EAAE;CAC7B,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,wBAAwB,EAAE,qBAAqB;QAC/C,qBAAqB,EAAE,mBAAmB;QAC1C,kBAAkB,EAAE,gBAAgB;KACrC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAUI,MAAM,gDAAgD,GAIzD,CAAC,6IAAC,MAAM,CAAC;IACX,mBAAmB,EAAE,CAAC,6IAAC,MAAM,EAAE;IAC/B,iBAAiB,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IACnC,cAAc,EAAE,CAAC,6IAAC,MAAM,EAAE;CAC3B,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAM,AAAN,EAAO,CAAC,EAAE;QACf,mBAAmB,EAAE,wBAAwB;QAC7C,iBAAiB,EAAE,qBAAqB;QACxC,cAAc,EAAE,kBAAkB;KACnC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,kCAAkC,CAQlD;AARD,CAAA,SAAiB,kCAAkC;IACjD,+EAAA,EAAiF,CACpE,mCAAA,aAAa,GAAG,+CAA+C,CAAC;IAC7E,gFAAA,EAAkF,CACrE,mCAAA,cAAc,GACzB,gDAAgD,CAAC;AAGrD,CAAC,EARgB,kCAAkC,IAAA,CAAlC,kCAAkC,GAAA,CAAA,CAAA,GAQlD;AAEK,SAAU,uCAAuC,CACrD,iCAAoE;IAEpE,OAAO,IAAI,CAAC,SAAS,CACnB,gDAAgD,CAAC,KAAK,CACpD,iCAAiC,CAClC,CACF,CAAC;AACJ,CAAC;AAEK,SAAU,yCAAyC,CACvD,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,8CAAgD,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC3E,CAAA,6DAAA,CAA+D,CAChE,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 12291, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12297, "column": 0}, "map": {"version":3,"file":"benefitmetercreditsubscriberproperties.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/benefitmetercreditsubscriberproperties.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\n/**\n * Properties available to subscribers for a benefit of type `meter_unit`.\n */\nexport type BenefitMeterCreditSubscriberProperties = {\n  units: number;\n  rollover: boolean;\n  meterId: string;\n};\n\n/** @internal */\nexport const BenefitMeterCreditSubscriberProperties$inboundSchema: z.ZodType<\n  BenefitMeterCreditSubscriberProperties,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  units: z.number().int(),\n  rollover: z.boolean(),\n  meter_id: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    \"meter_id\": \"meterId\",\n  });\n});\n\n/** @internal */\nexport type BenefitMeterCreditSubscriberProperties$Outbound = {\n  units: number;\n  rollover: boolean;\n  meter_id: string;\n};\n\n/** @internal */\nexport const BenefitMeterCreditSubscriberProperties$outboundSchema: z.ZodType<\n  BenefitMeterCreditSubscriberProperties$Outbound,\n  z.ZodTypeDef,\n  BenefitMeterCreditSubscriberProperties\n> = z.object({\n  units: z.number().int(),\n  rollover: z.boolean(),\n  meterId: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    meterId: \"meter_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitMeterCreditSubscriberProperties$ {\n  /** @deprecated use `BenefitMeterCreditSubscriberProperties$inboundSchema` instead. */\n  export const inboundSchema =\n    BenefitMeterCreditSubscriberProperties$inboundSchema;\n  /** @deprecated use `BenefitMeterCreditSubscriberProperties$outboundSchema` instead. */\n  export const outboundSchema =\n    BenefitMeterCreditSubscriberProperties$outboundSchema;\n  /** @deprecated use `BenefitMeterCreditSubscriberProperties$Outbound` instead. */\n  export type Outbound = BenefitMeterCreditSubscriberProperties$Outbound;\n}\n\nexport function benefitMeterCreditSubscriberPropertiesToJSON(\n  benefitMeterCreditSubscriberProperties:\n    BenefitMeterCreditSubscriberProperties,\n): string {\n  return JSON.stringify(\n    BenefitMeterCreditSubscriberProperties$outboundSchema.parse(\n      benefitMeterCreditSubscriberProperties,\n    ),\n  );\n}\n\nexport function benefitMeterCreditSubscriberPropertiesFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitMeterCreditSubscriberProperties, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) =>\n      BenefitMeterCreditSubscriberProperties$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitMeterCreditSubscriberProperties' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;;;;;AAc1C,MAAM,oDAAoD,GAI7D,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IACvB,QAAQ,EAAE,CAAC,6IAAC,OAAO,EAAE;IACrB,QAAQ,EAAE,CAAC,6IAAC,MAAM,EAAE;CACrB,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,UAAU,EAAE,SAAS;KACtB,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAUI,MAAM,qDAAqD,GAI9D,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IACvB,QAAQ,EAAE,CAAC,6IAAC,OAAO,EAAE;IACrB,OAAO,EAAE,CAAC,6IAAC,MAAM,EAAE;CACpB,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAM,AAAN,EAAO,CAAC,EAAE;QACf,OAAO,EAAE,UAAU;KACpB,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,uCAAuC,CASvD;AATD,CAAA,SAAiB,uCAAuC;IACtD,oFAAA,EAAsF,CACzE,wCAAA,aAAa,GACxB,oDAAoD,CAAC;IACvD,qFAAA,EAAuF,CAC1E,wCAAA,cAAc,GACzB,qDAAqD,CAAC;AAG1D,CAAC,EATgB,uCAAuC,IAAA,CAAvC,uCAAuC,GAAA,CAAA,CAAA,GASvD;AAEK,SAAU,4CAA4C,CAC1D,sCACwC;IAExC,OAAO,IAAI,CAAC,SAAS,CACnB,qDAAqD,CAAC,KAAK,CACzD,sCAAsC,CACvC,CACF,CAAC;AACJ,CAAC;AAEK,SAAU,8CAA8C,CAC5D,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CACF,CADI,mDACgD,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC3E,CAAA,kEAAA,CAAoE,CACrE,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 12342, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12348, "column": 0}, "map": {"version":3,"file":"benefitmetercreditsubscriber.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/benefitmetercreditsubscriber.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  BenefitMeterCreditSubscriberProperties,\n  BenefitMeterCreditSubscriberProperties$inboundSchema,\n  BenefitMeterCreditSubscriberProperties$Outbound,\n  BenefitMeterCreditSubscriberProperties$outboundSchema,\n} from \"./benefitmetercreditsubscriberproperties.js\";\nimport {\n  Organization,\n  Organization$inboundSchema,\n  Organization$Outbound,\n  Organization$outboundSchema,\n} from \"./organization.js\";\n\nexport type BenefitMeterCreditSubscriberMetadata =\n  | string\n  | number\n  | number\n  | boolean;\n\nexport type BenefitMeterCreditSubscriber = {\n  /**\n   * The ID of the benefit.\n   */\n  id: string;\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  type?: \"meter_credit\" | undefined;\n  /**\n   * The description of the benefit.\n   */\n  description: string;\n  /**\n   * Whether the benefit is selectable when creating a product.\n   */\n  selectable: boolean;\n  /**\n   * Whether the benefit is deletable.\n   */\n  deletable: boolean;\n  /**\n   * The ID of the organization owning the benefit.\n   */\n  organizationId: string;\n  metadata: { [k: string]: string | number | number | boolean };\n  organization: Organization;\n  /**\n   * Properties available to subscribers for a benefit of type `meter_unit`.\n   */\n  properties: BenefitMeterCreditSubscriberProperties;\n};\n\n/** @internal */\nexport const BenefitMeterCreditSubscriberMetadata$inboundSchema: z.ZodType<\n  BenefitMeterCreditSubscriberMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type BenefitMeterCreditSubscriberMetadata$Outbound =\n  | string\n  | number\n  | number\n  | boolean;\n\n/** @internal */\nexport const BenefitMeterCreditSubscriberMetadata$outboundSchema: z.ZodType<\n  BenefitMeterCreditSubscriberMetadata$Outbound,\n  z.ZodTypeDef,\n  BenefitMeterCreditSubscriberMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitMeterCreditSubscriberMetadata$ {\n  /** @deprecated use `BenefitMeterCreditSubscriberMetadata$inboundSchema` instead. */\n  export const inboundSchema =\n    BenefitMeterCreditSubscriberMetadata$inboundSchema;\n  /** @deprecated use `BenefitMeterCreditSubscriberMetadata$outboundSchema` instead. */\n  export const outboundSchema =\n    BenefitMeterCreditSubscriberMetadata$outboundSchema;\n  /** @deprecated use `BenefitMeterCreditSubscriberMetadata$Outbound` instead. */\n  export type Outbound = BenefitMeterCreditSubscriberMetadata$Outbound;\n}\n\nexport function benefitMeterCreditSubscriberMetadataToJSON(\n  benefitMeterCreditSubscriberMetadata: BenefitMeterCreditSubscriberMetadata,\n): string {\n  return JSON.stringify(\n    BenefitMeterCreditSubscriberMetadata$outboundSchema.parse(\n      benefitMeterCreditSubscriberMetadata,\n    ),\n  );\n}\n\nexport function benefitMeterCreditSubscriberMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitMeterCreditSubscriberMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) =>\n      BenefitMeterCreditSubscriberMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitMeterCreditSubscriberMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const BenefitMeterCreditSubscriber$inboundSchema: z.ZodType<\n  BenefitMeterCreditSubscriber,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  id: z.string(),\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  type: z.literal(\"meter_credit\").optional(),\n  description: z.string(),\n  selectable: z.boolean(),\n  deletable: z.boolean(),\n  organization_id: z.string(),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  organization: Organization$inboundSchema,\n  properties: BenefitMeterCreditSubscriberProperties$inboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"organization_id\": \"organizationId\",\n  });\n});\n\n/** @internal */\nexport type BenefitMeterCreditSubscriber$Outbound = {\n  id: string;\n  created_at: string;\n  modified_at: string | null;\n  type: \"meter_credit\";\n  description: string;\n  selectable: boolean;\n  deletable: boolean;\n  organization_id: string;\n  metadata: { [k: string]: string | number | number | boolean };\n  organization: Organization$Outbound;\n  properties: BenefitMeterCreditSubscriberProperties$Outbound;\n};\n\n/** @internal */\nexport const BenefitMeterCreditSubscriber$outboundSchema: z.ZodType<\n  BenefitMeterCreditSubscriber$Outbound,\n  z.ZodTypeDef,\n  BenefitMeterCreditSubscriber\n> = z.object({\n  id: z.string(),\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  type: z.literal(\"meter_credit\").default(\"meter_credit\" as const),\n  description: z.string(),\n  selectable: z.boolean(),\n  deletable: z.boolean(),\n  organizationId: z.string(),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  organization: Organization$outboundSchema,\n  properties: BenefitMeterCreditSubscriberProperties$outboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    organizationId: \"organization_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitMeterCreditSubscriber$ {\n  /** @deprecated use `BenefitMeterCreditSubscriber$inboundSchema` instead. */\n  export const inboundSchema = BenefitMeterCreditSubscriber$inboundSchema;\n  /** @deprecated use `BenefitMeterCreditSubscriber$outboundSchema` instead. */\n  export const outboundSchema = BenefitMeterCreditSubscriber$outboundSchema;\n  /** @deprecated use `BenefitMeterCreditSubscriber$Outbound` instead. */\n  export type Outbound = BenefitMeterCreditSubscriber$Outbound;\n}\n\nexport function benefitMeterCreditSubscriberToJSON(\n  benefitMeterCreditSubscriber: BenefitMeterCreditSubscriber,\n): string {\n  return JSON.stringify(\n    BenefitMeterCreditSubscriber$outboundSchema.parse(\n      benefitMeterCreditSubscriber,\n    ),\n  );\n}\n\nexport function benefitMeterCreditSubscriberFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitMeterCreditSubscriber, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => BenefitMeterCreditSubscriber$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitMeterCreditSubscriber' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 12459, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12465, "column": 0}, "map": {"version":3,"file":"customerbenefitgrantmetercredit.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customerbenefitgrantmetercredit.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  BenefitGrantMeterCreditProperties,\n  BenefitGrantMeterCreditProperties$inboundSchema,\n  BenefitGrantMeterCreditProperties$Outbound,\n  BenefitGrantMeterCreditProperties$outboundSchema,\n} from \"./benefitgrantmetercreditproperties.js\";\nimport {\n  BenefitMeterCreditSubscriber,\n  BenefitMeterCreditSubscriber$inboundSchema,\n  BenefitMeterCreditSubscriber$Outbound,\n  BenefitMeterCreditSubscriber$outboundSchema,\n} from \"./benefitmetercreditsubscriber.js\";\nimport {\n  CustomerPortalCustomer,\n  CustomerPortalCustomer$inboundSchema,\n  CustomerPortalCustomer$Outbound,\n  CustomerPortalCustomer$outboundSchema,\n} from \"./customerportalcustomer.js\";\n\nexport type CustomerBenefitGrantMeterCredit = {\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  /**\n   * The ID of the object.\n   */\n  id: string;\n  grantedAt: Date | null;\n  revokedAt: Date | null;\n  customerId: string;\n  benefitId: string;\n  subscriptionId: string | null;\n  orderId: string | null;\n  isGranted: boolean;\n  isRevoked: boolean;\n  customer: CustomerPortalCustomer;\n  benefit: BenefitMeterCreditSubscriber;\n  properties: BenefitGrantMeterCreditProperties;\n};\n\n/** @internal */\nexport const CustomerBenefitGrantMeterCredit$inboundSchema: z.ZodType<\n  CustomerBenefitGrantMeterCredit,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  id: z.string(),\n  granted_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  revoked_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  customer_id: z.string(),\n  benefit_id: z.string(),\n  subscription_id: z.nullable(z.string()),\n  order_id: z.nullable(z.string()),\n  is_granted: z.boolean(),\n  is_revoked: z.boolean(),\n  customer: CustomerPortalCustomer$inboundSchema,\n  benefit: BenefitMeterCreditSubscriber$inboundSchema,\n  properties: BenefitGrantMeterCreditProperties$inboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"granted_at\": \"grantedAt\",\n    \"revoked_at\": \"revokedAt\",\n    \"customer_id\": \"customerId\",\n    \"benefit_id\": \"benefitId\",\n    \"subscription_id\": \"subscriptionId\",\n    \"order_id\": \"orderId\",\n    \"is_granted\": \"isGranted\",\n    \"is_revoked\": \"isRevoked\",\n  });\n});\n\n/** @internal */\nexport type CustomerBenefitGrantMeterCredit$Outbound = {\n  created_at: string;\n  modified_at: string | null;\n  id: string;\n  granted_at: string | null;\n  revoked_at: string | null;\n  customer_id: string;\n  benefit_id: string;\n  subscription_id: string | null;\n  order_id: string | null;\n  is_granted: boolean;\n  is_revoked: boolean;\n  customer: CustomerPortalCustomer$Outbound;\n  benefit: BenefitMeterCreditSubscriber$Outbound;\n  properties: BenefitGrantMeterCreditProperties$Outbound;\n};\n\n/** @internal */\nexport const CustomerBenefitGrantMeterCredit$outboundSchema: z.ZodType<\n  CustomerBenefitGrantMeterCredit$Outbound,\n  z.ZodTypeDef,\n  CustomerBenefitGrantMeterCredit\n> = z.object({\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  id: z.string(),\n  grantedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  revokedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  customerId: z.string(),\n  benefitId: z.string(),\n  subscriptionId: z.nullable(z.string()),\n  orderId: z.nullable(z.string()),\n  isGranted: z.boolean(),\n  isRevoked: z.boolean(),\n  customer: CustomerPortalCustomer$outboundSchema,\n  benefit: BenefitMeterCreditSubscriber$outboundSchema,\n  properties: BenefitGrantMeterCreditProperties$outboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    grantedAt: \"granted_at\",\n    revokedAt: \"revoked_at\",\n    customerId: \"customer_id\",\n    benefitId: \"benefit_id\",\n    subscriptionId: \"subscription_id\",\n    orderId: \"order_id\",\n    isGranted: \"is_granted\",\n    isRevoked: \"is_revoked\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomerBenefitGrantMeterCredit$ {\n  /** @deprecated use `CustomerBenefitGrantMeterCredit$inboundSchema` instead. */\n  export const inboundSchema = CustomerBenefitGrantMeterCredit$inboundSchema;\n  /** @deprecated use `CustomerBenefitGrantMeterCredit$outboundSchema` instead. */\n  export const outboundSchema = CustomerBenefitGrantMeterCredit$outboundSchema;\n  /** @deprecated use `CustomerBenefitGrantMeterCredit$Outbound` instead. */\n  export type Outbound = CustomerBenefitGrantMeterCredit$Outbound;\n}\n\nexport function customerBenefitGrantMeterCreditToJSON(\n  customerBenefitGrantMeterCredit: CustomerBenefitGrantMeterCredit,\n): string {\n  return JSON.stringify(\n    CustomerBenefitGrantMeterCredit$outboundSchema.parse(\n      customerBenefitGrantMeterCredit,\n    ),\n  );\n}\n\nexport function customerBenefitGrantMeterCreditFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomerBenefitGrantMeterCredit, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomerBenefitGrantMeterCredit$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomerBenefitGrantMeterCredit' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 12564, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12570, "column": 0}, "map": {"version":3,"file":"customerbenefitgrant.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customerbenefitgrant.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  CustomerBenefitGrantCustom,\n  CustomerBenefitGrantCustom$inboundSchema,\n  CustomerBenefitGrantCustom$Outbound,\n  CustomerBenefitGrantCustom$outboundSchema,\n} from \"./customerbenefitgrantcustom.js\";\nimport {\n  CustomerBenefitGrantDiscord,\n  CustomerBenefitGrantDiscord$inboundSchema,\n  CustomerBenefitGrantDiscord$Outbound,\n  CustomerBenefitGrantDiscord$outboundSchema,\n} from \"./customerbenefitgrantdiscord.js\";\nimport {\n  CustomerBenefitGrantDownloadables,\n  CustomerBenefitGrantDownloadables$inboundSchema,\n  CustomerBenefitGrantDownloadables$Outbound,\n  CustomerBenefitGrantDownloadables$outboundSchema,\n} from \"./customerbenefitgrantdownloadables.js\";\nimport {\n  CustomerBenefitGrantGitHubRepository,\n  CustomerBenefitGrantGitHubRepository$inboundSchema,\n  CustomerBenefitGrantGitHubRepository$Outbound,\n  CustomerBenefitGrantGitHubRepository$outboundSchema,\n} from \"./customerbenefitgrantgithubrepository.js\";\nimport {\n  CustomerBenefitGrantLicenseKeys,\n  CustomerBenefitGrantLicenseKeys$inboundSchema,\n  CustomerBenefitGrantLicenseKeys$Outbound,\n  CustomerBenefitGrantLicenseKeys$outboundSchema,\n} from \"./customerbenefitgrantlicensekeys.js\";\nimport {\n  CustomerBenefitGrantMeterCredit,\n  CustomerBenefitGrantMeterCredit$inboundSchema,\n  CustomerBenefitGrantMeterCredit$Outbound,\n  CustomerBenefitGrantMeterCredit$outboundSchema,\n} from \"./customerbenefitgrantmetercredit.js\";\n\nexport type CustomerBenefitGrant =\n  | CustomerBenefitGrantDiscord\n  | CustomerBenefitGrantGitHubRepository\n  | CustomerBenefitGrantDownloadables\n  | CustomerBenefitGrantLicenseKeys\n  | CustomerBenefitGrantCustom\n  | CustomerBenefitGrantMeterCredit;\n\n/** @internal */\nexport const CustomerBenefitGrant$inboundSchema: z.ZodType<\n  CustomerBenefitGrant,\n  z.ZodTypeDef,\n  unknown\n> = z.union([\n  CustomerBenefitGrantDiscord$inboundSchema,\n  CustomerBenefitGrantGitHubRepository$inboundSchema,\n  CustomerBenefitGrantDownloadables$inboundSchema,\n  CustomerBenefitGrantLicenseKeys$inboundSchema,\n  CustomerBenefitGrantCustom$inboundSchema,\n  CustomerBenefitGrantMeterCredit$inboundSchema,\n]);\n\n/** @internal */\nexport type CustomerBenefitGrant$Outbound =\n  | CustomerBenefitGrantDiscord$Outbound\n  | CustomerBenefitGrantGitHubRepository$Outbound\n  | CustomerBenefitGrantDownloadables$Outbound\n  | CustomerBenefitGrantLicenseKeys$Outbound\n  | CustomerBenefitGrantCustom$Outbound\n  | CustomerBenefitGrantMeterCredit$Outbound;\n\n/** @internal */\nexport const CustomerBenefitGrant$outboundSchema: z.ZodType<\n  CustomerBenefitGrant$Outbound,\n  z.ZodTypeDef,\n  CustomerBenefitGrant\n> = z.union([\n  CustomerBenefitGrantDiscord$outboundSchema,\n  CustomerBenefitGrantGitHubRepository$outboundSchema,\n  CustomerBenefitGrantDownloadables$outboundSchema,\n  CustomerBenefitGrantLicenseKeys$outboundSchema,\n  CustomerBenefitGrantCustom$outboundSchema,\n  CustomerBenefitGrantMeterCredit$outboundSchema,\n]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomerBenefitGrant$ {\n  /** @deprecated use `CustomerBenefitGrant$inboundSchema` instead. */\n  export const inboundSchema = CustomerBenefitGrant$inboundSchema;\n  /** @deprecated use `CustomerBenefitGrant$outboundSchema` instead. */\n  export const outboundSchema = CustomerBenefitGrant$outboundSchema;\n  /** @deprecated use `CustomerBenefitGrant$Outbound` instead. */\n  export type Outbound = CustomerBenefitGrant$Outbound;\n}\n\nexport function customerBenefitGrantToJSON(\n  customerBenefitGrant: CustomerBenefitGrant,\n): string {\n  return JSON.stringify(\n    CustomerBenefitGrant$outboundSchema.parse(customerBenefitGrant),\n  );\n}\n\nexport function customerBenefitGrantFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomerBenefitGrant, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomerBenefitGrant$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomerBenefitGrant' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,wCAAwC,EAExC,yCAAyC,GAC1C,MAAM,iCAAiC,CAAC;AACzC,OAAO,EAEL,yCAAyC,EAEzC,0CAA0C,GAC3C,MAAM,kCAAkC,CAAC;AAC1C,OAAO,EAEL,+CAA+C,EAE/C,gDAAgD,GACjD,MAAM,wCAAwC,CAAC;AAChD,OAAO,EAEL,kDAAkD,EAElD,mDAAmD,GACpD,MAAM,2CAA2C,CAAC;AACnD,OAAO,EAEL,6CAA6C,EAE7C,8CAA8C,GAC/C,MAAM,sCAAsC,CAAC;AAC9C,OAAO,EAEL,6CAA6C,EAE7C,8CAA8C,GAC/C,MAAM,sCAAsC,CAAC;;;;;;;;;;AAWvC,MAAM,kCAAkC,GAI3C,CAAC,6IAAC,KAAK,CAAC;iNACV,4CAAyC;0NACzC,qDAAkD;uNAClD,kDAA+C;qNAC/C,gDAA6C;gNAC7C,2CAAwC;qNACxC,gDAA6C;CAC9C,CAAC,CAAC;AAYI,MAAM,mCAAmC,GAI5C,CAAC,6IAAC,KAAK,CAAC;iNACV,6CAA0C;0NAC1C,sDAAmD;uNACnD,mDAAgD;IAChD,kQAA8C;gNAC9C,4CAAyC;qNACzC,iDAA8C;CAC/C,CAAC,CAAC;AAMG,IAAW,qBAAqB,CAOrC;AAPD,CAAA,SAAiB,qBAAqB;IACpC,kEAAA,EAAoE,CACvD,sBAAA,aAAa,GAAG,kCAAkC,CAAC;IAChE,mEAAA,EAAqE,CACxD,sBAAA,cAAc,GAAG,mCAAmC,CAAC;AAGpE,CAAC,EAPgB,qBAAqB,IAAA,CAArB,qBAAqB,GAAA,CAAA,CAAA,GAOrC;AAEK,SAAU,0BAA0B,CACxC,oBAA0C;IAE1C,OAAO,IAAI,CAAC,SAAS,CACnB,mCAAmC,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAChE,CAAC;AACJ,CAAC;AAEK,SAAU,4BAA4B,CAC1C,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,iCAAmC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC9D,CAAA,gDAAA,CAAkD,CACnD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 12623, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12629, "column": 0}, "map": {"version":3,"file":"customerbenefitgrantsortproperty.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customerbenefitgrantsortproperty.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { ClosedEnum } from \"../../types/enums.js\";\n\nexport const CustomerBenefitGrantSortProperty = {\n  GrantedAt: \"granted_at\",\n  MinusGrantedAt: \"-granted_at\",\n  Type: \"type\",\n  MinusType: \"-type\",\n  Organization: \"organization\",\n  MinusOrganization: \"-organization\",\n} as const;\nexport type CustomerBenefitGrantSortProperty = ClosedEnum<\n  typeof CustomerBenefitGrantSortProperty\n>;\n\n/** @internal */\nexport const CustomerBenefitGrantSortProperty$inboundSchema: z.ZodNativeEnum<\n  typeof CustomerBenefitGrantSortProperty\n> = z.nativeEnum(CustomerBenefitGrantSortProperty);\n\n/** @internal */\nexport const CustomerBenefitGrantSortProperty$outboundSchema: z.ZodNativeEnum<\n  typeof CustomerBenefitGrantSortProperty\n> = CustomerBenefitGrantSortProperty$inboundSchema;\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomerBenefitGrantSortProperty$ {\n  /** @deprecated use `CustomerBenefitGrantSortProperty$inboundSchema` instead. */\n  export const inboundSchema = CustomerBenefitGrantSortProperty$inboundSchema;\n  /** @deprecated use `CustomerBenefitGrantSortProperty$outboundSchema` instead. */\n  export const outboundSchema = CustomerBenefitGrantSortProperty$outboundSchema;\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;AAGlB,MAAM,gCAAgC,GAAG;IAC9C,SAAS,EAAE,YAAY;IACvB,cAAc,EAAE,aAAa;IAC7B,IAAI,EAAE,MAAM;IACZ,SAAS,EAAE,OAAO;IAClB,YAAY,EAAE,cAAc;IAC5B,iBAAiB,EAAE,eAAe;CAC1B,CAAC;AAMJ,MAAM,8CAA8C,GAEvD,CAAC,6IAAC,UAAU,CAAC,gCAAgC,CAAC,CAAC;AAG5C,MAAM,+CAA+C,GAExD,8CAA8C,CAAC;AAM7C,IAAW,iCAAiC,CAKjD;AALD,CAAA,SAAiB,iCAAiC;IAChD,8EAAA,EAAgF,CACnE,kCAAA,aAAa,GAAG,8CAA8C,CAAC;IAC5E,+EAAA,EAAiF,CACpE,kCAAA,cAAc,GAAG,+CAA+C,CAAC;AAChF,CAAC,EALgB,iCAAiC,IAAA,CAAjC,iCAAiC,GAAA,CAAA,CAAA,GAKjD","ignoreList":[0]}},
    {"offset": {"line": 12655, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12661, "column": 0}, "map": {"version":3,"file":"listresourcecustomerbenefitgrant.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/listresourcecustomerbenefitgrant.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  CustomerBenefitGrant,\n  CustomerBenefitGrant$inboundSchema,\n  CustomerBenefitGrant$Outbound,\n  CustomerBenefitGrant$outboundSchema,\n} from \"./customerbenefitgrant.js\";\nimport {\n  Pagination,\n  Pagination$inboundSchema,\n  Pagination$Outbound,\n  Pagination$outboundSchema,\n} from \"./pagination.js\";\n\nexport type ListResourceCustomerBenefitGrant = {\n  items: Array<CustomerBenefitGrant>;\n  pagination: Pagination;\n};\n\n/** @internal */\nexport const ListResourceCustomerBenefitGrant$inboundSchema: z.ZodType<\n  ListResourceCustomerBenefitGrant,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  items: z.array(CustomerBenefitGrant$inboundSchema),\n  pagination: Pagination$inboundSchema,\n});\n\n/** @internal */\nexport type ListResourceCustomerBenefitGrant$Outbound = {\n  items: Array<CustomerBenefitGrant$Outbound>;\n  pagination: Pagination$Outbound;\n};\n\n/** @internal */\nexport const ListResourceCustomerBenefitGrant$outboundSchema: z.ZodType<\n  ListResourceCustomerBenefitGrant$Outbound,\n  z.ZodTypeDef,\n  ListResourceCustomerBenefitGrant\n> = z.object({\n  items: z.array(CustomerBenefitGrant$outboundSchema),\n  pagination: Pagination$outboundSchema,\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace ListResourceCustomerBenefitGrant$ {\n  /** @deprecated use `ListResourceCustomerBenefitGrant$inboundSchema` instead. */\n  export const inboundSchema = ListResourceCustomerBenefitGrant$inboundSchema;\n  /** @deprecated use `ListResourceCustomerBenefitGrant$outboundSchema` instead. */\n  export const outboundSchema = ListResourceCustomerBenefitGrant$outboundSchema;\n  /** @deprecated use `ListResourceCustomerBenefitGrant$Outbound` instead. */\n  export type Outbound = ListResourceCustomerBenefitGrant$Outbound;\n}\n\nexport function listResourceCustomerBenefitGrantToJSON(\n  listResourceCustomerBenefitGrant: ListResourceCustomerBenefitGrant,\n): string {\n  return JSON.stringify(\n    ListResourceCustomerBenefitGrant$outboundSchema.parse(\n      listResourceCustomerBenefitGrant,\n    ),\n  );\n}\n\nexport function listResourceCustomerBenefitGrantFromJSON(\n  jsonString: string,\n): SafeParseResult<ListResourceCustomerBenefitGrant, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => ListResourceCustomerBenefitGrant$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'ListResourceCustomerBenefitGrant' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;AAGH,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,kCAAkC,EAElC,mCAAmC,GACpC,MAAM,2BAA2B,CAAC;AACnC,OAAO,EAEL,wBAAwB,EAExB,yBAAyB,GAC1B,MAAM,iBAAiB,CAAC;AAfzB,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;;;;AAuBlB,MAAM,8CAA8C,GAIvD,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,KAAK,uMAAC,qCAAkC,CAAC;IAClD,UAAU,8LAAE,2BAAwB;CACrC,CAAC,CAAC;AASI,MAAM,+CAA+C,GAIxD,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,KAAK,uMAAC,sCAAmC,CAAC;IACnD,UAAU,8LAAE,4BAAyB;CACtC,CAAC,CAAC;AAMG,IAAW,iCAAiC,CAOjD;AAPD,CAAA,SAAiB,iCAAiC;IAChD,8EAAA,EAAgF,CACnE,kCAAA,aAAa,GAAG,8CAA8C,CAAC;IAC5E,+EAAA,EAAiF,CACpE,kCAAA,cAAc,GAAG,+CAA+C,CAAC;AAGhF,CAAC,EAPgB,iCAAiC,IAAA,CAAjC,iCAAiC,GAAA,CAAA,CAAA,GAOjD;AAEK,SAAU,sCAAsC,CACpD,gCAAkE;IAElE,OAAO,IAAI,CAAC,SAAS,CACnB,+CAA+C,CAAC,KAAK,CACnD,gCAAgC,CACjC,CACF,CAAC;AACJ,CAAC;AAEK,SAAU,wCAAwC,CACtD,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,6CAA+C,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC1E,CAAA,4DAAA,CAA8D,CAC/D,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 12698, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12704, "column": 0}, "map": {"version":3,"file":"customerbenefitgrantcustomupdate.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customerbenefitgrantcustomupdate.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport type CustomerBenefitGrantCustomUpdate = {\n  benefitType?: \"custom\" | undefined;\n};\n\n/** @internal */\nexport const CustomerBenefitGrantCustomUpdate$inboundSchema: z.ZodType<\n  CustomerBenefitGrantCustomUpdate,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  benefit_type: z.literal(\"custom\").optional(),\n}).transform((v) => {\n  return remap$(v, {\n    \"benefit_type\": \"benefitType\",\n  });\n});\n\n/** @internal */\nexport type CustomerBenefitGrantCustomUpdate$Outbound = {\n  benefit_type: \"custom\";\n};\n\n/** @internal */\nexport const CustomerBenefitGrantCustomUpdate$outboundSchema: z.ZodType<\n  CustomerBenefitGrantCustomUpdate$Outbound,\n  z.ZodTypeDef,\n  CustomerBenefitGrantCustomUpdate\n> = z.object({\n  benefitType: z.literal(\"custom\").default(\"custom\" as const),\n}).transform((v) => {\n  return remap$(v, {\n    benefitType: \"benefit_type\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomerBenefitGrantCustomUpdate$ {\n  /** @deprecated use `CustomerBenefitGrantCustomUpdate$inboundSchema` instead. */\n  export const inboundSchema = CustomerBenefitGrantCustomUpdate$inboundSchema;\n  /** @deprecated use `CustomerBenefitGrantCustomUpdate$outboundSchema` instead. */\n  export const outboundSchema = CustomerBenefitGrantCustomUpdate$outboundSchema;\n  /** @deprecated use `CustomerBenefitGrantCustomUpdate$Outbound` instead. */\n  export type Outbound = CustomerBenefitGrantCustomUpdate$Outbound;\n}\n\nexport function customerBenefitGrantCustomUpdateToJSON(\n  customerBenefitGrantCustomUpdate: CustomerBenefitGrantCustomUpdate,\n): string {\n  return JSON.stringify(\n    CustomerBenefitGrantCustomUpdate$outboundSchema.parse(\n      customerBenefitGrantCustomUpdate,\n    ),\n  );\n}\n\nexport function customerBenefitGrantCustomUpdateFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomerBenefitGrantCustomUpdate, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomerBenefitGrantCustomUpdate$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomerBenefitGrantCustomUpdate' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;;;;;AAS1C,MAAM,8CAA8C,GAIvD,CAAC,6IAAC,MAAM,CAAC;IACX,YAAY,EAAE,CAAC,6IAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE;CAC7C,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,cAAc,EAAE,aAAa;KAC9B,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAQI,MAAM,+CAA+C,GAIxD,CAAC,6IAAC,MAAM,CAAC;IACX,WAAW,EAAE,CAAC,6IAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,QAAiB,CAAC;CAC5D,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,OAAO,uLAAA,AAAM,EAAC,CAAC,EAAE;QACf,WAAW,EAAE,cAAc;KAC5B,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,iCAAiC,CAOjD;AAPD,CAAA,SAAiB,iCAAiC;IAChD,8EAAA,EAAgF,CACnE,kCAAA,aAAa,GAAG,8CAA8C,CAAC;IAC5E,+EAAA,EAAiF,CACpE,kCAAA,cAAc,GAAG,+CAA+C,CAAC;AAGhF,CAAC,EAPgB,iCAAiC,IAAA,CAAjC,iCAAiC,GAAA,CAAA,CAAA,GAOjD;AAEK,SAAU,sCAAsC,CACpD,gCAAkE;IAElE,OAAO,IAAI,CAAC,SAAS,CACnB,+CAA+C,CAAC,KAAK,CACnD,gCAAgC,CACjC,CACF,CAAC;AACJ,CAAC;AAEK,SAAU,wCAAwC,CACtD,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,6CAA+C,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC1E,CAAA,4DAAA,CAA8D,CAC/D,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 12745, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12751, "column": 0}, "map": {"version":3,"file":"customerbenefitgrantdiscordpropertiesupdate.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customerbenefitgrantdiscordpropertiesupdate.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport type CustomerBenefitGrantDiscordPropertiesUpdate = {\n  accountId: string;\n};\n\n/** @internal */\nexport const CustomerBenefitGrantDiscordPropertiesUpdate$inboundSchema:\n  z.ZodType<\n    CustomerBenefitGrantDiscordPropertiesUpdate,\n    z.ZodTypeDef,\n    unknown\n  > = z.object({\n    account_id: z.string(),\n  }).transform((v) => {\n    return remap$(v, {\n      \"account_id\": \"accountId\",\n    });\n  });\n\n/** @internal */\nexport type CustomerBenefitGrantDiscordPropertiesUpdate$Outbound = {\n  account_id: string;\n};\n\n/** @internal */\nexport const CustomerBenefitGrantDiscordPropertiesUpdate$outboundSchema:\n  z.ZodType<\n    CustomerBenefitGrantDiscordPropertiesUpdate$Outbound,\n    z.ZodTypeDef,\n    CustomerBenefitGrantDiscordPropertiesUpdate\n  > = z.object({\n    accountId: z.string(),\n  }).transform((v) => {\n    return remap$(v, {\n      accountId: \"account_id\",\n    });\n  });\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomerBenefitGrantDiscordPropertiesUpdate$ {\n  /** @deprecated use `CustomerBenefitGrantDiscordPropertiesUpdate$inboundSchema` instead. */\n  export const inboundSchema =\n    CustomerBenefitGrantDiscordPropertiesUpdate$inboundSchema;\n  /** @deprecated use `CustomerBenefitGrantDiscordPropertiesUpdate$outboundSchema` instead. */\n  export const outboundSchema =\n    CustomerBenefitGrantDiscordPropertiesUpdate$outboundSchema;\n  /** @deprecated use `CustomerBenefitGrantDiscordPropertiesUpdate$Outbound` instead. */\n  export type Outbound = CustomerBenefitGrantDiscordPropertiesUpdate$Outbound;\n}\n\nexport function customerBenefitGrantDiscordPropertiesUpdateToJSON(\n  customerBenefitGrantDiscordPropertiesUpdate:\n    CustomerBenefitGrantDiscordPropertiesUpdate,\n): string {\n  return JSON.stringify(\n    CustomerBenefitGrantDiscordPropertiesUpdate$outboundSchema.parse(\n      customerBenefitGrantDiscordPropertiesUpdate,\n    ),\n  );\n}\n\nexport function customerBenefitGrantDiscordPropertiesUpdateFromJSON(\n  jsonString: string,\n): SafeParseResult<\n  CustomerBenefitGrantDiscordPropertiesUpdate,\n  SDKValidationError\n> {\n  return safeParse(\n    jsonString,\n    (x) =>\n      CustomerBenefitGrantDiscordPropertiesUpdate$inboundSchema.parse(\n        JSON.parse(x),\n      ),\n    `Failed to parse 'CustomerBenefitGrantDiscordPropertiesUpdate' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;;;;;AAS1C,MAAM,yDAAyD,GAKhE,CAAC,6IAAC,MAAM,CAAC;IACX,UAAU,EAAE,CAAC,6IAAC,MAAM,EAAE;CACvB,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,WAAO,mLAAA,AAAM,EAAC,CAAC,EAAE;QACf,YAAY,EAAE,WAAW;KAC1B,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAQE,MAAM,0DAA0D,GAKjE,CAAC,6IAAC,MAAM,CAAC;IACX,SAAS,EAAE,CAAC,6IAAC,MAAM,EAAE;CACtB,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,SAAS,EAAE,YAAY;KACxB,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMC,IAAW,4CAA4C,CAS5D;AATD,CAAA,SAAiB,4CAA4C;IAC3D,yFAAA,EAA2F,CAC9E,6CAAA,aAAa,GACxB,yDAAyD,CAAC;IAC5D,0FAAA,EAA4F,CAC/E,6CAAA,cAAc,GACzB,0DAA0D,CAAC;AAG/D,CAAC,EATgB,4CAA4C,IAAA,CAA5C,4CAA4C,GAAA,CAAA,CAAA,GAS5D;AAEK,SAAU,iDAAiD,CAC/D,2CAC6C;IAE7C,OAAO,IAAI,CAAC,SAAS,CACnB,0DAA0D,CAAC,KAAK,CAC9D,2CAA2C,CAC5C,CACF,CAAC;AACJ,CAAC;AAEK,SAAU,mDAAmD,CACjE,UAAkB;IAKlB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CACF,CADI,wDACqD,CAAC,KAAK,CAC7D,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CACd,EACH,CAAA,uEAAA,CAAyE,CAC1E,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 12792, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12798, "column": 0}, "map": {"version":3,"file":"customerbenefitgrantdiscordupdate.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customerbenefitgrantdiscordupdate.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  CustomerBenefitGrantDiscordPropertiesUpdate,\n  CustomerBenefitGrantDiscordPropertiesUpdate$inboundSchema,\n  CustomerBenefitGrantDiscordPropertiesUpdate$Outbound,\n  CustomerBenefitGrantDiscordPropertiesUpdate$outboundSchema,\n} from \"./customerbenefitgrantdiscordpropertiesupdate.js\";\n\nexport type CustomerBenefitGrantDiscordUpdate = {\n  benefitType?: \"discord\" | undefined;\n  properties: CustomerBenefitGrantDiscordPropertiesUpdate;\n};\n\n/** @internal */\nexport const CustomerBenefitGrantDiscordUpdate$inboundSchema: z.ZodType<\n  CustomerBenefitGrantDiscordUpdate,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  benefit_type: z.literal(\"discord\").optional(),\n  properties: CustomerBenefitGrantDiscordPropertiesUpdate$inboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    \"benefit_type\": \"benefitType\",\n  });\n});\n\n/** @internal */\nexport type CustomerBenefitGrantDiscordUpdate$Outbound = {\n  benefit_type: \"discord\";\n  properties: CustomerBenefitGrantDiscordPropertiesUpdate$Outbound;\n};\n\n/** @internal */\nexport const CustomerBenefitGrantDiscordUpdate$outboundSchema: z.ZodType<\n  CustomerBenefitGrantDiscordUpdate$Outbound,\n  z.ZodTypeDef,\n  CustomerBenefitGrantDiscordUpdate\n> = z.object({\n  benefitType: z.literal(\"discord\").default(\"discord\" as const),\n  properties: CustomerBenefitGrantDiscordPropertiesUpdate$outboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    benefitType: \"benefit_type\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomerBenefitGrantDiscordUpdate$ {\n  /** @deprecated use `CustomerBenefitGrantDiscordUpdate$inboundSchema` instead. */\n  export const inboundSchema = CustomerBenefitGrantDiscordUpdate$inboundSchema;\n  /** @deprecated use `CustomerBenefitGrantDiscordUpdate$outboundSchema` instead. */\n  export const outboundSchema =\n    CustomerBenefitGrantDiscordUpdate$outboundSchema;\n  /** @deprecated use `CustomerBenefitGrantDiscordUpdate$Outbound` instead. */\n  export type Outbound = CustomerBenefitGrantDiscordUpdate$Outbound;\n}\n\nexport function customerBenefitGrantDiscordUpdateToJSON(\n  customerBenefitGrantDiscordUpdate: CustomerBenefitGrantDiscordUpdate,\n): string {\n  return JSON.stringify(\n    CustomerBenefitGrantDiscordUpdate$outboundSchema.parse(\n      customerBenefitGrantDiscordUpdate,\n    ),\n  );\n}\n\nexport function customerBenefitGrantDiscordUpdateFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomerBenefitGrantDiscordUpdate, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomerBenefitGrantDiscordUpdate$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomerBenefitGrantDiscordUpdate' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,yDAAyD,EAEzD,0DAA0D,GAC3D,MAAM,kDAAkD,CAAC;;;;;;AAQnD,MAAM,+CAA+C,GAIxD,CAAC,6IAAC,MAAM,CAAC;IACX,YAAY,EAAE,CAAC,6IAAC,OAAO,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAE;IAC7C,UAAU,+NAAE,4DAAyD;CACtE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAM,AAAN,EAAO,CAAC,EAAE;QACf,cAAc,EAAE,aAAa;KAC9B,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AASI,MAAM,gDAAgD,GAIzD,CAAC,6IAAC,MAAM,CAAC;IACX,WAAW,EAAE,CAAC,6IAAC,OAAO,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,SAAkB,CAAC;IAC7D,UAAU,+NAAE,6DAA0D;CACvE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,WAAW,EAAE,cAAc;KAC5B,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,kCAAkC,CAQlD;AARD,CAAA,SAAiB,kCAAkC;IACjD,+EAAA,EAAiF,CACpE,mCAAA,aAAa,GAAG,+CAA+C,CAAC;IAC7E,gFAAA,EAAkF,CACrE,mCAAA,cAAc,GACzB,gDAAgD,CAAC;AAGrD,CAAC,EARgB,kCAAkC,IAAA,CAAlC,kCAAkC,GAAA,CAAA,CAAA,GAQlD;AAEK,SAAU,uCAAuC,CACrD,iCAAoE;IAEpE,OAAO,IAAI,CAAC,SAAS,CACnB,gDAAgD,CAAC,KAAK,CACpD,iCAAiC,CAClC,CACF,CAAC;AACJ,CAAC;AAEK,SAAU,yCAAyC,CACvD,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,8CAAgD,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC3E,CAAA,6DAAA,CAA+D,CAChE,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 12843, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12849, "column": 0}, "map": {"version":3,"file":"customerbenefitgrantdownloadablesupdate.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customerbenefitgrantdownloadablesupdate.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport type CustomerBenefitGrantDownloadablesUpdate = {\n  benefitType?: \"downloadables\" | undefined;\n};\n\n/** @internal */\nexport const CustomerBenefitGrantDownloadablesUpdate$inboundSchema: z.ZodType<\n  CustomerBenefitGrantDownloadablesUpdate,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  benefit_type: z.literal(\"downloadables\").optional(),\n}).transform((v) => {\n  return remap$(v, {\n    \"benefit_type\": \"benefitType\",\n  });\n});\n\n/** @internal */\nexport type CustomerBenefitGrantDownloadablesUpdate$Outbound = {\n  benefit_type: \"downloadables\";\n};\n\n/** @internal */\nexport const CustomerBenefitGrantDownloadablesUpdate$outboundSchema: z.ZodType<\n  CustomerBenefitGrantDownloadablesUpdate$Outbound,\n  z.ZodTypeDef,\n  CustomerBenefitGrantDownloadablesUpdate\n> = z.object({\n  benefitType: z.literal(\"downloadables\").default(\"downloadables\" as const),\n}).transform((v) => {\n  return remap$(v, {\n    benefitType: \"benefit_type\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomerBenefitGrantDownloadablesUpdate$ {\n  /** @deprecated use `CustomerBenefitGrantDownloadablesUpdate$inboundSchema` instead. */\n  export const inboundSchema =\n    CustomerBenefitGrantDownloadablesUpdate$inboundSchema;\n  /** @deprecated use `CustomerBenefitGrantDownloadablesUpdate$outboundSchema` instead. */\n  export const outboundSchema =\n    CustomerBenefitGrantDownloadablesUpdate$outboundSchema;\n  /** @deprecated use `CustomerBenefitGrantDownloadablesUpdate$Outbound` instead. */\n  export type Outbound = CustomerBenefitGrantDownloadablesUpdate$Outbound;\n}\n\nexport function customerBenefitGrantDownloadablesUpdateToJSON(\n  customerBenefitGrantDownloadablesUpdate:\n    CustomerBenefitGrantDownloadablesUpdate,\n): string {\n  return JSON.stringify(\n    CustomerBenefitGrantDownloadablesUpdate$outboundSchema.parse(\n      customerBenefitGrantDownloadablesUpdate,\n    ),\n  );\n}\n\nexport function customerBenefitGrantDownloadablesUpdateFromJSON(\n  jsonString: string,\n): SafeParseResult<\n  CustomerBenefitGrantDownloadablesUpdate,\n  SDKValidationError\n> {\n  return safeParse(\n    jsonString,\n    (x) =>\n      CustomerBenefitGrantDownloadablesUpdate$inboundSchema.parse(\n        JSON.parse(x),\n      ),\n    `Failed to parse 'CustomerBenefitGrantDownloadablesUpdate' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;;;;;AAS1C,MAAM,qDAAqD,GAI9D,CAAC,6IAAC,MAAM,CAAC;IACX,YAAY,EAAE,CAAC,6IAAC,OAAO,CAAC,eAAe,CAAC,CAAC,QAAQ,EAAE;CACpD,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,cAAc,EAAE,aAAa;KAC9B,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAQI,MAAM,sDAAsD,GAI/D,CAAC,6IAAC,MAAM,CAAC;IACX,WAAW,EAAE,CAAC,6IAAC,OAAO,CAAC,eAAe,CAAC,CAAC,OAAO,CAAC,eAAwB,CAAC;CAC1E,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,OAAO,uLAAA,AAAM,EAAC,CAAC,EAAE;QACf,WAAW,EAAE,cAAc;KAC5B,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,wCAAwC,CASxD;AATD,CAAA,SAAiB,wCAAwC;IACvD,qFAAA,EAAuF,CAC1E,yCAAA,aAAa,GACxB,qDAAqD,CAAC;IACxD,sFAAA,EAAwF,CAC3E,yCAAA,cAAc,GACzB,sDAAsD,CAAC;AAG3D,CAAC,EATgB,wCAAwC,IAAA,CAAxC,wCAAwC,GAAA,CAAA,CAAA,GASxD;AAEK,SAAU,6CAA6C,CAC3D,uCACyC;IAEzC,OAAO,IAAI,CAAC,SAAS,CACnB,sDAAsD,CAAC,KAAK,CAC1D,uCAAuC,CACxC,CACF,CAAC;AACJ,CAAC;AAEK,SAAU,+CAA+C,CAC7D,UAAkB;IAKlB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CACF,CADI,oDACiD,CAAC,KAAK,CACzD,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CACd,EACH,CAAA,mEAAA,CAAqE,CACtE,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 12890, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12896, "column": 0}, "map": {"version":3,"file":"customerbenefitgrantgithubrepositorypropertiesupdate.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customerbenefitgrantgithubrepositorypropertiesupdate.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport type CustomerBenefitGrantGitHubRepositoryPropertiesUpdate = {\n  accountId: string;\n};\n\n/** @internal */\nexport const CustomerBenefitGrantGitHubRepositoryPropertiesUpdate$inboundSchema:\n  z.ZodType<\n    CustomerBenefitGrantGitHubRepositoryPropertiesUpdate,\n    z.ZodTypeDef,\n    unknown\n  > = z.object({\n    account_id: z.string(),\n  }).transform((v) => {\n    return remap$(v, {\n      \"account_id\": \"accountId\",\n    });\n  });\n\n/** @internal */\nexport type CustomerBenefitGrantGitHubRepositoryPropertiesUpdate$Outbound = {\n  account_id: string;\n};\n\n/** @internal */\nexport const CustomerBenefitGrantGitHubRepositoryPropertiesUpdate$outboundSchema:\n  z.ZodType<\n    CustomerBenefitGrantGitHubRepositoryPropertiesUpdate$Outbound,\n    z.ZodTypeDef,\n    CustomerBenefitGrantGitHubRepositoryPropertiesUpdate\n  > = z.object({\n    accountId: z.string(),\n  }).transform((v) => {\n    return remap$(v, {\n      accountId: \"account_id\",\n    });\n  });\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomerBenefitGrantGitHubRepositoryPropertiesUpdate$ {\n  /** @deprecated use `CustomerBenefitGrantGitHubRepositoryPropertiesUpdate$inboundSchema` instead. */\n  export const inboundSchema =\n    CustomerBenefitGrantGitHubRepositoryPropertiesUpdate$inboundSchema;\n  /** @deprecated use `CustomerBenefitGrantGitHubRepositoryPropertiesUpdate$outboundSchema` instead. */\n  export const outboundSchema =\n    CustomerBenefitGrantGitHubRepositoryPropertiesUpdate$outboundSchema;\n  /** @deprecated use `CustomerBenefitGrantGitHubRepositoryPropertiesUpdate$Outbound` instead. */\n  export type Outbound =\n    CustomerBenefitGrantGitHubRepositoryPropertiesUpdate$Outbound;\n}\n\nexport function customerBenefitGrantGitHubRepositoryPropertiesUpdateToJSON(\n  customerBenefitGrantGitHubRepositoryPropertiesUpdate:\n    CustomerBenefitGrantGitHubRepositoryPropertiesUpdate,\n): string {\n  return JSON.stringify(\n    CustomerBenefitGrantGitHubRepositoryPropertiesUpdate$outboundSchema.parse(\n      customerBenefitGrantGitHubRepositoryPropertiesUpdate,\n    ),\n  );\n}\n\nexport function customerBenefitGrantGitHubRepositoryPropertiesUpdateFromJSON(\n  jsonString: string,\n): SafeParseResult<\n  CustomerBenefitGrantGitHubRepositoryPropertiesUpdate,\n  SDKValidationError\n> {\n  return safeParse(\n    jsonString,\n    (x) =>\n      CustomerBenefitGrantGitHubRepositoryPropertiesUpdate$inboundSchema.parse(\n        JSON.parse(x),\n      ),\n    `Failed to parse 'CustomerBenefitGrantGitHubRepositoryPropertiesUpdate' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;;;;;AAS1C,MAAM,kEAAkE,GAKzE,CAAC,6IAAC,MAAM,CAAC;IACX,UAAU,EAAE,CAAC,6IAAC,MAAM,EAAE;CACvB,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,WAAO,mLAAA,AAAM,EAAC,CAAC,EAAE;QACf,YAAY,EAAE,WAAW;KAC1B,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAQE,MAAM,mEAAmE,GAK1E,CAAC,6IAAC,MAAM,CAAC;IACX,SAAS,EAAE,CAAC,6IAAC,MAAM,EAAE;CACtB,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,SAAS,EAAE,YAAY;KACxB,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMC,IAAW,qDAAqD,CAUrE;AAVD,CAAA,SAAiB,qDAAqD;IACpE,kGAAA,EAAoG,CACvF,sDAAA,aAAa,GACxB,kEAAkE,CAAC;IACrE,mGAAA,EAAqG,CACxF,sDAAA,cAAc,GACzB,mEAAmE,CAAC;AAIxE,CAAC,EAVgB,qDAAqD,IAAA,CAArD,qDAAqD,GAAA,CAAA,CAAA,GAUrE;AAEK,SAAU,0DAA0D,CACxE,oDACsD;IAEtD,OAAO,IAAI,CAAC,SAAS,CACnB,mEAAmE,CAAC,KAAK,CACvE,oDAAoD,CACrD,CACF,CAAC;AACJ,CAAC;AAEK,SAAU,4DAA4D,CAC1E,UAAkB;IAKlB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CACF,CADI,iEAC8D,CAAC,KAAK,CACtE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CACd,EACH,CAAA,gFAAA,CAAkF,CACnF,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 12937, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12943, "column": 0}, "map": {"version":3,"file":"customerbenefitgrantgithubrepositoryupdate.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customerbenefitgrantgithubrepositoryupdate.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  CustomerBenefitGrantGitHubRepositoryPropertiesUpdate,\n  CustomerBenefitGrantGitHubRepositoryPropertiesUpdate$inboundSchema,\n  CustomerBenefitGrantGitHubRepositoryPropertiesUpdate$Outbound,\n  CustomerBenefitGrantGitHubRepositoryPropertiesUpdate$outboundSchema,\n} from \"./customerbenefitgrantgithubrepositorypropertiesupdate.js\";\n\nexport type CustomerBenefitGrantGitHubRepositoryUpdate = {\n  benefitType?: \"github_repository\" | undefined;\n  properties: CustomerBenefitGrantGitHubRepositoryPropertiesUpdate;\n};\n\n/** @internal */\nexport const CustomerBenefitGrantGitHubRepositoryUpdate$inboundSchema:\n  z.ZodType<CustomerBenefitGrantGitHubRepositoryUpdate, z.ZodTypeDef, unknown> =\n    z.object({\n      benefit_type: z.literal(\"github_repository\").optional(),\n      properties:\n        CustomerBenefitGrantGitHubRepositoryPropertiesUpdate$inboundSchema,\n    }).transform((v) => {\n      return remap$(v, {\n        \"benefit_type\": \"benefitType\",\n      });\n    });\n\n/** @internal */\nexport type CustomerBenefitGrantGitHubRepositoryUpdate$Outbound = {\n  benefit_type: \"github_repository\";\n  properties: CustomerBenefitGrantGitHubRepositoryPropertiesUpdate$Outbound;\n};\n\n/** @internal */\nexport const CustomerBenefitGrantGitHubRepositoryUpdate$outboundSchema:\n  z.ZodType<\n    CustomerBenefitGrantGitHubRepositoryUpdate$Outbound,\n    z.ZodTypeDef,\n    CustomerBenefitGrantGitHubRepositoryUpdate\n  > = z.object({\n    benefitType: z.literal(\"github_repository\").default(\n      \"github_repository\" as const,\n    ),\n    properties:\n      CustomerBenefitGrantGitHubRepositoryPropertiesUpdate$outboundSchema,\n  }).transform((v) => {\n    return remap$(v, {\n      benefitType: \"benefit_type\",\n    });\n  });\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomerBenefitGrantGitHubRepositoryUpdate$ {\n  /** @deprecated use `CustomerBenefitGrantGitHubRepositoryUpdate$inboundSchema` instead. */\n  export const inboundSchema =\n    CustomerBenefitGrantGitHubRepositoryUpdate$inboundSchema;\n  /** @deprecated use `CustomerBenefitGrantGitHubRepositoryUpdate$outboundSchema` instead. */\n  export const outboundSchema =\n    CustomerBenefitGrantGitHubRepositoryUpdate$outboundSchema;\n  /** @deprecated use `CustomerBenefitGrantGitHubRepositoryUpdate$Outbound` instead. */\n  export type Outbound = CustomerBenefitGrantGitHubRepositoryUpdate$Outbound;\n}\n\nexport function customerBenefitGrantGitHubRepositoryUpdateToJSON(\n  customerBenefitGrantGitHubRepositoryUpdate:\n    CustomerBenefitGrantGitHubRepositoryUpdate,\n): string {\n  return JSON.stringify(\n    CustomerBenefitGrantGitHubRepositoryUpdate$outboundSchema.parse(\n      customerBenefitGrantGitHubRepositoryUpdate,\n    ),\n  );\n}\n\nexport function customerBenefitGrantGitHubRepositoryUpdateFromJSON(\n  jsonString: string,\n): SafeParseResult<\n  CustomerBenefitGrantGitHubRepositoryUpdate,\n  SDKValidationError\n> {\n  return safeParse(\n    jsonString,\n    (x) =>\n      CustomerBenefitGrantGitHubRepositoryUpdate$inboundSchema.parse(\n        JSON.parse(x),\n      ),\n    `Failed to parse 'CustomerBenefitGrantGitHubRepositoryUpdate' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,kEAAkE,EAElE,mEAAmE,GACpE,MAAM,2DAA2D,CAAC;;;;;;AAQ5D,MAAM,wDAAwD,GAEjE,CAAC,6IAAC,MAAM,CAAC;IACP,YAAY,EAAE,CAAC,6IAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC,QAAQ,EAAE;IACvD,UAAU,wOACR,qEAAkE;CACrE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAM,AAAN,EAAO,CAAC,EAAE;QACf,cAAc,EAAE,aAAa;KAC9B,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AASA,MAAM,yDAAyD,GAKhE,CAAC,6IAAC,MAAM,CAAC;IACX,WAAW,EAAE,CAAC,6IAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC,OAAO,CACjD,mBAA4B,CAC7B;IACD,UAAU,wOACR,sEAAmE;CACtE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,WAAW,EAAE,cAAc;KAC5B,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMC,IAAW,2CAA2C,CAS3D;AATD,CAAA,SAAiB,2CAA2C;IAC1D,wFAAA,EAA0F,CAC7E,4CAAA,aAAa,GACxB,wDAAwD,CAAC;IAC3D,yFAAA,EAA2F,CAC9E,4CAAA,cAAc,GACzB,yDAAyD,CAAC;AAG9D,CAAC,EATgB,2CAA2C,IAAA,CAA3C,2CAA2C,GAAA,CAAA,CAAA,GAS3D;AAEK,SAAU,gDAAgD,CAC9D,0CAC4C;IAE5C,OAAO,IAAI,CAAC,SAAS,CACnB,yDAAyD,CAAC,KAAK,CAC7D,0CAA0C,CAC3C,CACF,CAAC;AACJ,CAAC;AAEK,SAAU,kDAAkD,CAChE,UAAkB;IAKlB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CACF,CADI,uDACoD,CAAC,KAAK,CAC5D,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CACd,EACH,CAAA,sEAAA,CAAwE,CACzE,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 12988, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12994, "column": 0}, "map": {"version":3,"file":"customerbenefitgrantlicensekeysupdate.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customerbenefitgrantlicensekeysupdate.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport type CustomerBenefitGrantLicenseKeysUpdate = {\n  benefitType?: \"license_keys\" | undefined;\n};\n\n/** @internal */\nexport const CustomerBenefitGrantLicenseKeysUpdate$inboundSchema: z.ZodType<\n  CustomerBenefitGrantLicenseKeysUpdate,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  benefit_type: z.literal(\"license_keys\").optional(),\n}).transform((v) => {\n  return remap$(v, {\n    \"benefit_type\": \"benefitType\",\n  });\n});\n\n/** @internal */\nexport type CustomerBenefitGrantLicenseKeysUpdate$Outbound = {\n  benefit_type: \"license_keys\";\n};\n\n/** @internal */\nexport const CustomerBenefitGrantLicenseKeysUpdate$outboundSchema: z.ZodType<\n  CustomerBenefitGrantLicenseKeysUpdate$Outbound,\n  z.ZodTypeDef,\n  CustomerBenefitGrantLicenseKeysUpdate\n> = z.object({\n  benefitType: z.literal(\"license_keys\").default(\"license_keys\" as const),\n}).transform((v) => {\n  return remap$(v, {\n    benefitType: \"benefit_type\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomerBenefitGrantLicenseKeysUpdate$ {\n  /** @deprecated use `CustomerBenefitGrantLicenseKeysUpdate$inboundSchema` instead. */\n  export const inboundSchema =\n    CustomerBenefitGrantLicenseKeysUpdate$inboundSchema;\n  /** @deprecated use `CustomerBenefitGrantLicenseKeysUpdate$outboundSchema` instead. */\n  export const outboundSchema =\n    CustomerBenefitGrantLicenseKeysUpdate$outboundSchema;\n  /** @deprecated use `CustomerBenefitGrantLicenseKeysUpdate$Outbound` instead. */\n  export type Outbound = CustomerBenefitGrantLicenseKeysUpdate$Outbound;\n}\n\nexport function customerBenefitGrantLicenseKeysUpdateToJSON(\n  customerBenefitGrantLicenseKeysUpdate: CustomerBenefitGrantLicenseKeysUpdate,\n): string {\n  return JSON.stringify(\n    CustomerBenefitGrantLicenseKeysUpdate$outboundSchema.parse(\n      customerBenefitGrantLicenseKeysUpdate,\n    ),\n  );\n}\n\nexport function customerBenefitGrantLicenseKeysUpdateFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomerBenefitGrantLicenseKeysUpdate, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) =>\n      CustomerBenefitGrantLicenseKeysUpdate$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomerBenefitGrantLicenseKeysUpdate' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;;;;;AAS1C,MAAM,mDAAmD,GAI5D,CAAC,6IAAC,MAAM,CAAC;IACX,YAAY,EAAE,CAAC,6IAAC,OAAO,CAAC,cAAc,CAAC,CAAC,QAAQ,EAAE;CACnD,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,cAAc,EAAE,aAAa;KAC9B,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAQI,MAAM,oDAAoD,GAI7D,CAAC,6IAAC,MAAM,CAAC;IACX,WAAW,EAAE,CAAC,6IAAC,OAAO,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,cAAuB,CAAC;CACxE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,OAAO,uLAAA,AAAM,EAAC,CAAC,EAAE;QACf,WAAW,EAAE,cAAc;KAC5B,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,sCAAsC,CAStD;AATD,CAAA,SAAiB,sCAAsC;IACrD,mFAAA,EAAqF,CACxE,uCAAA,aAAa,GACxB,mDAAmD,CAAC;IACtD,oFAAA,EAAsF,CACzE,uCAAA,cAAc,GACzB,oDAAoD,CAAC;AAGzD,CAAC,EATgB,sCAAsC,IAAA,CAAtC,sCAAsC,GAAA,CAAA,CAAA,GAStD;AAEK,SAAU,2CAA2C,CACzD,qCAA4E;IAE5E,OAAO,IAAI,CAAC,SAAS,CACnB,oDAAoD,CAAC,KAAK,CACxD,qCAAqC,CACtC,CACF,CAAC;AACJ,CAAC;AAEK,SAAU,6CAA6C,CAC3D,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CACF,CADI,kDAC+C,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC1E,CAAA,iEAAA,CAAmE,CACpE,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 13035, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13041, "column": 0}, "map": {"version":3,"file":"customerbenefitgrantmetercreditupdate.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customerbenefitgrantmetercreditupdate.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport type CustomerBenefitGrantMeterCreditUpdate = {\n  benefitType?: \"meter_credit\" | undefined;\n};\n\n/** @internal */\nexport const CustomerBenefitGrantMeterCreditUpdate$inboundSchema: z.ZodType<\n  CustomerBenefitGrantMeterCreditUpdate,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  benefit_type: z.literal(\"meter_credit\").optional(),\n}).transform((v) => {\n  return remap$(v, {\n    \"benefit_type\": \"benefitType\",\n  });\n});\n\n/** @internal */\nexport type CustomerBenefitGrantMeterCreditUpdate$Outbound = {\n  benefit_type: \"meter_credit\";\n};\n\n/** @internal */\nexport const CustomerBenefitGrantMeterCreditUpdate$outboundSchema: z.ZodType<\n  CustomerBenefitGrantMeterCreditUpdate$Outbound,\n  z.ZodTypeDef,\n  CustomerBenefitGrantMeterCreditUpdate\n> = z.object({\n  benefitType: z.literal(\"meter_credit\").default(\"meter_credit\" as const),\n}).transform((v) => {\n  return remap$(v, {\n    benefitType: \"benefit_type\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomerBenefitGrantMeterCreditUpdate$ {\n  /** @deprecated use `CustomerBenefitGrantMeterCreditUpdate$inboundSchema` instead. */\n  export const inboundSchema =\n    CustomerBenefitGrantMeterCreditUpdate$inboundSchema;\n  /** @deprecated use `CustomerBenefitGrantMeterCreditUpdate$outboundSchema` instead. */\n  export const outboundSchema =\n    CustomerBenefitGrantMeterCreditUpdate$outboundSchema;\n  /** @deprecated use `CustomerBenefitGrantMeterCreditUpdate$Outbound` instead. */\n  export type Outbound = CustomerBenefitGrantMeterCreditUpdate$Outbound;\n}\n\nexport function customerBenefitGrantMeterCreditUpdateToJSON(\n  customerBenefitGrantMeterCreditUpdate: CustomerBenefitGrantMeterCreditUpdate,\n): string {\n  return JSON.stringify(\n    CustomerBenefitGrantMeterCreditUpdate$outboundSchema.parse(\n      customerBenefitGrantMeterCreditUpdate,\n    ),\n  );\n}\n\nexport function customerBenefitGrantMeterCreditUpdateFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomerBenefitGrantMeterCreditUpdate, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) =>\n      CustomerBenefitGrantMeterCreditUpdate$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomerBenefitGrantMeterCreditUpdate' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;;;;;AAS1C,MAAM,mDAAmD,GAI5D,CAAC,6IAAC,MAAM,CAAC;IACX,YAAY,EAAE,CAAC,6IAAC,OAAO,CAAC,cAAc,CAAC,CAAC,QAAQ,EAAE;CACnD,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,cAAc,EAAE,aAAa;KAC9B,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAQI,MAAM,oDAAoD,GAI7D,CAAC,6IAAC,MAAM,CAAC;IACX,WAAW,EAAE,CAAC,6IAAC,OAAO,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,cAAuB,CAAC;CACxE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,OAAO,uLAAA,AAAM,EAAC,CAAC,EAAE;QACf,WAAW,EAAE,cAAc;KAC5B,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,sCAAsC,CAStD;AATD,CAAA,SAAiB,sCAAsC;IACrD,mFAAA,EAAqF,CACxE,uCAAA,aAAa,GACxB,mDAAmD,CAAC;IACtD,oFAAA,EAAsF,CACzE,uCAAA,cAAc,GACzB,oDAAoD,CAAC;AAGzD,CAAC,EATgB,sCAAsC,IAAA,CAAtC,sCAAsC,GAAA,CAAA,CAAA,GAStD;AAEK,SAAU,2CAA2C,CACzD,qCAA4E;IAE5E,OAAO,IAAI,CAAC,SAAS,CACnB,oDAAoD,CAAC,KAAK,CACxD,qCAAqC,CACtC,CACF,CAAC;AACJ,CAAC;AAEK,SAAU,6CAA6C,CAC3D,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CACF,CADI,kDAC+C,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC1E,CAAA,iEAAA,CAAmE,CACpE,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 13082, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13088, "column": 0}, "map": {"version":3,"file":"customerbenefitgrantupdate.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customerbenefitgrantupdate.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  CustomerBenefitGrantCustomUpdate,\n  CustomerBenefitGrantCustomUpdate$inboundSchema,\n  CustomerBenefitGrantCustomUpdate$Outbound,\n  CustomerBenefitGrantCustomUpdate$outboundSchema,\n} from \"./customerbenefitgrantcustomupdate.js\";\nimport {\n  CustomerBenefitGrantDiscordUpdate,\n  CustomerBenefitGrantDiscordUpdate$inboundSchema,\n  CustomerBenefitGrantDiscordUpdate$Outbound,\n  CustomerBenefitGrantDiscordUpdate$outboundSchema,\n} from \"./customerbenefitgrantdiscordupdate.js\";\nimport {\n  CustomerBenefitGrantDownloadablesUpdate,\n  CustomerBenefitGrantDownloadablesUpdate$inboundSchema,\n  CustomerBenefitGrantDownloadablesUpdate$Outbound,\n  CustomerBenefitGrantDownloadablesUpdate$outboundSchema,\n} from \"./customerbenefitgrantdownloadablesupdate.js\";\nimport {\n  CustomerBenefitGrantGitHubRepositoryUpdate,\n  CustomerBenefitGrantGitHubRepositoryUpdate$inboundSchema,\n  CustomerBenefitGrantGitHubRepositoryUpdate$Outbound,\n  CustomerBenefitGrantGitHubRepositoryUpdate$outboundSchema,\n} from \"./customerbenefitgrantgithubrepositoryupdate.js\";\nimport {\n  CustomerBenefitGrantLicenseKeysUpdate,\n  CustomerBenefitGrantLicenseKeysUpdate$inboundSchema,\n  CustomerBenefitGrantLicenseKeysUpdate$Outbound,\n  CustomerBenefitGrantLicenseKeysUpdate$outboundSchema,\n} from \"./customerbenefitgrantlicensekeysupdate.js\";\nimport {\n  CustomerBenefitGrantMeterCreditUpdate,\n  CustomerBenefitGrantMeterCreditUpdate$inboundSchema,\n  CustomerBenefitGrantMeterCreditUpdate$Outbound,\n  CustomerBenefitGrantMeterCreditUpdate$outboundSchema,\n} from \"./customerbenefitgrantmetercreditupdate.js\";\n\nexport type CustomerBenefitGrantUpdate =\n  | (CustomerBenefitGrantCustomUpdate & { benefitType: \"custom\" })\n  | (CustomerBenefitGrantDownloadablesUpdate & { benefitType: \"downloadables\" })\n  | (CustomerBenefitGrantLicenseKeysUpdate & { benefitType: \"license_keys\" })\n  | (CustomerBenefitGrantMeterCreditUpdate & { benefitType: \"meter_credit\" })\n  | (CustomerBenefitGrantDiscordUpdate & { benefitType: \"discord\" })\n  | (CustomerBenefitGrantGitHubRepositoryUpdate & {\n    benefitType: \"github_repository\";\n  });\n\n/** @internal */\nexport const CustomerBenefitGrantUpdate$inboundSchema: z.ZodType<\n  CustomerBenefitGrantUpdate,\n  z.ZodTypeDef,\n  unknown\n> = z.union([\n  CustomerBenefitGrantCustomUpdate$inboundSchema.and(\n    z.object({ benefit_type: z.literal(\"custom\") }).transform((v) => ({\n      benefitType: v.benefit_type,\n    })),\n  ),\n  CustomerBenefitGrantDownloadablesUpdate$inboundSchema.and(\n    z.object({ benefit_type: z.literal(\"downloadables\") }).transform((v) => ({\n      benefitType: v.benefit_type,\n    })),\n  ),\n  CustomerBenefitGrantLicenseKeysUpdate$inboundSchema.and(\n    z.object({ benefit_type: z.literal(\"license_keys\") }).transform((v) => ({\n      benefitType: v.benefit_type,\n    })),\n  ),\n  CustomerBenefitGrantMeterCreditUpdate$inboundSchema.and(\n    z.object({ benefit_type: z.literal(\"meter_credit\") }).transform((v) => ({\n      benefitType: v.benefit_type,\n    })),\n  ),\n  CustomerBenefitGrantDiscordUpdate$inboundSchema.and(\n    z.object({ benefit_type: z.literal(\"discord\") }).transform((v) => ({\n      benefitType: v.benefit_type,\n    })),\n  ),\n  CustomerBenefitGrantGitHubRepositoryUpdate$inboundSchema.and(\n    z.object({ benefit_type: z.literal(\"github_repository\") }).transform((\n      v,\n    ) => ({ benefitType: v.benefit_type })),\n  ),\n]);\n\n/** @internal */\nexport type CustomerBenefitGrantUpdate$Outbound =\n  | (CustomerBenefitGrantCustomUpdate$Outbound & { benefit_type: \"custom\" })\n  | (CustomerBenefitGrantDownloadablesUpdate$Outbound & {\n    benefit_type: \"downloadables\";\n  })\n  | (CustomerBenefitGrantLicenseKeysUpdate$Outbound & {\n    benefit_type: \"license_keys\";\n  })\n  | (CustomerBenefitGrantMeterCreditUpdate$Outbound & {\n    benefit_type: \"meter_credit\";\n  })\n  | (CustomerBenefitGrantDiscordUpdate$Outbound & { benefit_type: \"discord\" })\n  | (CustomerBenefitGrantGitHubRepositoryUpdate$Outbound & {\n    benefit_type: \"github_repository\";\n  });\n\n/** @internal */\nexport const CustomerBenefitGrantUpdate$outboundSchema: z.ZodType<\n  CustomerBenefitGrantUpdate$Outbound,\n  z.ZodTypeDef,\n  CustomerBenefitGrantUpdate\n> = z.union([\n  CustomerBenefitGrantCustomUpdate$outboundSchema.and(\n    z.object({ benefitType: z.literal(\"custom\") }).transform((v) => ({\n      benefit_type: v.benefitType,\n    })),\n  ),\n  CustomerBenefitGrantDownloadablesUpdate$outboundSchema.and(\n    z.object({ benefitType: z.literal(\"downloadables\") }).transform((v) => ({\n      benefit_type: v.benefitType,\n    })),\n  ),\n  CustomerBenefitGrantLicenseKeysUpdate$outboundSchema.and(\n    z.object({ benefitType: z.literal(\"license_keys\") }).transform((v) => ({\n      benefit_type: v.benefitType,\n    })),\n  ),\n  CustomerBenefitGrantMeterCreditUpdate$outboundSchema.and(\n    z.object({ benefitType: z.literal(\"meter_credit\") }).transform((v) => ({\n      benefit_type: v.benefitType,\n    })),\n  ),\n  CustomerBenefitGrantDiscordUpdate$outboundSchema.and(\n    z.object({ benefitType: z.literal(\"discord\") }).transform((v) => ({\n      benefit_type: v.benefitType,\n    })),\n  ),\n  CustomerBenefitGrantGitHubRepositoryUpdate$outboundSchema.and(\n    z.object({ benefitType: z.literal(\"github_repository\") }).transform((\n      v,\n    ) => ({ benefit_type: v.benefitType })),\n  ),\n]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomerBenefitGrantUpdate$ {\n  /** @deprecated use `CustomerBenefitGrantUpdate$inboundSchema` instead. */\n  export const inboundSchema = CustomerBenefitGrantUpdate$inboundSchema;\n  /** @deprecated use `CustomerBenefitGrantUpdate$outboundSchema` instead. */\n  export const outboundSchema = CustomerBenefitGrantUpdate$outboundSchema;\n  /** @deprecated use `CustomerBenefitGrantUpdate$Outbound` instead. */\n  export type Outbound = CustomerBenefitGrantUpdate$Outbound;\n}\n\nexport function customerBenefitGrantUpdateToJSON(\n  customerBenefitGrantUpdate: CustomerBenefitGrantUpdate,\n): string {\n  return JSON.stringify(\n    CustomerBenefitGrantUpdate$outboundSchema.parse(customerBenefitGrantUpdate),\n  );\n}\n\nexport function customerBenefitGrantUpdateFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomerBenefitGrantUpdate, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomerBenefitGrantUpdate$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomerBenefitGrantUpdate' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 13189, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13195, "column": 0}, "map": {"version":3,"file":"fileservicetypes.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/fileservicetypes.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { ClosedEnum } from \"../../types/enums.js\";\n\nexport const FileServiceTypes = {\n  Downloadable: \"downloadable\",\n  ProductMedia: \"product_media\",\n  OrganizationAvatar: \"organization_avatar\",\n} as const;\nexport type FileServiceTypes = ClosedEnum<typeof FileServiceTypes>;\n\n/** @internal */\nexport const FileServiceTypes$inboundSchema: z.ZodNativeEnum<\n  typeof FileServiceTypes\n> = z.nativeEnum(FileServiceTypes);\n\n/** @internal */\nexport const FileServiceTypes$outboundSchema: z.ZodNativeEnum<\n  typeof FileServiceTypes\n> = FileServiceTypes$inboundSchema;\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace FileServiceTypes$ {\n  /** @deprecated use `FileServiceTypes$inboundSchema` instead. */\n  export const inboundSchema = FileServiceTypes$inboundSchema;\n  /** @deprecated use `FileServiceTypes$outboundSchema` instead. */\n  export const outboundSchema = FileServiceTypes$outboundSchema;\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;AAGlB,MAAM,gBAAgB,GAAG;IAC9B,YAAY,EAAE,cAAc;IAC5B,YAAY,EAAE,eAAe;IAC7B,kBAAkB,EAAE,qBAAqB;CACjC,CAAC;AAIJ,MAAM,8BAA8B,GAEvC,CAAC,6IAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC;AAG5B,MAAM,+BAA+B,GAExC,8BAA8B,CAAC;AAM7B,IAAW,iBAAiB,CAKjC;AALD,CAAA,SAAiB,iBAAiB;IAChC,8DAAA,EAAgE,CACnD,kBAAA,aAAa,GAAG,8BAA8B,CAAC;IAC5D,+DAAA,EAAiE,CACpD,kBAAA,cAAc,GAAG,+BAA+B,CAAC;AAChE,CAAC,EALgB,iBAAiB,IAAA,CAAjB,iBAAiB,GAAA,CAAA,CAAA,GAKjC","ignoreList":[0]}},
    {"offset": {"line": 13218, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13224, "column": 0}, "map": {"version":3,"file":"s3downloadurl.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/s3downloadurl.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport type S3DownloadURL = {\n  url: string;\n  headers?: { [k: string]: string } | undefined;\n  expiresAt: Date;\n};\n\n/** @internal */\nexport const S3DownloadURL$inboundSchema: z.ZodType<\n  S3DownloadURL,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  url: z.string(),\n  headers: z.record(z.string()).optional(),\n  expires_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n}).transform((v) => {\n  return remap$(v, {\n    \"expires_at\": \"expiresAt\",\n  });\n});\n\n/** @internal */\nexport type S3DownloadURL$Outbound = {\n  url: string;\n  headers?: { [k: string]: string } | undefined;\n  expires_at: string;\n};\n\n/** @internal */\nexport const S3DownloadURL$outboundSchema: z.ZodType<\n  S3DownloadURL$Outbound,\n  z.ZodTypeDef,\n  S3DownloadURL\n> = z.object({\n  url: z.string(),\n  headers: z.record(z.string()).optional(),\n  expiresAt: z.date().transform(v => v.toISOString()),\n}).transform((v) => {\n  return remap$(v, {\n    expiresAt: \"expires_at\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace S3DownloadURL$ {\n  /** @deprecated use `S3DownloadURL$inboundSchema` instead. */\n  export const inboundSchema = S3DownloadURL$inboundSchema;\n  /** @deprecated use `S3DownloadURL$outboundSchema` instead. */\n  export const outboundSchema = S3DownloadURL$outboundSchema;\n  /** @deprecated use `S3DownloadURL$Outbound` instead. */\n  export type Outbound = S3DownloadURL$Outbound;\n}\n\nexport function s3DownloadURLToJSON(s3DownloadURL: S3DownloadURL): string {\n  return JSON.stringify(S3DownloadURL$outboundSchema.parse(s3DownloadURL));\n}\n\nexport function s3DownloadURLFromJSON(\n  jsonString: string,\n): SafeParseResult<S3DownloadURL, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => S3DownloadURL$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'S3DownloadURL' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;;;;;AAW1C,MAAM,2BAA2B,GAIpC,CAAC,6IAAC,MAAM,CAAC;IACX,GAAG,EAAE,CAAC,6IAAC,MAAM,EAAE;IACf,OAAO,EAAE,CAAC,6IAAC,MAAM,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;IACxC,UAAU,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,CAAC;QAAE,MAAM,EAAE,IAAI;IAAA,CAAE,CAAC,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;CAC9E,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,YAAY,EAAE,WAAW;KAC1B,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAUI,MAAM,4BAA4B,GAIrC,CAAC,6IAAC,MAAM,CAAC;IACX,GAAG,EAAE,CAAC,6IAAC,MAAM,EAAE;IACf,OAAO,EAAE,CAAC,6IAAC,MAAM,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;IACxC,SAAS,EAAE,CAAC,6IAAC,IAAI,EAAE,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,WAAW,EAAE,CAAC;CACpD,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,OAAO,uLAAM,AAAN,EAAO,CAAC,EAAE;QACf,SAAS,EAAE,YAAY;KACxB,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,cAAc,CAO9B;AAPD,CAAA,SAAiB,cAAc;IAC7B,2DAAA,EAA6D,CAChD,eAAA,aAAa,GAAG,2BAA2B,CAAC;IACzD,4DAAA,EAA8D,CACjD,eAAA,cAAc,GAAG,4BAA4B,CAAC;AAG7D,CAAC,EAPgB,cAAc,IAAA,CAAd,cAAc,GAAA,CAAA,CAAA,GAO9B;AAEK,SAAU,mBAAmB,CAAC,aAA4B;IAC9D,OAAO,IAAI,CAAC,SAAS,CAAC,4BAA4B,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC;AAC3E,CAAC;AAEK,SAAU,qBAAqB,CACnC,UAAkB;IAElB,OAAO,wLAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,0BAA4B,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACvD,CAAA,yCAAA,CAA2C,CAC5C,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 13271, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13277, "column": 0}, "map": {"version":3,"file":"filedownload.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/filedownload.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  FileServiceTypes,\n  FileServiceTypes$inboundSchema,\n  FileServiceTypes$outboundSchema,\n} from \"./fileservicetypes.js\";\nimport {\n  S3DownloadURL,\n  S3DownloadURL$inboundSchema,\n  S3DownloadURL$Outbound,\n  S3DownloadURL$outboundSchema,\n} from \"./s3downloadurl.js\";\n\nexport type FileDownload = {\n  /**\n   * The ID of the object.\n   */\n  id: string;\n  organizationId: string;\n  name: string;\n  path: string;\n  mimeType: string;\n  size: number;\n  storageVersion: string | null;\n  checksumEtag: string | null;\n  checksumSha256Base64: string | null;\n  checksumSha256Hex: string | null;\n  lastModifiedAt: Date | null;\n  download: S3DownloadURL;\n  version: string | null;\n  isUploaded: boolean;\n  service: FileServiceTypes;\n  sizeReadable: string;\n};\n\n/** @internal */\nexport const FileDownload$inboundSchema: z.ZodType<\n  FileDownload,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  id: z.string(),\n  organization_id: z.string(),\n  name: z.string(),\n  path: z.string(),\n  mime_type: z.string(),\n  size: z.number().int(),\n  storage_version: z.nullable(z.string()),\n  checksum_etag: z.nullable(z.string()),\n  checksum_sha256_base64: z.nullable(z.string()),\n  checksum_sha256_hex: z.nullable(z.string()),\n  last_modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  download: S3DownloadURL$inboundSchema,\n  version: z.nullable(z.string()),\n  is_uploaded: z.boolean(),\n  service: FileServiceTypes$inboundSchema,\n  size_readable: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    \"organization_id\": \"organizationId\",\n    \"mime_type\": \"mimeType\",\n    \"storage_version\": \"storageVersion\",\n    \"checksum_etag\": \"checksumEtag\",\n    \"checksum_sha256_base64\": \"checksumSha256Base64\",\n    \"checksum_sha256_hex\": \"checksumSha256Hex\",\n    \"last_modified_at\": \"lastModifiedAt\",\n    \"is_uploaded\": \"isUploaded\",\n    \"size_readable\": \"sizeReadable\",\n  });\n});\n\n/** @internal */\nexport type FileDownload$Outbound = {\n  id: string;\n  organization_id: string;\n  name: string;\n  path: string;\n  mime_type: string;\n  size: number;\n  storage_version: string | null;\n  checksum_etag: string | null;\n  checksum_sha256_base64: string | null;\n  checksum_sha256_hex: string | null;\n  last_modified_at: string | null;\n  download: S3DownloadURL$Outbound;\n  version: string | null;\n  is_uploaded: boolean;\n  service: string;\n  size_readable: string;\n};\n\n/** @internal */\nexport const FileDownload$outboundSchema: z.ZodType<\n  FileDownload$Outbound,\n  z.ZodTypeDef,\n  FileDownload\n> = z.object({\n  id: z.string(),\n  organizationId: z.string(),\n  name: z.string(),\n  path: z.string(),\n  mimeType: z.string(),\n  size: z.number().int(),\n  storageVersion: z.nullable(z.string()),\n  checksumEtag: z.nullable(z.string()),\n  checksumSha256Base64: z.nullable(z.string()),\n  checksumSha256Hex: z.nullable(z.string()),\n  lastModifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  download: S3DownloadURL$outboundSchema,\n  version: z.nullable(z.string()),\n  isUploaded: z.boolean(),\n  service: FileServiceTypes$outboundSchema,\n  sizeReadable: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    organizationId: \"organization_id\",\n    mimeType: \"mime_type\",\n    storageVersion: \"storage_version\",\n    checksumEtag: \"checksum_etag\",\n    checksumSha256Base64: \"checksum_sha256_base64\",\n    checksumSha256Hex: \"checksum_sha256_hex\",\n    lastModifiedAt: \"last_modified_at\",\n    isUploaded: \"is_uploaded\",\n    sizeReadable: \"size_readable\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace FileDownload$ {\n  /** @deprecated use `FileDownload$inboundSchema` instead. */\n  export const inboundSchema = FileDownload$inboundSchema;\n  /** @deprecated use `FileDownload$outboundSchema` instead. */\n  export const outboundSchema = FileDownload$outboundSchema;\n  /** @deprecated use `FileDownload$Outbound` instead. */\n  export type Outbound = FileDownload$Outbound;\n}\n\nexport function fileDownloadToJSON(fileDownload: FileDownload): string {\n  return JSON.stringify(FileDownload$outboundSchema.parse(fileDownload));\n}\n\nexport function fileDownloadFromJSON(\n  jsonString: string,\n): SafeParseResult<FileDownload, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => FileDownload$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'FileDownload' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,8BAA8B,EAC9B,+BAA+B,GAChC,MAAM,uBAAuB,CAAC;AAC/B,OAAO,EAEL,2BAA2B,EAE3B,4BAA4B,GAC7B,MAAM,oBAAoB,CAAC;;;;;;;AAyBrB,MAAM,0BAA0B,GAInC,CAAC,6IAAC,MAAM,CAAC;IACX,EAAE,EAAE,CAAC,6IAAC,MAAM,EAAE;IACd,eAAe,EAAE,CAAC,6IAAC,MAAM,EAAE;IAC3B,IAAI,EAAE,CAAC,6IAAC,MAAM,EAAE;IAChB,IAAI,EAAE,CAAC,6IAAC,MAAM,EAAE;IAChB,SAAS,EAAE,CAAC,6IAAC,MAAM,EAAE;IACrB,IAAI,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IACtB,eAAe,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;IACvC,aAAa,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;IACrC,sBAAsB,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;IAC9C,mBAAmB,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;IAC3C,gBAAgB,EAAE,CAAC,6IAAC,QAAQ,CAC1B,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,CAAC;QAAE,MAAM,EAAE,IAAI;IAAA,CAAE,CAAC,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAClE;IACD,QAAQ,iMAAE,8BAA2B;IACrC,OAAO,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;IAC/B,WAAW,EAAE,CAAC,6IAAC,OAAO,EAAE;IACxB,OAAO,oMAAE,iCAA8B;IACvC,aAAa,EAAE,CAAC,6IAAC,MAAM,EAAE;CAC1B,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,iBAAiB,EAAE,gBAAgB;QACnC,WAAW,EAAE,UAAU;QACvB,iBAAiB,EAAE,gBAAgB;QACnC,eAAe,EAAE,cAAc;QAC/B,wBAAwB,EAAE,sBAAsB;QAChD,qBAAqB,EAAE,mBAAmB;QAC1C,kBAAkB,EAAE,gBAAgB;QACpC,aAAa,EAAE,YAAY;QAC3B,eAAe,EAAE,cAAc;KAChC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAuBI,MAAM,2BAA2B,GAIpC,CAAC,6IAAC,MAAM,CAAC;IACX,EAAE,EAAE,CAAC,6IAAC,MAAM,EAAE;IACd,cAAc,EAAE,CAAC,6IAAC,MAAM,EAAE;IAC1B,IAAI,EAAE,CAAC,6IAAC,MAAM,EAAE;IAChB,IAAI,EAAE,CAAC,6IAAC,MAAM,EAAE;IAChB,QAAQ,EAAE,CAAC,6IAAC,MAAM,EAAE;IACpB,IAAI,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IACtB,cAAc,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;IACtC,YAAY,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;IACpC,oBAAoB,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;IAC5C,iBAAiB,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;IACzC,cAAc,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,IAAI,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;IACpE,QAAQ,iMAAE,+BAA4B;IACtC,OAAO,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;IAC/B,UAAU,EAAE,CAAC,6IAAC,OAAO,EAAE;IACvB,OAAO,EAAE,oOAA+B;IACxC,YAAY,EAAE,CAAC,6IAAC,MAAM,EAAE;CACzB,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,QAAO,sLAAA,AAAM,EAAC,CAAC,EAAE;QACf,cAAc,EAAE,iBAAiB;QACjC,QAAQ,EAAE,WAAW;QACrB,cAAc,EAAE,iBAAiB;QACjC,YAAY,EAAE,eAAe;QAC7B,oBAAoB,EAAE,wBAAwB;QAC9C,iBAAiB,EAAE,qBAAqB;QACxC,cAAc,EAAE,kBAAkB;QAClC,UAAU,EAAE,aAAa;QACzB,YAAY,EAAE,eAAe;KAC9B,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,aAAa,CAO7B;AAPD,CAAA,SAAiB,aAAa;IAC5B,0DAAA,EAA4D,CAC/C,cAAA,aAAa,GAAG,0BAA0B,CAAC;IACxD,2DAAA,EAA6D,CAChD,cAAA,cAAc,GAAG,2BAA2B,CAAC;AAG5D,CAAC,EAPgB,aAAa,IAAA,CAAb,aAAa,GAAA,CAAA,CAAA,GAO7B;AAEK,SAAU,kBAAkB,CAAC,YAA0B;IAC3D,OAAO,IAAI,CAAC,SAAS,CAAC,2BAA2B,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC;AACzE,CAAC;AAEK,SAAU,oBAAoB,CAClC,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,yBAA2B,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACtD,CAAA,wCAAA,CAA0C,CAC3C,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 13370, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13376, "column": 0}, "map": {"version":3,"file":"downloadableread.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/downloadableread.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  FileDownload,\n  FileDownload$inboundSchema,\n  FileDownload$Outbound,\n  FileDownload$outboundSchema,\n} from \"./filedownload.js\";\n\nexport type DownloadableRead = {\n  id: string;\n  benefitId: string;\n  file: FileDownload;\n};\n\n/** @internal */\nexport const DownloadableRead$inboundSchema: z.ZodType<\n  DownloadableRead,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  id: z.string(),\n  benefit_id: z.string(),\n  file: FileDownload$inboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    \"benefit_id\": \"benefitId\",\n  });\n});\n\n/** @internal */\nexport type DownloadableRead$Outbound = {\n  id: string;\n  benefit_id: string;\n  file: FileDownload$Outbound;\n};\n\n/** @internal */\nexport const DownloadableRead$outboundSchema: z.ZodType<\n  DownloadableRead$Outbound,\n  z.ZodTypeDef,\n  DownloadableRead\n> = z.object({\n  id: z.string(),\n  benefitId: z.string(),\n  file: FileDownload$outboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    benefitId: \"benefit_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace DownloadableRead$ {\n  /** @deprecated use `DownloadableRead$inboundSchema` instead. */\n  export const inboundSchema = DownloadableRead$inboundSchema;\n  /** @deprecated use `DownloadableRead$outboundSchema` instead. */\n  export const outboundSchema = DownloadableRead$outboundSchema;\n  /** @deprecated use `DownloadableRead$Outbound` instead. */\n  export type Outbound = DownloadableRead$Outbound;\n}\n\nexport function downloadableReadToJSON(\n  downloadableRead: DownloadableRead,\n): string {\n  return JSON.stringify(\n    DownloadableRead$outboundSchema.parse(downloadableRead),\n  );\n}\n\nexport function downloadableReadFromJSON(\n  jsonString: string,\n): SafeParseResult<DownloadableRead, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => DownloadableRead$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'DownloadableRead' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,0BAA0B,EAE1B,2BAA2B,GAC5B,MAAM,mBAAmB,CAAC;;;;;;AASpB,MAAM,8BAA8B,GAIvC,CAAC,6IAAC,MAAM,CAAC;IACX,EAAE,EAAE,CAAC,6IAAC,MAAM,EAAE;IACd,UAAU,EAAE,CAAC,6IAAC,MAAM,EAAE;IACtB,IAAI,gMAAE,6BAA0B;CACjC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,YAAY,EAAE,WAAW;KAC1B,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAUI,MAAM,+BAA+B,GAIxC,CAAC,6IAAC,MAAM,CAAC;IACX,EAAE,EAAE,CAAC,6IAAC,MAAM,EAAE;IACd,SAAS,EAAE,CAAC,6IAAC,MAAM,EAAE;IACrB,IAAI,gMAAE,8BAA2B;CAClC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAM,AAAN,EAAO,CAAC,EAAE;QACf,SAAS,EAAE,YAAY;KACxB,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,iBAAiB,CAOjC;AAPD,CAAA,SAAiB,iBAAiB;IAChC,8DAAA,EAAgE,CACnD,kBAAA,aAAa,GAAG,8BAA8B,CAAC;IAC5D,+DAAA,EAAiE,CACpD,kBAAA,cAAc,GAAG,+BAA+B,CAAC;AAGhE,CAAC,EAPgB,iBAAiB,IAAA,CAAjB,iBAAiB,GAAA,CAAA,CAAA,GAOjC;AAEK,SAAU,sBAAsB,CACpC,gBAAkC;IAElC,OAAO,IAAI,CAAC,SAAS,CACnB,+BAA+B,CAAC,KAAK,CAAC,gBAAgB,CAAC,CACxD,CAAC;AACJ,CAAC;AAEK,SAAU,wBAAwB,CACtC,UAAkB;IAElB,mLAAO,YAAS,AAAT,EACL,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,6BAA+B,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC1D,CAAA,4CAAA,CAA8C,CAC/C,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 13423, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13429, "column": 0}, "map": {"version":3,"file":"listresourcedownloadableread.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/listresourcedownloadableread.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  DownloadableRead,\n  DownloadableRead$inboundSchema,\n  DownloadableRead$Outbound,\n  DownloadableRead$outboundSchema,\n} from \"./downloadableread.js\";\nimport {\n  Pagination,\n  Pagination$inboundSchema,\n  Pagination$Outbound,\n  Pagination$outboundSchema,\n} from \"./pagination.js\";\n\nexport type ListResourceDownloadableRead = {\n  items: Array<DownloadableRead>;\n  pagination: Pagination;\n};\n\n/** @internal */\nexport const ListResourceDownloadableRead$inboundSchema: z.ZodType<\n  ListResourceDownloadableRead,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  items: z.array(DownloadableRead$inboundSchema),\n  pagination: Pagination$inboundSchema,\n});\n\n/** @internal */\nexport type ListResourceDownloadableRead$Outbound = {\n  items: Array<DownloadableRead$Outbound>;\n  pagination: Pagination$Outbound;\n};\n\n/** @internal */\nexport const ListResourceDownloadableRead$outboundSchema: z.ZodType<\n  ListResourceDownloadableRead$Outbound,\n  z.ZodTypeDef,\n  ListResourceDownloadableRead\n> = z.object({\n  items: z.array(DownloadableRead$outboundSchema),\n  pagination: Pagination$outboundSchema,\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace ListResourceDownloadableRead$ {\n  /** @deprecated use `ListResourceDownloadableRead$inboundSchema` instead. */\n  export const inboundSchema = ListResourceDownloadableRead$inboundSchema;\n  /** @deprecated use `ListResourceDownloadableRead$outboundSchema` instead. */\n  export const outboundSchema = ListResourceDownloadableRead$outboundSchema;\n  /** @deprecated use `ListResourceDownloadableRead$Outbound` instead. */\n  export type Outbound = ListResourceDownloadableRead$Outbound;\n}\n\nexport function listResourceDownloadableReadToJSON(\n  listResourceDownloadableRead: ListResourceDownloadableRead,\n): string {\n  return JSON.stringify(\n    ListResourceDownloadableRead$outboundSchema.parse(\n      listResourceDownloadableRead,\n    ),\n  );\n}\n\nexport function listResourceDownloadableReadFromJSON(\n  jsonString: string,\n): SafeParseResult<ListResourceDownloadableRead, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => ListResourceDownloadableRead$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'ListResourceDownloadableRead' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;AAGH,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,8BAA8B,EAE9B,+BAA+B,GAChC,MAAM,uBAAuB,CAAC;AAC/B,OAAO,EAEL,wBAAwB,EAExB,yBAAyB,GAC1B,MAAM,iBAAiB,CAAC;AAfzB,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;;;;AAuBlB,MAAM,0CAA0C,GAInD,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,KAAK,mMAAC,iCAA8B,CAAC;IAC9C,UAAU,8LAAE,2BAAwB;CACrC,CAAC,CAAC;AASI,MAAM,2CAA2C,GAIpD,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,KAAK,mMAAC,kCAA+B,CAAC;IAC/C,UAAU,8LAAE,4BAAyB;CACtC,CAAC,CAAC;AAMG,IAAW,6BAA6B,CAO7C;AAPD,CAAA,SAAiB,6BAA6B;IAC5C,0EAAA,EAA4E,CAC/D,8BAAA,aAAa,GAAG,0CAA0C,CAAC;IACxE,2EAAA,EAA6E,CAChE,8BAAA,cAAc,GAAG,2CAA2C,CAAC;AAG5E,CAAC,EAPgB,6BAA6B,IAAA,CAA7B,6BAA6B,GAAA,CAAA,CAAA,GAO7C;AAEK,SAAU,kCAAkC,CAChD,4BAA0D;IAE1D,OAAO,IAAI,CAAC,SAAS,CACnB,2CAA2C,CAAC,KAAK,CAC/C,4BAA4B,CAC7B,CACF,CAAC;AACJ,CAAC;AAEK,SAAU,oCAAoC,CAClD,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,yCAA2C,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACtE,CAAA,wDAAA,CAA0D,CAC3D,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 13466, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13472, "column": 0}, "map": {"version":3,"file":"customercustomermetermeter.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customercustomermetermeter.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport type CustomerCustomerMeterMeter = {\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  /**\n   * The ID of the object.\n   */\n  id: string;\n  /**\n   * The name of the meter. Will be shown on customer's invoices and usage.\n   */\n  name: string;\n};\n\n/** @internal */\nexport const CustomerCustomerMeterMeter$inboundSchema: z.ZodType<\n  CustomerCustomerMeterMeter,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  id: z.string(),\n  name: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n  });\n});\n\n/** @internal */\nexport type CustomerCustomerMeterMeter$Outbound = {\n  created_at: string;\n  modified_at: string | null;\n  id: string;\n  name: string;\n};\n\n/** @internal */\nexport const CustomerCustomerMeterMeter$outboundSchema: z.ZodType<\n  CustomerCustomerMeterMeter$Outbound,\n  z.ZodTypeDef,\n  CustomerCustomerMeterMeter\n> = z.object({\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  id: z.string(),\n  name: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomerCustomerMeterMeter$ {\n  /** @deprecated use `CustomerCustomerMeterMeter$inboundSchema` instead. */\n  export const inboundSchema = CustomerCustomerMeterMeter$inboundSchema;\n  /** @deprecated use `CustomerCustomerMeterMeter$outboundSchema` instead. */\n  export const outboundSchema = CustomerCustomerMeterMeter$outboundSchema;\n  /** @deprecated use `CustomerCustomerMeterMeter$Outbound` instead. */\n  export type Outbound = CustomerCustomerMeterMeter$Outbound;\n}\n\nexport function customerCustomerMeterMeterToJSON(\n  customerCustomerMeterMeter: CustomerCustomerMeterMeter,\n): string {\n  return JSON.stringify(\n    CustomerCustomerMeterMeter$outboundSchema.parse(customerCustomerMeterMeter),\n  );\n}\n\nexport function customerCustomerMeterMeterFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomerCustomerMeterMeter, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomerCustomerMeterMeter$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomerCustomerMeterMeter' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;;;;;AAwB1C,MAAM,wCAAwC,GAIjD,CAAC,6IAAC,MAAM,CAAC;IACX,UAAU,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,CAAC;QAAE,MAAM,EAAE,IAAI;IAAA,CAAE,CAAC,CAAC,SAAS,EAAC,CAAC,CAAC,EAAG,AAAD,IAAK,IAAI,CAAC,CAAC,CAAC,CAAC;IAC7E,WAAW,EAAE,CAAC,6IAAC,QAAQ,CACrB,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,CAAC;QAAE,MAAM,EAAE,IAAI;IAAA,CAAE,CAAC,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAClE;IACD,EAAE,EAAE,CAAC,6IAAC,MAAM,EAAE;IACd,IAAI,EAAE,CAAC,6IAAC,MAAM,EAAE;CACjB,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,OAAO,uLAAA,AAAM,EAAC,CAAC,EAAE;QACf,YAAY,EAAE,WAAW;QACzB,aAAa,EAAE,YAAY;KAC5B,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAWI,MAAM,yCAAyC,GAIlD,CAAC,6IAAC,MAAM,CAAC;IACX,SAAS,EAAE,CAAC,6IAAC,IAAI,EAAE,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,WAAW,EAAE,CAAC;IACnD,UAAU,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,IAAI,EAAE,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;IAChE,EAAE,EAAE,CAAC,6IAAC,MAAM,EAAE;IACd,IAAI,EAAE,CAAC,6IAAC,MAAM,EAAE;CACjB,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,SAAS,EAAE,YAAY;QACvB,UAAU,EAAE,aAAa;KAC1B,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,2BAA2B,CAO3C;AAPD,CAAA,SAAiB,2BAA2B;IAC1C,wEAAA,EAA0E,CAC7D,4BAAA,aAAa,GAAG,wCAAwC,CAAC;IACtE,yEAAA,EAA2E,CAC9D,4BAAA,cAAc,GAAG,yCAAyC,CAAC;AAG1E,CAAC,EAPgB,2BAA2B,IAAA,CAA3B,2BAA2B,GAAA,CAAA,CAAA,GAO3C;AAEK,SAAU,gCAAgC,CAC9C,0BAAsD;IAEtD,OAAO,IAAI,CAAC,SAAS,CACnB,yCAAyC,CAAC,KAAK,CAAC,0BAA0B,CAAC,CAC5E,CAAC;AACJ,CAAC;AAEK,SAAU,kCAAkC,CAChD,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,uCAAyC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACpE,CAAA,sDAAA,CAAwD,CACzD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 13525, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13531, "column": 0}, "map": {"version":3,"file":"customercustomermeter.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customercustomermeter.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  CustomerCustomerMeterMeter,\n  CustomerCustomerMeterMeter$inboundSchema,\n  CustomerCustomerMeterMeter$Outbound,\n  CustomerCustomerMeterMeter$outboundSchema,\n} from \"./customercustomermetermeter.js\";\n\nexport type CustomerCustomerMeter = {\n  /**\n   * The ID of the object.\n   */\n  id: string;\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  /**\n   * The ID of the customer.\n   */\n  customerId: string;\n  /**\n   * The ID of the meter.\n   */\n  meterId: string;\n  /**\n   * The number of consumed units.\n   */\n  consumedUnits: number;\n  /**\n   * The number of credited units.\n   */\n  creditedUnits: number;\n  /**\n   * The balance of the meter, i.e. the difference between credited and consumed units.\n   */\n  balance: number;\n  meter: CustomerCustomerMeterMeter;\n};\n\n/** @internal */\nexport const CustomerCustomerMeter$inboundSchema: z.ZodType<\n  CustomerCustomerMeter,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  id: z.string(),\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  customer_id: z.string(),\n  meter_id: z.string(),\n  consumed_units: z.number(),\n  credited_units: z.number().int(),\n  balance: z.number(),\n  meter: CustomerCustomerMeterMeter$inboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"customer_id\": \"customerId\",\n    \"meter_id\": \"meterId\",\n    \"consumed_units\": \"consumedUnits\",\n    \"credited_units\": \"creditedUnits\",\n  });\n});\n\n/** @internal */\nexport type CustomerCustomerMeter$Outbound = {\n  id: string;\n  created_at: string;\n  modified_at: string | null;\n  customer_id: string;\n  meter_id: string;\n  consumed_units: number;\n  credited_units: number;\n  balance: number;\n  meter: CustomerCustomerMeterMeter$Outbound;\n};\n\n/** @internal */\nexport const CustomerCustomerMeter$outboundSchema: z.ZodType<\n  CustomerCustomerMeter$Outbound,\n  z.ZodTypeDef,\n  CustomerCustomerMeter\n> = z.object({\n  id: z.string(),\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  customerId: z.string(),\n  meterId: z.string(),\n  consumedUnits: z.number(),\n  creditedUnits: z.number().int(),\n  balance: z.number(),\n  meter: CustomerCustomerMeterMeter$outboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    customerId: \"customer_id\",\n    meterId: \"meter_id\",\n    consumedUnits: \"consumed_units\",\n    creditedUnits: \"credited_units\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomerCustomerMeter$ {\n  /** @deprecated use `CustomerCustomerMeter$inboundSchema` instead. */\n  export const inboundSchema = CustomerCustomerMeter$inboundSchema;\n  /** @deprecated use `CustomerCustomerMeter$outboundSchema` instead. */\n  export const outboundSchema = CustomerCustomerMeter$outboundSchema;\n  /** @deprecated use `CustomerCustomerMeter$Outbound` instead. */\n  export type Outbound = CustomerCustomerMeter$Outbound;\n}\n\nexport function customerCustomerMeterToJSON(\n  customerCustomerMeter: CustomerCustomerMeter,\n): string {\n  return JSON.stringify(\n    CustomerCustomerMeter$outboundSchema.parse(customerCustomerMeter),\n  );\n}\n\nexport function customerCustomerMeterFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomerCustomerMeter, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomerCustomerMeter$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomerCustomerMeter' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 13604, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13610, "column": 0}, "map": {"version":3,"file":"customercustomermetersortproperty.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customercustomermetersortproperty.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { ClosedEnum } from \"../../types/enums.js\";\n\nexport const CustomerCustomerMeterSortProperty = {\n  CreatedAt: \"created_at\",\n  MinusCreatedAt: \"-created_at\",\n  ModifiedAt: \"modified_at\",\n  MinusModifiedAt: \"-modified_at\",\n  MeterId: \"meter_id\",\n  MinusMeterId: \"-meter_id\",\n  MeterName: \"meter_name\",\n  MinusMeterName: \"-meter_name\",\n  ConsumedUnits: \"consumed_units\",\n  MinusConsumedUnits: \"-consumed_units\",\n  CreditedUnits: \"credited_units\",\n  MinusCreditedUnits: \"-credited_units\",\n  Balance: \"balance\",\n  MinusBalance: \"-balance\",\n} as const;\nexport type CustomerCustomerMeterSortProperty = ClosedEnum<\n  typeof CustomerCustomerMeterSortProperty\n>;\n\n/** @internal */\nexport const CustomerCustomerMeterSortProperty$inboundSchema: z.ZodNativeEnum<\n  typeof CustomerCustomerMeterSortProperty\n> = z.nativeEnum(CustomerCustomerMeterSortProperty);\n\n/** @internal */\nexport const CustomerCustomerMeterSortProperty$outboundSchema: z.ZodNativeEnum<\n  typeof CustomerCustomerMeterSortProperty\n> = CustomerCustomerMeterSortProperty$inboundSchema;\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomerCustomerMeterSortProperty$ {\n  /** @deprecated use `CustomerCustomerMeterSortProperty$inboundSchema` instead. */\n  export const inboundSchema = CustomerCustomerMeterSortProperty$inboundSchema;\n  /** @deprecated use `CustomerCustomerMeterSortProperty$outboundSchema` instead. */\n  export const outboundSchema =\n    CustomerCustomerMeterSortProperty$outboundSchema;\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;AAGlB,MAAM,iCAAiC,GAAG;IAC/C,SAAS,EAAE,YAAY;IACvB,cAAc,EAAE,aAAa;IAC7B,UAAU,EAAE,aAAa;IACzB,eAAe,EAAE,cAAc;IAC/B,OAAO,EAAE,UAAU;IACnB,YAAY,EAAE,WAAW;IACzB,SAAS,EAAE,YAAY;IACvB,cAAc,EAAE,aAAa;IAC7B,aAAa,EAAE,gBAAgB;IAC/B,kBAAkB,EAAE,iBAAiB;IACrC,aAAa,EAAE,gBAAgB;IAC/B,kBAAkB,EAAE,iBAAiB;IACrC,OAAO,EAAE,SAAS;IAClB,YAAY,EAAE,UAAU;CAChB,CAAC;AAMJ,MAAM,+CAA+C,GAExD,CAAC,6IAAC,UAAU,CAAC,iCAAiC,CAAC,CAAC;AAG7C,MAAM,gDAAgD,GAEzD,+CAA+C,CAAC;AAM9C,IAAW,kCAAkC,CAMlD;AAND,CAAA,SAAiB,kCAAkC;IACjD,+EAAA,EAAiF,CACpE,mCAAA,aAAa,GAAG,+CAA+C,CAAC;IAC7E,gFAAA,EAAkF,CACrE,mCAAA,cAAc,GACzB,gDAAgD,CAAC;AACrD,CAAC,EANgB,kCAAkC,IAAA,CAAlC,kCAAkC,GAAA,CAAA,CAAA,GAMlD","ignoreList":[0]}},
    {"offset": {"line": 13644, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13650, "column": 0}, "map": {"version":3,"file":"listresourcecustomercustomermeter.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/listresourcecustomercustomermeter.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  CustomerCustomerMeter,\n  CustomerCustomerMeter$inboundSchema,\n  CustomerCustomerMeter$Outbound,\n  CustomerCustomerMeter$outboundSchema,\n} from \"./customercustomermeter.js\";\nimport {\n  Pagination,\n  Pagination$inboundSchema,\n  Pagination$Outbound,\n  Pagination$outboundSchema,\n} from \"./pagination.js\";\n\nexport type ListResourceCustomerCustomerMeter = {\n  items: Array<CustomerCustomerMeter>;\n  pagination: Pagination;\n};\n\n/** @internal */\nexport const ListResourceCustomerCustomerMeter$inboundSchema: z.ZodType<\n  ListResourceCustomerCustomerMeter,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  items: z.array(CustomerCustomerMeter$inboundSchema),\n  pagination: Pagination$inboundSchema,\n});\n\n/** @internal */\nexport type ListResourceCustomerCustomerMeter$Outbound = {\n  items: Array<CustomerCustomerMeter$Outbound>;\n  pagination: Pagination$Outbound;\n};\n\n/** @internal */\nexport const ListResourceCustomerCustomerMeter$outboundSchema: z.ZodType<\n  ListResourceCustomerCustomerMeter$Outbound,\n  z.ZodTypeDef,\n  ListResourceCustomerCustomerMeter\n> = z.object({\n  items: z.array(CustomerCustomerMeter$outboundSchema),\n  pagination: Pagination$outboundSchema,\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace ListResourceCustomerCustomerMeter$ {\n  /** @deprecated use `ListResourceCustomerCustomerMeter$inboundSchema` instead. */\n  export const inboundSchema = ListResourceCustomerCustomerMeter$inboundSchema;\n  /** @deprecated use `ListResourceCustomerCustomerMeter$outboundSchema` instead. */\n  export const outboundSchema =\n    ListResourceCustomerCustomerMeter$outboundSchema;\n  /** @deprecated use `ListResourceCustomerCustomerMeter$Outbound` instead. */\n  export type Outbound = ListResourceCustomerCustomerMeter$Outbound;\n}\n\nexport function listResourceCustomerCustomerMeterToJSON(\n  listResourceCustomerCustomerMeter: ListResourceCustomerCustomerMeter,\n): string {\n  return JSON.stringify(\n    ListResourceCustomerCustomerMeter$outboundSchema.parse(\n      listResourceCustomerCustomerMeter,\n    ),\n  );\n}\n\nexport function listResourceCustomerCustomerMeterFromJSON(\n  jsonString: string,\n): SafeParseResult<ListResourceCustomerCustomerMeter, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => ListResourceCustomerCustomerMeter$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'ListResourceCustomerCustomerMeter' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;AAGH,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,mCAAmC,EAEnC,oCAAoC,GACrC,MAAM,4BAA4B,CAAC;AACpC,OAAO,EAEL,wBAAwB,EAExB,yBAAyB,GAC1B,MAAM,iBAAiB,CAAC;AAfzB,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;;;;AAuBlB,MAAM,+CAA+C,GAIxD,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,KAAK,wMAAC,sCAAmC,CAAC;IACnD,UAAU,8LAAE,2BAAwB;CACrC,CAAC,CAAC;AASI,MAAM,gDAAgD,GAIzD,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,KAAK,wMAAC,uCAAoC,CAAC;IACpD,UAAU,8LAAE,4BAAyB;CACtC,CAAC,CAAC;AAMG,IAAW,kCAAkC,CAQlD;AARD,CAAA,SAAiB,kCAAkC;IACjD,+EAAA,EAAiF,CACpE,mCAAA,aAAa,GAAG,+CAA+C,CAAC;IAC7E,gFAAA,EAAkF,CACrE,mCAAA,cAAc,GACzB,gDAAgD,CAAC;AAGrD,CAAC,EARgB,kCAAkC,IAAA,CAAlC,kCAAkC,GAAA,CAAA,CAAA,GAQlD;AAEK,SAAU,uCAAuC,CACrD,iCAAoE;IAEpE,OAAO,IAAI,CAAC,SAAS,CACnB,gDAAgD,CAAC,KAAK,CACpD,iCAAiC,CAClC,CACF,CAAC;AACJ,CAAC;AAEK,SAAU,yCAAyC,CACvD,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,8CAAgD,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC3E,CAAA,6DAAA,CAA+D,CAChE,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 13687, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13693, "column": 0}, "map": {"version":3,"file":"customerpaymentmethodcreate.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customerpaymentmethodcreate.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport type CustomerPaymentMethodCreate = {\n  confirmationTokenId: string;\n  setDefault: boolean;\n  returnUrl: string;\n};\n\n/** @internal */\nexport const CustomerPaymentMethodCreate$inboundSchema: z.ZodType<\n  CustomerPaymentMethodCreate,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  confirmation_token_id: z.string(),\n  set_default: z.boolean(),\n  return_url: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    \"confirmation_token_id\": \"confirmationTokenId\",\n    \"set_default\": \"setDefault\",\n    \"return_url\": \"returnUrl\",\n  });\n});\n\n/** @internal */\nexport type CustomerPaymentMethodCreate$Outbound = {\n  confirmation_token_id: string;\n  set_default: boolean;\n  return_url: string;\n};\n\n/** @internal */\nexport const CustomerPaymentMethodCreate$outboundSchema: z.ZodType<\n  CustomerPaymentMethodCreate$Outbound,\n  z.ZodTypeDef,\n  CustomerPaymentMethodCreate\n> = z.object({\n  confirmationTokenId: z.string(),\n  setDefault: z.boolean(),\n  returnUrl: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    confirmationTokenId: \"confirmation_token_id\",\n    setDefault: \"set_default\",\n    returnUrl: \"return_url\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomerPaymentMethodCreate$ {\n  /** @deprecated use `CustomerPaymentMethodCreate$inboundSchema` instead. */\n  export const inboundSchema = CustomerPaymentMethodCreate$inboundSchema;\n  /** @deprecated use `CustomerPaymentMethodCreate$outboundSchema` instead. */\n  export const outboundSchema = CustomerPaymentMethodCreate$outboundSchema;\n  /** @deprecated use `CustomerPaymentMethodCreate$Outbound` instead. */\n  export type Outbound = CustomerPaymentMethodCreate$Outbound;\n}\n\nexport function customerPaymentMethodCreateToJSON(\n  customerPaymentMethodCreate: CustomerPaymentMethodCreate,\n): string {\n  return JSON.stringify(\n    CustomerPaymentMethodCreate$outboundSchema.parse(\n      customerPaymentMethodCreate,\n    ),\n  );\n}\n\nexport function customerPaymentMethodCreateFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomerPaymentMethodCreate, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomerPaymentMethodCreate$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomerPaymentMethodCreate' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;;;;;AAW1C,MAAM,yCAAyC,GAIlD,CAAC,6IAAC,MAAM,CAAC;IACX,qBAAqB,EAAE,CAAC,6IAAC,MAAM,EAAE;IACjC,WAAW,EAAE,CAAC,6IAAC,OAAO,EAAE;IACxB,UAAU,EAAE,CAAC,6IAAC,MAAM,EAAE;CACvB,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,uBAAuB,EAAE,qBAAqB;QAC9C,aAAa,EAAE,YAAY;QAC3B,YAAY,EAAE,WAAW;KAC1B,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAUI,MAAM,0CAA0C,GAInD,CAAC,6IAAC,MAAM,CAAC;IACX,mBAAmB,EAAE,CAAC,6IAAC,MAAM,EAAE;IAC/B,UAAU,EAAE,CAAC,6IAAC,OAAO,EAAE;IACvB,SAAS,EAAE,CAAC,6IAAC,MAAM,EAAE;CACtB,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,mBAAmB,EAAE,uBAAuB;QAC5C,UAAU,EAAE,aAAa;QACzB,SAAS,EAAE,YAAY;KACxB,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,4BAA4B,CAO5C;AAPD,CAAA,SAAiB,4BAA4B;IAC3C,yEAAA,EAA2E,CAC9D,6BAAA,aAAa,GAAG,yCAAyC,CAAC;IACvE,0EAAA,EAA4E,CAC/D,6BAAA,cAAc,GAAG,0CAA0C,CAAC;AAG3E,CAAC,EAPgB,4BAA4B,IAAA,CAA5B,4BAA4B,GAAA,CAAA,CAAA,GAO5C;AAEK,SAAU,iCAAiC,CAC/C,2BAAwD;IAExD,OAAO,IAAI,CAAC,SAAS,CACnB,0CAA0C,CAAC,KAAK,CAC9C,2BAA2B,CAC5B,CACF,CAAC;AACJ,CAAC;AAEK,SAAU,mCAAmC,CACjD,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,wCAA0C,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACrE,CAAA,uDAAA,CAAyD,CAC1D,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 13742, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13748, "column": 0}, "map": {"version":3,"file":"paymentmethodcarddata.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/paymentmethodcarddata.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport type PaymentMethodCardData = {\n  brand: string;\n  last4: string;\n  expMonth: number;\n  expYear: number;\n  wallet?: string | null | undefined;\n};\n\n/** @internal */\nexport const PaymentMethodCardData$inboundSchema: z.ZodType<\n  PaymentMethodCardData,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  brand: z.string(),\n  last4: z.string(),\n  exp_month: z.number().int(),\n  exp_year: z.number().int(),\n  wallet: z.nullable(z.string()).optional(),\n}).transform((v) => {\n  return remap$(v, {\n    \"exp_month\": \"expMonth\",\n    \"exp_year\": \"expYear\",\n  });\n});\n\n/** @internal */\nexport type PaymentMethodCardData$Outbound = {\n  brand: string;\n  last4: string;\n  exp_month: number;\n  exp_year: number;\n  wallet?: string | null | undefined;\n};\n\n/** @internal */\nexport const PaymentMethodCardData$outboundSchema: z.ZodType<\n  PaymentMethodCardData$Outbound,\n  z.ZodTypeDef,\n  PaymentMethodCardData\n> = z.object({\n  brand: z.string(),\n  last4: z.string(),\n  expMonth: z.number().int(),\n  expYear: z.number().int(),\n  wallet: z.nullable(z.string()).optional(),\n}).transform((v) => {\n  return remap$(v, {\n    expMonth: \"exp_month\",\n    expYear: \"exp_year\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace PaymentMethodCardData$ {\n  /** @deprecated use `PaymentMethodCardData$inboundSchema` instead. */\n  export const inboundSchema = PaymentMethodCardData$inboundSchema;\n  /** @deprecated use `PaymentMethodCardData$outboundSchema` instead. */\n  export const outboundSchema = PaymentMethodCardData$outboundSchema;\n  /** @deprecated use `PaymentMethodCardData$Outbound` instead. */\n  export type Outbound = PaymentMethodCardData$Outbound;\n}\n\nexport function paymentMethodCardDataToJSON(\n  paymentMethodCardData: PaymentMethodCardData,\n): string {\n  return JSON.stringify(\n    PaymentMethodCardData$outboundSchema.parse(paymentMethodCardData),\n  );\n}\n\nexport function paymentMethodCardDataFromJSON(\n  jsonString: string,\n): SafeParseResult<PaymentMethodCardData, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => PaymentMethodCardData$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'PaymentMethodCardData' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;;;;;AAa1C,MAAM,mCAAmC,GAI5C,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,MAAM,EAAE;IACjB,KAAK,EAAE,CAAC,6IAAC,MAAM,EAAE;IACjB,SAAS,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAC3B,QAAQ,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAC1B,MAAM,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;CAC1C,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,WAAW,EAAE,UAAU;QACvB,UAAU,EAAE,SAAS;KACtB,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAYI,MAAM,oCAAoC,GAI7C,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,MAAM,EAAE;IACjB,KAAK,EAAE,CAAC,6IAAC,MAAM,EAAE;IACjB,QAAQ,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAC1B,OAAO,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IACzB,MAAM,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;CAC1C,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,QAAQ,EAAE,WAAW;QACrB,OAAO,EAAE,UAAU;KACpB,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,sBAAsB,CAOtC;AAPD,CAAA,SAAiB,sBAAsB;IACrC,mEAAA,EAAqE,CACxD,uBAAA,aAAa,GAAG,mCAAmC,CAAC;IACjE,oEAAA,EAAsE,CACzD,uBAAA,cAAc,GAAG,oCAAoC,CAAC;AAGrE,CAAC,EAPgB,sBAAsB,IAAA,CAAtB,sBAAsB,GAAA,CAAA,CAAA,GAOtC;AAEK,SAAU,2BAA2B,CACzC,qBAA4C;IAE5C,OAAO,IAAI,CAAC,SAAS,CACnB,oCAAoC,CAAC,KAAK,CAAC,qBAAqB,CAAC,CAClE,CAAC;AACJ,CAAC;AAEK,SAAU,6BAA6B,CAC3C,UAAkB;IAElB,OAAO,wLAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,kCAAoC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC/D,CAAA,iDAAA,CAAmD,CACpD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 13799, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13805, "column": 0}, "map": {"version":3,"file":"paymentmethodcard.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/paymentmethodcard.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  PaymentMethodCardData,\n  PaymentMethodCardData$inboundSchema,\n  PaymentMethodCardData$Outbound,\n  PaymentMethodCardData$outboundSchema,\n} from \"./paymentmethodcarddata.js\";\n\nexport type PaymentMethodCard = {\n  id: string;\n  type?: \"card\" | undefined;\n  createdAt: Date;\n  default: boolean;\n  card: PaymentMethodCardData;\n};\n\n/** @internal */\nexport const PaymentMethodCard$inboundSchema: z.ZodType<\n  PaymentMethodCard,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  id: z.string(),\n  type: z.literal(\"card\").optional(),\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  default: z.boolean(),\n  card: PaymentMethodCardData$inboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n  });\n});\n\n/** @internal */\nexport type PaymentMethodCard$Outbound = {\n  id: string;\n  type: \"card\";\n  created_at: string;\n  default: boolean;\n  card: PaymentMethodCardData$Outbound;\n};\n\n/** @internal */\nexport const PaymentMethodCard$outboundSchema: z.ZodType<\n  PaymentMethodCard$Outbound,\n  z.ZodTypeDef,\n  PaymentMethodCard\n> = z.object({\n  id: z.string(),\n  type: z.literal(\"card\").default(\"card\" as const),\n  createdAt: z.date().transform(v => v.toISOString()),\n  default: z.boolean(),\n  card: PaymentMethodCardData$outboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace PaymentMethodCard$ {\n  /** @deprecated use `PaymentMethodCard$inboundSchema` instead. */\n  export const inboundSchema = PaymentMethodCard$inboundSchema;\n  /** @deprecated use `PaymentMethodCard$outboundSchema` instead. */\n  export const outboundSchema = PaymentMethodCard$outboundSchema;\n  /** @deprecated use `PaymentMethodCard$Outbound` instead. */\n  export type Outbound = PaymentMethodCard$Outbound;\n}\n\nexport function paymentMethodCardToJSON(\n  paymentMethodCard: PaymentMethodCard,\n): string {\n  return JSON.stringify(\n    PaymentMethodCard$outboundSchema.parse(paymentMethodCard),\n  );\n}\n\nexport function paymentMethodCardFromJSON(\n  jsonString: string,\n): SafeParseResult<PaymentMethodCard, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => PaymentMethodCard$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'PaymentMethodCard' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,mCAAmC,EAEnC,oCAAoC,GACrC,MAAM,4BAA4B,CAAC;;;;;;AAW7B,MAAM,+BAA+B,GAIxC,CAAC,6IAAC,MAAM,CAAC;IACX,EAAE,EAAE,CAAC,6IAAC,MAAM,EAAE;IACd,IAAI,EAAE,CAAC,6IAAC,OAAO,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE;IAClC,UAAU,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,CAAC;QAAE,MAAM,EAAE,IAAI;IAAA,CAAE,CAAC,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;IAC7E,OAAO,EAAE,CAAC,6IAAC,OAAO,EAAE;IACpB,IAAI,yMAAE,sCAAmC;CAC1C,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,QAAO,sLAAA,AAAM,EAAC,CAAC,EAAE;QACf,YAAY,EAAE,WAAW;KAC1B,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAYI,MAAM,gCAAgC,GAIzC,CAAC,6IAAC,MAAM,CAAC;IACX,EAAE,EAAE,CAAC,6IAAC,MAAM,EAAE;IACd,IAAI,EAAE,CAAC,6IAAC,OAAO,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,MAAe,CAAC;IAChD,SAAS,EAAE,CAAC,6IAAC,IAAI,EAAE,CAAC,SAAS,EAAC,CAAC,CAAC,EAAG,AAAD,CAAE,CAAC,WAAW,EAAE,CAAC;IACnD,OAAO,EAAE,CAAC,6IAAC,OAAO,EAAE;IACpB,IAAI,yMAAE,uCAAoC;CAC3C,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,SAAS,EAAE,YAAY;KACxB,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,kBAAkB,CAOlC;AAPD,CAAA,SAAiB,kBAAkB;IACjC,+DAAA,EAAiE,CACpD,mBAAA,aAAa,GAAG,+BAA+B,CAAC;IAC7D,gEAAA,EAAkE,CACrD,mBAAA,cAAc,GAAG,gCAAgC,CAAC;AAGjE,CAAC,EAPgB,kBAAkB,IAAA,CAAlB,kBAAkB,GAAA,CAAA,CAAA,GAOlC;AAEK,SAAU,uBAAuB,CACrC,iBAAoC;IAEpC,OAAO,IAAI,CAAC,SAAS,CACnB,gCAAgC,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAC1D,CAAC;AACJ,CAAC;AAEK,SAAU,yBAAyB,CACvC,UAAkB;IAElB,OAAO,wLAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,8BAAgC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC3D,CAAA,6CAAA,CAA+C,CAChD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 13858, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13864, "column": 0}, "map": {"version":3,"file":"paymentmethodgeneric.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/paymentmethodgeneric.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport type PaymentMethodGeneric = {\n  id: string;\n  type: string;\n  createdAt: Date;\n  default: boolean;\n};\n\n/** @internal */\nexport const PaymentMethodGeneric$inboundSchema: z.ZodType<\n  PaymentMethodGeneric,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  id: z.string(),\n  type: z.string(),\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  default: z.boolean(),\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n  });\n});\n\n/** @internal */\nexport type PaymentMethodGeneric$Outbound = {\n  id: string;\n  type: string;\n  created_at: string;\n  default: boolean;\n};\n\n/** @internal */\nexport const PaymentMethodGeneric$outboundSchema: z.ZodType<\n  PaymentMethodGeneric$Outbound,\n  z.ZodTypeDef,\n  PaymentMethodGeneric\n> = z.object({\n  id: z.string(),\n  type: z.string(),\n  createdAt: z.date().transform(v => v.toISOString()),\n  default: z.boolean(),\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace PaymentMethodGeneric$ {\n  /** @deprecated use `PaymentMethodGeneric$inboundSchema` instead. */\n  export const inboundSchema = PaymentMethodGeneric$inboundSchema;\n  /** @deprecated use `PaymentMethodGeneric$outboundSchema` instead. */\n  export const outboundSchema = PaymentMethodGeneric$outboundSchema;\n  /** @deprecated use `PaymentMethodGeneric$Outbound` instead. */\n  export type Outbound = PaymentMethodGeneric$Outbound;\n}\n\nexport function paymentMethodGenericToJSON(\n  paymentMethodGeneric: PaymentMethodGeneric,\n): string {\n  return JSON.stringify(\n    PaymentMethodGeneric$outboundSchema.parse(paymentMethodGeneric),\n  );\n}\n\nexport function paymentMethodGenericFromJSON(\n  jsonString: string,\n): SafeParseResult<PaymentMethodGeneric, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => PaymentMethodGeneric$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'PaymentMethodGeneric' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;;;;;AAY1C,MAAM,kCAAkC,GAI3C,CAAC,6IAAC,MAAM,CAAC;IACX,EAAE,EAAE,CAAC,6IAAC,MAAM,EAAE;IACd,IAAI,EAAE,CAAC,6IAAC,MAAM,EAAE;IAChB,UAAU,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,CAAC;QAAE,MAAM,EAAE,IAAI;IAAA,CAAE,CAAC,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;IAC7E,OAAO,EAAE,CAAC,6IAAC,OAAO,EAAE;CACrB,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,QAAO,sLAAA,AAAM,EAAC,CAAC,EAAE;QACf,YAAY,EAAE,WAAW;KAC1B,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAWI,MAAM,mCAAmC,GAI5C,CAAC,6IAAC,MAAM,CAAC;IACX,EAAE,EAAE,CAAC,6IAAC,MAAM,EAAE;IACd,IAAI,EAAE,CAAC,6IAAC,MAAM,EAAE;IAChB,SAAS,EAAE,CAAC,6IAAC,IAAI,EAAE,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,WAAW,EAAE,CAAC;IACnD,OAAO,EAAE,CAAC,6IAAC,OAAO,EAAE;CACrB,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,OAAO,uLAAA,AAAM,EAAC,CAAC,EAAE;QACf,SAAS,EAAE,YAAY;KACxB,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,qBAAqB,CAOrC;AAPD,CAAA,SAAiB,qBAAqB;IACpC,kEAAA,EAAoE,CACvD,sBAAA,aAAa,GAAG,kCAAkC,CAAC;IAChE,mEAAA,EAAqE,CACxD,sBAAA,cAAc,GAAG,mCAAmC,CAAC;AAGpE,CAAC,EAPgB,qBAAqB,IAAA,CAArB,qBAAqB,GAAA,CAAA,CAAA,GAOrC;AAEK,SAAU,0BAA0B,CACxC,oBAA0C;IAE1C,OAAO,IAAI,CAAC,SAAS,CACnB,mCAAmC,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAChE,CAAC;AACJ,CAAC;AAEK,SAAU,4BAA4B,CAC1C,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,iCAAmC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC9D,CAAA,gDAAA,CAAkD,CACnD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 13913, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13919, "column": 0}, "map": {"version":3,"file":"listresourceunionpaymentmethodcardpaymentmethodgeneric.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/listresourceunionpaymentmethodcardpaymentmethodgeneric.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  Pagination,\n  Pagination$inboundSchema,\n  Pagination$Outbound,\n  Pagination$outboundSchema,\n} from \"./pagination.js\";\nimport {\n  PaymentMethodCard,\n  PaymentMethodCard$inboundSchema,\n  PaymentMethodCard$Outbound,\n  PaymentMethodCard$outboundSchema,\n} from \"./paymentmethodcard.js\";\nimport {\n  PaymentMethodGeneric,\n  PaymentMethodGeneric$inboundSchema,\n  PaymentMethodGeneric$Outbound,\n  PaymentMethodGeneric$outboundSchema,\n} from \"./paymentmethodgeneric.js\";\n\nexport type Items = PaymentMethodGeneric | PaymentMethodCard;\n\nexport type ListResourceUnionPaymentMethodCardPaymentMethodGeneric = {\n  items: Array<PaymentMethodGeneric | PaymentMethodCard>;\n  pagination: Pagination;\n};\n\n/** @internal */\nexport const Items$inboundSchema: z.ZodType<Items, z.ZodTypeDef, unknown> = z\n  .union([PaymentMethodGeneric$inboundSchema, PaymentMethodCard$inboundSchema]);\n\n/** @internal */\nexport type Items$Outbound =\n  | PaymentMethodGeneric$Outbound\n  | PaymentMethodCard$Outbound;\n\n/** @internal */\nexport const Items$outboundSchema: z.ZodType<\n  Items$Outbound,\n  z.ZodTypeDef,\n  Items\n> = z.union([\n  PaymentMethodGeneric$outboundSchema,\n  PaymentMethodCard$outboundSchema,\n]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace Items$ {\n  /** @deprecated use `Items$inboundSchema` instead. */\n  export const inboundSchema = Items$inboundSchema;\n  /** @deprecated use `Items$outboundSchema` instead. */\n  export const outboundSchema = Items$outboundSchema;\n  /** @deprecated use `Items$Outbound` instead. */\n  export type Outbound = Items$Outbound;\n}\n\nexport function itemsToJSON(items: Items): string {\n  return JSON.stringify(Items$outboundSchema.parse(items));\n}\n\nexport function itemsFromJSON(\n  jsonString: string,\n): SafeParseResult<Items, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => Items$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'Items' from JSON`,\n  );\n}\n\n/** @internal */\nexport const ListResourceUnionPaymentMethodCardPaymentMethodGeneric$inboundSchema:\n  z.ZodType<\n    ListResourceUnionPaymentMethodCardPaymentMethodGeneric,\n    z.ZodTypeDef,\n    unknown\n  > = z.object({\n    items: z.array(\n      z.union([\n        PaymentMethodGeneric$inboundSchema,\n        PaymentMethodCard$inboundSchema,\n      ]),\n    ),\n    pagination: Pagination$inboundSchema,\n  });\n\n/** @internal */\nexport type ListResourceUnionPaymentMethodCardPaymentMethodGeneric$Outbound = {\n  items: Array<PaymentMethodGeneric$Outbound | PaymentMethodCard$Outbound>;\n  pagination: Pagination$Outbound;\n};\n\n/** @internal */\nexport const ListResourceUnionPaymentMethodCardPaymentMethodGeneric$outboundSchema:\n  z.ZodType<\n    ListResourceUnionPaymentMethodCardPaymentMethodGeneric$Outbound,\n    z.ZodTypeDef,\n    ListResourceUnionPaymentMethodCardPaymentMethodGeneric\n  > = z.object({\n    items: z.array(\n      z.union([\n        PaymentMethodGeneric$outboundSchema,\n        PaymentMethodCard$outboundSchema,\n      ]),\n    ),\n    pagination: Pagination$outboundSchema,\n  });\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace ListResourceUnionPaymentMethodCardPaymentMethodGeneric$ {\n  /** @deprecated use `ListResourceUnionPaymentMethodCardPaymentMethodGeneric$inboundSchema` instead. */\n  export const inboundSchema =\n    ListResourceUnionPaymentMethodCardPaymentMethodGeneric$inboundSchema;\n  /** @deprecated use `ListResourceUnionPaymentMethodCardPaymentMethodGeneric$outboundSchema` instead. */\n  export const outboundSchema =\n    ListResourceUnionPaymentMethodCardPaymentMethodGeneric$outboundSchema;\n  /** @deprecated use `ListResourceUnionPaymentMethodCardPaymentMethodGeneric$Outbound` instead. */\n  export type Outbound =\n    ListResourceUnionPaymentMethodCardPaymentMethodGeneric$Outbound;\n}\n\nexport function listResourceUnionPaymentMethodCardPaymentMethodGenericToJSON(\n  listResourceUnionPaymentMethodCardPaymentMethodGeneric:\n    ListResourceUnionPaymentMethodCardPaymentMethodGeneric,\n): string {\n  return JSON.stringify(\n    ListResourceUnionPaymentMethodCardPaymentMethodGeneric$outboundSchema.parse(\n      listResourceUnionPaymentMethodCardPaymentMethodGeneric,\n    ),\n  );\n}\n\nexport function listResourceUnionPaymentMethodCardPaymentMethodGenericFromJSON(\n  jsonString: string,\n): SafeParseResult<\n  ListResourceUnionPaymentMethodCardPaymentMethodGeneric,\n  SDKValidationError\n> {\n  return safeParse(\n    jsonString,\n    (x) =>\n      ListResourceUnionPaymentMethodCardPaymentMethodGeneric$inboundSchema\n        .parse(JSON.parse(x)),\n    `Failed to parse 'ListResourceUnionPaymentMethodCardPaymentMethodGeneric' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,wBAAwB,EAExB,yBAAyB,GAC1B,MAAM,iBAAiB,CAAC;AACzB,OAAO,EAEL,+BAA+B,EAE/B,gCAAgC,GACjC,MAAM,wBAAwB,CAAC;AAChC,OAAO,EAEL,kCAAkC,EAElC,mCAAmC,GACpC,MAAM,2BAA2B,CAAC;;;;;;;AAU5B,MAAM,mBAAmB,GAA4C,CAAC,6IAC1E,KAAK,CAAC;0MAAC,qCAAkC;uMAAE,kCAA+B;CAAC,CAAC,CAAC;AAQzE,MAAM,oBAAoB,GAI7B,CAAC,6IAAC,KAAK,CAAC;0MACV,sCAAmC;uMACnC,mCAAgC;CACjC,CAAC,CAAC;AAMG,IAAW,MAAM,CAOtB;AAPD,CAAA,SAAiB,MAAM;IACrB,mDAAA,EAAqD,CACxC,OAAA,aAAa,GAAG,mBAAmB,CAAC;IACjD,oDAAA,EAAsD,CACzC,OAAA,cAAc,GAAG,oBAAoB,CAAC;AAGrD,CAAC,EAPgB,MAAM,IAAA,CAAN,MAAM,GAAA,CAAA,CAAA,GAOtB;AAEK,SAAU,WAAW,CAAC,KAAY;IACtC,OAAO,IAAI,CAAC,SAAS,CAAC,oBAAoB,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;AAC3D,CAAC;AAEK,SAAU,aAAa,CAC3B,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,kBAAoB,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC/C,CAAA,iCAAA,CAAmC,CACpC,CAAC;AACJ,CAAC;AAGM,MAAM,oEAAoE,GAK3E,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,KAAK,CACZ,CAAC,6IAAC,KAAK,CAAC;8MACN,qCAAkC;0MAClC,mCAA+B;KAChC,CAAC,CACH;IACD,UAAU,8LAAE,2BAAwB;CACrC,CAAC,CAAC;AASE,MAAM,qEAAqE,GAK5E,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,KAAK,CACZ,CAAC,6IAAC,KAAK,CAAC;8MACN,sCAAmC;QACnC,sOAAgC;KACjC,CAAC,CACH;IACD,UAAU,8LAAE,4BAAyB;CACtC,CAAC,CAAC;AAMC,IAAW,uDAAuD,CAUvE;AAVD,CAAA,SAAiB,uDAAuD;IACtE,oGAAA,EAAsG,CACzF,wDAAA,aAAa,GACxB,oEAAoE,CAAC;IACvE,qGAAA,EAAuG,CAC1F,wDAAA,cAAc,GACzB,qEAAqE,CAAC;AAI1E,CAAC,EAVgB,uDAAuD,IAAA,CAAvD,uDAAuD,GAAA,CAAA,CAAA,GAUvE;AAEK,SAAU,4DAA4D,CAC1E,sDACwD;IAExD,OAAO,IAAI,CAAC,SAAS,CACnB,qEAAqE,CAAC,KAAK,CACzE,sDAAsD,CACvD,CACF,CAAC;AACJ,CAAC;AAEK,SAAU,8DAA8D,CAC5E,UAAkB;IAKlB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CACF,CADI,mEACgE,CACjE,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACzB,CAAA,kFAAA,CAAoF,CACrF,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 13988, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13994, "column": 0}, "map": {"version":3,"file":"customerportalcustomerupdate.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customerportalcustomerupdate.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  Address,\n  Address$inboundSchema,\n  Address$Outbound,\n  Address$outboundSchema,\n} from \"./address.js\";\n\nexport type CustomerPortalCustomerUpdate = {\n  email?: string | null | undefined;\n  name?: string | null | undefined;\n  billingAddress?: Address | null | undefined;\n  taxId?: string | null | undefined;\n};\n\n/** @internal */\nexport const CustomerPortalCustomerUpdate$inboundSchema: z.ZodType<\n  CustomerPortalCustomerUpdate,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  email: z.nullable(z.string()).optional(),\n  name: z.nullable(z.string()).optional(),\n  billing_address: z.nullable(Address$inboundSchema).optional(),\n  tax_id: z.nullable(z.string()).optional(),\n}).transform((v) => {\n  return remap$(v, {\n    \"billing_address\": \"billingAddress\",\n    \"tax_id\": \"taxId\",\n  });\n});\n\n/** @internal */\nexport type CustomerPortalCustomerUpdate$Outbound = {\n  email?: string | null | undefined;\n  name?: string | null | undefined;\n  billing_address?: Address$Outbound | null | undefined;\n  tax_id?: string | null | undefined;\n};\n\n/** @internal */\nexport const CustomerPortalCustomerUpdate$outboundSchema: z.ZodType<\n  CustomerPortalCustomerUpdate$Outbound,\n  z.ZodTypeDef,\n  CustomerPortalCustomerUpdate\n> = z.object({\n  email: z.nullable(z.string()).optional(),\n  name: z.nullable(z.string()).optional(),\n  billingAddress: z.nullable(Address$outboundSchema).optional(),\n  taxId: z.nullable(z.string()).optional(),\n}).transform((v) => {\n  return remap$(v, {\n    billingAddress: \"billing_address\",\n    taxId: \"tax_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomerPortalCustomerUpdate$ {\n  /** @deprecated use `CustomerPortalCustomerUpdate$inboundSchema` instead. */\n  export const inboundSchema = CustomerPortalCustomerUpdate$inboundSchema;\n  /** @deprecated use `CustomerPortalCustomerUpdate$outboundSchema` instead. */\n  export const outboundSchema = CustomerPortalCustomerUpdate$outboundSchema;\n  /** @deprecated use `CustomerPortalCustomerUpdate$Outbound` instead. */\n  export type Outbound = CustomerPortalCustomerUpdate$Outbound;\n}\n\nexport function customerPortalCustomerUpdateToJSON(\n  customerPortalCustomerUpdate: CustomerPortalCustomerUpdate,\n): string {\n  return JSON.stringify(\n    CustomerPortalCustomerUpdate$outboundSchema.parse(\n      customerPortalCustomerUpdate,\n    ),\n  );\n}\n\nexport function customerPortalCustomerUpdateFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomerPortalCustomerUpdate, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomerPortalCustomerUpdate$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomerPortalCustomerUpdate' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,qBAAqB,EAErB,sBAAsB,GACvB,MAAM,cAAc,CAAC;;;;;;AAUf,MAAM,0CAA0C,GAInD,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;IACxC,IAAI,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;IACvC,eAAe,EAAE,CAAC,6IAAC,QAAQ,0LAAC,wBAAqB,CAAC,CAAC,QAAQ,EAAE;IAC7D,MAAM,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;CAC1C,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,iBAAiB,EAAE,gBAAgB;QACnC,QAAQ,EAAE,OAAO;KAClB,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAWI,MAAM,2CAA2C,GAIpD,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;IACxC,IAAI,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;IACvC,cAAc,EAAE,CAAC,6IAAC,QAAQ,0LAAC,yBAAsB,CAAC,CAAC,QAAQ,EAAE;IAC7D,KAAK,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;CACzC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,cAAc,EAAE,iBAAiB;QACjC,KAAK,EAAE,QAAQ;KAChB,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,6BAA6B,CAO7C;AAPD,CAAA,SAAiB,6BAA6B;IAC5C,0EAAA,EAA4E,CAC/D,8BAAA,aAAa,GAAG,0CAA0C,CAAC;IACxE,2EAAA,EAA6E,CAChE,8BAAA,cAAc,GAAG,2CAA2C,CAAC;AAG5E,CAAC,EAPgB,6BAA6B,IAAA,CAA7B,6BAA6B,GAAA,CAAA,CAAA,GAO7C;AAEK,SAAU,kCAAkC,CAChD,4BAA0D;IAE1D,OAAO,IAAI,CAAC,SAAS,CACnB,2CAA2C,CAAC,KAAK,CAC/C,4BAA4B,CAC7B,CACF,CAAC;AACJ,CAAC;AAEK,SAAU,oCAAoC,CAClD,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,yCAA2C,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACtE,CAAA,wDAAA,CAA0D,CAC3D,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 14045, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 14051, "column": 0}, "map": {"version":3,"file":"licensekeyactivate.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/licensekeyactivate.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport type LicenseKeyActivateConditions = string | number | number | boolean;\n\nexport type LicenseKeyActivateMeta = string | number | number | boolean;\n\nexport type LicenseKeyActivate = {\n  key: string;\n  organizationId: string;\n  label: string;\n  /**\n   * Key-value object allowing you to set conditions that must match when validating the license key.\n   *\n   * @remarks\n   *\n   * The key must be a string with a maximum length of **40 characters**.\n   * The value must be either:\n   *\n   * * A string with a maximum length of **500 characters**\n   * * An integer\n   * * A floating-point number\n   * * A boolean\n   *\n   * You can store up to **50 key-value pairs**.\n   */\n  conditions?: { [k: string]: string | number | number | boolean } | undefined;\n  /**\n   * Key-value object allowing you to store additional information about the activation\n   *\n   * @remarks\n   *\n   * The key must be a string with a maximum length of **40 characters**.\n   * The value must be either:\n   *\n   * * A string with a maximum length of **500 characters**\n   * * An integer\n   * * A floating-point number\n   * * A boolean\n   *\n   * You can store up to **50 key-value pairs**.\n   */\n  meta?: { [k: string]: string | number | number | boolean } | undefined;\n};\n\n/** @internal */\nexport const LicenseKeyActivateConditions$inboundSchema: z.ZodType<\n  LicenseKeyActivateConditions,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type LicenseKeyActivateConditions$Outbound =\n  | string\n  | number\n  | number\n  | boolean;\n\n/** @internal */\nexport const LicenseKeyActivateConditions$outboundSchema: z.ZodType<\n  LicenseKeyActivateConditions$Outbound,\n  z.ZodTypeDef,\n  LicenseKeyActivateConditions\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace LicenseKeyActivateConditions$ {\n  /** @deprecated use `LicenseKeyActivateConditions$inboundSchema` instead. */\n  export const inboundSchema = LicenseKeyActivateConditions$inboundSchema;\n  /** @deprecated use `LicenseKeyActivateConditions$outboundSchema` instead. */\n  export const outboundSchema = LicenseKeyActivateConditions$outboundSchema;\n  /** @deprecated use `LicenseKeyActivateConditions$Outbound` instead. */\n  export type Outbound = LicenseKeyActivateConditions$Outbound;\n}\n\nexport function licenseKeyActivateConditionsToJSON(\n  licenseKeyActivateConditions: LicenseKeyActivateConditions,\n): string {\n  return JSON.stringify(\n    LicenseKeyActivateConditions$outboundSchema.parse(\n      licenseKeyActivateConditions,\n    ),\n  );\n}\n\nexport function licenseKeyActivateConditionsFromJSON(\n  jsonString: string,\n): SafeParseResult<LicenseKeyActivateConditions, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => LicenseKeyActivateConditions$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'LicenseKeyActivateConditions' from JSON`,\n  );\n}\n\n/** @internal */\nexport const LicenseKeyActivateMeta$inboundSchema: z.ZodType<\n  LicenseKeyActivateMeta,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type LicenseKeyActivateMeta$Outbound =\n  | string\n  | number\n  | number\n  | boolean;\n\n/** @internal */\nexport const LicenseKeyActivateMeta$outboundSchema: z.ZodType<\n  LicenseKeyActivateMeta$Outbound,\n  z.ZodTypeDef,\n  LicenseKeyActivateMeta\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace LicenseKeyActivateMeta$ {\n  /** @deprecated use `LicenseKeyActivateMeta$inboundSchema` instead. */\n  export const inboundSchema = LicenseKeyActivateMeta$inboundSchema;\n  /** @deprecated use `LicenseKeyActivateMeta$outboundSchema` instead. */\n  export const outboundSchema = LicenseKeyActivateMeta$outboundSchema;\n  /** @deprecated use `LicenseKeyActivateMeta$Outbound` instead. */\n  export type Outbound = LicenseKeyActivateMeta$Outbound;\n}\n\nexport function licenseKeyActivateMetaToJSON(\n  licenseKeyActivateMeta: LicenseKeyActivateMeta,\n): string {\n  return JSON.stringify(\n    LicenseKeyActivateMeta$outboundSchema.parse(licenseKeyActivateMeta),\n  );\n}\n\nexport function licenseKeyActivateMetaFromJSON(\n  jsonString: string,\n): SafeParseResult<LicenseKeyActivateMeta, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => LicenseKeyActivateMeta$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'LicenseKeyActivateMeta' from JSON`,\n  );\n}\n\n/** @internal */\nexport const LicenseKeyActivate$inboundSchema: z.ZodType<\n  LicenseKeyActivate,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  key: z.string(),\n  organization_id: z.string(),\n  label: z.string(),\n  conditions: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  meta: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n}).transform((v) => {\n  return remap$(v, {\n    \"organization_id\": \"organizationId\",\n  });\n});\n\n/** @internal */\nexport type LicenseKeyActivate$Outbound = {\n  key: string;\n  organization_id: string;\n  label: string;\n  conditions?: { [k: string]: string | number | number | boolean } | undefined;\n  meta?: { [k: string]: string | number | number | boolean } | undefined;\n};\n\n/** @internal */\nexport const LicenseKeyActivate$outboundSchema: z.ZodType<\n  LicenseKeyActivate$Outbound,\n  z.ZodTypeDef,\n  LicenseKeyActivate\n> = z.object({\n  key: z.string(),\n  organizationId: z.string(),\n  label: z.string(),\n  conditions: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  meta: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n}).transform((v) => {\n  return remap$(v, {\n    organizationId: \"organization_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace LicenseKeyActivate$ {\n  /** @deprecated use `LicenseKeyActivate$inboundSchema` instead. */\n  export const inboundSchema = LicenseKeyActivate$inboundSchema;\n  /** @deprecated use `LicenseKeyActivate$outboundSchema` instead. */\n  export const outboundSchema = LicenseKeyActivate$outboundSchema;\n  /** @deprecated use `LicenseKeyActivate$Outbound` instead. */\n  export type Outbound = LicenseKeyActivate$Outbound;\n}\n\nexport function licenseKeyActivateToJSON(\n  licenseKeyActivate: LicenseKeyActivate,\n): string {\n  return JSON.stringify(\n    LicenseKeyActivate$outboundSchema.parse(licenseKeyActivate),\n  );\n}\n\nexport function licenseKeyActivateFromJSON(\n  jsonString: string,\n): SafeParseResult<LicenseKeyActivate, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => LicenseKeyActivate$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'LicenseKeyActivate' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 14176, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 14182, "column": 0}, "map": {"version":3,"file":"licensekeycustomer.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/licensekeycustomer.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  Address,\n  Address$inboundSchema,\n  Address$Outbound,\n  Address$outboundSchema,\n} from \"./address.js\";\nimport {\n  TaxIDFormat,\n  TaxIDFormat$inboundSchema,\n  TaxIDFormat$outboundSchema,\n} from \"./taxidformat.js\";\n\nexport type LicenseKeyCustomerMetadata = string | number | number | boolean;\n\nexport type LicenseKeyCustomerTaxId = string | TaxIDFormat;\n\nexport type LicenseKeyCustomer = {\n  /**\n   * The ID of the customer.\n   */\n  id: string;\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  metadata: { [k: string]: string | number | number | boolean };\n  /**\n   * The ID of the customer in your system. This must be unique within the organization. Once set, it can't be updated.\n   */\n  externalId: string | null;\n  /**\n   * The email address of the customer. This must be unique within the organization.\n   */\n  email: string;\n  /**\n   * Whether the customer email address is verified. The address is automatically verified when the customer accesses the customer portal using their email address.\n   */\n  emailVerified: boolean;\n  /**\n   * The name of the customer.\n   */\n  name: string | null;\n  billingAddress: Address | null;\n  taxId: Array<string | TaxIDFormat | null> | null;\n  /**\n   * The ID of the organization owning the customer.\n   */\n  organizationId: string;\n  /**\n   * Timestamp for when the customer was soft deleted.\n   */\n  deletedAt: Date | null;\n  avatarUrl: string;\n};\n\n/** @internal */\nexport const LicenseKeyCustomerMetadata$inboundSchema: z.ZodType<\n  LicenseKeyCustomerMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type LicenseKeyCustomerMetadata$Outbound =\n  | string\n  | number\n  | number\n  | boolean;\n\n/** @internal */\nexport const LicenseKeyCustomerMetadata$outboundSchema: z.ZodType<\n  LicenseKeyCustomerMetadata$Outbound,\n  z.ZodTypeDef,\n  LicenseKeyCustomerMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace LicenseKeyCustomerMetadata$ {\n  /** @deprecated use `LicenseKeyCustomerMetadata$inboundSchema` instead. */\n  export const inboundSchema = LicenseKeyCustomerMetadata$inboundSchema;\n  /** @deprecated use `LicenseKeyCustomerMetadata$outboundSchema` instead. */\n  export const outboundSchema = LicenseKeyCustomerMetadata$outboundSchema;\n  /** @deprecated use `LicenseKeyCustomerMetadata$Outbound` instead. */\n  export type Outbound = LicenseKeyCustomerMetadata$Outbound;\n}\n\nexport function licenseKeyCustomerMetadataToJSON(\n  licenseKeyCustomerMetadata: LicenseKeyCustomerMetadata,\n): string {\n  return JSON.stringify(\n    LicenseKeyCustomerMetadata$outboundSchema.parse(licenseKeyCustomerMetadata),\n  );\n}\n\nexport function licenseKeyCustomerMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<LicenseKeyCustomerMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => LicenseKeyCustomerMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'LicenseKeyCustomerMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const LicenseKeyCustomerTaxId$inboundSchema: z.ZodType<\n  LicenseKeyCustomerTaxId,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), TaxIDFormat$inboundSchema]);\n\n/** @internal */\nexport type LicenseKeyCustomerTaxId$Outbound = string | string;\n\n/** @internal */\nexport const LicenseKeyCustomerTaxId$outboundSchema: z.ZodType<\n  LicenseKeyCustomerTaxId$Outbound,\n  z.ZodTypeDef,\n  LicenseKeyCustomerTaxId\n> = z.union([z.string(), TaxIDFormat$outboundSchema]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace LicenseKeyCustomerTaxId$ {\n  /** @deprecated use `LicenseKeyCustomerTaxId$inboundSchema` instead. */\n  export const inboundSchema = LicenseKeyCustomerTaxId$inboundSchema;\n  /** @deprecated use `LicenseKeyCustomerTaxId$outboundSchema` instead. */\n  export const outboundSchema = LicenseKeyCustomerTaxId$outboundSchema;\n  /** @deprecated use `LicenseKeyCustomerTaxId$Outbound` instead. */\n  export type Outbound = LicenseKeyCustomerTaxId$Outbound;\n}\n\nexport function licenseKeyCustomerTaxIdToJSON(\n  licenseKeyCustomerTaxId: LicenseKeyCustomerTaxId,\n): string {\n  return JSON.stringify(\n    LicenseKeyCustomerTaxId$outboundSchema.parse(licenseKeyCustomerTaxId),\n  );\n}\n\nexport function licenseKeyCustomerTaxIdFromJSON(\n  jsonString: string,\n): SafeParseResult<LicenseKeyCustomerTaxId, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => LicenseKeyCustomerTaxId$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'LicenseKeyCustomerTaxId' from JSON`,\n  );\n}\n\n/** @internal */\nexport const LicenseKeyCustomer$inboundSchema: z.ZodType<\n  LicenseKeyCustomer,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  id: z.string(),\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  external_id: z.nullable(z.string()),\n  email: z.string(),\n  email_verified: z.boolean(),\n  name: z.nullable(z.string()),\n  billing_address: z.nullable(Address$inboundSchema),\n  tax_id: z.nullable(\n    z.array(z.nullable(z.union([z.string(), TaxIDFormat$inboundSchema]))),\n  ),\n  organization_id: z.string(),\n  deleted_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  avatar_url: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"external_id\": \"externalId\",\n    \"email_verified\": \"emailVerified\",\n    \"billing_address\": \"billingAddress\",\n    \"tax_id\": \"taxId\",\n    \"organization_id\": \"organizationId\",\n    \"deleted_at\": \"deletedAt\",\n    \"avatar_url\": \"avatarUrl\",\n  });\n});\n\n/** @internal */\nexport type LicenseKeyCustomer$Outbound = {\n  id: string;\n  created_at: string;\n  modified_at: string | null;\n  metadata: { [k: string]: string | number | number | boolean };\n  external_id: string | null;\n  email: string;\n  email_verified: boolean;\n  name: string | null;\n  billing_address: Address$Outbound | null;\n  tax_id: Array<string | string | null> | null;\n  organization_id: string;\n  deleted_at: string | null;\n  avatar_url: string;\n};\n\n/** @internal */\nexport const LicenseKeyCustomer$outboundSchema: z.ZodType<\n  LicenseKeyCustomer$Outbound,\n  z.ZodTypeDef,\n  LicenseKeyCustomer\n> = z.object({\n  id: z.string(),\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  externalId: z.nullable(z.string()),\n  email: z.string(),\n  emailVerified: z.boolean(),\n  name: z.nullable(z.string()),\n  billingAddress: z.nullable(Address$outboundSchema),\n  taxId: z.nullable(\n    z.array(z.nullable(z.union([z.string(), TaxIDFormat$outboundSchema]))),\n  ),\n  organizationId: z.string(),\n  deletedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  avatarUrl: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    externalId: \"external_id\",\n    emailVerified: \"email_verified\",\n    billingAddress: \"billing_address\",\n    taxId: \"tax_id\",\n    organizationId: \"organization_id\",\n    deletedAt: \"deleted_at\",\n    avatarUrl: \"avatar_url\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace LicenseKeyCustomer$ {\n  /** @deprecated use `LicenseKeyCustomer$inboundSchema` instead. */\n  export const inboundSchema = LicenseKeyCustomer$inboundSchema;\n  /** @deprecated use `LicenseKeyCustomer$outboundSchema` instead. */\n  export const outboundSchema = LicenseKeyCustomer$outboundSchema;\n  /** @deprecated use `LicenseKeyCustomer$Outbound` instead. */\n  export type Outbound = LicenseKeyCustomer$Outbound;\n}\n\nexport function licenseKeyCustomerToJSON(\n  licenseKeyCustomer: LicenseKeyCustomer,\n): string {\n  return JSON.stringify(\n    LicenseKeyCustomer$outboundSchema.parse(licenseKeyCustomer),\n  );\n}\n\nexport function licenseKeyCustomerFromJSON(\n  jsonString: string,\n): SafeParseResult<LicenseKeyCustomer, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => LicenseKeyCustomer$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'LicenseKeyCustomer' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 14341, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 14347, "column": 0}, "map": {"version":3,"file":"licensekeystatus.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/licensekeystatus.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { ClosedEnum } from \"../../types/enums.js\";\n\nexport const LicenseKeyStatus = {\n  Granted: \"granted\",\n  Revoked: \"revoked\",\n  Disabled: \"disabled\",\n} as const;\nexport type LicenseKeyStatus = ClosedEnum<typeof LicenseKeyStatus>;\n\n/** @internal */\nexport const LicenseKeyStatus$inboundSchema: z.ZodNativeEnum<\n  typeof LicenseKeyStatus\n> = z.nativeEnum(LicenseKeyStatus);\n\n/** @internal */\nexport const LicenseKeyStatus$outboundSchema: z.ZodNativeEnum<\n  typeof LicenseKeyStatus\n> = LicenseKeyStatus$inboundSchema;\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace LicenseKeyStatus$ {\n  /** @deprecated use `LicenseKeyStatus$inboundSchema` instead. */\n  export const inboundSchema = LicenseKeyStatus$inboundSchema;\n  /** @deprecated use `LicenseKeyStatus$outboundSchema` instead. */\n  export const outboundSchema = LicenseKeyStatus$outboundSchema;\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;AAGlB,MAAM,gBAAgB,GAAG;IAC9B,OAAO,EAAE,SAAS;IAClB,OAAO,EAAE,SAAS;IAClB,QAAQ,EAAE,UAAU;CACZ,CAAC;AAIJ,MAAM,8BAA8B,GAEvC,CAAC,6IAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC;AAG5B,MAAM,+BAA+B,GAExC,8BAA8B,CAAC;AAM7B,IAAW,iBAAiB,CAKjC;AALD,CAAA,SAAiB,iBAAiB;IAChC,8DAAA,EAAgE,CACnD,kBAAA,aAAa,GAAG,8BAA8B,CAAC;IAC5D,+DAAA,EAAiE,CACpD,kBAAA,cAAc,GAAG,+BAA+B,CAAC;AAChE,CAAC,EALgB,iBAAiB,IAAA,CAAjB,iBAAiB,GAAA,CAAA,CAAA,GAKjC","ignoreList":[0]}},
    {"offset": {"line": 14370, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 14376, "column": 0}, "map": {"version":3,"file":"licensekeyread.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/licensekeyread.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  LicenseKeyCustomer,\n  LicenseKeyCustomer$inboundSchema,\n  LicenseKeyCustomer$Outbound,\n  LicenseKeyCustomer$outboundSchema,\n} from \"./licensekeycustomer.js\";\nimport {\n  LicenseKeyStatus,\n  LicenseKeyStatus$inboundSchema,\n  LicenseKeyStatus$outboundSchema,\n} from \"./licensekeystatus.js\";\n\nexport type LicenseKeyRead = {\n  /**\n   * The ID of the object.\n   */\n  id: string;\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  organizationId: string;\n  customerId: string;\n  customer: LicenseKeyCustomer;\n  /**\n   * The benefit ID.\n   */\n  benefitId: string;\n  key: string;\n  displayKey: string;\n  status: LicenseKeyStatus;\n  limitActivations: number | null;\n  usage: number;\n  limitUsage: number | null;\n  validations: number;\n  lastValidatedAt: Date | null;\n  expiresAt: Date | null;\n};\n\n/** @internal */\nexport const LicenseKeyRead$inboundSchema: z.ZodType<\n  LicenseKeyRead,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  id: z.string(),\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  organization_id: z.string(),\n  customer_id: z.string(),\n  customer: LicenseKeyCustomer$inboundSchema,\n  benefit_id: z.string(),\n  key: z.string(),\n  display_key: z.string(),\n  status: LicenseKeyStatus$inboundSchema,\n  limit_activations: z.nullable(z.number().int()),\n  usage: z.number().int(),\n  limit_usage: z.nullable(z.number().int()),\n  validations: z.number().int(),\n  last_validated_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  expires_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"organization_id\": \"organizationId\",\n    \"customer_id\": \"customerId\",\n    \"benefit_id\": \"benefitId\",\n    \"display_key\": \"displayKey\",\n    \"limit_activations\": \"limitActivations\",\n    \"limit_usage\": \"limitUsage\",\n    \"last_validated_at\": \"lastValidatedAt\",\n    \"expires_at\": \"expiresAt\",\n  });\n});\n\n/** @internal */\nexport type LicenseKeyRead$Outbound = {\n  id: string;\n  created_at: string;\n  modified_at: string | null;\n  organization_id: string;\n  customer_id: string;\n  customer: LicenseKeyCustomer$Outbound;\n  benefit_id: string;\n  key: string;\n  display_key: string;\n  status: string;\n  limit_activations: number | null;\n  usage: number;\n  limit_usage: number | null;\n  validations: number;\n  last_validated_at: string | null;\n  expires_at: string | null;\n};\n\n/** @internal */\nexport const LicenseKeyRead$outboundSchema: z.ZodType<\n  LicenseKeyRead$Outbound,\n  z.ZodTypeDef,\n  LicenseKeyRead\n> = z.object({\n  id: z.string(),\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  organizationId: z.string(),\n  customerId: z.string(),\n  customer: LicenseKeyCustomer$outboundSchema,\n  benefitId: z.string(),\n  key: z.string(),\n  displayKey: z.string(),\n  status: LicenseKeyStatus$outboundSchema,\n  limitActivations: z.nullable(z.number().int()),\n  usage: z.number().int(),\n  limitUsage: z.nullable(z.number().int()),\n  validations: z.number().int(),\n  lastValidatedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  expiresAt: z.nullable(z.date().transform(v => v.toISOString())),\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    organizationId: \"organization_id\",\n    customerId: \"customer_id\",\n    benefitId: \"benefit_id\",\n    displayKey: \"display_key\",\n    limitActivations: \"limit_activations\",\n    limitUsage: \"limit_usage\",\n    lastValidatedAt: \"last_validated_at\",\n    expiresAt: \"expires_at\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace LicenseKeyRead$ {\n  /** @deprecated use `LicenseKeyRead$inboundSchema` instead. */\n  export const inboundSchema = LicenseKeyRead$inboundSchema;\n  /** @deprecated use `LicenseKeyRead$outboundSchema` instead. */\n  export const outboundSchema = LicenseKeyRead$outboundSchema;\n  /** @deprecated use `LicenseKeyRead$Outbound` instead. */\n  export type Outbound = LicenseKeyRead$Outbound;\n}\n\nexport function licenseKeyReadToJSON(licenseKeyRead: LicenseKeyRead): string {\n  return JSON.stringify(LicenseKeyRead$outboundSchema.parse(licenseKeyRead));\n}\n\nexport function licenseKeyReadFromJSON(\n  jsonString: string,\n): SafeParseResult<LicenseKeyRead, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => LicenseKeyRead$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'LicenseKeyRead' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 14477, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 14483, "column": 0}, "map": {"version":3,"file":"licensekeyactivationread.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/licensekeyactivationread.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  LicenseKeyRead,\n  LicenseKeyRead$inboundSchema,\n  LicenseKeyRead$Outbound,\n  LicenseKeyRead$outboundSchema,\n} from \"./licensekeyread.js\";\n\nexport type LicenseKeyActivationReadMeta = string | number | number | boolean;\n\nexport type LicenseKeyActivationRead = {\n  id: string;\n  licenseKeyId: string;\n  label: string;\n  meta: { [k: string]: string | number | number | boolean };\n  createdAt: Date;\n  modifiedAt: Date | null;\n  licenseKey: LicenseKeyRead;\n};\n\n/** @internal */\nexport const LicenseKeyActivationReadMeta$inboundSchema: z.ZodType<\n  LicenseKeyActivationReadMeta,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type LicenseKeyActivationReadMeta$Outbound =\n  | string\n  | number\n  | number\n  | boolean;\n\n/** @internal */\nexport const LicenseKeyActivationReadMeta$outboundSchema: z.ZodType<\n  LicenseKeyActivationReadMeta$Outbound,\n  z.ZodTypeDef,\n  LicenseKeyActivationReadMeta\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace LicenseKeyActivationReadMeta$ {\n  /** @deprecated use `LicenseKeyActivationReadMeta$inboundSchema` instead. */\n  export const inboundSchema = LicenseKeyActivationReadMeta$inboundSchema;\n  /** @deprecated use `LicenseKeyActivationReadMeta$outboundSchema` instead. */\n  export const outboundSchema = LicenseKeyActivationReadMeta$outboundSchema;\n  /** @deprecated use `LicenseKeyActivationReadMeta$Outbound` instead. */\n  export type Outbound = LicenseKeyActivationReadMeta$Outbound;\n}\n\nexport function licenseKeyActivationReadMetaToJSON(\n  licenseKeyActivationReadMeta: LicenseKeyActivationReadMeta,\n): string {\n  return JSON.stringify(\n    LicenseKeyActivationReadMeta$outboundSchema.parse(\n      licenseKeyActivationReadMeta,\n    ),\n  );\n}\n\nexport function licenseKeyActivationReadMetaFromJSON(\n  jsonString: string,\n): SafeParseResult<LicenseKeyActivationReadMeta, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => LicenseKeyActivationReadMeta$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'LicenseKeyActivationReadMeta' from JSON`,\n  );\n}\n\n/** @internal */\nexport const LicenseKeyActivationRead$inboundSchema: z.ZodType<\n  LicenseKeyActivationRead,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  id: z.string(),\n  license_key_id: z.string(),\n  label: z.string(),\n  meta: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  license_key: LicenseKeyRead$inboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    \"license_key_id\": \"licenseKeyId\",\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"license_key\": \"licenseKey\",\n  });\n});\n\n/** @internal */\nexport type LicenseKeyActivationRead$Outbound = {\n  id: string;\n  license_key_id: string;\n  label: string;\n  meta: { [k: string]: string | number | number | boolean };\n  created_at: string;\n  modified_at: string | null;\n  license_key: LicenseKeyRead$Outbound;\n};\n\n/** @internal */\nexport const LicenseKeyActivationRead$outboundSchema: z.ZodType<\n  LicenseKeyActivationRead$Outbound,\n  z.ZodTypeDef,\n  LicenseKeyActivationRead\n> = z.object({\n  id: z.string(),\n  licenseKeyId: z.string(),\n  label: z.string(),\n  meta: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  licenseKey: LicenseKeyRead$outboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    licenseKeyId: \"license_key_id\",\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    licenseKey: \"license_key\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace LicenseKeyActivationRead$ {\n  /** @deprecated use `LicenseKeyActivationRead$inboundSchema` instead. */\n  export const inboundSchema = LicenseKeyActivationRead$inboundSchema;\n  /** @deprecated use `LicenseKeyActivationRead$outboundSchema` instead. */\n  export const outboundSchema = LicenseKeyActivationRead$outboundSchema;\n  /** @deprecated use `LicenseKeyActivationRead$Outbound` instead. */\n  export type Outbound = LicenseKeyActivationRead$Outbound;\n}\n\nexport function licenseKeyActivationReadToJSON(\n  licenseKeyActivationRead: LicenseKeyActivationRead,\n): string {\n  return JSON.stringify(\n    LicenseKeyActivationRead$outboundSchema.parse(licenseKeyActivationRead),\n  );\n}\n\nexport function licenseKeyActivationReadFromJSON(\n  jsonString: string,\n): SafeParseResult<LicenseKeyActivationRead, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => LicenseKeyActivationRead$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'LicenseKeyActivationRead' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 14586, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 14592, "column": 0}, "map": {"version":3,"file":"licensekeydeactivate.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/licensekeydeactivate.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport type LicenseKeyDeactivate = {\n  key: string;\n  organizationId: string;\n  activationId: string;\n};\n\n/** @internal */\nexport const LicenseKeyDeactivate$inboundSchema: z.ZodType<\n  LicenseKeyDeactivate,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  key: z.string(),\n  organization_id: z.string(),\n  activation_id: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    \"organization_id\": \"organizationId\",\n    \"activation_id\": \"activationId\",\n  });\n});\n\n/** @internal */\nexport type LicenseKeyDeactivate$Outbound = {\n  key: string;\n  organization_id: string;\n  activation_id: string;\n};\n\n/** @internal */\nexport const LicenseKeyDeactivate$outboundSchema: z.ZodType<\n  LicenseKeyDeactivate$Outbound,\n  z.ZodTypeDef,\n  LicenseKeyDeactivate\n> = z.object({\n  key: z.string(),\n  organizationId: z.string(),\n  activationId: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    organizationId: \"organization_id\",\n    activationId: \"activation_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace LicenseKeyDeactivate$ {\n  /** @deprecated use `LicenseKeyDeactivate$inboundSchema` instead. */\n  export const inboundSchema = LicenseKeyDeactivate$inboundSchema;\n  /** @deprecated use `LicenseKeyDeactivate$outboundSchema` instead. */\n  export const outboundSchema = LicenseKeyDeactivate$outboundSchema;\n  /** @deprecated use `LicenseKeyDeactivate$Outbound` instead. */\n  export type Outbound = LicenseKeyDeactivate$Outbound;\n}\n\nexport function licenseKeyDeactivateToJSON(\n  licenseKeyDeactivate: LicenseKeyDeactivate,\n): string {\n  return JSON.stringify(\n    LicenseKeyDeactivate$outboundSchema.parse(licenseKeyDeactivate),\n  );\n}\n\nexport function licenseKeyDeactivateFromJSON(\n  jsonString: string,\n): SafeParseResult<LicenseKeyDeactivate, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => LicenseKeyDeactivate$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'LicenseKeyDeactivate' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;;;;;AAW1C,MAAM,kCAAkC,GAI3C,CAAC,6IAAC,MAAM,CAAC;IACX,GAAG,EAAE,CAAC,6IAAC,MAAM,EAAE;IACf,eAAe,EAAE,CAAC,6IAAC,MAAM,EAAE;IAC3B,aAAa,EAAE,CAAC,6IAAC,MAAM,EAAE;CAC1B,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,iBAAiB,EAAE,gBAAgB;QACnC,eAAe,EAAE,cAAc;KAChC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAUI,MAAM,mCAAmC,GAI5C,CAAC,6IAAC,MAAM,CAAC;IACX,GAAG,EAAE,CAAC,6IAAC,MAAM,EAAE;IACf,cAAc,EAAE,CAAC,6IAAC,MAAM,EAAE;IAC1B,YAAY,EAAE,CAAC,6IAAC,MAAM,EAAE;CACzB,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,cAAc,EAAE,iBAAiB;QACjC,YAAY,EAAE,eAAe;KAC9B,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,qBAAqB,CAOrC;AAPD,CAAA,SAAiB,qBAAqB;IACpC,kEAAA,EAAoE,CACvD,sBAAA,aAAa,GAAG,kCAAkC,CAAC;IAChE,mEAAA,EAAqE,CACxD,sBAAA,cAAc,GAAG,mCAAmC,CAAC;AAGpE,CAAC,EAPgB,qBAAqB,IAAA,CAArB,qBAAqB,GAAA,CAAA,CAAA,GAOrC;AAEK,SAAU,0BAA0B,CACxC,oBAA0C;IAE1C,OAAO,IAAI,CAAC,SAAS,CACnB,mCAAmC,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAChE,CAAC;AACJ,CAAC;AAEK,SAAU,4BAA4B,CAC1C,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,iCAAmC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC9D,CAAA,gDAAA,CAAkD,CACnD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 14639, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 14645, "column": 0}, "map": {"version":3,"file":"licensekeyactivationbase.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/licensekeyactivationbase.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport type Meta = string | number | number | boolean;\n\nexport type LicenseKeyActivationBase = {\n  id: string;\n  licenseKeyId: string;\n  label: string;\n  meta: { [k: string]: string | number | number | boolean };\n  createdAt: Date;\n  modifiedAt: Date | null;\n};\n\n/** @internal */\nexport const Meta$inboundSchema: z.ZodType<Meta, z.ZodTypeDef, unknown> = z\n  .union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type Meta$Outbound = string | number | number | boolean;\n\n/** @internal */\nexport const Meta$outboundSchema: z.ZodType<Meta$Outbound, z.ZodTypeDef, Meta> =\n  z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace Meta$ {\n  /** @deprecated use `Meta$inboundSchema` instead. */\n  export const inboundSchema = Meta$inboundSchema;\n  /** @deprecated use `Meta$outboundSchema` instead. */\n  export const outboundSchema = Meta$outboundSchema;\n  /** @deprecated use `Meta$Outbound` instead. */\n  export type Outbound = Meta$Outbound;\n}\n\nexport function metaToJSON(meta: Meta): string {\n  return JSON.stringify(Meta$outboundSchema.parse(meta));\n}\n\nexport function metaFromJSON(\n  jsonString: string,\n): SafeParseResult<Meta, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => Meta$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'Meta' from JSON`,\n  );\n}\n\n/** @internal */\nexport const LicenseKeyActivationBase$inboundSchema: z.ZodType<\n  LicenseKeyActivationBase,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  id: z.string(),\n  license_key_id: z.string(),\n  label: z.string(),\n  meta: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n}).transform((v) => {\n  return remap$(v, {\n    \"license_key_id\": \"licenseKeyId\",\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n  });\n});\n\n/** @internal */\nexport type LicenseKeyActivationBase$Outbound = {\n  id: string;\n  license_key_id: string;\n  label: string;\n  meta: { [k: string]: string | number | number | boolean };\n  created_at: string;\n  modified_at: string | null;\n};\n\n/** @internal */\nexport const LicenseKeyActivationBase$outboundSchema: z.ZodType<\n  LicenseKeyActivationBase$Outbound,\n  z.ZodTypeDef,\n  LicenseKeyActivationBase\n> = z.object({\n  id: z.string(),\n  licenseKeyId: z.string(),\n  label: z.string(),\n  meta: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n}).transform((v) => {\n  return remap$(v, {\n    licenseKeyId: \"license_key_id\",\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace LicenseKeyActivationBase$ {\n  /** @deprecated use `LicenseKeyActivationBase$inboundSchema` instead. */\n  export const inboundSchema = LicenseKeyActivationBase$inboundSchema;\n  /** @deprecated use `LicenseKeyActivationBase$outboundSchema` instead. */\n  export const outboundSchema = LicenseKeyActivationBase$outboundSchema;\n  /** @deprecated use `LicenseKeyActivationBase$Outbound` instead. */\n  export type Outbound = LicenseKeyActivationBase$Outbound;\n}\n\nexport function licenseKeyActivationBaseToJSON(\n  licenseKeyActivationBase: LicenseKeyActivationBase,\n): string {\n  return JSON.stringify(\n    LicenseKeyActivationBase$outboundSchema.parse(licenseKeyActivationBase),\n  );\n}\n\nexport function licenseKeyActivationBaseFromJSON(\n  jsonString: string,\n): SafeParseResult<LicenseKeyActivationBase, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => LicenseKeyActivationBase$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'LicenseKeyActivationBase' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 14742, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 14748, "column": 0}, "map": {"version":3,"file":"licensekeywithactivations.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/licensekeywithactivations.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  LicenseKeyActivationBase,\n  LicenseKeyActivationBase$inboundSchema,\n  LicenseKeyActivationBase$Outbound,\n  LicenseKeyActivationBase$outboundSchema,\n} from \"./licensekeyactivationbase.js\";\nimport {\n  LicenseKeyCustomer,\n  LicenseKeyCustomer$inboundSchema,\n  LicenseKeyCustomer$Outbound,\n  LicenseKeyCustomer$outboundSchema,\n} from \"./licensekeycustomer.js\";\nimport {\n  LicenseKeyStatus,\n  LicenseKeyStatus$inboundSchema,\n  LicenseKeyStatus$outboundSchema,\n} from \"./licensekeystatus.js\";\n\nexport type LicenseKeyWithActivations = {\n  /**\n   * The ID of the object.\n   */\n  id: string;\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  organizationId: string;\n  customerId: string;\n  customer: LicenseKeyCustomer;\n  /**\n   * The benefit ID.\n   */\n  benefitId: string;\n  key: string;\n  displayKey: string;\n  status: LicenseKeyStatus;\n  limitActivations: number | null;\n  usage: number;\n  limitUsage: number | null;\n  validations: number;\n  lastValidatedAt: Date | null;\n  expiresAt: Date | null;\n  activations: Array<LicenseKeyActivationBase>;\n};\n\n/** @internal */\nexport const LicenseKeyWithActivations$inboundSchema: z.ZodType<\n  LicenseKeyWithActivations,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  id: z.string(),\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  organization_id: z.string(),\n  customer_id: z.string(),\n  customer: LicenseKeyCustomer$inboundSchema,\n  benefit_id: z.string(),\n  key: z.string(),\n  display_key: z.string(),\n  status: LicenseKeyStatus$inboundSchema,\n  limit_activations: z.nullable(z.number().int()),\n  usage: z.number().int(),\n  limit_usage: z.nullable(z.number().int()),\n  validations: z.number().int(),\n  last_validated_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  expires_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  activations: z.array(LicenseKeyActivationBase$inboundSchema),\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"organization_id\": \"organizationId\",\n    \"customer_id\": \"customerId\",\n    \"benefit_id\": \"benefitId\",\n    \"display_key\": \"displayKey\",\n    \"limit_activations\": \"limitActivations\",\n    \"limit_usage\": \"limitUsage\",\n    \"last_validated_at\": \"lastValidatedAt\",\n    \"expires_at\": \"expiresAt\",\n  });\n});\n\n/** @internal */\nexport type LicenseKeyWithActivations$Outbound = {\n  id: string;\n  created_at: string;\n  modified_at: string | null;\n  organization_id: string;\n  customer_id: string;\n  customer: LicenseKeyCustomer$Outbound;\n  benefit_id: string;\n  key: string;\n  display_key: string;\n  status: string;\n  limit_activations: number | null;\n  usage: number;\n  limit_usage: number | null;\n  validations: number;\n  last_validated_at: string | null;\n  expires_at: string | null;\n  activations: Array<LicenseKeyActivationBase$Outbound>;\n};\n\n/** @internal */\nexport const LicenseKeyWithActivations$outboundSchema: z.ZodType<\n  LicenseKeyWithActivations$Outbound,\n  z.ZodTypeDef,\n  LicenseKeyWithActivations\n> = z.object({\n  id: z.string(),\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  organizationId: z.string(),\n  customerId: z.string(),\n  customer: LicenseKeyCustomer$outboundSchema,\n  benefitId: z.string(),\n  key: z.string(),\n  displayKey: z.string(),\n  status: LicenseKeyStatus$outboundSchema,\n  limitActivations: z.nullable(z.number().int()),\n  usage: z.number().int(),\n  limitUsage: z.nullable(z.number().int()),\n  validations: z.number().int(),\n  lastValidatedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  expiresAt: z.nullable(z.date().transform(v => v.toISOString())),\n  activations: z.array(LicenseKeyActivationBase$outboundSchema),\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    organizationId: \"organization_id\",\n    customerId: \"customer_id\",\n    benefitId: \"benefit_id\",\n    displayKey: \"display_key\",\n    limitActivations: \"limit_activations\",\n    limitUsage: \"limit_usage\",\n    lastValidatedAt: \"last_validated_at\",\n    expiresAt: \"expires_at\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace LicenseKeyWithActivations$ {\n  /** @deprecated use `LicenseKeyWithActivations$inboundSchema` instead. */\n  export const inboundSchema = LicenseKeyWithActivations$inboundSchema;\n  /** @deprecated use `LicenseKeyWithActivations$outboundSchema` instead. */\n  export const outboundSchema = LicenseKeyWithActivations$outboundSchema;\n  /** @deprecated use `LicenseKeyWithActivations$Outbound` instead. */\n  export type Outbound = LicenseKeyWithActivations$Outbound;\n}\n\nexport function licenseKeyWithActivationsToJSON(\n  licenseKeyWithActivations: LicenseKeyWithActivations,\n): string {\n  return JSON.stringify(\n    LicenseKeyWithActivations$outboundSchema.parse(licenseKeyWithActivations),\n  );\n}\n\nexport function licenseKeyWithActivationsFromJSON(\n  jsonString: string,\n): SafeParseResult<LicenseKeyWithActivations, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => LicenseKeyWithActivations$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'LicenseKeyWithActivations' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 14853, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 14859, "column": 0}, "map": {"version":3,"file":"listresourcelicensekeyread.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/listresourcelicensekeyread.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  LicenseKeyRead,\n  LicenseKeyRead$inboundSchema,\n  LicenseKeyRead$Outbound,\n  LicenseKeyRead$outboundSchema,\n} from \"./licensekeyread.js\";\nimport {\n  Pagination,\n  Pagination$inboundSchema,\n  Pagination$Outbound,\n  Pagination$outboundSchema,\n} from \"./pagination.js\";\n\nexport type ListResourceLicenseKeyRead = {\n  items: Array<LicenseKeyRead>;\n  pagination: Pagination;\n};\n\n/** @internal */\nexport const ListResourceLicenseKeyRead$inboundSchema: z.ZodType<\n  ListResourceLicenseKeyRead,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  items: z.array(LicenseKeyRead$inboundSchema),\n  pagination: Pagination$inboundSchema,\n});\n\n/** @internal */\nexport type ListResourceLicenseKeyRead$Outbound = {\n  items: Array<LicenseKeyRead$Outbound>;\n  pagination: Pagination$Outbound;\n};\n\n/** @internal */\nexport const ListResourceLicenseKeyRead$outboundSchema: z.ZodType<\n  ListResourceLicenseKeyRead$Outbound,\n  z.ZodTypeDef,\n  ListResourceLicenseKeyRead\n> = z.object({\n  items: z.array(LicenseKeyRead$outboundSchema),\n  pagination: Pagination$outboundSchema,\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace ListResourceLicenseKeyRead$ {\n  /** @deprecated use `ListResourceLicenseKeyRead$inboundSchema` instead. */\n  export const inboundSchema = ListResourceLicenseKeyRead$inboundSchema;\n  /** @deprecated use `ListResourceLicenseKeyRead$outboundSchema` instead. */\n  export const outboundSchema = ListResourceLicenseKeyRead$outboundSchema;\n  /** @deprecated use `ListResourceLicenseKeyRead$Outbound` instead. */\n  export type Outbound = ListResourceLicenseKeyRead$Outbound;\n}\n\nexport function listResourceLicenseKeyReadToJSON(\n  listResourceLicenseKeyRead: ListResourceLicenseKeyRead,\n): string {\n  return JSON.stringify(\n    ListResourceLicenseKeyRead$outboundSchema.parse(listResourceLicenseKeyRead),\n  );\n}\n\nexport function listResourceLicenseKeyReadFromJSON(\n  jsonString: string,\n): SafeParseResult<ListResourceLicenseKeyRead, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => ListResourceLicenseKeyRead$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'ListResourceLicenseKeyRead' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;AAGH,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,4BAA4B,EAE5B,6BAA6B,GAC9B,MAAM,qBAAqB,CAAC;AAC7B,OAAO,EAEL,wBAAwB,EAExB,yBAAyB,GAC1B,MAAM,iBAAiB,CAAC;AAfzB,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;;;;AAuBlB,MAAM,wCAAwC,GAIjD,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,KAAK,iMAAC,+BAA4B,CAAC;IAC5C,UAAU,8LAAE,2BAAwB;CACrC,CAAC,CAAC;AASI,MAAM,yCAAyC,GAIlD,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,KAAK,iMAAC,gCAA6B,CAAC;IAC7C,UAAU,8LAAE,4BAAyB;CACtC,CAAC,CAAC;AAMG,IAAW,2BAA2B,CAO3C;AAPD,CAAA,SAAiB,2BAA2B;IAC1C,wEAAA,EAA0E,CAC7D,4BAAA,aAAa,GAAG,wCAAwC,CAAC;IACtE,yEAAA,EAA2E,CAC9D,4BAAA,cAAc,GAAG,yCAAyC,CAAC;AAG1E,CAAC,EAPgB,2BAA2B,IAAA,CAA3B,2BAA2B,GAAA,CAAA,CAAA,GAO3C;AAEK,SAAU,gCAAgC,CAC9C,0BAAsD;IAEtD,OAAO,IAAI,CAAC,SAAS,CACnB,yCAAyC,CAAC,KAAK,CAAC,0BAA0B,CAAC,CAC5E,CAAC;AACJ,CAAC;AAEK,SAAU,kCAAkC,CAChD,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,uCAAyC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACpE,CAAA,sDAAA,CAAwD,CACzD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 14896, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 14902, "column": 0}, "map": {"version":3,"file":"licensekeyvalidate.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/licensekeyvalidate.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport type Conditions = string | number | number | boolean;\n\nexport type LicenseKeyValidate = {\n  key: string;\n  organizationId: string;\n  activationId?: string | null | undefined;\n  benefitId?: string | null | undefined;\n  customerId?: string | null | undefined;\n  incrementUsage?: number | null | undefined;\n  /**\n   * Key-value object allowing you to set conditions that must match when validating the license key.\n   *\n   * @remarks\n   *\n   * The key must be a string with a maximum length of **40 characters**.\n   * The value must be either:\n   *\n   * * A string with a maximum length of **500 characters**\n   * * An integer\n   * * A floating-point number\n   * * A boolean\n   *\n   * You can store up to **50 key-value pairs**.\n   */\n  conditions?: { [k: string]: string | number | number | boolean } | undefined;\n};\n\n/** @internal */\nexport const Conditions$inboundSchema: z.ZodType<\n  Conditions,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type Conditions$Outbound = string | number | number | boolean;\n\n/** @internal */\nexport const Conditions$outboundSchema: z.ZodType<\n  Conditions$Outbound,\n  z.ZodTypeDef,\n  Conditions\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace Conditions$ {\n  /** @deprecated use `Conditions$inboundSchema` instead. */\n  export const inboundSchema = Conditions$inboundSchema;\n  /** @deprecated use `Conditions$outboundSchema` instead. */\n  export const outboundSchema = Conditions$outboundSchema;\n  /** @deprecated use `Conditions$Outbound` instead. */\n  export type Outbound = Conditions$Outbound;\n}\n\nexport function conditionsToJSON(conditions: Conditions): string {\n  return JSON.stringify(Conditions$outboundSchema.parse(conditions));\n}\n\nexport function conditionsFromJSON(\n  jsonString: string,\n): SafeParseResult<Conditions, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => Conditions$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'Conditions' from JSON`,\n  );\n}\n\n/** @internal */\nexport const LicenseKeyValidate$inboundSchema: z.ZodType<\n  LicenseKeyValidate,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  key: z.string(),\n  organization_id: z.string(),\n  activation_id: z.nullable(z.string()).optional(),\n  benefit_id: z.nullable(z.string()).optional(),\n  customer_id: z.nullable(z.string()).optional(),\n  increment_usage: z.nullable(z.number().int()).optional(),\n  conditions: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n}).transform((v) => {\n  return remap$(v, {\n    \"organization_id\": \"organizationId\",\n    \"activation_id\": \"activationId\",\n    \"benefit_id\": \"benefitId\",\n    \"customer_id\": \"customerId\",\n    \"increment_usage\": \"incrementUsage\",\n  });\n});\n\n/** @internal */\nexport type LicenseKeyValidate$Outbound = {\n  key: string;\n  organization_id: string;\n  activation_id?: string | null | undefined;\n  benefit_id?: string | null | undefined;\n  customer_id?: string | null | undefined;\n  increment_usage?: number | null | undefined;\n  conditions?: { [k: string]: string | number | number | boolean } | undefined;\n};\n\n/** @internal */\nexport const LicenseKeyValidate$outboundSchema: z.ZodType<\n  LicenseKeyValidate$Outbound,\n  z.ZodTypeDef,\n  LicenseKeyValidate\n> = z.object({\n  key: z.string(),\n  organizationId: z.string(),\n  activationId: z.nullable(z.string()).optional(),\n  benefitId: z.nullable(z.string()).optional(),\n  customerId: z.nullable(z.string()).optional(),\n  incrementUsage: z.nullable(z.number().int()).optional(),\n  conditions: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n}).transform((v) => {\n  return remap$(v, {\n    organizationId: \"organization_id\",\n    activationId: \"activation_id\",\n    benefitId: \"benefit_id\",\n    customerId: \"customer_id\",\n    incrementUsage: \"increment_usage\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace LicenseKeyValidate$ {\n  /** @deprecated use `LicenseKeyValidate$inboundSchema` instead. */\n  export const inboundSchema = LicenseKeyValidate$inboundSchema;\n  /** @deprecated use `LicenseKeyValidate$outboundSchema` instead. */\n  export const outboundSchema = LicenseKeyValidate$outboundSchema;\n  /** @deprecated use `LicenseKeyValidate$Outbound` instead. */\n  export type Outbound = LicenseKeyValidate$Outbound;\n}\n\nexport function licenseKeyValidateToJSON(\n  licenseKeyValidate: LicenseKeyValidate,\n): string {\n  return JSON.stringify(\n    LicenseKeyValidate$outboundSchema.parse(licenseKeyValidate),\n  );\n}\n\nexport function licenseKeyValidateFromJSON(\n  jsonString: string,\n): SafeParseResult<LicenseKeyValidate, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => LicenseKeyValidate$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'LicenseKeyValidate' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 15001, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15007, "column": 0}, "map": {"version":3,"file":"validatedlicensekey.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/validatedlicensekey.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  LicenseKeyActivationBase,\n  LicenseKeyActivationBase$inboundSchema,\n  LicenseKeyActivationBase$Outbound,\n  LicenseKeyActivationBase$outboundSchema,\n} from \"./licensekeyactivationbase.js\";\nimport {\n  LicenseKeyCustomer,\n  LicenseKeyCustomer$inboundSchema,\n  LicenseKeyCustomer$Outbound,\n  LicenseKeyCustomer$outboundSchema,\n} from \"./licensekeycustomer.js\";\nimport {\n  LicenseKeyStatus,\n  LicenseKeyStatus$inboundSchema,\n  LicenseKeyStatus$outboundSchema,\n} from \"./licensekeystatus.js\";\n\nexport type ValidatedLicenseKey = {\n  /**\n   * The ID of the object.\n   */\n  id: string;\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  organizationId: string;\n  customerId: string;\n  customer: LicenseKeyCustomer;\n  /**\n   * The benefit ID.\n   */\n  benefitId: string;\n  key: string;\n  displayKey: string;\n  status: LicenseKeyStatus;\n  limitActivations: number | null;\n  usage: number;\n  limitUsage: number | null;\n  validations: number;\n  lastValidatedAt: Date | null;\n  expiresAt: Date | null;\n  activation?: LicenseKeyActivationBase | null | undefined;\n};\n\n/** @internal */\nexport const ValidatedLicenseKey$inboundSchema: z.ZodType<\n  ValidatedLicenseKey,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  id: z.string(),\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  organization_id: z.string(),\n  customer_id: z.string(),\n  customer: LicenseKeyCustomer$inboundSchema,\n  benefit_id: z.string(),\n  key: z.string(),\n  display_key: z.string(),\n  status: LicenseKeyStatus$inboundSchema,\n  limit_activations: z.nullable(z.number().int()),\n  usage: z.number().int(),\n  limit_usage: z.nullable(z.number().int()),\n  validations: z.number().int(),\n  last_validated_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  expires_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  activation: z.nullable(LicenseKeyActivationBase$inboundSchema).optional(),\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"organization_id\": \"organizationId\",\n    \"customer_id\": \"customerId\",\n    \"benefit_id\": \"benefitId\",\n    \"display_key\": \"displayKey\",\n    \"limit_activations\": \"limitActivations\",\n    \"limit_usage\": \"limitUsage\",\n    \"last_validated_at\": \"lastValidatedAt\",\n    \"expires_at\": \"expiresAt\",\n  });\n});\n\n/** @internal */\nexport type ValidatedLicenseKey$Outbound = {\n  id: string;\n  created_at: string;\n  modified_at: string | null;\n  organization_id: string;\n  customer_id: string;\n  customer: LicenseKeyCustomer$Outbound;\n  benefit_id: string;\n  key: string;\n  display_key: string;\n  status: string;\n  limit_activations: number | null;\n  usage: number;\n  limit_usage: number | null;\n  validations: number;\n  last_validated_at: string | null;\n  expires_at: string | null;\n  activation?: LicenseKeyActivationBase$Outbound | null | undefined;\n};\n\n/** @internal */\nexport const ValidatedLicenseKey$outboundSchema: z.ZodType<\n  ValidatedLicenseKey$Outbound,\n  z.ZodTypeDef,\n  ValidatedLicenseKey\n> = z.object({\n  id: z.string(),\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  organizationId: z.string(),\n  customerId: z.string(),\n  customer: LicenseKeyCustomer$outboundSchema,\n  benefitId: z.string(),\n  key: z.string(),\n  displayKey: z.string(),\n  status: LicenseKeyStatus$outboundSchema,\n  limitActivations: z.nullable(z.number().int()),\n  usage: z.number().int(),\n  limitUsage: z.nullable(z.number().int()),\n  validations: z.number().int(),\n  lastValidatedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  expiresAt: z.nullable(z.date().transform(v => v.toISOString())),\n  activation: z.nullable(LicenseKeyActivationBase$outboundSchema).optional(),\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    organizationId: \"organization_id\",\n    customerId: \"customer_id\",\n    benefitId: \"benefit_id\",\n    displayKey: \"display_key\",\n    limitActivations: \"limit_activations\",\n    limitUsage: \"limit_usage\",\n    lastValidatedAt: \"last_validated_at\",\n    expiresAt: \"expires_at\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace ValidatedLicenseKey$ {\n  /** @deprecated use `ValidatedLicenseKey$inboundSchema` instead. */\n  export const inboundSchema = ValidatedLicenseKey$inboundSchema;\n  /** @deprecated use `ValidatedLicenseKey$outboundSchema` instead. */\n  export const outboundSchema = ValidatedLicenseKey$outboundSchema;\n  /** @deprecated use `ValidatedLicenseKey$Outbound` instead. */\n  export type Outbound = ValidatedLicenseKey$Outbound;\n}\n\nexport function validatedLicenseKeyToJSON(\n  validatedLicenseKey: ValidatedLicenseKey,\n): string {\n  return JSON.stringify(\n    ValidatedLicenseKey$outboundSchema.parse(validatedLicenseKey),\n  );\n}\n\nexport function validatedLicenseKeyFromJSON(\n  jsonString: string,\n): SafeParseResult<ValidatedLicenseKey, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => ValidatedLicenseKey$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'ValidatedLicenseKey' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,sCAAsC,EAEtC,uCAAuC,GACxC,MAAM,+BAA+B,CAAC;AACvC,OAAO,EAEL,gCAAgC,EAEhC,iCAAiC,GAClC,MAAM,yBAAyB,CAAC;AACjC,OAAO,EAEL,8BAA8B,EAC9B,+BAA+B,GAChC,MAAM,uBAAuB,CAAC;;;;;;;;AAmCxB,MAAM,iCAAiC,GAI1C,CAAC,6IAAC,MAAM,CAAC;IACX,EAAE,EAAE,CAAC,6IAAC,MAAM,EAAE;IACd,UAAU,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,CAAC;QAAE,MAAM,EAAE,IAAI;IAAA,CAAE,CAAC,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;IAC7E,WAAW,EAAE,CAAC,6IAAC,QAAQ,CACrB,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,CAAC;QAAE,MAAM,EAAE,IAAI;IAAA,CAAE,CAAC,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAClE;IACD,eAAe,EAAE,CAAC,6IAAC,MAAM,EAAE;IAC3B,WAAW,EAAE,CAAC,6IAAC,MAAM,EAAE;IACvB,QAAQ,sMAAE,mCAAgC;IAC1C,UAAU,EAAE,CAAC,6IAAC,MAAM,EAAE;IACtB,GAAG,EAAE,CAAC,6IAAC,MAAM,EAAE;IACf,WAAW,EAAE,CAAC,6IAAC,MAAM,EAAE;IACvB,MAAM,oMAAE,iCAA8B;IACtC,iBAAiB,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC;IAC/C,KAAK,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IACvB,WAAW,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC;IACzC,WAAW,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAC7B,iBAAiB,EAAE,CAAC,6IAAC,QAAQ,CAC3B,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,CAAC;QAAE,MAAM,EAAE,IAAI;IAAA,CAAE,CAAC,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAClE;IACD,UAAU,EAAE,CAAC,6IAAC,QAAQ,CACpB,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,CAAC;QAAE,MAAM,EAAE,IAAI;IAAA,CAAE,CAAC,CAAC,SAAS,EAAC,CAAC,CAAC,EAAG,AAAD,IAAK,IAAI,CAAC,CAAC,CAAC,CAAC,CAClE;IACD,UAAU,EAAE,CAAC,6IAAC,QAAQ,2MAAC,yCAAsC,CAAC,CAAC,QAAQ,EAAE;CAC1E,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,YAAY,EAAE,WAAW;QACzB,aAAa,EAAE,YAAY;QAC3B,iBAAiB,EAAE,gBAAgB;QACnC,aAAa,EAAE,YAAY;QAC3B,YAAY,EAAE,WAAW;QACzB,aAAa,EAAE,YAAY;QAC3B,mBAAmB,EAAE,kBAAkB;QACvC,aAAa,EAAE,YAAY;QAC3B,mBAAmB,EAAE,iBAAiB;QACtC,YAAY,EAAE,WAAW;KAC1B,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAwBI,MAAM,kCAAkC,GAI3C,CAAC,6IAAC,MAAM,CAAC;IACX,EAAE,EAAE,CAAC,6IAAC,MAAM,EAAE;IACd,SAAS,EAAE,CAAC,6IAAC,IAAI,EAAE,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,WAAW,EAAE,CAAC;IACnD,UAAU,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,IAAI,EAAE,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;IAChE,cAAc,EAAE,CAAC,6IAAC,MAAM,EAAE;IAC1B,UAAU,EAAE,CAAC,6IAAC,MAAM,EAAE;IACtB,QAAQ,EAAE,wOAAiC;IAC3C,SAAS,EAAE,CAAC,6IAAC,MAAM,EAAE;IACrB,GAAG,EAAE,CAAC,6IAAC,MAAM,EAAE;IACf,UAAU,EAAE,CAAC,6IAAC,MAAM,EAAE;IACtB,MAAM,oMAAE,kCAA+B;IACvC,gBAAgB,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC;IAC9C,KAAK,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IACvB,UAAU,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC;IACxC,WAAW,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAC7B,eAAe,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,IAAI,EAAE,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;IACrE,SAAS,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,IAAI,EAAE,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;IAC/D,UAAU,EAAE,CAAC,6IAAC,QAAQ,2MAAC,0CAAuC,CAAC,CAAC,QAAQ,EAAE;CAC3E,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,SAAS,EAAE,YAAY;QACvB,UAAU,EAAE,aAAa;QACzB,cAAc,EAAE,iBAAiB;QACjC,UAAU,EAAE,aAAa;QACzB,SAAS,EAAE,YAAY;QACvB,UAAU,EAAE,aAAa;QACzB,gBAAgB,EAAE,mBAAmB;QACrC,UAAU,EAAE,aAAa;QACzB,eAAe,EAAE,mBAAmB;QACpC,SAAS,EAAE,YAAY;KACxB,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,oBAAoB,CAOpC;AAPD,CAAA,SAAiB,oBAAoB;IACnC,iEAAA,EAAmE,CACtD,qBAAA,aAAa,GAAG,iCAAiC,CAAC;IAC/D,kEAAA,EAAoE,CACvD,qBAAA,cAAc,GAAG,kCAAkC,CAAC;AAGnE,CAAC,EAPgB,oBAAoB,IAAA,CAApB,oBAAoB,GAAA,CAAA,CAAA,GAOpC;AAEK,SAAU,yBAAyB,CACvC,mBAAwC;IAExC,OAAO,IAAI,CAAC,SAAS,CACnB,kCAAkC,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAC9D,CAAC;AACJ,CAAC;AAEK,SAAU,2BAA2B,CACzC,UAAkB;IAElB,mLAAO,YAAS,AAAT,EACL,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,gCAAkC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC7D,CAAA,+CAAA,CAAiD,CAClD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 15112, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15118, "column": 0}, "map": {"version":3,"file":"customerorderproduct.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customerorderproduct.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  BenefitPublic,\n  BenefitPublic$inboundSchema,\n  BenefitPublic$Outbound,\n  BenefitPublic$outboundSchema,\n} from \"./benefitpublic.js\";\nimport {\n  LegacyRecurringProductPrice,\n  LegacyRecurringProductPrice$inboundSchema,\n  LegacyRecurringProductPrice$Outbound,\n  LegacyRecurringProductPrice$outboundSchema,\n} from \"./legacyrecurringproductprice.js\";\nimport {\n  Organization,\n  Organization$inboundSchema,\n  Organization$Outbound,\n  Organization$outboundSchema,\n} from \"./organization.js\";\nimport {\n  ProductMediaFileRead,\n  ProductMediaFileRead$inboundSchema,\n  ProductMediaFileRead$Outbound,\n  ProductMediaFileRead$outboundSchema,\n} from \"./productmediafileread.js\";\nimport {\n  ProductPrice,\n  ProductPrice$inboundSchema,\n  ProductPrice$Outbound,\n  ProductPrice$outboundSchema,\n} from \"./productprice.js\";\nimport {\n  SubscriptionRecurringInterval,\n  SubscriptionRecurringInterval$inboundSchema,\n  SubscriptionRecurringInterval$outboundSchema,\n} from \"./subscriptionrecurringinterval.js\";\n\nexport type CustomerOrderProductPrices =\n  | LegacyRecurringProductPrice\n  | ProductPrice;\n\nexport type CustomerOrderProduct = {\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  /**\n   * The ID of the product.\n   */\n  id: string;\n  /**\n   * The name of the product.\n   */\n  name: string;\n  /**\n   * The description of the product.\n   */\n  description: string | null;\n  /**\n   * The recurring interval of the product. If `None`, the product is a one-time purchase.\n   */\n  recurringInterval: SubscriptionRecurringInterval | null;\n  /**\n   * Whether the product is a subscription.\n   */\n  isRecurring: boolean;\n  /**\n   * Whether the product is archived and no longer available.\n   */\n  isArchived: boolean;\n  /**\n   * The ID of the organization owning the product.\n   */\n  organizationId: string;\n  /**\n   * List of prices for this product.\n   */\n  prices: Array<LegacyRecurringProductPrice | ProductPrice>;\n  /**\n   * List of benefits granted by the product.\n   */\n  benefits: Array<BenefitPublic>;\n  /**\n   * List of medias associated to the product.\n   */\n  medias: Array<ProductMediaFileRead>;\n  organization: Organization;\n};\n\n/** @internal */\nexport const CustomerOrderProductPrices$inboundSchema: z.ZodType<\n  CustomerOrderProductPrices,\n  z.ZodTypeDef,\n  unknown\n> = z.union([\n  LegacyRecurringProductPrice$inboundSchema,\n  ProductPrice$inboundSchema,\n]);\n\n/** @internal */\nexport type CustomerOrderProductPrices$Outbound =\n  | LegacyRecurringProductPrice$Outbound\n  | ProductPrice$Outbound;\n\n/** @internal */\nexport const CustomerOrderProductPrices$outboundSchema: z.ZodType<\n  CustomerOrderProductPrices$Outbound,\n  z.ZodTypeDef,\n  CustomerOrderProductPrices\n> = z.union([\n  LegacyRecurringProductPrice$outboundSchema,\n  ProductPrice$outboundSchema,\n]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomerOrderProductPrices$ {\n  /** @deprecated use `CustomerOrderProductPrices$inboundSchema` instead. */\n  export const inboundSchema = CustomerOrderProductPrices$inboundSchema;\n  /** @deprecated use `CustomerOrderProductPrices$outboundSchema` instead. */\n  export const outboundSchema = CustomerOrderProductPrices$outboundSchema;\n  /** @deprecated use `CustomerOrderProductPrices$Outbound` instead. */\n  export type Outbound = CustomerOrderProductPrices$Outbound;\n}\n\nexport function customerOrderProductPricesToJSON(\n  customerOrderProductPrices: CustomerOrderProductPrices,\n): string {\n  return JSON.stringify(\n    CustomerOrderProductPrices$outboundSchema.parse(customerOrderProductPrices),\n  );\n}\n\nexport function customerOrderProductPricesFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomerOrderProductPrices, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomerOrderProductPrices$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomerOrderProductPrices' from JSON`,\n  );\n}\n\n/** @internal */\nexport const CustomerOrderProduct$inboundSchema: z.ZodType<\n  CustomerOrderProduct,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  id: z.string(),\n  name: z.string(),\n  description: z.nullable(z.string()),\n  recurring_interval: z.nullable(SubscriptionRecurringInterval$inboundSchema),\n  is_recurring: z.boolean(),\n  is_archived: z.boolean(),\n  organization_id: z.string(),\n  prices: z.array(\n    z.union([\n      LegacyRecurringProductPrice$inboundSchema,\n      ProductPrice$inboundSchema,\n    ]),\n  ),\n  benefits: z.array(BenefitPublic$inboundSchema),\n  medias: z.array(ProductMediaFileRead$inboundSchema),\n  organization: Organization$inboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"recurring_interval\": \"recurringInterval\",\n    \"is_recurring\": \"isRecurring\",\n    \"is_archived\": \"isArchived\",\n    \"organization_id\": \"organizationId\",\n  });\n});\n\n/** @internal */\nexport type CustomerOrderProduct$Outbound = {\n  created_at: string;\n  modified_at: string | null;\n  id: string;\n  name: string;\n  description: string | null;\n  recurring_interval: string | null;\n  is_recurring: boolean;\n  is_archived: boolean;\n  organization_id: string;\n  prices: Array<LegacyRecurringProductPrice$Outbound | ProductPrice$Outbound>;\n  benefits: Array<BenefitPublic$Outbound>;\n  medias: Array<ProductMediaFileRead$Outbound>;\n  organization: Organization$Outbound;\n};\n\n/** @internal */\nexport const CustomerOrderProduct$outboundSchema: z.ZodType<\n  CustomerOrderProduct$Outbound,\n  z.ZodTypeDef,\n  CustomerOrderProduct\n> = z.object({\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  id: z.string(),\n  name: z.string(),\n  description: z.nullable(z.string()),\n  recurringInterval: z.nullable(SubscriptionRecurringInterval$outboundSchema),\n  isRecurring: z.boolean(),\n  isArchived: z.boolean(),\n  organizationId: z.string(),\n  prices: z.array(\n    z.union([\n      LegacyRecurringProductPrice$outboundSchema,\n      ProductPrice$outboundSchema,\n    ]),\n  ),\n  benefits: z.array(BenefitPublic$outboundSchema),\n  medias: z.array(ProductMediaFileRead$outboundSchema),\n  organization: Organization$outboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    recurringInterval: \"recurring_interval\",\n    isRecurring: \"is_recurring\",\n    isArchived: \"is_archived\",\n    organizationId: \"organization_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomerOrderProduct$ {\n  /** @deprecated use `CustomerOrderProduct$inboundSchema` instead. */\n  export const inboundSchema = CustomerOrderProduct$inboundSchema;\n  /** @deprecated use `CustomerOrderProduct$outboundSchema` instead. */\n  export const outboundSchema = CustomerOrderProduct$outboundSchema;\n  /** @deprecated use `CustomerOrderProduct$Outbound` instead. */\n  export type Outbound = CustomerOrderProduct$Outbound;\n}\n\nexport function customerOrderProductToJSON(\n  customerOrderProduct: CustomerOrderProduct,\n): string {\n  return JSON.stringify(\n    CustomerOrderProduct$outboundSchema.parse(customerOrderProduct),\n  );\n}\n\nexport function customerOrderProductFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomerOrderProduct, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomerOrderProduct$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomerOrderProduct' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 15239, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15245, "column": 0}, "map": {"version":3,"file":"customercancellationreason.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customercancellationreason.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { ClosedEnum } from \"../../types/enums.js\";\n\nexport const CustomerCancellationReason = {\n  CustomerService: \"customer_service\",\n  LowQuality: \"low_quality\",\n  MissingFeatures: \"missing_features\",\n  SwitchedService: \"switched_service\",\n  TooComplex: \"too_complex\",\n  TooExpensive: \"too_expensive\",\n  Unused: \"unused\",\n  Other: \"other\",\n} as const;\nexport type CustomerCancellationReason = ClosedEnum<\n  typeof CustomerCancellationReason\n>;\n\n/** @internal */\nexport const CustomerCancellationReason$inboundSchema: z.ZodNativeEnum<\n  typeof CustomerCancellationReason\n> = z.nativeEnum(CustomerCancellationReason);\n\n/** @internal */\nexport const CustomerCancellationReason$outboundSchema: z.ZodNativeEnum<\n  typeof CustomerCancellationReason\n> = CustomerCancellationReason$inboundSchema;\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomerCancellationReason$ {\n  /** @deprecated use `CustomerCancellationReason$inboundSchema` instead. */\n  export const inboundSchema = CustomerCancellationReason$inboundSchema;\n  /** @deprecated use `CustomerCancellationReason$outboundSchema` instead. */\n  export const outboundSchema = CustomerCancellationReason$outboundSchema;\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;AAGlB,MAAM,0BAA0B,GAAG;IACxC,eAAe,EAAE,kBAAkB;IACnC,UAAU,EAAE,aAAa;IACzB,eAAe,EAAE,kBAAkB;IACnC,eAAe,EAAE,kBAAkB;IACnC,UAAU,EAAE,aAAa;IACzB,YAAY,EAAE,eAAe;IAC7B,MAAM,EAAE,QAAQ;IAChB,KAAK,EAAE,OAAO;CACN,CAAC;AAMJ,MAAM,wCAAwC,GAEjD,CAAC,6IAAC,UAAU,CAAC,0BAA0B,CAAC,CAAC;AAGtC,MAAM,yCAAyC,GAElD,wCAAwC,CAAC;AAMvC,IAAW,2BAA2B,CAK3C;AALD,CAAA,SAAiB,2BAA2B;IAC1C,wEAAA,EAA0E,CAC7D,4BAAA,aAAa,GAAG,wCAAwC,CAAC;IACtE,yEAAA,EAA2E,CAC9D,4BAAA,cAAc,GAAG,yCAAyC,CAAC;AAC1E,CAAC,EALgB,2BAA2B,IAAA,CAA3B,2BAA2B,GAAA,CAAA,CAAA,GAK3C","ignoreList":[0]}},
    {"offset": {"line": 15273, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15279, "column": 0}, "map": {"version":3,"file":"subscriptionstatus.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/subscriptionstatus.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { ClosedEnum } from \"../../types/enums.js\";\n\nexport const SubscriptionStatus = {\n  Incomplete: \"incomplete\",\n  IncompleteExpired: \"incomplete_expired\",\n  Trialing: \"trialing\",\n  Active: \"active\",\n  PastDue: \"past_due\",\n  Canceled: \"canceled\",\n  Unpaid: \"unpaid\",\n} as const;\nexport type SubscriptionStatus = ClosedEnum<typeof SubscriptionStatus>;\n\n/** @internal */\nexport const SubscriptionStatus$inboundSchema: z.ZodNativeEnum<\n  typeof SubscriptionStatus\n> = z.nativeEnum(SubscriptionStatus);\n\n/** @internal */\nexport const SubscriptionStatus$outboundSchema: z.ZodNativeEnum<\n  typeof SubscriptionStatus\n> = SubscriptionStatus$inboundSchema;\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace SubscriptionStatus$ {\n  /** @deprecated use `SubscriptionStatus$inboundSchema` instead. */\n  export const inboundSchema = SubscriptionStatus$inboundSchema;\n  /** @deprecated use `SubscriptionStatus$outboundSchema` instead. */\n  export const outboundSchema = SubscriptionStatus$outboundSchema;\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;AAGlB,MAAM,kBAAkB,GAAG;IAChC,UAAU,EAAE,YAAY;IACxB,iBAAiB,EAAE,oBAAoB;IACvC,QAAQ,EAAE,UAAU;IACpB,MAAM,EAAE,QAAQ;IAChB,OAAO,EAAE,UAAU;IACnB,QAAQ,EAAE,UAAU;IACpB,MAAM,EAAE,QAAQ;CACR,CAAC;AAIJ,MAAM,gCAAgC,GAEzC,CAAC,6IAAC,UAAU,CAAC,kBAAkB,CAAC,CAAC;AAG9B,MAAM,iCAAiC,GAE1C,gCAAgC,CAAC;AAM/B,IAAW,mBAAmB,CAKnC;AALD,CAAA,SAAiB,mBAAmB;IAClC,gEAAA,EAAkE,CACrD,oBAAA,aAAa,GAAG,gCAAgC,CAAC;IAC9D,iEAAA,EAAmE,CACtD,oBAAA,cAAc,GAAG,iCAAiC,CAAC;AAClE,CAAC,EALgB,mBAAmB,IAAA,CAAnB,mBAAmB,GAAA,CAAA,CAAA,GAKnC","ignoreList":[0]}},
    {"offset": {"line": 15306, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15312, "column": 0}, "map": {"version":3,"file":"customerordersubscription.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customerordersubscription.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  CustomerCancellationReason,\n  CustomerCancellationReason$inboundSchema,\n  CustomerCancellationReason$outboundSchema,\n} from \"./customercancellationreason.js\";\nimport {\n  SubscriptionRecurringInterval,\n  SubscriptionRecurringInterval$inboundSchema,\n  SubscriptionRecurringInterval$outboundSchema,\n} from \"./subscriptionrecurringinterval.js\";\nimport {\n  SubscriptionStatus,\n  SubscriptionStatus$inboundSchema,\n  SubscriptionStatus$outboundSchema,\n} from \"./subscriptionstatus.js\";\n\nexport type CustomerOrderSubscription = {\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  /**\n   * The ID of the object.\n   */\n  id: string;\n  /**\n   * The amount of the subscription.\n   */\n  amount: number;\n  /**\n   * The currency of the subscription.\n   */\n  currency: string;\n  recurringInterval: SubscriptionRecurringInterval;\n  status: SubscriptionStatus;\n  /**\n   * The start timestamp of the current billing period.\n   */\n  currentPeriodStart: Date;\n  /**\n   * The end timestamp of the current billing period.\n   */\n  currentPeriodEnd: Date | null;\n  /**\n   * Whether the subscription will be canceled at the end of the current period.\n   */\n  cancelAtPeriodEnd: boolean;\n  /**\n   * The timestamp when the subscription was canceled. The subscription might still be active if `cancel_at_period_end` is `true`.\n   */\n  canceledAt: Date | null;\n  /**\n   * The timestamp when the subscription started.\n   */\n  startedAt: Date | null;\n  /**\n   * The timestamp when the subscription will end.\n   */\n  endsAt: Date | null;\n  /**\n   * The timestamp when the subscription ended.\n   */\n  endedAt: Date | null;\n  /**\n   * The ID of the subscribed customer.\n   */\n  customerId: string;\n  /**\n   * The ID of the subscribed product.\n   */\n  productId: string;\n  /**\n   * The ID of the applied discount, if any.\n   */\n  discountId: string | null;\n  checkoutId: string | null;\n  customerCancellationReason: CustomerCancellationReason | null;\n  customerCancellationComment: string | null;\n};\n\n/** @internal */\nexport const CustomerOrderSubscription$inboundSchema: z.ZodType<\n  CustomerOrderSubscription,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  id: z.string(),\n  amount: z.number().int(),\n  currency: z.string(),\n  recurring_interval: SubscriptionRecurringInterval$inboundSchema,\n  status: SubscriptionStatus$inboundSchema,\n  current_period_start: z.string().datetime({ offset: true }).transform(v =>\n    new Date(v)\n  ),\n  current_period_end: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  cancel_at_period_end: z.boolean(),\n  canceled_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  started_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  ends_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  ended_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  customer_id: z.string(),\n  product_id: z.string(),\n  discount_id: z.nullable(z.string()),\n  checkout_id: z.nullable(z.string()),\n  customer_cancellation_reason: z.nullable(\n    CustomerCancellationReason$inboundSchema,\n  ),\n  customer_cancellation_comment: z.nullable(z.string()),\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"recurring_interval\": \"recurringInterval\",\n    \"current_period_start\": \"currentPeriodStart\",\n    \"current_period_end\": \"currentPeriodEnd\",\n    \"cancel_at_period_end\": \"cancelAtPeriodEnd\",\n    \"canceled_at\": \"canceledAt\",\n    \"started_at\": \"startedAt\",\n    \"ends_at\": \"endsAt\",\n    \"ended_at\": \"endedAt\",\n    \"customer_id\": \"customerId\",\n    \"product_id\": \"productId\",\n    \"discount_id\": \"discountId\",\n    \"checkout_id\": \"checkoutId\",\n    \"customer_cancellation_reason\": \"customerCancellationReason\",\n    \"customer_cancellation_comment\": \"customerCancellationComment\",\n  });\n});\n\n/** @internal */\nexport type CustomerOrderSubscription$Outbound = {\n  created_at: string;\n  modified_at: string | null;\n  id: string;\n  amount: number;\n  currency: string;\n  recurring_interval: string;\n  status: string;\n  current_period_start: string;\n  current_period_end: string | null;\n  cancel_at_period_end: boolean;\n  canceled_at: string | null;\n  started_at: string | null;\n  ends_at: string | null;\n  ended_at: string | null;\n  customer_id: string;\n  product_id: string;\n  discount_id: string | null;\n  checkout_id: string | null;\n  customer_cancellation_reason: string | null;\n  customer_cancellation_comment: string | null;\n};\n\n/** @internal */\nexport const CustomerOrderSubscription$outboundSchema: z.ZodType<\n  CustomerOrderSubscription$Outbound,\n  z.ZodTypeDef,\n  CustomerOrderSubscription\n> = z.object({\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  id: z.string(),\n  amount: z.number().int(),\n  currency: z.string(),\n  recurringInterval: SubscriptionRecurringInterval$outboundSchema,\n  status: SubscriptionStatus$outboundSchema,\n  currentPeriodStart: z.date().transform(v => v.toISOString()),\n  currentPeriodEnd: z.nullable(z.date().transform(v => v.toISOString())),\n  cancelAtPeriodEnd: z.boolean(),\n  canceledAt: z.nullable(z.date().transform(v => v.toISOString())),\n  startedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  endsAt: z.nullable(z.date().transform(v => v.toISOString())),\n  endedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  customerId: z.string(),\n  productId: z.string(),\n  discountId: z.nullable(z.string()),\n  checkoutId: z.nullable(z.string()),\n  customerCancellationReason: z.nullable(\n    CustomerCancellationReason$outboundSchema,\n  ),\n  customerCancellationComment: z.nullable(z.string()),\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    recurringInterval: \"recurring_interval\",\n    currentPeriodStart: \"current_period_start\",\n    currentPeriodEnd: \"current_period_end\",\n    cancelAtPeriodEnd: \"cancel_at_period_end\",\n    canceledAt: \"canceled_at\",\n    startedAt: \"started_at\",\n    endsAt: \"ends_at\",\n    endedAt: \"ended_at\",\n    customerId: \"customer_id\",\n    productId: \"product_id\",\n    discountId: \"discount_id\",\n    checkoutId: \"checkout_id\",\n    customerCancellationReason: \"customer_cancellation_reason\",\n    customerCancellationComment: \"customer_cancellation_comment\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomerOrderSubscription$ {\n  /** @deprecated use `CustomerOrderSubscription$inboundSchema` instead. */\n  export const inboundSchema = CustomerOrderSubscription$inboundSchema;\n  /** @deprecated use `CustomerOrderSubscription$outboundSchema` instead. */\n  export const outboundSchema = CustomerOrderSubscription$outboundSchema;\n  /** @deprecated use `CustomerOrderSubscription$Outbound` instead. */\n  export type Outbound = CustomerOrderSubscription$Outbound;\n}\n\nexport function customerOrderSubscriptionToJSON(\n  customerOrderSubscription: CustomerOrderSubscription,\n): string {\n  return JSON.stringify(\n    CustomerOrderSubscription$outboundSchema.parse(customerOrderSubscription),\n  );\n}\n\nexport function customerOrderSubscriptionFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomerOrderSubscription, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomerOrderSubscription$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomerOrderSubscription' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 15443, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15449, "column": 0}, "map": {"version":3,"file":"orderbillingreason.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/orderbillingreason.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { ClosedEnum } from \"../../types/enums.js\";\n\nexport const OrderBillingReason = {\n  Purchase: \"purchase\",\n  SubscriptionCreate: \"subscription_create\",\n  SubscriptionCycle: \"subscription_cycle\",\n  SubscriptionUpdate: \"subscription_update\",\n} as const;\nexport type OrderBillingReason = ClosedEnum<typeof OrderBillingReason>;\n\n/** @internal */\nexport const OrderBillingReason$inboundSchema: z.ZodNativeEnum<\n  typeof OrderBillingReason\n> = z.nativeEnum(OrderBillingReason);\n\n/** @internal */\nexport const OrderBillingReason$outboundSchema: z.ZodNativeEnum<\n  typeof OrderBillingReason\n> = OrderBillingReason$inboundSchema;\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace OrderBillingReason$ {\n  /** @deprecated use `OrderBillingReason$inboundSchema` instead. */\n  export const inboundSchema = OrderBillingReason$inboundSchema;\n  /** @deprecated use `OrderBillingReason$outboundSchema` instead. */\n  export const outboundSchema = OrderBillingReason$outboundSchema;\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;AAGlB,MAAM,kBAAkB,GAAG;IAChC,QAAQ,EAAE,UAAU;IACpB,kBAAkB,EAAE,qBAAqB;IACzC,iBAAiB,EAAE,oBAAoB;IACvC,kBAAkB,EAAE,qBAAqB;CACjC,CAAC;AAIJ,MAAM,gCAAgC,GAEzC,CAAC,6IAAC,UAAU,CAAC,kBAAkB,CAAC,CAAC;AAG9B,MAAM,iCAAiC,GAE1C,gCAAgC,CAAC;AAM/B,IAAW,mBAAmB,CAKnC;AALD,CAAA,SAAiB,mBAAmB;IAClC,gEAAA,EAAkE,CACrD,oBAAA,aAAa,GAAG,gCAAgC,CAAC;IAC9D,iEAAA,EAAmE,CACtD,oBAAA,cAAc,GAAG,iCAAiC,CAAC;AAClE,CAAC,EALgB,mBAAmB,IAAA,CAAnB,mBAAmB,GAAA,CAAA,CAAA,GAKnC","ignoreList":[0]}},
    {"offset": {"line": 15473, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15479, "column": 0}, "map": {"version":3,"file":"orderitemschema.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/orderitemschema.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\n/**\n * An order line item.\n */\nexport type OrderItemSchema = {\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  /**\n   * The ID of the object.\n   */\n  id: string;\n  /**\n   * Description of the line item charge.\n   */\n  label: string;\n  /**\n   * Amount in cents, before discounts and taxes.\n   */\n  amount: number;\n  /**\n   * Sales tax amount in cents.\n   */\n  taxAmount: number;\n  /**\n   * Whether this charge is due to a proration.\n   */\n  proration: boolean;\n  /**\n   * Associated price ID, if any.\n   */\n  productPriceId: string | null;\n};\n\n/** @internal */\nexport const OrderItemSchema$inboundSchema: z.ZodType<\n  OrderItemSchema,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  id: z.string(),\n  label: z.string(),\n  amount: z.number().int(),\n  tax_amount: z.number().int(),\n  proration: z.boolean(),\n  product_price_id: z.nullable(z.string()),\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"tax_amount\": \"taxAmount\",\n    \"product_price_id\": \"productPriceId\",\n  });\n});\n\n/** @internal */\nexport type OrderItemSchema$Outbound = {\n  created_at: string;\n  modified_at: string | null;\n  id: string;\n  label: string;\n  amount: number;\n  tax_amount: number;\n  proration: boolean;\n  product_price_id: string | null;\n};\n\n/** @internal */\nexport const OrderItemSchema$outboundSchema: z.ZodType<\n  OrderItemSchema$Outbound,\n  z.ZodTypeDef,\n  OrderItemSchema\n> = z.object({\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  id: z.string(),\n  label: z.string(),\n  amount: z.number().int(),\n  taxAmount: z.number().int(),\n  proration: z.boolean(),\n  productPriceId: z.nullable(z.string()),\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    taxAmount: \"tax_amount\",\n    productPriceId: \"product_price_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace OrderItemSchema$ {\n  /** @deprecated use `OrderItemSchema$inboundSchema` instead. */\n  export const inboundSchema = OrderItemSchema$inboundSchema;\n  /** @deprecated use `OrderItemSchema$outboundSchema` instead. */\n  export const outboundSchema = OrderItemSchema$outboundSchema;\n  /** @deprecated use `OrderItemSchema$Outbound` instead. */\n  export type Outbound = OrderItemSchema$Outbound;\n}\n\nexport function orderItemSchemaToJSON(\n  orderItemSchema: OrderItemSchema,\n): string {\n  return JSON.stringify(OrderItemSchema$outboundSchema.parse(orderItemSchema));\n}\n\nexport function orderItemSchemaFromJSON(\n  jsonString: string,\n): SafeParseResult<OrderItemSchema, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => OrderItemSchema$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'OrderItemSchema' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 15544, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15550, "column": 0}, "map": {"version":3,"file":"orderstatus.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/orderstatus.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { ClosedEnum } from \"../../types/enums.js\";\n\nexport const OrderStatus = {\n  Pending: \"pending\",\n  Paid: \"paid\",\n  Refunded: \"refunded\",\n  PartiallyRefunded: \"partially_refunded\",\n} as const;\nexport type OrderStatus = ClosedEnum<typeof OrderStatus>;\n\n/** @internal */\nexport const OrderStatus$inboundSchema: z.ZodNativeEnum<typeof OrderStatus> = z\n  .nativeEnum(OrderStatus);\n\n/** @internal */\nexport const OrderStatus$outboundSchema: z.ZodNativeEnum<typeof OrderStatus> =\n  OrderStatus$inboundSchema;\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace OrderStatus$ {\n  /** @deprecated use `OrderStatus$inboundSchema` instead. */\n  export const inboundSchema = OrderStatus$inboundSchema;\n  /** @deprecated use `OrderStatus$outboundSchema` instead. */\n  export const outboundSchema = OrderStatus$outboundSchema;\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;AAGlB,MAAM,WAAW,GAAG;IACzB,OAAO,EAAE,SAAS;IAClB,IAAI,EAAE,MAAM;IACZ,QAAQ,EAAE,UAAU;IACpB,iBAAiB,EAAE,oBAAoB;CAC/B,CAAC;AAIJ,MAAM,yBAAyB,GAAwC,CAAC,6IAC5E,UAAU,CAAC,WAAW,CAAC,CAAC;AAGpB,MAAM,0BAA0B,GACrC,yBAAyB,CAAC;AAMtB,IAAW,YAAY,CAK5B;AALD,CAAA,SAAiB,YAAY;IAC3B,yDAAA,EAA2D,CAC9C,aAAA,aAAa,GAAG,yBAAyB,CAAC;IACvD,0DAAA,EAA4D,CAC/C,aAAA,cAAc,GAAG,0BAA0B,CAAC;AAC3D,CAAC,EALgB,YAAY,IAAA,CAAZ,YAAY,GAAA,CAAA,CAAA,GAK5B","ignoreList":[0]}},
    {"offset": {"line": 15574, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15580, "column": 0}, "map": {"version":3,"file":"customerorder.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customerorder.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  Address,\n  Address$inboundSchema,\n  Address$Outbound,\n  Address$outboundSchema,\n} from \"./address.js\";\nimport {\n  CustomerOrderProduct,\n  CustomerOrderProduct$inboundSchema,\n  CustomerOrderProduct$Outbound,\n  CustomerOrderProduct$outboundSchema,\n} from \"./customerorderproduct.js\";\nimport {\n  CustomerOrderSubscription,\n  CustomerOrderSubscription$inboundSchema,\n  CustomerOrderSubscription$Outbound,\n  CustomerOrderSubscription$outboundSchema,\n} from \"./customerordersubscription.js\";\nimport {\n  OrderBillingReason,\n  OrderBillingReason$inboundSchema,\n  OrderBillingReason$outboundSchema,\n} from \"./orderbillingreason.js\";\nimport {\n  OrderItemSchema,\n  OrderItemSchema$inboundSchema,\n  OrderItemSchema$Outbound,\n  OrderItemSchema$outboundSchema,\n} from \"./orderitemschema.js\";\nimport {\n  OrderStatus,\n  OrderStatus$inboundSchema,\n  OrderStatus$outboundSchema,\n} from \"./orderstatus.js\";\n\nexport type CustomerOrder = {\n  /**\n   * The ID of the object.\n   */\n  id: string;\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  status: OrderStatus;\n  /**\n   * Whether the order has been paid for.\n   */\n  paid: boolean;\n  /**\n   * Amount in cents, before discounts and taxes.\n   */\n  subtotalAmount: number;\n  /**\n   * Discount amount in cents.\n   */\n  discountAmount: number;\n  /**\n   * Amount in cents, after discounts but before taxes.\n   */\n  netAmount: number;\n  /**\n   * Amount in cents, after discounts but before taxes.\n   *\n   * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.\n   */\n  amount: number;\n  /**\n   * Sales tax amount in cents.\n   */\n  taxAmount: number;\n  /**\n   * Amount in cents, after discounts and taxes.\n   */\n  totalAmount: number;\n  /**\n   * Amount refunded in cents.\n   */\n  refundedAmount: number;\n  /**\n   * Sales tax refunded in cents.\n   */\n  refundedTaxAmount: number;\n  currency: string;\n  billingReason: OrderBillingReason;\n  /**\n   * The name of the customer that should appear on the invoice.\n   */\n  billingName: string | null;\n  billingAddress: Address | null;\n  /**\n   * Whether an invoice has been generated for this order.\n   */\n  isInvoiceGenerated: boolean;\n  customerId: string;\n  productId: string;\n  discountId: string | null;\n  subscriptionId: string | null;\n  checkoutId: string | null;\n  /**\n   * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.\n   */\n  userId: string;\n  product: CustomerOrderProduct;\n  subscription: CustomerOrderSubscription | null;\n  /**\n   * Line items composing the order.\n   */\n  items: Array<OrderItemSchema>;\n};\n\n/** @internal */\nexport const CustomerOrder$inboundSchema: z.ZodType<\n  CustomerOrder,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  id: z.string(),\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  status: OrderStatus$inboundSchema,\n  paid: z.boolean(),\n  subtotal_amount: z.number().int(),\n  discount_amount: z.number().int(),\n  net_amount: z.number().int(),\n  amount: z.number().int(),\n  tax_amount: z.number().int(),\n  total_amount: z.number().int(),\n  refunded_amount: z.number().int(),\n  refunded_tax_amount: z.number().int(),\n  currency: z.string(),\n  billing_reason: OrderBillingReason$inboundSchema,\n  billing_name: z.nullable(z.string()),\n  billing_address: z.nullable(Address$inboundSchema),\n  is_invoice_generated: z.boolean(),\n  customer_id: z.string(),\n  product_id: z.string(),\n  discount_id: z.nullable(z.string()),\n  subscription_id: z.nullable(z.string()),\n  checkout_id: z.nullable(z.string()),\n  user_id: z.string(),\n  product: CustomerOrderProduct$inboundSchema,\n  subscription: z.nullable(CustomerOrderSubscription$inboundSchema),\n  items: z.array(OrderItemSchema$inboundSchema),\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"subtotal_amount\": \"subtotalAmount\",\n    \"discount_amount\": \"discountAmount\",\n    \"net_amount\": \"netAmount\",\n    \"tax_amount\": \"taxAmount\",\n    \"total_amount\": \"totalAmount\",\n    \"refunded_amount\": \"refundedAmount\",\n    \"refunded_tax_amount\": \"refundedTaxAmount\",\n    \"billing_reason\": \"billingReason\",\n    \"billing_name\": \"billingName\",\n    \"billing_address\": \"billingAddress\",\n    \"is_invoice_generated\": \"isInvoiceGenerated\",\n    \"customer_id\": \"customerId\",\n    \"product_id\": \"productId\",\n    \"discount_id\": \"discountId\",\n    \"subscription_id\": \"subscriptionId\",\n    \"checkout_id\": \"checkoutId\",\n    \"user_id\": \"userId\",\n  });\n});\n\n/** @internal */\nexport type CustomerOrder$Outbound = {\n  id: string;\n  created_at: string;\n  modified_at: string | null;\n  status: string;\n  paid: boolean;\n  subtotal_amount: number;\n  discount_amount: number;\n  net_amount: number;\n  amount: number;\n  tax_amount: number;\n  total_amount: number;\n  refunded_amount: number;\n  refunded_tax_amount: number;\n  currency: string;\n  billing_reason: string;\n  billing_name: string | null;\n  billing_address: Address$Outbound | null;\n  is_invoice_generated: boolean;\n  customer_id: string;\n  product_id: string;\n  discount_id: string | null;\n  subscription_id: string | null;\n  checkout_id: string | null;\n  user_id: string;\n  product: CustomerOrderProduct$Outbound;\n  subscription: CustomerOrderSubscription$Outbound | null;\n  items: Array<OrderItemSchema$Outbound>;\n};\n\n/** @internal */\nexport const CustomerOrder$outboundSchema: z.ZodType<\n  CustomerOrder$Outbound,\n  z.ZodTypeDef,\n  CustomerOrder\n> = z.object({\n  id: z.string(),\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  status: OrderStatus$outboundSchema,\n  paid: z.boolean(),\n  subtotalAmount: z.number().int(),\n  discountAmount: z.number().int(),\n  netAmount: z.number().int(),\n  amount: z.number().int(),\n  taxAmount: z.number().int(),\n  totalAmount: z.number().int(),\n  refundedAmount: z.number().int(),\n  refundedTaxAmount: z.number().int(),\n  currency: z.string(),\n  billingReason: OrderBillingReason$outboundSchema,\n  billingName: z.nullable(z.string()),\n  billingAddress: z.nullable(Address$outboundSchema),\n  isInvoiceGenerated: z.boolean(),\n  customerId: z.string(),\n  productId: z.string(),\n  discountId: z.nullable(z.string()),\n  subscriptionId: z.nullable(z.string()),\n  checkoutId: z.nullable(z.string()),\n  userId: z.string(),\n  product: CustomerOrderProduct$outboundSchema,\n  subscription: z.nullable(CustomerOrderSubscription$outboundSchema),\n  items: z.array(OrderItemSchema$outboundSchema),\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    subtotalAmount: \"subtotal_amount\",\n    discountAmount: \"discount_amount\",\n    netAmount: \"net_amount\",\n    taxAmount: \"tax_amount\",\n    totalAmount: \"total_amount\",\n    refundedAmount: \"refunded_amount\",\n    refundedTaxAmount: \"refunded_tax_amount\",\n    billingReason: \"billing_reason\",\n    billingName: \"billing_name\",\n    billingAddress: \"billing_address\",\n    isInvoiceGenerated: \"is_invoice_generated\",\n    customerId: \"customer_id\",\n    productId: \"product_id\",\n    discountId: \"discount_id\",\n    subscriptionId: \"subscription_id\",\n    checkoutId: \"checkout_id\",\n    userId: \"user_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomerOrder$ {\n  /** @deprecated use `CustomerOrder$inboundSchema` instead. */\n  export const inboundSchema = CustomerOrder$inboundSchema;\n  /** @deprecated use `CustomerOrder$outboundSchema` instead. */\n  export const outboundSchema = CustomerOrder$outboundSchema;\n  /** @deprecated use `CustomerOrder$Outbound` instead. */\n  export type Outbound = CustomerOrder$Outbound;\n}\n\nexport function customerOrderToJSON(customerOrder: CustomerOrder): string {\n  return JSON.stringify(CustomerOrder$outboundSchema.parse(customerOrder));\n}\n\nexport function customerOrderFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomerOrder, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomerOrder$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomerOrder' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 15725, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15731, "column": 0}, "map": {"version":3,"file":"customerorderinvoice.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customerorderinvoice.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\n/**\n * Order's invoice data.\n */\nexport type CustomerOrderInvoice = {\n  /**\n   * The URL to the invoice.\n   */\n  url: string;\n};\n\n/** @internal */\nexport const CustomerOrderInvoice$inboundSchema: z.ZodType<\n  CustomerOrderInvoice,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  url: z.string(),\n});\n\n/** @internal */\nexport type CustomerOrderInvoice$Outbound = {\n  url: string;\n};\n\n/** @internal */\nexport const CustomerOrderInvoice$outboundSchema: z.ZodType<\n  CustomerOrderInvoice$Outbound,\n  z.ZodTypeDef,\n  CustomerOrderInvoice\n> = z.object({\n  url: z.string(),\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomerOrderInvoice$ {\n  /** @deprecated use `CustomerOrderInvoice$inboundSchema` instead. */\n  export const inboundSchema = CustomerOrderInvoice$inboundSchema;\n  /** @deprecated use `CustomerOrderInvoice$outboundSchema` instead. */\n  export const outboundSchema = CustomerOrderInvoice$outboundSchema;\n  /** @deprecated use `CustomerOrderInvoice$Outbound` instead. */\n  export type Outbound = CustomerOrderInvoice$Outbound;\n}\n\nexport function customerOrderInvoiceToJSON(\n  customerOrderInvoice: CustomerOrderInvoice,\n): string {\n  return JSON.stringify(\n    CustomerOrderInvoice$outboundSchema.parse(customerOrderInvoice),\n  );\n}\n\nexport function customerOrderInvoiceFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomerOrderInvoice, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomerOrderInvoice$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomerOrderInvoice' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;AAGH,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AADjD,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;;AAgBlB,MAAM,kCAAkC,GAI3C,CAAC,6IAAC,MAAM,CAAC;IACX,GAAG,EAAE,CAAC,6IAAC,MAAM,EAAE;CAChB,CAAC,CAAC;AAQI,MAAM,mCAAmC,GAI5C,CAAC,6IAAC,MAAM,CAAC;IACX,GAAG,EAAE,CAAC,6IAAC,MAAM,EAAE;CAChB,CAAC,CAAC;AAMG,IAAW,qBAAqB,CAOrC;AAPD,CAAA,SAAiB,qBAAqB;IACpC,kEAAA,EAAoE,CACvD,sBAAA,aAAa,GAAG,kCAAkC,CAAC;IAChE,mEAAA,EAAqE,CACxD,sBAAA,cAAc,GAAG,mCAAmC,CAAC;AAGpE,CAAC,EAPgB,qBAAqB,IAAA,CAArB,qBAAqB,GAAA,CAAA,CAAA,GAOrC;AAEK,SAAU,0BAA0B,CACxC,oBAA0C;IAE1C,OAAO,IAAI,CAAC,SAAS,CACnB,mCAAmC,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAChE,CAAC;AACJ,CAAC;AAEK,SAAU,4BAA4B,CAC1C,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,iCAAmC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC9D,CAAA,gDAAA,CAAkD,CACnD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 15762, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15768, "column": 0}, "map": {"version":3,"file":"customerordersortproperty.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customerordersortproperty.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { ClosedEnum } from \"../../types/enums.js\";\n\nexport const CustomerOrderSortProperty = {\n  CreatedAt: \"created_at\",\n  MinusCreatedAt: \"-created_at\",\n  Amount: \"amount\",\n  MinusAmount: \"-amount\",\n  NetAmount: \"net_amount\",\n  MinusNetAmount: \"-net_amount\",\n  Product: \"product\",\n  MinusProduct: \"-product\",\n  Subscription: \"subscription\",\n  MinusSubscription: \"-subscription\",\n} as const;\nexport type CustomerOrderSortProperty = ClosedEnum<\n  typeof CustomerOrderSortProperty\n>;\n\n/** @internal */\nexport const CustomerOrderSortProperty$inboundSchema: z.ZodNativeEnum<\n  typeof CustomerOrderSortProperty\n> = z.nativeEnum(CustomerOrderSortProperty);\n\n/** @internal */\nexport const CustomerOrderSortProperty$outboundSchema: z.ZodNativeEnum<\n  typeof CustomerOrderSortProperty\n> = CustomerOrderSortProperty$inboundSchema;\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomerOrderSortProperty$ {\n  /** @deprecated use `CustomerOrderSortProperty$inboundSchema` instead. */\n  export const inboundSchema = CustomerOrderSortProperty$inboundSchema;\n  /** @deprecated use `CustomerOrderSortProperty$outboundSchema` instead. */\n  export const outboundSchema = CustomerOrderSortProperty$outboundSchema;\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;AAGlB,MAAM,yBAAyB,GAAG;IACvC,SAAS,EAAE,YAAY;IACvB,cAAc,EAAE,aAAa;IAC7B,MAAM,EAAE,QAAQ;IAChB,WAAW,EAAE,SAAS;IACtB,SAAS,EAAE,YAAY;IACvB,cAAc,EAAE,aAAa;IAC7B,OAAO,EAAE,SAAS;IAClB,YAAY,EAAE,UAAU;IACxB,YAAY,EAAE,cAAc;IAC5B,iBAAiB,EAAE,eAAe;CAC1B,CAAC;AAMJ,MAAM,uCAAuC,GAEhD,CAAC,6IAAC,UAAU,CAAC,yBAAyB,CAAC,CAAC;AAGrC,MAAM,wCAAwC,GAEjD,uCAAuC,CAAC;AAMtC,IAAW,0BAA0B,CAK1C;AALD,CAAA,SAAiB,0BAA0B;IACzC,uEAAA,EAAyE,CAC5D,2BAAA,aAAa,GAAG,uCAAuC,CAAC;IACrE,wEAAA,EAA0E,CAC7D,2BAAA,cAAc,GAAG,wCAAwC,CAAC;AACzE,CAAC,EALgB,0BAA0B,IAAA,CAA1B,0BAA0B,GAAA,CAAA,CAAA,GAK1C","ignoreList":[0]}},
    {"offset": {"line": 15798, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15804, "column": 0}, "map": {"version":3,"file":"listresourcecustomerorder.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/listresourcecustomerorder.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  CustomerOrder,\n  CustomerOrder$inboundSchema,\n  CustomerOrder$Outbound,\n  CustomerOrder$outboundSchema,\n} from \"./customerorder.js\";\nimport {\n  Pagination,\n  Pagination$inboundSchema,\n  Pagination$Outbound,\n  Pagination$outboundSchema,\n} from \"./pagination.js\";\n\nexport type ListResourceCustomerOrder = {\n  items: Array<CustomerOrder>;\n  pagination: Pagination;\n};\n\n/** @internal */\nexport const ListResourceCustomerOrder$inboundSchema: z.ZodType<\n  ListResourceCustomerOrder,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  items: z.array(CustomerOrder$inboundSchema),\n  pagination: Pagination$inboundSchema,\n});\n\n/** @internal */\nexport type ListResourceCustomerOrder$Outbound = {\n  items: Array<CustomerOrder$Outbound>;\n  pagination: Pagination$Outbound;\n};\n\n/** @internal */\nexport const ListResourceCustomerOrder$outboundSchema: z.ZodType<\n  ListResourceCustomerOrder$Outbound,\n  z.ZodTypeDef,\n  ListResourceCustomerOrder\n> = z.object({\n  items: z.array(CustomerOrder$outboundSchema),\n  pagination: Pagination$outboundSchema,\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace ListResourceCustomerOrder$ {\n  /** @deprecated use `ListResourceCustomerOrder$inboundSchema` instead. */\n  export const inboundSchema = ListResourceCustomerOrder$inboundSchema;\n  /** @deprecated use `ListResourceCustomerOrder$outboundSchema` instead. */\n  export const outboundSchema = ListResourceCustomerOrder$outboundSchema;\n  /** @deprecated use `ListResourceCustomerOrder$Outbound` instead. */\n  export type Outbound = ListResourceCustomerOrder$Outbound;\n}\n\nexport function listResourceCustomerOrderToJSON(\n  listResourceCustomerOrder: ListResourceCustomerOrder,\n): string {\n  return JSON.stringify(\n    ListResourceCustomerOrder$outboundSchema.parse(listResourceCustomerOrder),\n  );\n}\n\nexport function listResourceCustomerOrderFromJSON(\n  jsonString: string,\n): SafeParseResult<ListResourceCustomerOrder, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => ListResourceCustomerOrder$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'ListResourceCustomerOrder' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;AAGH,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,2BAA2B,EAE3B,4BAA4B,GAC7B,MAAM,oBAAoB,CAAC;AAC5B,OAAO,EAEL,wBAAwB,EAExB,yBAAyB,GAC1B,MAAM,iBAAiB,CAAC;AAfzB,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;;;;AAuBlB,MAAM,uCAAuC,GAIhD,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,KAAK,gMAAC,8BAA2B,CAAC;IAC3C,UAAU,8LAAE,2BAAwB;CACrC,CAAC,CAAC;AASI,MAAM,wCAAwC,GAIjD,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,KAAK,gMAAC,+BAA4B,CAAC;IAC5C,UAAU,8LAAE,4BAAyB;CACtC,CAAC,CAAC;AAMG,IAAW,0BAA0B,CAO1C;AAPD,CAAA,SAAiB,0BAA0B;IACzC,uEAAA,EAAyE,CAC5D,2BAAA,aAAa,GAAG,uCAAuC,CAAC;IACrE,wEAAA,EAA0E,CAC7D,2BAAA,cAAc,GAAG,wCAAwC,CAAC;AAGzE,CAAC,EAPgB,0BAA0B,IAAA,CAA1B,0BAA0B,GAAA,CAAA,CAAA,GAO1C;AAEK,SAAU,+BAA+B,CAC7C,yBAAoD;IAEpD,OAAO,IAAI,CAAC,SAAS,CACnB,wCAAwC,CAAC,KAAK,CAAC,yBAAyB,CAAC,CAC1E,CAAC;AACJ,CAAC;AAEK,SAAU,iCAAiC,CAC/C,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,sCAAwC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACnE,CAAA,qDAAA,CAAuD,CACxD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 15841, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15847, "column": 0}, "map": {"version":3,"file":"productbillingtype.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/productbillingtype.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { ClosedEnum } from \"../../types/enums.js\";\n\nexport const ProductBillingType = {\n  OneTime: \"one_time\",\n  Recurring: \"recurring\",\n} as const;\nexport type ProductBillingType = ClosedEnum<typeof ProductBillingType>;\n\n/** @internal */\nexport const ProductBillingType$inboundSchema: z.ZodNativeEnum<\n  typeof ProductBillingType\n> = z.nativeEnum(ProductBillingType);\n\n/** @internal */\nexport const ProductBillingType$outboundSchema: z.ZodNativeEnum<\n  typeof ProductBillingType\n> = ProductBillingType$inboundSchema;\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace ProductBillingType$ {\n  /** @deprecated use `ProductBillingType$inboundSchema` instead. */\n  export const inboundSchema = ProductBillingType$inboundSchema;\n  /** @deprecated use `ProductBillingType$outboundSchema` instead. */\n  export const outboundSchema = ProductBillingType$outboundSchema;\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;AAGlB,MAAM,kBAAkB,GAAG;IAChC,OAAO,EAAE,UAAU;IACnB,SAAS,EAAE,WAAW;CACd,CAAC;AAIJ,MAAM,gCAAgC,GAEzC,CAAC,6IAAC,UAAU,CAAC,kBAAkB,CAAC,CAAC;AAG9B,MAAM,iCAAiC,GAE1C,gCAAgC,CAAC;AAM/B,IAAW,mBAAmB,CAKnC;AALD,CAAA,SAAiB,mBAAmB;IAClC,gEAAA,EAAkE,CACrD,oBAAA,aAAa,GAAG,gCAAgC,CAAC;IAC9D,iEAAA,EAAmE,CACtD,oBAAA,cAAc,GAAG,iCAAiC,CAAC;AAClE,CAAC,EALgB,mBAAmB,IAAA,CAAnB,mBAAmB,GAAA,CAAA,CAAA,GAKnC","ignoreList":[0]}},
    {"offset": {"line": 15869, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15875, "column": 0}, "map": {"version":3,"file":"customerorderupdate.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customerorderupdate.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  Address,\n  Address$inboundSchema,\n  Address$Outbound,\n  Address$outboundSchema,\n} from \"./address.js\";\n\n/**\n * Schema to update an order.\n */\nexport type CustomerOrderUpdate = {\n  /**\n   * The name of the customer that should appear on the invoice. Can't be updated after the invoice is generated.\n   */\n  billingName: string | null;\n  /**\n   * The address of the customer that should appear on the invoice. Can't be updated after the invoice is generated.\n   */\n  billingAddress: Address | null;\n};\n\n/** @internal */\nexport const CustomerOrderUpdate$inboundSchema: z.ZodType<\n  CustomerOrderUpdate,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  billing_name: z.nullable(z.string()),\n  billing_address: z.nullable(Address$inboundSchema),\n}).transform((v) => {\n  return remap$(v, {\n    \"billing_name\": \"billingName\",\n    \"billing_address\": \"billingAddress\",\n  });\n});\n\n/** @internal */\nexport type CustomerOrderUpdate$Outbound = {\n  billing_name: string | null;\n  billing_address: Address$Outbound | null;\n};\n\n/** @internal */\nexport const CustomerOrderUpdate$outboundSchema: z.ZodType<\n  CustomerOrderUpdate$Outbound,\n  z.ZodTypeDef,\n  CustomerOrderUpdate\n> = z.object({\n  billingName: z.nullable(z.string()),\n  billingAddress: z.nullable(Address$outboundSchema),\n}).transform((v) => {\n  return remap$(v, {\n    billingName: \"billing_name\",\n    billingAddress: \"billing_address\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomerOrderUpdate$ {\n  /** @deprecated use `CustomerOrderUpdate$inboundSchema` instead. */\n  export const inboundSchema = CustomerOrderUpdate$inboundSchema;\n  /** @deprecated use `CustomerOrderUpdate$outboundSchema` instead. */\n  export const outboundSchema = CustomerOrderUpdate$outboundSchema;\n  /** @deprecated use `CustomerOrderUpdate$Outbound` instead. */\n  export type Outbound = CustomerOrderUpdate$Outbound;\n}\n\nexport function customerOrderUpdateToJSON(\n  customerOrderUpdate: CustomerOrderUpdate,\n): string {\n  return JSON.stringify(\n    CustomerOrderUpdate$outboundSchema.parse(customerOrderUpdate),\n  );\n}\n\nexport function customerOrderUpdateFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomerOrderUpdate, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomerOrderUpdate$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomerOrderUpdate' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,qBAAqB,EAErB,sBAAsB,GACvB,MAAM,cAAc,CAAC;;;;;;AAiBf,MAAM,iCAAiC,GAI1C,CAAC,6IAAC,MAAM,CAAC;IACX,YAAY,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;IACpC,eAAe,EAAE,CAAC,6IAAC,QAAQ,CAAC,iNAAqB,CAAC;CACnD,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,cAAc,EAAE,aAAa;QAC7B,iBAAiB,EAAE,gBAAgB;KACpC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AASI,MAAM,kCAAkC,GAI3C,CAAC,6IAAC,MAAM,CAAC;IACX,WAAW,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;IACnC,cAAc,EAAE,CAAC,6IAAC,QAAQ,0LAAC,yBAAsB,CAAC;CACnD,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAM,AAAN,EAAO,CAAC,EAAE;QACf,WAAW,EAAE,cAAc;QAC3B,cAAc,EAAE,iBAAiB;KAClC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,oBAAoB,CAOpC;AAPD,CAAA,SAAiB,oBAAoB;IACnC,iEAAA,EAAmE,CACtD,qBAAA,aAAa,GAAG,iCAAiC,CAAC;IAC/D,kEAAA,EAAoE,CACvD,qBAAA,cAAc,GAAG,kCAAkC,CAAC;AAGnE,CAAC,EAPgB,oBAAoB,IAAA,CAApB,oBAAoB,GAAA,CAAA,CAAA,GAOpC;AAEK,SAAU,yBAAyB,CACvC,mBAAwC;IAExC,OAAO,IAAI,CAAC,SAAS,CACnB,kCAAkC,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAC9D,CAAC;AACJ,CAAC;AAEK,SAAU,2BAA2B,CACzC,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,gCAAkC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC7D,CAAA,+CAAA,CAAiD,CAClD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 15922, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15928, "column": 0}, "map": {"version":3,"file":"customerproduct.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customerproduct.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  BenefitPublic,\n  BenefitPublic$inboundSchema,\n  BenefitPublic$Outbound,\n  BenefitPublic$outboundSchema,\n} from \"./benefitpublic.js\";\nimport {\n  LegacyRecurringProductPrice,\n  LegacyRecurringProductPrice$inboundSchema,\n  LegacyRecurringProductPrice$Outbound,\n  LegacyRecurringProductPrice$outboundSchema,\n} from \"./legacyrecurringproductprice.js\";\nimport {\n  ProductMediaFileRead,\n  ProductMediaFileRead$inboundSchema,\n  ProductMediaFileRead$Outbound,\n  ProductMediaFileRead$outboundSchema,\n} from \"./productmediafileread.js\";\nimport {\n  ProductPrice,\n  ProductPrice$inboundSchema,\n  ProductPrice$Outbound,\n  ProductPrice$outboundSchema,\n} from \"./productprice.js\";\nimport {\n  SubscriptionRecurringInterval,\n  SubscriptionRecurringInterval$inboundSchema,\n  SubscriptionRecurringInterval$outboundSchema,\n} from \"./subscriptionrecurringinterval.js\";\n\nexport type CustomerProductPrices = LegacyRecurringProductPrice | ProductPrice;\n\n/**\n * Schema of a product for customer portal.\n */\nexport type CustomerProduct = {\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  /**\n   * The ID of the product.\n   */\n  id: string;\n  /**\n   * The name of the product.\n   */\n  name: string;\n  /**\n   * The description of the product.\n   */\n  description: string | null;\n  /**\n   * The recurring interval of the product. If `None`, the product is a one-time purchase.\n   */\n  recurringInterval: SubscriptionRecurringInterval | null;\n  /**\n   * Whether the product is a subscription.\n   */\n  isRecurring: boolean;\n  /**\n   * Whether the product is archived and no longer available.\n   */\n  isArchived: boolean;\n  /**\n   * The ID of the organization owning the product.\n   */\n  organizationId: string;\n  /**\n   * List of available prices for this product.\n   */\n  prices: Array<LegacyRecurringProductPrice | ProductPrice>;\n  /**\n   * The benefits granted by the product.\n   */\n  benefits: Array<BenefitPublic>;\n  /**\n   * The medias associated to the product.\n   */\n  medias: Array<ProductMediaFileRead>;\n};\n\n/** @internal */\nexport const CustomerProductPrices$inboundSchema: z.ZodType<\n  CustomerProductPrices,\n  z.ZodTypeDef,\n  unknown\n> = z.union([\n  LegacyRecurringProductPrice$inboundSchema,\n  ProductPrice$inboundSchema,\n]);\n\n/** @internal */\nexport type CustomerProductPrices$Outbound =\n  | LegacyRecurringProductPrice$Outbound\n  | ProductPrice$Outbound;\n\n/** @internal */\nexport const CustomerProductPrices$outboundSchema: z.ZodType<\n  CustomerProductPrices$Outbound,\n  z.ZodTypeDef,\n  CustomerProductPrices\n> = z.union([\n  LegacyRecurringProductPrice$outboundSchema,\n  ProductPrice$outboundSchema,\n]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomerProductPrices$ {\n  /** @deprecated use `CustomerProductPrices$inboundSchema` instead. */\n  export const inboundSchema = CustomerProductPrices$inboundSchema;\n  /** @deprecated use `CustomerProductPrices$outboundSchema` instead. */\n  export const outboundSchema = CustomerProductPrices$outboundSchema;\n  /** @deprecated use `CustomerProductPrices$Outbound` instead. */\n  export type Outbound = CustomerProductPrices$Outbound;\n}\n\nexport function customerProductPricesToJSON(\n  customerProductPrices: CustomerProductPrices,\n): string {\n  return JSON.stringify(\n    CustomerProductPrices$outboundSchema.parse(customerProductPrices),\n  );\n}\n\nexport function customerProductPricesFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomerProductPrices, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomerProductPrices$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomerProductPrices' from JSON`,\n  );\n}\n\n/** @internal */\nexport const CustomerProduct$inboundSchema: z.ZodType<\n  CustomerProduct,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  id: z.string(),\n  name: z.string(),\n  description: z.nullable(z.string()),\n  recurring_interval: z.nullable(SubscriptionRecurringInterval$inboundSchema),\n  is_recurring: z.boolean(),\n  is_archived: z.boolean(),\n  organization_id: z.string(),\n  prices: z.array(\n    z.union([\n      LegacyRecurringProductPrice$inboundSchema,\n      ProductPrice$inboundSchema,\n    ]),\n  ),\n  benefits: z.array(BenefitPublic$inboundSchema),\n  medias: z.array(ProductMediaFileRead$inboundSchema),\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"recurring_interval\": \"recurringInterval\",\n    \"is_recurring\": \"isRecurring\",\n    \"is_archived\": \"isArchived\",\n    \"organization_id\": \"organizationId\",\n  });\n});\n\n/** @internal */\nexport type CustomerProduct$Outbound = {\n  created_at: string;\n  modified_at: string | null;\n  id: string;\n  name: string;\n  description: string | null;\n  recurring_interval: string | null;\n  is_recurring: boolean;\n  is_archived: boolean;\n  organization_id: string;\n  prices: Array<LegacyRecurringProductPrice$Outbound | ProductPrice$Outbound>;\n  benefits: Array<BenefitPublic$Outbound>;\n  medias: Array<ProductMediaFileRead$Outbound>;\n};\n\n/** @internal */\nexport const CustomerProduct$outboundSchema: z.ZodType<\n  CustomerProduct$Outbound,\n  z.ZodTypeDef,\n  CustomerProduct\n> = z.object({\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  id: z.string(),\n  name: z.string(),\n  description: z.nullable(z.string()),\n  recurringInterval: z.nullable(SubscriptionRecurringInterval$outboundSchema),\n  isRecurring: z.boolean(),\n  isArchived: z.boolean(),\n  organizationId: z.string(),\n  prices: z.array(\n    z.union([\n      LegacyRecurringProductPrice$outboundSchema,\n      ProductPrice$outboundSchema,\n    ]),\n  ),\n  benefits: z.array(BenefitPublic$outboundSchema),\n  medias: z.array(ProductMediaFileRead$outboundSchema),\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    recurringInterval: \"recurring_interval\",\n    isRecurring: \"is_recurring\",\n    isArchived: \"is_archived\",\n    organizationId: \"organization_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomerProduct$ {\n  /** @deprecated use `CustomerProduct$inboundSchema` instead. */\n  export const inboundSchema = CustomerProduct$inboundSchema;\n  /** @deprecated use `CustomerProduct$outboundSchema` instead. */\n  export const outboundSchema = CustomerProduct$outboundSchema;\n  /** @deprecated use `CustomerProduct$Outbound` instead. */\n  export type Outbound = CustomerProduct$Outbound;\n}\n\nexport function customerProductToJSON(\n  customerProduct: CustomerProduct,\n): string {\n  return JSON.stringify(CustomerProduct$outboundSchema.parse(customerProduct));\n}\n\nexport function customerProductFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomerProduct, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomerProduct$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomerProduct' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 16045, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16051, "column": 0}, "map": {"version":3,"file":"customerorganization.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customerorganization.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  CustomerProduct,\n  CustomerProduct$inboundSchema,\n  CustomerProduct$Outbound,\n  CustomerProduct$outboundSchema,\n} from \"./customerproduct.js\";\nimport {\n  Organization,\n  Organization$inboundSchema,\n  Organization$Outbound,\n  Organization$outboundSchema,\n} from \"./organization.js\";\n\n/**\n * Schema of an organization and related data for customer portal.\n */\nexport type CustomerOrganization = {\n  organization: Organization;\n  products: Array<CustomerProduct>;\n};\n\n/** @internal */\nexport const CustomerOrganization$inboundSchema: z.ZodType<\n  CustomerOrganization,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  organization: Organization$inboundSchema,\n  products: z.array(CustomerProduct$inboundSchema),\n});\n\n/** @internal */\nexport type CustomerOrganization$Outbound = {\n  organization: Organization$Outbound;\n  products: Array<CustomerProduct$Outbound>;\n};\n\n/** @internal */\nexport const CustomerOrganization$outboundSchema: z.ZodType<\n  CustomerOrganization$Outbound,\n  z.ZodTypeDef,\n  CustomerOrganization\n> = z.object({\n  organization: Organization$outboundSchema,\n  products: z.array(CustomerProduct$outboundSchema),\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomerOrganization$ {\n  /** @deprecated use `CustomerOrganization$inboundSchema` instead. */\n  export const inboundSchema = CustomerOrganization$inboundSchema;\n  /** @deprecated use `CustomerOrganization$outboundSchema` instead. */\n  export const outboundSchema = CustomerOrganization$outboundSchema;\n  /** @deprecated use `CustomerOrganization$Outbound` instead. */\n  export type Outbound = CustomerOrganization$Outbound;\n}\n\nexport function customerOrganizationToJSON(\n  customerOrganization: CustomerOrganization,\n): string {\n  return JSON.stringify(\n    CustomerOrganization$outboundSchema.parse(customerOrganization),\n  );\n}\n\nexport function customerOrganizationFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomerOrganization, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomerOrganization$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomerOrganization' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;AAGH,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,6BAA6B,EAE7B,8BAA8B,GAC/B,MAAM,sBAAsB,CAAC;AAC9B,OAAO,EAEL,0BAA0B,EAE1B,2BAA2B,GAC5B,MAAM,mBAAmB,CAAC;AAf3B,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;;;;AA0BlB,MAAM,kCAAkC,GAI3C,CAAC,6IAAC,MAAM,CAAC;IACX,YAAY,gMAAE,6BAA0B;IACxC,QAAQ,EAAE,CAAC,6IAAC,KAAK,kMAAC,gCAA6B,CAAC;CACjD,CAAC,CAAC;AASI,MAAM,mCAAmC,GAI5C,CAAC,6IAAC,MAAM,CAAC;IACX,YAAY,gMAAE,8BAA2B;IACzC,QAAQ,EAAE,CAAC,6IAAC,KAAK,kMAAC,iCAA8B,CAAC;CAClD,CAAC,CAAC;AAMG,IAAW,qBAAqB,CAOrC;AAPD,CAAA,SAAiB,qBAAqB;IACpC,kEAAA,EAAoE,CACvD,sBAAA,aAAa,GAAG,kCAAkC,CAAC;IAChE,mEAAA,EAAqE,CACxD,sBAAA,cAAc,GAAG,mCAAmC,CAAC;AAGpE,CAAC,EAPgB,qBAAqB,IAAA,CAArB,qBAAqB,GAAA,CAAA,CAAA,GAOrC;AAEK,SAAU,0BAA0B,CACxC,oBAA0C;IAE1C,OAAO,IAAI,CAAC,SAAS,CACnB,mCAAmC,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAChE,CAAC;AACJ,CAAC;AAEK,SAAU,4BAA4B,CAC1C,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,iCAAmC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC9D,CAAA,gDAAA,CAAkD,CACnD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 16088, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16094, "column": 0}, "map": {"version":3,"file":"customersubscriptionmetermeter.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customersubscriptionmetermeter.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport type CustomerSubscriptionMeterMeter = {\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  /**\n   * The ID of the object.\n   */\n  id: string;\n  /**\n   * The name of the meter. Will be shown on customer's invoices and usage.\n   */\n  name: string;\n};\n\n/** @internal */\nexport const CustomerSubscriptionMeterMeter$inboundSchema: z.ZodType<\n  CustomerSubscriptionMeterMeter,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  id: z.string(),\n  name: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n  });\n});\n\n/** @internal */\nexport type CustomerSubscriptionMeterMeter$Outbound = {\n  created_at: string;\n  modified_at: string | null;\n  id: string;\n  name: string;\n};\n\n/** @internal */\nexport const CustomerSubscriptionMeterMeter$outboundSchema: z.ZodType<\n  CustomerSubscriptionMeterMeter$Outbound,\n  z.ZodTypeDef,\n  CustomerSubscriptionMeterMeter\n> = z.object({\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  id: z.string(),\n  name: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomerSubscriptionMeterMeter$ {\n  /** @deprecated use `CustomerSubscriptionMeterMeter$inboundSchema` instead. */\n  export const inboundSchema = CustomerSubscriptionMeterMeter$inboundSchema;\n  /** @deprecated use `CustomerSubscriptionMeterMeter$outboundSchema` instead. */\n  export const outboundSchema = CustomerSubscriptionMeterMeter$outboundSchema;\n  /** @deprecated use `CustomerSubscriptionMeterMeter$Outbound` instead. */\n  export type Outbound = CustomerSubscriptionMeterMeter$Outbound;\n}\n\nexport function customerSubscriptionMeterMeterToJSON(\n  customerSubscriptionMeterMeter: CustomerSubscriptionMeterMeter,\n): string {\n  return JSON.stringify(\n    CustomerSubscriptionMeterMeter$outboundSchema.parse(\n      customerSubscriptionMeterMeter,\n    ),\n  );\n}\n\nexport function customerSubscriptionMeterMeterFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomerSubscriptionMeterMeter, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomerSubscriptionMeterMeter$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomerSubscriptionMeterMeter' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;;;;;AAwB1C,MAAM,4CAA4C,GAIrD,CAAC,6IAAC,MAAM,CAAC;IACX,UAAU,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,CAAC;QAAE,MAAM,EAAE,IAAI;IAAA,CAAE,CAAC,CAAC,SAAS,EAAC,CAAC,CAAC,EAAG,AAAD,IAAK,IAAI,CAAC,CAAC,CAAC,CAAC;IAC7E,WAAW,EAAE,CAAC,6IAAC,QAAQ,CACrB,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,CAAC;QAAE,MAAM,EAAE,IAAI;IAAA,CAAE,CAAC,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAClE;IACD,EAAE,EAAE,CAAC,6IAAC,MAAM,EAAE;IACd,IAAI,EAAE,CAAC,6IAAC,MAAM,EAAE;CACjB,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,OAAO,uLAAA,AAAM,EAAC,CAAC,EAAE;QACf,YAAY,EAAE,WAAW;QACzB,aAAa,EAAE,YAAY;KAC5B,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAWI,MAAM,6CAA6C,GAItD,CAAC,6IAAC,MAAM,CAAC;IACX,SAAS,EAAE,CAAC,6IAAC,IAAI,EAAE,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,WAAW,EAAE,CAAC;IACnD,UAAU,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,IAAI,EAAE,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;IAChE,EAAE,EAAE,CAAC,6IAAC,MAAM,EAAE;IACd,IAAI,EAAE,CAAC,6IAAC,MAAM,EAAE;CACjB,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,SAAS,EAAE,YAAY;QACvB,UAAU,EAAE,aAAa;KAC1B,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,+BAA+B,CAO/C;AAPD,CAAA,SAAiB,+BAA+B;IAC9C,4EAAA,EAA8E,CACjE,gCAAA,aAAa,GAAG,4CAA4C,CAAC;IAC1E,6EAAA,EAA+E,CAClE,gCAAA,cAAc,GAAG,6CAA6C,CAAC;AAG9E,CAAC,EAPgB,+BAA+B,IAAA,CAA/B,+BAA+B,GAAA,CAAA,CAAA,GAO/C;AAEK,SAAU,oCAAoC,CAClD,8BAA8D;IAE9D,OAAO,IAAI,CAAC,SAAS,CACnB,6CAA6C,CAAC,KAAK,CACjD,8BAA8B,CAC/B,CACF,CAAC;AACJ,CAAC;AAEK,SAAU,sCAAsC,CACpD,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,2CAA6C,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACxE,CAAA,0DAAA,CAA4D,CAC7D,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 16147, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16153, "column": 0}, "map": {"version":3,"file":"customersubscriptionmeter.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customersubscriptionmeter.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  CustomerSubscriptionMeterMeter,\n  CustomerSubscriptionMeterMeter$inboundSchema,\n  CustomerSubscriptionMeterMeter$Outbound,\n  CustomerSubscriptionMeterMeter$outboundSchema,\n} from \"./customersubscriptionmetermeter.js\";\n\nexport type CustomerSubscriptionMeter = {\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  /**\n   * The ID of the object.\n   */\n  id: string;\n  /**\n   * The number of consumed units so far in this billing period.\n   */\n  consumedUnits: number;\n  /**\n   * The number of credited units so far in this billing period.\n   */\n  creditedUnits: number;\n  /**\n   * The amount due in cents so far in this billing period.\n   */\n  amount: number;\n  /**\n   * The ID of the meter.\n   */\n  meterId: string;\n  meter: CustomerSubscriptionMeterMeter;\n};\n\n/** @internal */\nexport const CustomerSubscriptionMeter$inboundSchema: z.ZodType<\n  CustomerSubscriptionMeter,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  id: z.string(),\n  consumed_units: z.number(),\n  credited_units: z.number().int(),\n  amount: z.number().int(),\n  meter_id: z.string(),\n  meter: CustomerSubscriptionMeterMeter$inboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"consumed_units\": \"consumedUnits\",\n    \"credited_units\": \"creditedUnits\",\n    \"meter_id\": \"meterId\",\n  });\n});\n\n/** @internal */\nexport type CustomerSubscriptionMeter$Outbound = {\n  created_at: string;\n  modified_at: string | null;\n  id: string;\n  consumed_units: number;\n  credited_units: number;\n  amount: number;\n  meter_id: string;\n  meter: CustomerSubscriptionMeterMeter$Outbound;\n};\n\n/** @internal */\nexport const CustomerSubscriptionMeter$outboundSchema: z.ZodType<\n  CustomerSubscriptionMeter$Outbound,\n  z.ZodTypeDef,\n  CustomerSubscriptionMeter\n> = z.object({\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  id: z.string(),\n  consumedUnits: z.number(),\n  creditedUnits: z.number().int(),\n  amount: z.number().int(),\n  meterId: z.string(),\n  meter: CustomerSubscriptionMeterMeter$outboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    consumedUnits: \"consumed_units\",\n    creditedUnits: \"credited_units\",\n    meterId: \"meter_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomerSubscriptionMeter$ {\n  /** @deprecated use `CustomerSubscriptionMeter$inboundSchema` instead. */\n  export const inboundSchema = CustomerSubscriptionMeter$inboundSchema;\n  /** @deprecated use `CustomerSubscriptionMeter$outboundSchema` instead. */\n  export const outboundSchema = CustomerSubscriptionMeter$outboundSchema;\n  /** @deprecated use `CustomerSubscriptionMeter$Outbound` instead. */\n  export type Outbound = CustomerSubscriptionMeter$Outbound;\n}\n\nexport function customerSubscriptionMeterToJSON(\n  customerSubscriptionMeter: CustomerSubscriptionMeter,\n): string {\n  return JSON.stringify(\n    CustomerSubscriptionMeter$outboundSchema.parse(customerSubscriptionMeter),\n  );\n}\n\nexport function customerSubscriptionMeterFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomerSubscriptionMeter, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomerSubscriptionMeter$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomerSubscriptionMeter' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 16222, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16228, "column": 0}, "map": {"version":3,"file":"customersubscriptionproduct.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customersubscriptionproduct.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  BenefitPublic,\n  BenefitPublic$inboundSchema,\n  BenefitPublic$Outbound,\n  BenefitPublic$outboundSchema,\n} from \"./benefitpublic.js\";\nimport {\n  LegacyRecurringProductPrice,\n  LegacyRecurringProductPrice$inboundSchema,\n  LegacyRecurringProductPrice$Outbound,\n  LegacyRecurringProductPrice$outboundSchema,\n} from \"./legacyrecurringproductprice.js\";\nimport {\n  Organization,\n  Organization$inboundSchema,\n  Organization$Outbound,\n  Organization$outboundSchema,\n} from \"./organization.js\";\nimport {\n  ProductMediaFileRead,\n  ProductMediaFileRead$inboundSchema,\n  ProductMediaFileRead$Outbound,\n  ProductMediaFileRead$outboundSchema,\n} from \"./productmediafileread.js\";\nimport {\n  ProductPrice,\n  ProductPrice$inboundSchema,\n  ProductPrice$Outbound,\n  ProductPrice$outboundSchema,\n} from \"./productprice.js\";\nimport {\n  SubscriptionRecurringInterval,\n  SubscriptionRecurringInterval$inboundSchema,\n  SubscriptionRecurringInterval$outboundSchema,\n} from \"./subscriptionrecurringinterval.js\";\n\nexport type CustomerSubscriptionProductPrices =\n  | LegacyRecurringProductPrice\n  | ProductPrice;\n\nexport type CustomerSubscriptionProduct = {\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  /**\n   * The ID of the product.\n   */\n  id: string;\n  /**\n   * The name of the product.\n   */\n  name: string;\n  /**\n   * The description of the product.\n   */\n  description: string | null;\n  /**\n   * The recurring interval of the product. If `None`, the product is a one-time purchase.\n   */\n  recurringInterval: SubscriptionRecurringInterval | null;\n  /**\n   * Whether the product is a subscription.\n   */\n  isRecurring: boolean;\n  /**\n   * Whether the product is archived and no longer available.\n   */\n  isArchived: boolean;\n  /**\n   * The ID of the organization owning the product.\n   */\n  organizationId: string;\n  /**\n   * List of prices for this product.\n   */\n  prices: Array<LegacyRecurringProductPrice | ProductPrice>;\n  /**\n   * List of benefits granted by the product.\n   */\n  benefits: Array<BenefitPublic>;\n  /**\n   * List of medias associated to the product.\n   */\n  medias: Array<ProductMediaFileRead>;\n  organization: Organization;\n};\n\n/** @internal */\nexport const CustomerSubscriptionProductPrices$inboundSchema: z.ZodType<\n  CustomerSubscriptionProductPrices,\n  z.ZodTypeDef,\n  unknown\n> = z.union([\n  LegacyRecurringProductPrice$inboundSchema,\n  ProductPrice$inboundSchema,\n]);\n\n/** @internal */\nexport type CustomerSubscriptionProductPrices$Outbound =\n  | LegacyRecurringProductPrice$Outbound\n  | ProductPrice$Outbound;\n\n/** @internal */\nexport const CustomerSubscriptionProductPrices$outboundSchema: z.ZodType<\n  CustomerSubscriptionProductPrices$Outbound,\n  z.ZodTypeDef,\n  CustomerSubscriptionProductPrices\n> = z.union([\n  LegacyRecurringProductPrice$outboundSchema,\n  ProductPrice$outboundSchema,\n]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomerSubscriptionProductPrices$ {\n  /** @deprecated use `CustomerSubscriptionProductPrices$inboundSchema` instead. */\n  export const inboundSchema = CustomerSubscriptionProductPrices$inboundSchema;\n  /** @deprecated use `CustomerSubscriptionProductPrices$outboundSchema` instead. */\n  export const outboundSchema =\n    CustomerSubscriptionProductPrices$outboundSchema;\n  /** @deprecated use `CustomerSubscriptionProductPrices$Outbound` instead. */\n  export type Outbound = CustomerSubscriptionProductPrices$Outbound;\n}\n\nexport function customerSubscriptionProductPricesToJSON(\n  customerSubscriptionProductPrices: CustomerSubscriptionProductPrices,\n): string {\n  return JSON.stringify(\n    CustomerSubscriptionProductPrices$outboundSchema.parse(\n      customerSubscriptionProductPrices,\n    ),\n  );\n}\n\nexport function customerSubscriptionProductPricesFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomerSubscriptionProductPrices, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomerSubscriptionProductPrices$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomerSubscriptionProductPrices' from JSON`,\n  );\n}\n\n/** @internal */\nexport const CustomerSubscriptionProduct$inboundSchema: z.ZodType<\n  CustomerSubscriptionProduct,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  id: z.string(),\n  name: z.string(),\n  description: z.nullable(z.string()),\n  recurring_interval: z.nullable(SubscriptionRecurringInterval$inboundSchema),\n  is_recurring: z.boolean(),\n  is_archived: z.boolean(),\n  organization_id: z.string(),\n  prices: z.array(\n    z.union([\n      LegacyRecurringProductPrice$inboundSchema,\n      ProductPrice$inboundSchema,\n    ]),\n  ),\n  benefits: z.array(BenefitPublic$inboundSchema),\n  medias: z.array(ProductMediaFileRead$inboundSchema),\n  organization: Organization$inboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"recurring_interval\": \"recurringInterval\",\n    \"is_recurring\": \"isRecurring\",\n    \"is_archived\": \"isArchived\",\n    \"organization_id\": \"organizationId\",\n  });\n});\n\n/** @internal */\nexport type CustomerSubscriptionProduct$Outbound = {\n  created_at: string;\n  modified_at: string | null;\n  id: string;\n  name: string;\n  description: string | null;\n  recurring_interval: string | null;\n  is_recurring: boolean;\n  is_archived: boolean;\n  organization_id: string;\n  prices: Array<LegacyRecurringProductPrice$Outbound | ProductPrice$Outbound>;\n  benefits: Array<BenefitPublic$Outbound>;\n  medias: Array<ProductMediaFileRead$Outbound>;\n  organization: Organization$Outbound;\n};\n\n/** @internal */\nexport const CustomerSubscriptionProduct$outboundSchema: z.ZodType<\n  CustomerSubscriptionProduct$Outbound,\n  z.ZodTypeDef,\n  CustomerSubscriptionProduct\n> = z.object({\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  id: z.string(),\n  name: z.string(),\n  description: z.nullable(z.string()),\n  recurringInterval: z.nullable(SubscriptionRecurringInterval$outboundSchema),\n  isRecurring: z.boolean(),\n  isArchived: z.boolean(),\n  organizationId: z.string(),\n  prices: z.array(\n    z.union([\n      LegacyRecurringProductPrice$outboundSchema,\n      ProductPrice$outboundSchema,\n    ]),\n  ),\n  benefits: z.array(BenefitPublic$outboundSchema),\n  medias: z.array(ProductMediaFileRead$outboundSchema),\n  organization: Organization$outboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    recurringInterval: \"recurring_interval\",\n    isRecurring: \"is_recurring\",\n    isArchived: \"is_archived\",\n    organizationId: \"organization_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomerSubscriptionProduct$ {\n  /** @deprecated use `CustomerSubscriptionProduct$inboundSchema` instead. */\n  export const inboundSchema = CustomerSubscriptionProduct$inboundSchema;\n  /** @deprecated use `CustomerSubscriptionProduct$outboundSchema` instead. */\n  export const outboundSchema = CustomerSubscriptionProduct$outboundSchema;\n  /** @deprecated use `CustomerSubscriptionProduct$Outbound` instead. */\n  export type Outbound = CustomerSubscriptionProduct$Outbound;\n}\n\nexport function customerSubscriptionProductToJSON(\n  customerSubscriptionProduct: CustomerSubscriptionProduct,\n): string {\n  return JSON.stringify(\n    CustomerSubscriptionProduct$outboundSchema.parse(\n      customerSubscriptionProduct,\n    ),\n  );\n}\n\nexport function customerSubscriptionProductFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomerSubscriptionProduct, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomerSubscriptionProduct$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomerSubscriptionProduct' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 16349, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16355, "column": 0}, "map": {"version":3,"file":"customersubscription.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customersubscription.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  CustomerCancellationReason,\n  CustomerCancellationReason$inboundSchema,\n  CustomerCancellationReason$outboundSchema,\n} from \"./customercancellationreason.js\";\nimport {\n  CustomerSubscriptionMeter,\n  CustomerSubscriptionMeter$inboundSchema,\n  CustomerSubscriptionMeter$Outbound,\n  CustomerSubscriptionMeter$outboundSchema,\n} from \"./customersubscriptionmeter.js\";\nimport {\n  CustomerSubscriptionProduct,\n  CustomerSubscriptionProduct$inboundSchema,\n  CustomerSubscriptionProduct$Outbound,\n  CustomerSubscriptionProduct$outboundSchema,\n} from \"./customersubscriptionproduct.js\";\nimport {\n  LegacyRecurringProductPrice,\n  LegacyRecurringProductPrice$inboundSchema,\n  LegacyRecurringProductPrice$Outbound,\n  LegacyRecurringProductPrice$outboundSchema,\n} from \"./legacyrecurringproductprice.js\";\nimport {\n  ProductPrice,\n  ProductPrice$inboundSchema,\n  ProductPrice$Outbound,\n  ProductPrice$outboundSchema,\n} from \"./productprice.js\";\nimport {\n  SubscriptionRecurringInterval,\n  SubscriptionRecurringInterval$inboundSchema,\n  SubscriptionRecurringInterval$outboundSchema,\n} from \"./subscriptionrecurringinterval.js\";\nimport {\n  SubscriptionStatus,\n  SubscriptionStatus$inboundSchema,\n  SubscriptionStatus$outboundSchema,\n} from \"./subscriptionstatus.js\";\n\nexport type CustomerSubscriptionPrices =\n  | LegacyRecurringProductPrice\n  | ProductPrice;\n\nexport type CustomerSubscription = {\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  /**\n   * The ID of the object.\n   */\n  id: string;\n  /**\n   * The amount of the subscription.\n   */\n  amount: number;\n  /**\n   * The currency of the subscription.\n   */\n  currency: string;\n  recurringInterval: SubscriptionRecurringInterval;\n  status: SubscriptionStatus;\n  /**\n   * The start timestamp of the current billing period.\n   */\n  currentPeriodStart: Date;\n  /**\n   * The end timestamp of the current billing period.\n   */\n  currentPeriodEnd: Date | null;\n  /**\n   * Whether the subscription will be canceled at the end of the current period.\n   */\n  cancelAtPeriodEnd: boolean;\n  /**\n   * The timestamp when the subscription was canceled. The subscription might still be active if `cancel_at_period_end` is `true`.\n   */\n  canceledAt: Date | null;\n  /**\n   * The timestamp when the subscription started.\n   */\n  startedAt: Date | null;\n  /**\n   * The timestamp when the subscription will end.\n   */\n  endsAt: Date | null;\n  /**\n   * The timestamp when the subscription ended.\n   */\n  endedAt: Date | null;\n  /**\n   * The ID of the subscribed customer.\n   */\n  customerId: string;\n  /**\n   * The ID of the subscribed product.\n   */\n  productId: string;\n  /**\n   * The ID of the applied discount, if any.\n   */\n  discountId: string | null;\n  checkoutId: string | null;\n  customerCancellationReason: CustomerCancellationReason | null;\n  customerCancellationComment: string | null;\n  product: CustomerSubscriptionProduct;\n  /**\n   * List of enabled prices for the subscription.\n   */\n  prices: Array<LegacyRecurringProductPrice | ProductPrice>;\n  /**\n   * List of meters associated with the subscription.\n   */\n  meters: Array<CustomerSubscriptionMeter>;\n};\n\n/** @internal */\nexport const CustomerSubscriptionPrices$inboundSchema: z.ZodType<\n  CustomerSubscriptionPrices,\n  z.ZodTypeDef,\n  unknown\n> = z.union([\n  LegacyRecurringProductPrice$inboundSchema,\n  ProductPrice$inboundSchema,\n]);\n\n/** @internal */\nexport type CustomerSubscriptionPrices$Outbound =\n  | LegacyRecurringProductPrice$Outbound\n  | ProductPrice$Outbound;\n\n/** @internal */\nexport const CustomerSubscriptionPrices$outboundSchema: z.ZodType<\n  CustomerSubscriptionPrices$Outbound,\n  z.ZodTypeDef,\n  CustomerSubscriptionPrices\n> = z.union([\n  LegacyRecurringProductPrice$outboundSchema,\n  ProductPrice$outboundSchema,\n]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomerSubscriptionPrices$ {\n  /** @deprecated use `CustomerSubscriptionPrices$inboundSchema` instead. */\n  export const inboundSchema = CustomerSubscriptionPrices$inboundSchema;\n  /** @deprecated use `CustomerSubscriptionPrices$outboundSchema` instead. */\n  export const outboundSchema = CustomerSubscriptionPrices$outboundSchema;\n  /** @deprecated use `CustomerSubscriptionPrices$Outbound` instead. */\n  export type Outbound = CustomerSubscriptionPrices$Outbound;\n}\n\nexport function customerSubscriptionPricesToJSON(\n  customerSubscriptionPrices: CustomerSubscriptionPrices,\n): string {\n  return JSON.stringify(\n    CustomerSubscriptionPrices$outboundSchema.parse(customerSubscriptionPrices),\n  );\n}\n\nexport function customerSubscriptionPricesFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomerSubscriptionPrices, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomerSubscriptionPrices$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomerSubscriptionPrices' from JSON`,\n  );\n}\n\n/** @internal */\nexport const CustomerSubscription$inboundSchema: z.ZodType<\n  CustomerSubscription,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  id: z.string(),\n  amount: z.number().int(),\n  currency: z.string(),\n  recurring_interval: SubscriptionRecurringInterval$inboundSchema,\n  status: SubscriptionStatus$inboundSchema,\n  current_period_start: z.string().datetime({ offset: true }).transform(v =>\n    new Date(v)\n  ),\n  current_period_end: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  cancel_at_period_end: z.boolean(),\n  canceled_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  started_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  ends_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  ended_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  customer_id: z.string(),\n  product_id: z.string(),\n  discount_id: z.nullable(z.string()),\n  checkout_id: z.nullable(z.string()),\n  customer_cancellation_reason: z.nullable(\n    CustomerCancellationReason$inboundSchema,\n  ),\n  customer_cancellation_comment: z.nullable(z.string()),\n  product: CustomerSubscriptionProduct$inboundSchema,\n  prices: z.array(\n    z.union([\n      LegacyRecurringProductPrice$inboundSchema,\n      ProductPrice$inboundSchema,\n    ]),\n  ),\n  meters: z.array(CustomerSubscriptionMeter$inboundSchema),\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"recurring_interval\": \"recurringInterval\",\n    \"current_period_start\": \"currentPeriodStart\",\n    \"current_period_end\": \"currentPeriodEnd\",\n    \"cancel_at_period_end\": \"cancelAtPeriodEnd\",\n    \"canceled_at\": \"canceledAt\",\n    \"started_at\": \"startedAt\",\n    \"ends_at\": \"endsAt\",\n    \"ended_at\": \"endedAt\",\n    \"customer_id\": \"customerId\",\n    \"product_id\": \"productId\",\n    \"discount_id\": \"discountId\",\n    \"checkout_id\": \"checkoutId\",\n    \"customer_cancellation_reason\": \"customerCancellationReason\",\n    \"customer_cancellation_comment\": \"customerCancellationComment\",\n  });\n});\n\n/** @internal */\nexport type CustomerSubscription$Outbound = {\n  created_at: string;\n  modified_at: string | null;\n  id: string;\n  amount: number;\n  currency: string;\n  recurring_interval: string;\n  status: string;\n  current_period_start: string;\n  current_period_end: string | null;\n  cancel_at_period_end: boolean;\n  canceled_at: string | null;\n  started_at: string | null;\n  ends_at: string | null;\n  ended_at: string | null;\n  customer_id: string;\n  product_id: string;\n  discount_id: string | null;\n  checkout_id: string | null;\n  customer_cancellation_reason: string | null;\n  customer_cancellation_comment: string | null;\n  product: CustomerSubscriptionProduct$Outbound;\n  prices: Array<LegacyRecurringProductPrice$Outbound | ProductPrice$Outbound>;\n  meters: Array<CustomerSubscriptionMeter$Outbound>;\n};\n\n/** @internal */\nexport const CustomerSubscription$outboundSchema: z.ZodType<\n  CustomerSubscription$Outbound,\n  z.ZodTypeDef,\n  CustomerSubscription\n> = z.object({\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  id: z.string(),\n  amount: z.number().int(),\n  currency: z.string(),\n  recurringInterval: SubscriptionRecurringInterval$outboundSchema,\n  status: SubscriptionStatus$outboundSchema,\n  currentPeriodStart: z.date().transform(v => v.toISOString()),\n  currentPeriodEnd: z.nullable(z.date().transform(v => v.toISOString())),\n  cancelAtPeriodEnd: z.boolean(),\n  canceledAt: z.nullable(z.date().transform(v => v.toISOString())),\n  startedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  endsAt: z.nullable(z.date().transform(v => v.toISOString())),\n  endedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  customerId: z.string(),\n  productId: z.string(),\n  discountId: z.nullable(z.string()),\n  checkoutId: z.nullable(z.string()),\n  customerCancellationReason: z.nullable(\n    CustomerCancellationReason$outboundSchema,\n  ),\n  customerCancellationComment: z.nullable(z.string()),\n  product: CustomerSubscriptionProduct$outboundSchema,\n  prices: z.array(\n    z.union([\n      LegacyRecurringProductPrice$outboundSchema,\n      ProductPrice$outboundSchema,\n    ]),\n  ),\n  meters: z.array(CustomerSubscriptionMeter$outboundSchema),\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    recurringInterval: \"recurring_interval\",\n    currentPeriodStart: \"current_period_start\",\n    currentPeriodEnd: \"current_period_end\",\n    cancelAtPeriodEnd: \"cancel_at_period_end\",\n    canceledAt: \"canceled_at\",\n    startedAt: \"started_at\",\n    endsAt: \"ends_at\",\n    endedAt: \"ended_at\",\n    customerId: \"customer_id\",\n    productId: \"product_id\",\n    discountId: \"discount_id\",\n    checkoutId: \"checkout_id\",\n    customerCancellationReason: \"customer_cancellation_reason\",\n    customerCancellationComment: \"customer_cancellation_comment\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomerSubscription$ {\n  /** @deprecated use `CustomerSubscription$inboundSchema` instead. */\n  export const inboundSchema = CustomerSubscription$inboundSchema;\n  /** @deprecated use `CustomerSubscription$outboundSchema` instead. */\n  export const outboundSchema = CustomerSubscription$outboundSchema;\n  /** @deprecated use `CustomerSubscription$Outbound` instead. */\n  export type Outbound = CustomerSubscription$Outbound;\n}\n\nexport function customerSubscriptionToJSON(\n  customerSubscription: CustomerSubscription,\n): string {\n  return JSON.stringify(\n    CustomerSubscription$outboundSchema.parse(customerSubscription),\n  );\n}\n\nexport function customerSubscriptionFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomerSubscription, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomerSubscription$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomerSubscription' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,wCAAwC,EACxC,yCAAyC,GAC1C,MAAM,iCAAiC,CAAC;AACzC,OAAO,EAEL,uCAAuC,EAEvC,wCAAwC,GACzC,MAAM,gCAAgC,CAAC;AACxC,OAAO,EAEL,yCAAyC,EAEzC,0CAA0C,GAC3C,MAAM,kCAAkC,CAAC;AAC1C,OAAO,EAEL,yCAAyC,EAEzC,0CAA0C,GAC3C,MAAM,kCAAkC,CAAC;AAC1C,OAAO,EAEL,0BAA0B,EAE1B,2BAA2B,GAC5B,MAAM,mBAAmB,CAAC;AAC3B,OAAO,EAEL,2CAA2C,EAC3C,4CAA4C,GAC7C,MAAM,oCAAoC,CAAC;AAC5C,OAAO,EAEL,gCAAgC,EAChC,iCAAiC,GAClC,MAAM,yBAAyB,CAAC;;;;;;;;;;;;AAoF1B,MAAM,wCAAwC,GAIjD,CAAC,6IAAC,KAAK,CAAC;iNACV,4CAAyC;IACzC,2NAA0B;CAC3B,CAAC,CAAC;AAQI,MAAM,yCAAyC,GAIlD,CAAC,6IAAC,KAAK,CAAC;iNACV,6CAA0C;kMAC1C,8BAA2B;CAC5B,CAAC,CAAC;AAMG,IAAW,2BAA2B,CAO3C;AAPD,CAAA,SAAiB,2BAA2B;IAC1C,wEAAA,EAA0E,CAC7D,4BAAA,aAAa,GAAG,wCAAwC,CAAC;IACtE,yEAAA,EAA2E,CAC9D,4BAAA,cAAc,GAAG,yCAAyC,CAAC;AAG1E,CAAC,EAPgB,2BAA2B,IAAA,CAA3B,2BAA2B,GAAA,CAAA,CAAA,GAO3C;AAEK,SAAU,gCAAgC,CAC9C,0BAAsD;IAEtD,OAAO,IAAI,CAAC,SAAS,CACnB,yCAAyC,CAAC,KAAK,CAAC,0BAA0B,CAAC,CAC5E,CAAC;AACJ,CAAC;AAEK,SAAU,kCAAkC,CAChD,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,uCAAyC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACpE,CAAA,sDAAA,CAAwD,CACzD,CAAC;AACJ,CAAC;AAGM,MAAM,kCAAkC,GAI3C,CAAC,6IAAC,MAAM,CAAC;IACX,UAAU,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,CAAC;QAAE,MAAM,EAAE,IAAI;IAAA,CAAE,CAAC,CAAC,SAAS,EAAC,CAAC,CAAC,EAAG,AAAD,IAAK,IAAI,CAAC,CAAC,CAAC,CAAC;IAC7E,WAAW,EAAE,CAAC,6IAAC,QAAQ,CACrB,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,CAAC;QAAE,MAAM,EAAE,IAAI;IAAA,CAAE,CAAC,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAClE;IACD,EAAE,EAAE,CAAC,6IAAC,MAAM,EAAE;IACd,MAAM,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IACxB,QAAQ,EAAE,CAAC,6IAAC,MAAM,EAAE;IACpB,kBAAkB,iNAAE,8CAA2C;IAC/D,MAAM,sMAAE,mCAAgC;IACxC,oBAAoB,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,CAAC;QAAE,MAAM,EAAE,IAAI;IAAA,CAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CACxE,IAAI,IAAI,CAAC,CAAC,CAAC,CACZ;IACD,kBAAkB,EAAE,CAAC,6IAAC,QAAQ,CAC5B,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,CAAC;QAAE,MAAM,EAAE,IAAI;IAAA,CAAE,CAAC,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAClE;IACD,oBAAoB,EAAE,CAAC,6IAAC,OAAO,EAAE;IACjC,WAAW,EAAE,CAAC,6IAAC,QAAQ,CACrB,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,CAAC;QAAE,MAAM,EAAE,IAAI;IAAA,CAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAClE;IACD,UAAU,EAAE,CAAC,6IAAC,QAAQ,CACpB,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,CAAC;QAAE,MAAM,EAAE,IAAI;IAAA,CAAE,CAAC,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAClE;IACD,OAAO,EAAE,CAAC,6IAAC,QAAQ,CACjB,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,CAAC;QAAE,MAAM,EAAE,IAAI;IAAA,CAAE,CAAC,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAClE;IACD,QAAQ,EAAE,CAAC,6IAAC,QAAQ,CAClB,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,CAAC;QAAE,MAAM,EAAE,IAAI;IAAA,CAAE,CAAC,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAClE;IACD,WAAW,EAAE,CAAC,6IAAC,MAAM,EAAE;IACvB,UAAU,EAAE,CAAC,6IAAC,MAAM,EAAE;IACtB,WAAW,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;IACnC,WAAW,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;IACnC,4BAA4B,EAAE,CAAC,6IAAC,QAAQ,6MACtC,2CAAwC,CACzC;IACD,6BAA6B,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;IACrD,OAAO,+MAAE,4CAAyC;IAClD,MAAM,EAAE,CAAC,6IAAC,KAAK,CACb,CAAC,6IAAC,KAAK,CAAC;qNACN,4CAAyC;QACzC,2NAA0B;KAC3B,CAAC,CACH;IACD,MAAM,EAAE,CAAC,6IAAC,KAAK,4MAAC,0CAAuC,CAAC;CACzD,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,YAAY,EAAE,WAAW;QACzB,aAAa,EAAE,YAAY;QAC3B,oBAAoB,EAAE,mBAAmB;QACzC,sBAAsB,EAAE,oBAAoB;QAC5C,oBAAoB,EAAE,kBAAkB;QACxC,sBAAsB,EAAE,mBAAmB;QAC3C,aAAa,EAAE,YAAY;QAC3B,YAAY,EAAE,WAAW;QACzB,SAAS,EAAE,QAAQ;QACnB,UAAU,EAAE,SAAS;QACrB,aAAa,EAAE,YAAY;QAC3B,YAAY,EAAE,WAAW;QACzB,aAAa,EAAE,YAAY;QAC3B,aAAa,EAAE,YAAY;QAC3B,8BAA8B,EAAE,4BAA4B;QAC5D,+BAA+B,EAAE,6BAA6B;KAC/D,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AA8BI,MAAM,mCAAmC,GAI5C,CAAC,6IAAC,MAAM,CAAC;IACX,SAAS,EAAE,CAAC,6IAAC,IAAI,EAAE,CAAC,SAAS,EAAC,CAAC,CAAC,EAAG,AAAD,CAAE,CAAC,WAAW,EAAE,CAAC;IACnD,UAAU,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,IAAI,EAAE,CAAC,SAAS,EAAC,CAAC,CAAC,EAAG,AAAD,CAAE,CAAC,WAAW,EAAE,CAAC,CAAC;IAChE,EAAE,EAAE,CAAC,6IAAC,MAAM,EAAE;IACd,MAAM,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IACxB,QAAQ,EAAE,CAAC,6IAAC,MAAM,EAAE;IACpB,iBAAiB,iNAAE,+CAA4C;IAC/D,MAAM,sMAAE,oCAAiC;IACzC,kBAAkB,EAAE,CAAC,6IAAC,IAAI,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;IAC5D,gBAAgB,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,IAAI,EAAE,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;IACtE,iBAAiB,EAAE,CAAC,6IAAC,OAAO,EAAE;IAC9B,UAAU,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,IAAI,EAAE,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;IAChE,SAAS,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,IAAI,EAAE,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;IAC/D,MAAM,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,IAAI,EAAE,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;IAC5D,OAAO,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,IAAI,EAAE,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;IAC7D,UAAU,EAAE,CAAC,6IAAC,MAAM,EAAE;IACtB,SAAS,EAAE,CAAC,6IAAC,MAAM,EAAE;IACrB,UAAU,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;IAClC,UAAU,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;IAClC,0BAA0B,EAAE,CAAC,6IAAC,QAAQ,CACpC,wPAAyC,CAC1C;IACD,2BAA2B,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;IACnD,OAAO,+MAAE,6CAA0C;IACnD,MAAM,EAAE,CAAC,6IAAC,KAAK,CACb,CAAC,6IAAC,KAAK,CAAC;qNACN,6CAA0C;sMAC1C,8BAA2B;KAC5B,CAAC,CACH;IACD,MAAM,EAAE,CAAC,6IAAC,KAAK,4MAAC,2CAAwC,CAAC;CAC1D,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,SAAS,EAAE,YAAY;QACvB,UAAU,EAAE,aAAa;QACzB,iBAAiB,EAAE,oBAAoB;QACvC,kBAAkB,EAAE,sBAAsB;QAC1C,gBAAgB,EAAE,oBAAoB;QACtC,iBAAiB,EAAE,sBAAsB;QACzC,UAAU,EAAE,aAAa;QACzB,SAAS,EAAE,YAAY;QACvB,MAAM,EAAE,SAAS;QACjB,OAAO,EAAE,UAAU;QACnB,UAAU,EAAE,aAAa;QACzB,SAAS,EAAE,YAAY;QACvB,UAAU,EAAE,aAAa;QACzB,UAAU,EAAE,aAAa;QACzB,0BAA0B,EAAE,8BAA8B;QAC1D,2BAA2B,EAAE,+BAA+B;KAC7D,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,qBAAqB,CAOrC;AAPD,CAAA,SAAiB,qBAAqB;IACpC,kEAAA,EAAoE,CACvD,sBAAA,aAAa,GAAG,kCAAkC,CAAC;IAChE,mEAAA,EAAqE,CACxD,sBAAA,cAAc,GAAG,mCAAmC,CAAC;AAGpE,CAAC,EAPgB,qBAAqB,IAAA,CAArB,qBAAqB,GAAA,CAAA,CAAA,GAOrC;AAEK,SAAU,0BAA0B,CACxC,oBAA0C;IAE1C,OAAO,IAAI,CAAC,SAAS,CACnB,mCAAmC,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAChE,CAAC;AACJ,CAAC;AAEK,SAAU,4BAA4B,CAC1C,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,iCAAmC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC9D,CAAA,gDAAA,CAAkD,CACnD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 16530, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16536, "column": 0}, "map": {"version":3,"file":"customersubscriptionsortproperty.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customersubscriptionsortproperty.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { ClosedEnum } from \"../../types/enums.js\";\n\nexport const CustomerSubscriptionSortProperty = {\n  StartedAt: \"started_at\",\n  MinusStartedAt: \"-started_at\",\n  Amount: \"amount\",\n  MinusAmount: \"-amount\",\n  Status: \"status\",\n  MinusStatus: \"-status\",\n  Organization: \"organization\",\n  MinusOrganization: \"-organization\",\n  Product: \"product\",\n  MinusProduct: \"-product\",\n} as const;\nexport type CustomerSubscriptionSortProperty = ClosedEnum<\n  typeof CustomerSubscriptionSortProperty\n>;\n\n/** @internal */\nexport const CustomerSubscriptionSortProperty$inboundSchema: z.ZodNativeEnum<\n  typeof CustomerSubscriptionSortProperty\n> = z.nativeEnum(CustomerSubscriptionSortProperty);\n\n/** @internal */\nexport const CustomerSubscriptionSortProperty$outboundSchema: z.ZodNativeEnum<\n  typeof CustomerSubscriptionSortProperty\n> = CustomerSubscriptionSortProperty$inboundSchema;\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomerSubscriptionSortProperty$ {\n  /** @deprecated use `CustomerSubscriptionSortProperty$inboundSchema` instead. */\n  export const inboundSchema = CustomerSubscriptionSortProperty$inboundSchema;\n  /** @deprecated use `CustomerSubscriptionSortProperty$outboundSchema` instead. */\n  export const outboundSchema = CustomerSubscriptionSortProperty$outboundSchema;\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;AAGlB,MAAM,gCAAgC,GAAG;IAC9C,SAAS,EAAE,YAAY;IACvB,cAAc,EAAE,aAAa;IAC7B,MAAM,EAAE,QAAQ;IAChB,WAAW,EAAE,SAAS;IACtB,MAAM,EAAE,QAAQ;IAChB,WAAW,EAAE,SAAS;IACtB,YAAY,EAAE,cAAc;IAC5B,iBAAiB,EAAE,eAAe;IAClC,OAAO,EAAE,SAAS;IAClB,YAAY,EAAE,UAAU;CAChB,CAAC;AAMJ,MAAM,8CAA8C,GAEvD,CAAC,6IAAC,UAAU,CAAC,gCAAgC,CAAC,CAAC;AAG5C,MAAM,+CAA+C,GAExD,8CAA8C,CAAC;AAM7C,IAAW,iCAAiC,CAKjD;AALD,CAAA,SAAiB,iCAAiC;IAChD,8EAAA,EAAgF,CACnE,kCAAA,aAAa,GAAG,8CAA8C,CAAC;IAC5E,+EAAA,EAAiF,CACpE,kCAAA,cAAc,GAAG,+CAA+C,CAAC;AAChF,CAAC,EALgB,iCAAiC,IAAA,CAAjC,iCAAiC,GAAA,CAAA,CAAA,GAKjD","ignoreList":[0]}},
    {"offset": {"line": 16566, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16572, "column": 0}, "map": {"version":3,"file":"listresourcecustomersubscription.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/listresourcecustomersubscription.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  CustomerSubscription,\n  CustomerSubscription$inboundSchema,\n  CustomerSubscription$Outbound,\n  CustomerSubscription$outboundSchema,\n} from \"./customersubscription.js\";\nimport {\n  Pagination,\n  Pagination$inboundSchema,\n  Pagination$Outbound,\n  Pagination$outboundSchema,\n} from \"./pagination.js\";\n\nexport type ListResourceCustomerSubscription = {\n  items: Array<CustomerSubscription>;\n  pagination: Pagination;\n};\n\n/** @internal */\nexport const ListResourceCustomerSubscription$inboundSchema: z.ZodType<\n  ListResourceCustomerSubscription,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  items: z.array(CustomerSubscription$inboundSchema),\n  pagination: Pagination$inboundSchema,\n});\n\n/** @internal */\nexport type ListResourceCustomerSubscription$Outbound = {\n  items: Array<CustomerSubscription$Outbound>;\n  pagination: Pagination$Outbound;\n};\n\n/** @internal */\nexport const ListResourceCustomerSubscription$outboundSchema: z.ZodType<\n  ListResourceCustomerSubscription$Outbound,\n  z.ZodTypeDef,\n  ListResourceCustomerSubscription\n> = z.object({\n  items: z.array(CustomerSubscription$outboundSchema),\n  pagination: Pagination$outboundSchema,\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace ListResourceCustomerSubscription$ {\n  /** @deprecated use `ListResourceCustomerSubscription$inboundSchema` instead. */\n  export const inboundSchema = ListResourceCustomerSubscription$inboundSchema;\n  /** @deprecated use `ListResourceCustomerSubscription$outboundSchema` instead. */\n  export const outboundSchema = ListResourceCustomerSubscription$outboundSchema;\n  /** @deprecated use `ListResourceCustomerSubscription$Outbound` instead. */\n  export type Outbound = ListResourceCustomerSubscription$Outbound;\n}\n\nexport function listResourceCustomerSubscriptionToJSON(\n  listResourceCustomerSubscription: ListResourceCustomerSubscription,\n): string {\n  return JSON.stringify(\n    ListResourceCustomerSubscription$outboundSchema.parse(\n      listResourceCustomerSubscription,\n    ),\n  );\n}\n\nexport function listResourceCustomerSubscriptionFromJSON(\n  jsonString: string,\n): SafeParseResult<ListResourceCustomerSubscription, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => ListResourceCustomerSubscription$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'ListResourceCustomerSubscription' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;AAGH,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,kCAAkC,EAElC,mCAAmC,GACpC,MAAM,2BAA2B,CAAC;AACnC,OAAO,EAEL,wBAAwB,EAExB,yBAAyB,GAC1B,MAAM,iBAAiB,CAAC;AAfzB,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;;;;AAuBlB,MAAM,8CAA8C,GAIvD,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,KAAK,uMAAC,qCAAkC,CAAC;IAClD,UAAU,8LAAE,2BAAwB;CACrC,CAAC,CAAC;AASI,MAAM,+CAA+C,GAIxD,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,KAAK,uMAAC,sCAAmC,CAAC;IACnD,UAAU,8LAAE,4BAAyB;CACtC,CAAC,CAAC;AAMG,IAAW,iCAAiC,CAOjD;AAPD,CAAA,SAAiB,iCAAiC;IAChD,8EAAA,EAAgF,CACnE,kCAAA,aAAa,GAAG,8CAA8C,CAAC;IAC5E,+EAAA,EAAiF,CACpE,kCAAA,cAAc,GAAG,+CAA+C,CAAC;AAGhF,CAAC,EAPgB,iCAAiC,IAAA,CAAjC,iCAAiC,GAAA,CAAA,CAAA,GAOjD;AAEK,SAAU,sCAAsC,CACpD,gCAAkE;IAElE,OAAO,IAAI,CAAC,SAAS,CACnB,+CAA+C,CAAC,KAAK,CACnD,gCAAgC,CACjC,CACF,CAAC;AACJ,CAAC;AAEK,SAAU,wCAAwC,CACtD,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,6CAA+C,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC1E,CAAA,4DAAA,CAA8D,CAC/D,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 16609, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16615, "column": 0}, "map": {"version":3,"file":"customersubscriptioncancel.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customersubscriptioncancel.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  CustomerCancellationReason,\n  CustomerCancellationReason$inboundSchema,\n  CustomerCancellationReason$outboundSchema,\n} from \"./customercancellationreason.js\";\n\nexport type CustomerSubscriptionCancel = {\n  /**\n   * Cancel an active subscription once the current period ends.\n   *\n   * @remarks\n   *\n   * Or uncancel a subscription currently set to be revoked at period end.\n   */\n  cancelAtPeriodEnd?: boolean | null | undefined;\n  /**\n   * Customers reason for cancellation.\n   *\n   * @remarks\n   *\n   * * `too_expensive`: Too expensive for the customer.\n   * * `missing_features`: Customer is missing certain features.\n   * * `switched_service`: Customer switched to another service.\n   * * `unused`: Customer is not using it enough.\n   * * `customer_service`: Customer is not satisfied with the customer service.\n   * * `low_quality`: Customer is unhappy with the quality.\n   * * `too_complex`: Customer considers the service too complicated.\n   * * `other`: Other reason(s).\n   */\n  cancellationReason?: CustomerCancellationReason | null | undefined;\n  /**\n   * Customer feedback and why they decided to cancel.\n   */\n  cancellationComment?: string | null | undefined;\n};\n\n/** @internal */\nexport const CustomerSubscriptionCancel$inboundSchema: z.ZodType<\n  CustomerSubscriptionCancel,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  cancel_at_period_end: z.nullable(z.boolean()).optional(),\n  cancellation_reason: z.nullable(CustomerCancellationReason$inboundSchema)\n    .optional(),\n  cancellation_comment: z.nullable(z.string()).optional(),\n}).transform((v) => {\n  return remap$(v, {\n    \"cancel_at_period_end\": \"cancelAtPeriodEnd\",\n    \"cancellation_reason\": \"cancellationReason\",\n    \"cancellation_comment\": \"cancellationComment\",\n  });\n});\n\n/** @internal */\nexport type CustomerSubscriptionCancel$Outbound = {\n  cancel_at_period_end?: boolean | null | undefined;\n  cancellation_reason?: string | null | undefined;\n  cancellation_comment?: string | null | undefined;\n};\n\n/** @internal */\nexport const CustomerSubscriptionCancel$outboundSchema: z.ZodType<\n  CustomerSubscriptionCancel$Outbound,\n  z.ZodTypeDef,\n  CustomerSubscriptionCancel\n> = z.object({\n  cancelAtPeriodEnd: z.nullable(z.boolean()).optional(),\n  cancellationReason: z.nullable(CustomerCancellationReason$outboundSchema)\n    .optional(),\n  cancellationComment: z.nullable(z.string()).optional(),\n}).transform((v) => {\n  return remap$(v, {\n    cancelAtPeriodEnd: \"cancel_at_period_end\",\n    cancellationReason: \"cancellation_reason\",\n    cancellationComment: \"cancellation_comment\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomerSubscriptionCancel$ {\n  /** @deprecated use `CustomerSubscriptionCancel$inboundSchema` instead. */\n  export const inboundSchema = CustomerSubscriptionCancel$inboundSchema;\n  /** @deprecated use `CustomerSubscriptionCancel$outboundSchema` instead. */\n  export const outboundSchema = CustomerSubscriptionCancel$outboundSchema;\n  /** @deprecated use `CustomerSubscriptionCancel$Outbound` instead. */\n  export type Outbound = CustomerSubscriptionCancel$Outbound;\n}\n\nexport function customerSubscriptionCancelToJSON(\n  customerSubscriptionCancel: CustomerSubscriptionCancel,\n): string {\n  return JSON.stringify(\n    CustomerSubscriptionCancel$outboundSchema.parse(customerSubscriptionCancel),\n  );\n}\n\nexport function customerSubscriptionCancelFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomerSubscriptionCancel, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomerSubscriptionCancel$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomerSubscriptionCancel' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,wCAAwC,EACxC,yCAAyC,GAC1C,MAAM,iCAAiC,CAAC;;;;;;AAiClC,MAAM,wCAAwC,GAIjD,CAAC,6IAAC,MAAM,CAAC;IACX,oBAAoB,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,OAAO,EAAE,CAAC,CAAC,QAAQ,EAAE;IACxD,mBAAmB,EAAE,CAAC,6IAAC,QAAQ,6MAAC,2CAAwC,CAAC,CACtE,QAAQ,EAAE;IACb,oBAAoB,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;CACxD,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,sBAAsB,EAAE,mBAAmB;QAC3C,qBAAqB,EAAE,oBAAoB;QAC3C,sBAAsB,EAAE,qBAAqB;KAC9C,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAUI,MAAM,yCAAyC,GAIlD,CAAC,6IAAC,MAAM,CAAC;IACX,iBAAiB,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,OAAO,EAAE,CAAC,CAAC,QAAQ,EAAE;IACrD,kBAAkB,EAAE,CAAC,6IAAC,QAAQ,6MAAC,4CAAyC,CAAC,CACtE,QAAQ,EAAE;IACb,mBAAmB,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;CACvD,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,iBAAiB,EAAE,sBAAsB;QACzC,kBAAkB,EAAE,qBAAqB;QACzC,mBAAmB,EAAE,sBAAsB;KAC5C,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,2BAA2B,CAO3C;AAPD,CAAA,SAAiB,2BAA2B;IAC1C,wEAAA,EAA0E,CAC7D,4BAAA,aAAa,GAAG,wCAAwC,CAAC;IACtE,yEAAA,EAA2E,CAC9D,4BAAA,cAAc,GAAG,yCAAyC,CAAC;AAG1E,CAAC,EAPgB,2BAA2B,IAAA,CAA3B,2BAA2B,GAAA,CAAA,CAAA,GAO3C;AAEK,SAAU,gCAAgC,CAC9C,0BAAsD;IAEtD,OAAO,IAAI,CAAC,SAAS,CACnB,yCAAyC,CAAC,KAAK,CAAC,0BAA0B,CAAC,CAC5E,CAAC;AACJ,CAAC;AAEK,SAAU,kCAAkC,CAChD,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,uCAAyC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACpE,CAAA,sDAAA,CAAwD,CACzD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 16666, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16672, "column": 0}, "map": {"version":3,"file":"customersubscriptionupdateproduct.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customersubscriptionupdateproduct.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport type CustomerSubscriptionUpdateProduct = {\n  /**\n   * Update subscription to another product.\n   */\n  productId: string;\n};\n\n/** @internal */\nexport const CustomerSubscriptionUpdateProduct$inboundSchema: z.ZodType<\n  CustomerSubscriptionUpdateProduct,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  product_id: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    \"product_id\": \"productId\",\n  });\n});\n\n/** @internal */\nexport type CustomerSubscriptionUpdateProduct$Outbound = {\n  product_id: string;\n};\n\n/** @internal */\nexport const CustomerSubscriptionUpdateProduct$outboundSchema: z.ZodType<\n  CustomerSubscriptionUpdateProduct$Outbound,\n  z.ZodTypeDef,\n  CustomerSubscriptionUpdateProduct\n> = z.object({\n  productId: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    productId: \"product_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomerSubscriptionUpdateProduct$ {\n  /** @deprecated use `CustomerSubscriptionUpdateProduct$inboundSchema` instead. */\n  export const inboundSchema = CustomerSubscriptionUpdateProduct$inboundSchema;\n  /** @deprecated use `CustomerSubscriptionUpdateProduct$outboundSchema` instead. */\n  export const outboundSchema =\n    CustomerSubscriptionUpdateProduct$outboundSchema;\n  /** @deprecated use `CustomerSubscriptionUpdateProduct$Outbound` instead. */\n  export type Outbound = CustomerSubscriptionUpdateProduct$Outbound;\n}\n\nexport function customerSubscriptionUpdateProductToJSON(\n  customerSubscriptionUpdateProduct: CustomerSubscriptionUpdateProduct,\n): string {\n  return JSON.stringify(\n    CustomerSubscriptionUpdateProduct$outboundSchema.parse(\n      customerSubscriptionUpdateProduct,\n    ),\n  );\n}\n\nexport function customerSubscriptionUpdateProductFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomerSubscriptionUpdateProduct, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomerSubscriptionUpdateProduct$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomerSubscriptionUpdateProduct' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;;;;;AAY1C,MAAM,+CAA+C,GAIxD,CAAC,6IAAC,MAAM,CAAC;IACX,UAAU,EAAE,CAAC,6IAAC,MAAM,EAAE;CACvB,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,WAAO,mLAAA,AAAM,EAAC,CAAC,EAAE;QACf,YAAY,EAAE,WAAW;KAC1B,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAQI,MAAM,gDAAgD,GAIzD,CAAC,6IAAC,MAAM,CAAC;IACX,SAAS,EAAE,CAAC,6IAAC,MAAM,EAAE;CACtB,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,SAAS,EAAE,YAAY;KACxB,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,kCAAkC,CAQlD;AARD,CAAA,SAAiB,kCAAkC;IACjD,+EAAA,EAAiF,CACpE,mCAAA,aAAa,GAAG,+CAA+C,CAAC;IAC7E,gFAAA,EAAkF,CACrE,mCAAA,cAAc,GACzB,gDAAgD,CAAC;AAGrD,CAAC,EARgB,kCAAkC,IAAA,CAAlC,kCAAkC,GAAA,CAAA,CAAA,GAQlD;AAEK,SAAU,uCAAuC,CACrD,iCAAoE;IAEpE,OAAO,IAAI,CAAC,SAAS,CACnB,gDAAgD,CAAC,KAAK,CACpD,iCAAiC,CAClC,CACF,CAAC;AACJ,CAAC;AAEK,SAAU,yCAAyC,CACvD,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,8CAAgD,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC3E,CAAA,6DAAA,CAA+D,CAChE,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 16713, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16719, "column": 0}, "map": {"version":3,"file":"customersubscriptionupdate.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customersubscriptionupdate.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  CustomerSubscriptionCancel,\n  CustomerSubscriptionCancel$inboundSchema,\n  CustomerSubscriptionCancel$Outbound,\n  CustomerSubscriptionCancel$outboundSchema,\n} from \"./customersubscriptioncancel.js\";\nimport {\n  CustomerSubscriptionUpdateProduct,\n  CustomerSubscriptionUpdateProduct$inboundSchema,\n  CustomerSubscriptionUpdateProduct$Outbound,\n  CustomerSubscriptionUpdateProduct$outboundSchema,\n} from \"./customersubscriptionupdateproduct.js\";\n\nexport type CustomerSubscriptionUpdate =\n  | CustomerSubscriptionUpdateProduct\n  | CustomerSubscriptionCancel;\n\n/** @internal */\nexport const CustomerSubscriptionUpdate$inboundSchema: z.ZodType<\n  CustomerSubscriptionUpdate,\n  z.ZodTypeDef,\n  unknown\n> = z.union([\n  CustomerSubscriptionUpdateProduct$inboundSchema,\n  CustomerSubscriptionCancel$inboundSchema,\n]);\n\n/** @internal */\nexport type CustomerSubscriptionUpdate$Outbound =\n  | CustomerSubscriptionUpdateProduct$Outbound\n  | CustomerSubscriptionCancel$Outbound;\n\n/** @internal */\nexport const CustomerSubscriptionUpdate$outboundSchema: z.ZodType<\n  CustomerSubscriptionUpdate$Outbound,\n  z.ZodTypeDef,\n  CustomerSubscriptionUpdate\n> = z.union([\n  CustomerSubscriptionUpdateProduct$outboundSchema,\n  CustomerSubscriptionCancel$outboundSchema,\n]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomerSubscriptionUpdate$ {\n  /** @deprecated use `CustomerSubscriptionUpdate$inboundSchema` instead. */\n  export const inboundSchema = CustomerSubscriptionUpdate$inboundSchema;\n  /** @deprecated use `CustomerSubscriptionUpdate$outboundSchema` instead. */\n  export const outboundSchema = CustomerSubscriptionUpdate$outboundSchema;\n  /** @deprecated use `CustomerSubscriptionUpdate$Outbound` instead. */\n  export type Outbound = CustomerSubscriptionUpdate$Outbound;\n}\n\nexport function customerSubscriptionUpdateToJSON(\n  customerSubscriptionUpdate: CustomerSubscriptionUpdate,\n): string {\n  return JSON.stringify(\n    CustomerSubscriptionUpdate$outboundSchema.parse(customerSubscriptionUpdate),\n  );\n}\n\nexport function customerSubscriptionUpdateFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomerSubscriptionUpdate, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomerSubscriptionUpdate$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomerSubscriptionUpdate' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;AAGH,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,wCAAwC,EAExC,yCAAyC,GAC1C,MAAM,iCAAiC,CAAC;AACzC,OAAO,EAEL,+CAA+C,EAE/C,gDAAgD,GACjD,MAAM,wCAAwC,CAAC;AAfhD,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;;;;AAsBlB,MAAM,wCAAwC,GAIjD,CAAC,6IAAC,KAAK,CAAC;uNACV,kDAA+C;gNAC/C,2CAAwC;CACzC,CAAC,CAAC;AAQI,MAAM,yCAAyC,GAIlD,CAAC,6IAAC,KAAK,CAAC;IACV,sQAAgD;gNAChD,4CAAyC;CAC1C,CAAC,CAAC;AAMG,IAAW,2BAA2B,CAO3C;AAPD,CAAA,SAAiB,2BAA2B;IAC1C,wEAAA,EAA0E,CAC7D,4BAAA,aAAa,GAAG,wCAAwC,CAAC;IACtE,yEAAA,EAA2E,CAC9D,4BAAA,cAAc,GAAG,yCAAyC,CAAC;AAG1E,CAAC,EAPgB,2BAA2B,IAAA,CAA3B,2BAA2B,GAAA,CAAA,CAAA,GAO3C;AAEK,SAAU,gCAAgC,CAC9C,0BAAsD;IAEtD,OAAO,IAAI,CAAC,SAAS,CACnB,yCAAyC,CAAC,KAAK,CAAC,0BAA0B,CAAC,CAC5E,CAAC;AACJ,CAAC;AAEK,SAAU,kCAAkC,CAChD,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,uCAAyC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACpE,CAAA,sDAAA,CAAwD,CACzD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 16756, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16762, "column": 0}, "map": {"version":3,"file":"customercreate.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customercreate.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  Address,\n  Address$inboundSchema,\n  Address$Outbound,\n  Address$outboundSchema,\n} from \"./address.js\";\nimport {\n  TaxIDFormat,\n  TaxIDFormat$inboundSchema,\n  TaxIDFormat$outboundSchema,\n} from \"./taxidformat.js\";\n\nexport type CustomerCreateMetadata = string | number | number | boolean;\n\nexport type CustomerCreateTaxId = string | TaxIDFormat;\n\nexport type CustomerCreate = {\n  /**\n   * Key-value object allowing you to store additional information.\n   *\n   * @remarks\n   *\n   * The key must be a string with a maximum length of **40 characters**.\n   * The value must be either:\n   *\n   * * A string with a maximum length of **500 characters**\n   * * An integer\n   * * A floating-point number\n   * * A boolean\n   *\n   * You can store up to **50 key-value pairs**.\n   */\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  /**\n   * The ID of the customer in your system. This must be unique within the organization. Once set, it can't be updated.\n   */\n  externalId?: string | null | undefined;\n  /**\n   * The email address of the customer. This must be unique within the organization.\n   */\n  email: string;\n  /**\n   * The name of the customer.\n   */\n  name?: string | null | undefined;\n  billingAddress?: Address | null | undefined;\n  taxId?: Array<string | TaxIDFormat | null> | null | undefined;\n  /**\n   * The ID of the organization owning the customer. **Required unless you use an organization token.**\n   */\n  organizationId?: string | null | undefined;\n};\n\n/** @internal */\nexport const CustomerCreateMetadata$inboundSchema: z.ZodType<\n  CustomerCreateMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type CustomerCreateMetadata$Outbound =\n  | string\n  | number\n  | number\n  | boolean;\n\n/** @internal */\nexport const CustomerCreateMetadata$outboundSchema: z.ZodType<\n  CustomerCreateMetadata$Outbound,\n  z.ZodTypeDef,\n  CustomerCreateMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomerCreateMetadata$ {\n  /** @deprecated use `CustomerCreateMetadata$inboundSchema` instead. */\n  export const inboundSchema = CustomerCreateMetadata$inboundSchema;\n  /** @deprecated use `CustomerCreateMetadata$outboundSchema` instead. */\n  export const outboundSchema = CustomerCreateMetadata$outboundSchema;\n  /** @deprecated use `CustomerCreateMetadata$Outbound` instead. */\n  export type Outbound = CustomerCreateMetadata$Outbound;\n}\n\nexport function customerCreateMetadataToJSON(\n  customerCreateMetadata: CustomerCreateMetadata,\n): string {\n  return JSON.stringify(\n    CustomerCreateMetadata$outboundSchema.parse(customerCreateMetadata),\n  );\n}\n\nexport function customerCreateMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomerCreateMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomerCreateMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomerCreateMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const CustomerCreateTaxId$inboundSchema: z.ZodType<\n  CustomerCreateTaxId,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), TaxIDFormat$inboundSchema]);\n\n/** @internal */\nexport type CustomerCreateTaxId$Outbound = string | string;\n\n/** @internal */\nexport const CustomerCreateTaxId$outboundSchema: z.ZodType<\n  CustomerCreateTaxId$Outbound,\n  z.ZodTypeDef,\n  CustomerCreateTaxId\n> = z.union([z.string(), TaxIDFormat$outboundSchema]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomerCreateTaxId$ {\n  /** @deprecated use `CustomerCreateTaxId$inboundSchema` instead. */\n  export const inboundSchema = CustomerCreateTaxId$inboundSchema;\n  /** @deprecated use `CustomerCreateTaxId$outboundSchema` instead. */\n  export const outboundSchema = CustomerCreateTaxId$outboundSchema;\n  /** @deprecated use `CustomerCreateTaxId$Outbound` instead. */\n  export type Outbound = CustomerCreateTaxId$Outbound;\n}\n\nexport function customerCreateTaxIdToJSON(\n  customerCreateTaxId: CustomerCreateTaxId,\n): string {\n  return JSON.stringify(\n    CustomerCreateTaxId$outboundSchema.parse(customerCreateTaxId),\n  );\n}\n\nexport function customerCreateTaxIdFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomerCreateTaxId, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomerCreateTaxId$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomerCreateTaxId' from JSON`,\n  );\n}\n\n/** @internal */\nexport const CustomerCreate$inboundSchema: z.ZodType<\n  CustomerCreate,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  external_id: z.nullable(z.string()).optional(),\n  email: z.string(),\n  name: z.nullable(z.string()).optional(),\n  billing_address: z.nullable(Address$inboundSchema).optional(),\n  tax_id: z.nullable(\n    z.array(z.nullable(z.union([z.string(), TaxIDFormat$inboundSchema]))),\n  ).optional(),\n  organization_id: z.nullable(z.string()).optional(),\n}).transform((v) => {\n  return remap$(v, {\n    \"external_id\": \"externalId\",\n    \"billing_address\": \"billingAddress\",\n    \"tax_id\": \"taxId\",\n    \"organization_id\": \"organizationId\",\n  });\n});\n\n/** @internal */\nexport type CustomerCreate$Outbound = {\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  external_id?: string | null | undefined;\n  email: string;\n  name?: string | null | undefined;\n  billing_address?: Address$Outbound | null | undefined;\n  tax_id?: Array<string | string | null> | null | undefined;\n  organization_id?: string | null | undefined;\n};\n\n/** @internal */\nexport const CustomerCreate$outboundSchema: z.ZodType<\n  CustomerCreate$Outbound,\n  z.ZodTypeDef,\n  CustomerCreate\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  externalId: z.nullable(z.string()).optional(),\n  email: z.string(),\n  name: z.nullable(z.string()).optional(),\n  billingAddress: z.nullable(Address$outboundSchema).optional(),\n  taxId: z.nullable(\n    z.array(z.nullable(z.union([z.string(), TaxIDFormat$outboundSchema]))),\n  ).optional(),\n  organizationId: z.nullable(z.string()).optional(),\n}).transform((v) => {\n  return remap$(v, {\n    externalId: \"external_id\",\n    billingAddress: \"billing_address\",\n    taxId: \"tax_id\",\n    organizationId: \"organization_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomerCreate$ {\n  /** @deprecated use `CustomerCreate$inboundSchema` instead. */\n  export const inboundSchema = CustomerCreate$inboundSchema;\n  /** @deprecated use `CustomerCreate$outboundSchema` instead. */\n  export const outboundSchema = CustomerCreate$outboundSchema;\n  /** @deprecated use `CustomerCreate$Outbound` instead. */\n  export type Outbound = CustomerCreate$Outbound;\n}\n\nexport function customerCreateToJSON(customerCreate: CustomerCreate): string {\n  return JSON.stringify(CustomerCreate$outboundSchema.parse(customerCreate));\n}\n\nexport function customerCreateFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomerCreate, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomerCreate$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomerCreate' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 16893, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16899, "column": 0}, "map": {"version":3,"file":"customerstatebenefitgrant.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customerstatebenefitgrant.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  BenefitGrantCustomProperties,\n  BenefitGrantCustomProperties$inboundSchema,\n  BenefitGrantCustomProperties$Outbound,\n  BenefitGrantCustomProperties$outboundSchema,\n} from \"./benefitgrantcustomproperties.js\";\nimport {\n  BenefitGrantDiscordProperties,\n  BenefitGrantDiscordProperties$inboundSchema,\n  BenefitGrantDiscordProperties$Outbound,\n  BenefitGrantDiscordProperties$outboundSchema,\n} from \"./benefitgrantdiscordproperties.js\";\nimport {\n  BenefitGrantDownloadablesProperties,\n  BenefitGrantDownloadablesProperties$inboundSchema,\n  BenefitGrantDownloadablesProperties$Outbound,\n  BenefitGrantDownloadablesProperties$outboundSchema,\n} from \"./benefitgrantdownloadablesproperties.js\";\nimport {\n  BenefitGrantGitHubRepositoryProperties,\n  BenefitGrantGitHubRepositoryProperties$inboundSchema,\n  BenefitGrantGitHubRepositoryProperties$Outbound,\n  BenefitGrantGitHubRepositoryProperties$outboundSchema,\n} from \"./benefitgrantgithubrepositoryproperties.js\";\nimport {\n  BenefitGrantLicenseKeysProperties,\n  BenefitGrantLicenseKeysProperties$inboundSchema,\n  BenefitGrantLicenseKeysProperties$Outbound,\n  BenefitGrantLicenseKeysProperties$outboundSchema,\n} from \"./benefitgrantlicensekeysproperties.js\";\nimport {\n  BenefitType,\n  BenefitType$inboundSchema,\n  BenefitType$outboundSchema,\n} from \"./benefittype.js\";\n\nexport type BenefitMetadata = string | number | number | boolean;\n\nexport type CustomerStateBenefitGrantProperties =\n  | BenefitGrantCustomProperties\n  | BenefitGrantDownloadablesProperties\n  | BenefitGrantLicenseKeysProperties\n  | BenefitGrantDiscordProperties\n  | BenefitGrantGitHubRepositoryProperties;\n\n/**\n * An active benefit grant for a customer.\n */\nexport type CustomerStateBenefitGrant = {\n  /**\n   * The ID of the grant.\n   */\n  id: string;\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  /**\n   * The timestamp when the benefit was granted.\n   */\n  grantedAt: Date;\n  /**\n   * The ID of the benefit concerned by this grant.\n   */\n  benefitId: string;\n  benefitType: BenefitType;\n  /**\n   * The metadata of the benefit concerned by this grant.\n   */\n  benefitMetadata: { [k: string]: string | number | number | boolean };\n  properties:\n    | BenefitGrantCustomProperties\n    | BenefitGrantDownloadablesProperties\n    | BenefitGrantLicenseKeysProperties\n    | BenefitGrantDiscordProperties\n    | BenefitGrantGitHubRepositoryProperties;\n};\n\n/** @internal */\nexport const BenefitMetadata$inboundSchema: z.ZodType<\n  BenefitMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type BenefitMetadata$Outbound = string | number | number | boolean;\n\n/** @internal */\nexport const BenefitMetadata$outboundSchema: z.ZodType<\n  BenefitMetadata$Outbound,\n  z.ZodTypeDef,\n  BenefitMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitMetadata$ {\n  /** @deprecated use `BenefitMetadata$inboundSchema` instead. */\n  export const inboundSchema = BenefitMetadata$inboundSchema;\n  /** @deprecated use `BenefitMetadata$outboundSchema` instead. */\n  export const outboundSchema = BenefitMetadata$outboundSchema;\n  /** @deprecated use `BenefitMetadata$Outbound` instead. */\n  export type Outbound = BenefitMetadata$Outbound;\n}\n\nexport function benefitMetadataToJSON(\n  benefitMetadata: BenefitMetadata,\n): string {\n  return JSON.stringify(BenefitMetadata$outboundSchema.parse(benefitMetadata));\n}\n\nexport function benefitMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => BenefitMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const CustomerStateBenefitGrantProperties$inboundSchema: z.ZodType<\n  CustomerStateBenefitGrantProperties,\n  z.ZodTypeDef,\n  unknown\n> = z.union([\n  BenefitGrantCustomProperties$inboundSchema,\n  BenefitGrantDownloadablesProperties$inboundSchema,\n  BenefitGrantLicenseKeysProperties$inboundSchema,\n  BenefitGrantDiscordProperties$inboundSchema,\n  BenefitGrantGitHubRepositoryProperties$inboundSchema,\n]);\n\n/** @internal */\nexport type CustomerStateBenefitGrantProperties$Outbound =\n  | BenefitGrantCustomProperties$Outbound\n  | BenefitGrantDownloadablesProperties$Outbound\n  | BenefitGrantLicenseKeysProperties$Outbound\n  | BenefitGrantDiscordProperties$Outbound\n  | BenefitGrantGitHubRepositoryProperties$Outbound;\n\n/** @internal */\nexport const CustomerStateBenefitGrantProperties$outboundSchema: z.ZodType<\n  CustomerStateBenefitGrantProperties$Outbound,\n  z.ZodTypeDef,\n  CustomerStateBenefitGrantProperties\n> = z.union([\n  BenefitGrantCustomProperties$outboundSchema,\n  BenefitGrantDownloadablesProperties$outboundSchema,\n  BenefitGrantLicenseKeysProperties$outboundSchema,\n  BenefitGrantDiscordProperties$outboundSchema,\n  BenefitGrantGitHubRepositoryProperties$outboundSchema,\n]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomerStateBenefitGrantProperties$ {\n  /** @deprecated use `CustomerStateBenefitGrantProperties$inboundSchema` instead. */\n  export const inboundSchema =\n    CustomerStateBenefitGrantProperties$inboundSchema;\n  /** @deprecated use `CustomerStateBenefitGrantProperties$outboundSchema` instead. */\n  export const outboundSchema =\n    CustomerStateBenefitGrantProperties$outboundSchema;\n  /** @deprecated use `CustomerStateBenefitGrantProperties$Outbound` instead. */\n  export type Outbound = CustomerStateBenefitGrantProperties$Outbound;\n}\n\nexport function customerStateBenefitGrantPropertiesToJSON(\n  customerStateBenefitGrantProperties: CustomerStateBenefitGrantProperties,\n): string {\n  return JSON.stringify(\n    CustomerStateBenefitGrantProperties$outboundSchema.parse(\n      customerStateBenefitGrantProperties,\n    ),\n  );\n}\n\nexport function customerStateBenefitGrantPropertiesFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomerStateBenefitGrantProperties, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) =>\n      CustomerStateBenefitGrantProperties$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomerStateBenefitGrantProperties' from JSON`,\n  );\n}\n\n/** @internal */\nexport const CustomerStateBenefitGrant$inboundSchema: z.ZodType<\n  CustomerStateBenefitGrant,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  id: z.string(),\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  granted_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  benefit_id: z.string(),\n  benefit_type: BenefitType$inboundSchema,\n  benefit_metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  properties: z.union([\n    BenefitGrantCustomProperties$inboundSchema,\n    BenefitGrantDownloadablesProperties$inboundSchema,\n    BenefitGrantLicenseKeysProperties$inboundSchema,\n    BenefitGrantDiscordProperties$inboundSchema,\n    BenefitGrantGitHubRepositoryProperties$inboundSchema,\n  ]),\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"granted_at\": \"grantedAt\",\n    \"benefit_id\": \"benefitId\",\n    \"benefit_type\": \"benefitType\",\n    \"benefit_metadata\": \"benefitMetadata\",\n  });\n});\n\n/** @internal */\nexport type CustomerStateBenefitGrant$Outbound = {\n  id: string;\n  created_at: string;\n  modified_at: string | null;\n  granted_at: string;\n  benefit_id: string;\n  benefit_type: string;\n  benefit_metadata: { [k: string]: string | number | number | boolean };\n  properties:\n    | BenefitGrantCustomProperties$Outbound\n    | BenefitGrantDownloadablesProperties$Outbound\n    | BenefitGrantLicenseKeysProperties$Outbound\n    | BenefitGrantDiscordProperties$Outbound\n    | BenefitGrantGitHubRepositoryProperties$Outbound;\n};\n\n/** @internal */\nexport const CustomerStateBenefitGrant$outboundSchema: z.ZodType<\n  CustomerStateBenefitGrant$Outbound,\n  z.ZodTypeDef,\n  CustomerStateBenefitGrant\n> = z.object({\n  id: z.string(),\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  grantedAt: z.date().transform(v => v.toISOString()),\n  benefitId: z.string(),\n  benefitType: BenefitType$outboundSchema,\n  benefitMetadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  properties: z.union([\n    BenefitGrantCustomProperties$outboundSchema,\n    BenefitGrantDownloadablesProperties$outboundSchema,\n    BenefitGrantLicenseKeysProperties$outboundSchema,\n    BenefitGrantDiscordProperties$outboundSchema,\n    BenefitGrantGitHubRepositoryProperties$outboundSchema,\n  ]),\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    grantedAt: \"granted_at\",\n    benefitId: \"benefit_id\",\n    benefitType: \"benefit_type\",\n    benefitMetadata: \"benefit_metadata\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomerStateBenefitGrant$ {\n  /** @deprecated use `CustomerStateBenefitGrant$inboundSchema` instead. */\n  export const inboundSchema = CustomerStateBenefitGrant$inboundSchema;\n  /** @deprecated use `CustomerStateBenefitGrant$outboundSchema` instead. */\n  export const outboundSchema = CustomerStateBenefitGrant$outboundSchema;\n  /** @deprecated use `CustomerStateBenefitGrant$Outbound` instead. */\n  export type Outbound = CustomerStateBenefitGrant$Outbound;\n}\n\nexport function customerStateBenefitGrantToJSON(\n  customerStateBenefitGrant: CustomerStateBenefitGrant,\n): string {\n  return JSON.stringify(\n    CustomerStateBenefitGrant$outboundSchema.parse(customerStateBenefitGrant),\n  );\n}\n\nexport function customerStateBenefitGrantFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomerStateBenefitGrant, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomerStateBenefitGrant$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomerStateBenefitGrant' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;;;;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,0CAA0C,EAE1C,2CAA2C,GAC5C,MAAM,mCAAmC,CAAC;AAC3C,OAAO,EAEL,2CAA2C,EAE3C,4CAA4C,GAC7C,MAAM,oCAAoC,CAAC;AAC5C,OAAO,EAEL,iDAAiD,EAEjD,kDAAkD,GACnD,MAAM,0CAA0C,CAAC;AAClD,OAAO,EAEL,oDAAoD,EAEpD,qDAAqD,GACtD,MAAM,6CAA6C,CAAC;AACrD,OAAO,EAEL,+CAA+C,EAE/C,gDAAgD,GACjD,MAAM,wCAAwC,CAAC;AAChD,OAAO,EAEL,yBAAyB,EACzB,0BAA0B,GAC3B,MAAM,kBAAkB,CAAC;;;;;;;;;;;AAiDnB,MAAM,6BAA6B,GAItC,CAAC,6IAAC,KAAK,CAAC;IAAC,CAAC,6IAAC,MAAM,EAAE;IAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAAE,CAAC,6IAAC,MAAM,EAAE;IAAE,CAAC,6IAAC,OAAO,EAAE;CAAC,CAAC,CAAC;AAM9D,MAAM,8BAA8B,GAIvC,CAAC,6IAAC,KAAK,CAAC;IAAC,CAAC,6IAAC,MAAM,EAAE;IAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAAE,CAAC,6IAAC,MAAM,EAAE;IAAE,CAAC,6IAAC,OAAO,EAAE;CAAC,CAAC,CAAC;AAM/D,IAAW,gBAAgB,CAOhC;AAPD,CAAA,SAAiB,gBAAgB;IAC/B,6DAAA,EAA+D,CAClD,iBAAA,aAAa,GAAG,6BAA6B,CAAC;IAC3D,8DAAA,EAAgE,CACnD,iBAAA,cAAc,GAAG,8BAA8B,CAAC;AAG/D,CAAC,EAPgB,gBAAgB,IAAA,CAAhB,gBAAgB,GAAA,CAAA,CAAA,GAOhC;AAEK,SAAU,qBAAqB,CACnC,eAAgC;IAEhC,OAAO,IAAI,CAAC,SAAS,CAAC,8BAA8B,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,CAAC;AAC/E,CAAC;AAEK,SAAU,uBAAuB,CACrC,UAAkB;IAElB,WAAO,oLAAS,AAAT,EACL,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,4BAA8B,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACzD,CAAA,2CAAA,CAA6C,CAC9C,CAAC;AACJ,CAAC;AAGM,MAAM,iDAAiD,GAI1D,CAAC,6IAAC,KAAK,CAAC;kNACV,6CAA0C;yNAC1C,oDAAiD;uNACjD,kDAA+C;mNAC/C,8CAA2C;4NAC3C,uDAAoD;CACrD,CAAC,CAAC;AAWI,MAAM,kDAAkD,GAI3D,CAAC,6IAAC,KAAK,CAAC;kNACV,8CAA2C;yNAC3C,qDAAkD;uNAClD,mDAAgD;mNAChD,+CAA4C;2NAC5C,yDAAqD;CACtD,CAAC,CAAC;AAMG,IAAW,oCAAoC,CASpD;AATD,CAAA,SAAiB,oCAAoC;IACnD,iFAAA,EAAmF,CACtE,qCAAA,aAAa,GACxB,iDAAiD,CAAC;IACpD,kFAAA,EAAoF,CACvE,qCAAA,cAAc,GACzB,kDAAkD,CAAC;AAGvD,CAAC,EATgB,oCAAoC,IAAA,CAApC,oCAAoC,GAAA,CAAA,CAAA,GASpD;AAEK,SAAU,yCAAyC,CACvD,mCAAwE;IAExE,OAAO,IAAI,CAAC,SAAS,CACnB,kDAAkD,CAAC,KAAK,CACtD,mCAAmC,CACpC,CACF,CAAC;AACJ,CAAC;AAEK,SAAU,2CAA2C,CACzD,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CACF,CADI,gDAC6C,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACxE,CAAA,+DAAA,CAAiE,CAClE,CAAC;AACJ,CAAC;AAGM,MAAM,uCAAuC,GAIhD,CAAC,6IAAC,MAAM,CAAC;IACX,EAAE,EAAE,CAAC,6IAAC,MAAM,EAAE;IACd,UAAU,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,CAAC;QAAE,MAAM,EAAE,IAAI;IAAA,CAAE,CAAC,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;IAC7E,WAAW,EAAE,CAAC,6IAAC,QAAQ,CACrB,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,CAAC;QAAE,MAAM,EAAE,IAAI;IAAA,CAAE,CAAC,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAClE;IACD,UAAU,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,CAAC;QAAE,MAAM,EAAE,IAAI;IAAA,CAAE,CAAC,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;IAC7E,UAAU,EAAE,CAAC,6IAAC,MAAM,EAAE;IACtB,YAAY,8LAAE,6BAAyB;IACvC,gBAAgB,EAAE,CAAC,6IAAC,MAAM,CACxB,CAAC,6IAAC,KAAK,CAAC;QAAC,CAAC,6IAAC,MAAM,EAAE;QAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;QAAE,CAAC,6IAAC,MAAM,EAAE;QAAE,CAAC,6IAAC,OAAO,EAAE;KAAC,CAAC,CACjE;IACD,UAAU,EAAE,CAAC,6IAAC,KAAK,CAAC;sNAClB,6CAA0C;6NAC1C,oDAAiD;2NACjD,kDAA+C;uNAC/C,8CAA2C;gOAC3C,uDAAoD;KACrD,CAAC;CACH,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,YAAY,EAAE,WAAW;QACzB,aAAa,EAAE,YAAY;QAC3B,YAAY,EAAE,WAAW;QACzB,YAAY,EAAE,WAAW;QACzB,cAAc,EAAE,aAAa;QAC7B,kBAAkB,EAAE,iBAAiB;KACtC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAoBI,MAAM,wCAAwC,GAIjD,CAAC,6IAAC,MAAM,CAAC;IACX,EAAE,EAAE,CAAC,6IAAC,MAAM,EAAE;IACd,SAAS,EAAE,CAAC,6IAAC,IAAI,EAAE,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,WAAW,EAAE,CAAC;IACnD,UAAU,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,IAAI,EAAE,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;IAChE,SAAS,EAAE,CAAC,6IAAC,IAAI,EAAE,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,WAAW,EAAE,CAAC;IACnD,SAAS,EAAE,CAAC,6IAAC,MAAM,EAAE;IACrB,WAAW,8LAAE,8BAA0B;IACvC,eAAe,EAAE,CAAC,6IAAC,MAAM,CACvB,CAAC,6IAAC,KAAK,CAAC;QAAC,CAAC,6IAAC,MAAM,EAAE;QAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;QAAE,CAAC,6IAAC,MAAM,EAAE;QAAE,CAAC,6IAAC,OAAO,EAAE;KAAC,CAAC,CACjE;IACD,UAAU,EAAE,CAAC,6IAAC,KAAK,CAAC;QAClB,4PAA2C;6NAC3C,qDAAkD;2NAClD,mDAAgD;uNAChD,+CAA4C;gOAC5C,wDAAqD;KACtD,CAAC;CACH,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,QAAO,sLAAA,AAAM,EAAC,CAAC,EAAE;QACf,SAAS,EAAE,YAAY;QACvB,UAAU,EAAE,aAAa;QACzB,SAAS,EAAE,YAAY;QACvB,SAAS,EAAE,YAAY;QACvB,WAAW,EAAE,cAAc;QAC3B,eAAe,EAAE,kBAAkB;KACpC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,0BAA0B,CAO1C;AAPD,CAAA,SAAiB,0BAA0B;IACzC,uEAAA,EAAyE,CAC5D,2BAAA,aAAa,GAAG,uCAAuC,CAAC;IACrE,wEAAA,EAA0E,CAC7D,2BAAA,cAAc,GAAG,wCAAwC,CAAC;AAGzE,CAAC,EAPgB,0BAA0B,IAAA,CAA1B,0BAA0B,GAAA,CAAA,CAAA,GAO1C;AAEK,SAAU,+BAA+B,CAC7C,yBAAoD;IAEpD,OAAO,IAAI,CAAC,SAAS,CACnB,wCAAwC,CAAC,KAAK,CAAC,yBAAyB,CAAC,CAC1E,CAAC;AACJ,CAAC;AAEK,SAAU,iCAAiC,CAC/C,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,sCAAwC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACnE,CAAA,qDAAA,CAAuD,CACxD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 17062, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17068, "column": 0}, "map": {"version":3,"file":"customerstatemeter.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customerstatemeter.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\n/**\n * An active meter for a customer, with latest consumed and credited units.\n */\nexport type CustomerStateMeter = {\n  /**\n   * The ID of the object.\n   */\n  id: string;\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  /**\n   * The ID of the meter.\n   */\n  meterId: string;\n  /**\n   * The number of consumed units.\n   */\n  consumedUnits: number;\n  /**\n   * The number of credited units.\n   */\n  creditedUnits: number;\n  /**\n   * The balance of the meter, i.e. the difference between credited and consumed units.\n   */\n  balance: number;\n};\n\n/** @internal */\nexport const CustomerStateMeter$inboundSchema: z.ZodType<\n  CustomerStateMeter,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  id: z.string(),\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  meter_id: z.string(),\n  consumed_units: z.number(),\n  credited_units: z.number().int(),\n  balance: z.number(),\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"meter_id\": \"meterId\",\n    \"consumed_units\": \"consumedUnits\",\n    \"credited_units\": \"creditedUnits\",\n  });\n});\n\n/** @internal */\nexport type CustomerStateMeter$Outbound = {\n  id: string;\n  created_at: string;\n  modified_at: string | null;\n  meter_id: string;\n  consumed_units: number;\n  credited_units: number;\n  balance: number;\n};\n\n/** @internal */\nexport const CustomerStateMeter$outboundSchema: z.ZodType<\n  CustomerStateMeter$Outbound,\n  z.ZodTypeDef,\n  CustomerStateMeter\n> = z.object({\n  id: z.string(),\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  meterId: z.string(),\n  consumedUnits: z.number(),\n  creditedUnits: z.number().int(),\n  balance: z.number(),\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    meterId: \"meter_id\",\n    consumedUnits: \"consumed_units\",\n    creditedUnits: \"credited_units\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomerStateMeter$ {\n  /** @deprecated use `CustomerStateMeter$inboundSchema` instead. */\n  export const inboundSchema = CustomerStateMeter$inboundSchema;\n  /** @deprecated use `CustomerStateMeter$outboundSchema` instead. */\n  export const outboundSchema = CustomerStateMeter$outboundSchema;\n  /** @deprecated use `CustomerStateMeter$Outbound` instead. */\n  export type Outbound = CustomerStateMeter$Outbound;\n}\n\nexport function customerStateMeterToJSON(\n  customerStateMeter: CustomerStateMeter,\n): string {\n  return JSON.stringify(\n    CustomerStateMeter$outboundSchema.parse(customerStateMeter),\n  );\n}\n\nexport function customerStateMeterFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomerStateMeter, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomerStateMeter$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomerStateMeter' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;;;;;AAuC1C,MAAM,gCAAgC,GAIzC,CAAC,6IAAC,MAAM,CAAC;IACX,EAAE,EAAE,CAAC,6IAAC,MAAM,EAAE;IACd,UAAU,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,CAAC;QAAE,MAAM,EAAE,IAAI;IAAA,CAAE,CAAC,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;IAC7E,WAAW,EAAE,CAAC,6IAAC,QAAQ,CACrB,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,CAAC;QAAE,MAAM,EAAE,IAAI;IAAA,CAAE,CAAC,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAClE;IACD,QAAQ,EAAE,CAAC,6IAAC,MAAM,EAAE;IACpB,cAAc,EAAE,CAAC,6IAAC,MAAM,EAAE;IAC1B,cAAc,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAChC,OAAO,EAAE,CAAC,6IAAC,MAAM,EAAE;CACpB,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,YAAY,EAAE,WAAW;QACzB,aAAa,EAAE,YAAY;QAC3B,UAAU,EAAE,SAAS;QACrB,gBAAgB,EAAE,eAAe;QACjC,gBAAgB,EAAE,eAAe;KAClC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAcI,MAAM,iCAAiC,GAI1C,CAAC,6IAAC,MAAM,CAAC;IACX,EAAE,EAAE,CAAC,6IAAC,MAAM,EAAE;IACd,SAAS,EAAE,CAAC,6IAAC,IAAI,EAAE,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,WAAW,EAAE,CAAC;IACnD,UAAU,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,IAAI,EAAE,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;IAChE,OAAO,EAAE,CAAC,6IAAC,MAAM,EAAE;IACnB,aAAa,EAAE,CAAC,6IAAC,MAAM,EAAE;IACzB,aAAa,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAC/B,OAAO,EAAE,CAAC,6IAAC,MAAM,EAAE;CACpB,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,SAAS,EAAE,YAAY;QACvB,UAAU,EAAE,aAAa;QACzB,OAAO,EAAE,UAAU;QACnB,aAAa,EAAE,gBAAgB;QAC/B,aAAa,EAAE,gBAAgB;KAChC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,mBAAmB,CAOnC;AAPD,CAAA,SAAiB,mBAAmB;IAClC,gEAAA,EAAkE,CACrD,oBAAA,aAAa,GAAG,gCAAgC,CAAC;IAC9D,iEAAA,EAAmE,CACtD,oBAAA,cAAc,GAAG,iCAAiC,CAAC;AAGlE,CAAC,EAPgB,mBAAmB,IAAA,CAAnB,mBAAmB,GAAA,CAAA,CAAA,GAOnC;AAEK,SAAU,wBAAwB,CACtC,kBAAsC;IAEtC,OAAO,IAAI,CAAC,SAAS,CACnB,iCAAiC,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAC5D,CAAC;AACJ,CAAC;AAEK,SAAU,0BAA0B,CACxC,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,+BAAiC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC5D,CAAA,8CAAA,CAAgD,CACjD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 17133, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17139, "column": 0}, "map": {"version":3,"file":"customerstatesubscriptionmeter.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customerstatesubscriptionmeter.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\n/**\n * Current consumption and spending for a subscription meter.\n */\nexport type CustomerStateSubscriptionMeter = {\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  /**\n   * The ID of the object.\n   */\n  id: string;\n  /**\n   * The number of consumed units so far in this billing period.\n   */\n  consumedUnits: number;\n  /**\n   * The number of credited units so far in this billing period.\n   */\n  creditedUnits: number;\n  /**\n   * The amount due in cents so far in this billing period.\n   */\n  amount: number;\n  /**\n   * The ID of the meter.\n   */\n  meterId: string;\n};\n\n/** @internal */\nexport const CustomerStateSubscriptionMeter$inboundSchema: z.ZodType<\n  CustomerStateSubscriptionMeter,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  id: z.string(),\n  consumed_units: z.number(),\n  credited_units: z.number().int(),\n  amount: z.number().int(),\n  meter_id: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"consumed_units\": \"consumedUnits\",\n    \"credited_units\": \"creditedUnits\",\n    \"meter_id\": \"meterId\",\n  });\n});\n\n/** @internal */\nexport type CustomerStateSubscriptionMeter$Outbound = {\n  created_at: string;\n  modified_at: string | null;\n  id: string;\n  consumed_units: number;\n  credited_units: number;\n  amount: number;\n  meter_id: string;\n};\n\n/** @internal */\nexport const CustomerStateSubscriptionMeter$outboundSchema: z.ZodType<\n  CustomerStateSubscriptionMeter$Outbound,\n  z.ZodTypeDef,\n  CustomerStateSubscriptionMeter\n> = z.object({\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  id: z.string(),\n  consumedUnits: z.number(),\n  creditedUnits: z.number().int(),\n  amount: z.number().int(),\n  meterId: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    consumedUnits: \"consumed_units\",\n    creditedUnits: \"credited_units\",\n    meterId: \"meter_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomerStateSubscriptionMeter$ {\n  /** @deprecated use `CustomerStateSubscriptionMeter$inboundSchema` instead. */\n  export const inboundSchema = CustomerStateSubscriptionMeter$inboundSchema;\n  /** @deprecated use `CustomerStateSubscriptionMeter$outboundSchema` instead. */\n  export const outboundSchema = CustomerStateSubscriptionMeter$outboundSchema;\n  /** @deprecated use `CustomerStateSubscriptionMeter$Outbound` instead. */\n  export type Outbound = CustomerStateSubscriptionMeter$Outbound;\n}\n\nexport function customerStateSubscriptionMeterToJSON(\n  customerStateSubscriptionMeter: CustomerStateSubscriptionMeter,\n): string {\n  return JSON.stringify(\n    CustomerStateSubscriptionMeter$outboundSchema.parse(\n      customerStateSubscriptionMeter,\n    ),\n  );\n}\n\nexport function customerStateSubscriptionMeterFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomerStateSubscriptionMeter, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomerStateSubscriptionMeter$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomerStateSubscriptionMeter' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 17204, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17210, "column": 0}, "map": {"version":3,"file":"customerstatesubscription.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customerstatesubscription.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  CustomerStateSubscriptionMeter,\n  CustomerStateSubscriptionMeter$inboundSchema,\n  CustomerStateSubscriptionMeter$Outbound,\n  CustomerStateSubscriptionMeter$outboundSchema,\n} from \"./customerstatesubscriptionmeter.js\";\nimport {\n  SubscriptionRecurringInterval,\n  SubscriptionRecurringInterval$inboundSchema,\n  SubscriptionRecurringInterval$outboundSchema,\n} from \"./subscriptionrecurringinterval.js\";\n\nexport type CustomerStateSubscriptionCustomFieldData =\n  | string\n  | number\n  | boolean\n  | Date;\n\nexport type CustomerStateSubscriptionMetadata =\n  | string\n  | number\n  | number\n  | boolean;\n\n/**\n * An active customer subscription.\n */\nexport type CustomerStateSubscription = {\n  /**\n   * The ID of the subscription.\n   */\n  id: string;\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  /**\n   * Key-value object storing custom field values.\n   */\n  customFieldData?:\n    | { [k: string]: string | number | boolean | Date | null }\n    | undefined;\n  metadata: { [k: string]: string | number | number | boolean };\n  status?: \"active\" | undefined;\n  /**\n   * The amount of the subscription.\n   */\n  amount: number;\n  /**\n   * The currency of the subscription.\n   */\n  currency: string;\n  recurringInterval: SubscriptionRecurringInterval;\n  /**\n   * The start timestamp of the current billing period.\n   */\n  currentPeriodStart: Date;\n  /**\n   * The end timestamp of the current billing period.\n   */\n  currentPeriodEnd: Date | null;\n  /**\n   * Whether the subscription will be canceled at the end of the current period.\n   */\n  cancelAtPeriodEnd: boolean;\n  /**\n   * The timestamp when the subscription was canceled. The subscription might still be active if `cancel_at_period_end` is `true`.\n   */\n  canceledAt: Date | null;\n  /**\n   * The timestamp when the subscription started.\n   */\n  startedAt: Date | null;\n  /**\n   * The timestamp when the subscription will end.\n   */\n  endsAt: Date | null;\n  /**\n   * The ID of the subscribed product.\n   */\n  productId: string;\n  /**\n   * The ID of the applied discount, if any.\n   */\n  discountId: string | null;\n  /**\n   * List of meters associated with the subscription.\n   */\n  meters: Array<CustomerStateSubscriptionMeter>;\n};\n\n/** @internal */\nexport const CustomerStateSubscriptionCustomFieldData$inboundSchema: z.ZodType<\n  CustomerStateSubscriptionCustomFieldData,\n  z.ZodTypeDef,\n  unknown\n> = z.union([\n  z.string(),\n  z.number().int(),\n  z.boolean(),\n  z.string().datetime({ offset: true }).transform(v => new Date(v)),\n]);\n\n/** @internal */\nexport type CustomerStateSubscriptionCustomFieldData$Outbound =\n  | string\n  | number\n  | boolean\n  | string;\n\n/** @internal */\nexport const CustomerStateSubscriptionCustomFieldData$outboundSchema: z.ZodType<\n  CustomerStateSubscriptionCustomFieldData$Outbound,\n  z.ZodTypeDef,\n  CustomerStateSubscriptionCustomFieldData\n> = z.union([\n  z.string(),\n  z.number().int(),\n  z.boolean(),\n  z.date().transform(v => v.toISOString()),\n]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomerStateSubscriptionCustomFieldData$ {\n  /** @deprecated use `CustomerStateSubscriptionCustomFieldData$inboundSchema` instead. */\n  export const inboundSchema =\n    CustomerStateSubscriptionCustomFieldData$inboundSchema;\n  /** @deprecated use `CustomerStateSubscriptionCustomFieldData$outboundSchema` instead. */\n  export const outboundSchema =\n    CustomerStateSubscriptionCustomFieldData$outboundSchema;\n  /** @deprecated use `CustomerStateSubscriptionCustomFieldData$Outbound` instead. */\n  export type Outbound = CustomerStateSubscriptionCustomFieldData$Outbound;\n}\n\nexport function customerStateSubscriptionCustomFieldDataToJSON(\n  customerStateSubscriptionCustomFieldData:\n    CustomerStateSubscriptionCustomFieldData,\n): string {\n  return JSON.stringify(\n    CustomerStateSubscriptionCustomFieldData$outboundSchema.parse(\n      customerStateSubscriptionCustomFieldData,\n    ),\n  );\n}\n\nexport function customerStateSubscriptionCustomFieldDataFromJSON(\n  jsonString: string,\n): SafeParseResult<\n  CustomerStateSubscriptionCustomFieldData,\n  SDKValidationError\n> {\n  return safeParse(\n    jsonString,\n    (x) =>\n      CustomerStateSubscriptionCustomFieldData$inboundSchema.parse(\n        JSON.parse(x),\n      ),\n    `Failed to parse 'CustomerStateSubscriptionCustomFieldData' from JSON`,\n  );\n}\n\n/** @internal */\nexport const CustomerStateSubscriptionMetadata$inboundSchema: z.ZodType<\n  CustomerStateSubscriptionMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type CustomerStateSubscriptionMetadata$Outbound =\n  | string\n  | number\n  | number\n  | boolean;\n\n/** @internal */\nexport const CustomerStateSubscriptionMetadata$outboundSchema: z.ZodType<\n  CustomerStateSubscriptionMetadata$Outbound,\n  z.ZodTypeDef,\n  CustomerStateSubscriptionMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomerStateSubscriptionMetadata$ {\n  /** @deprecated use `CustomerStateSubscriptionMetadata$inboundSchema` instead. */\n  export const inboundSchema = CustomerStateSubscriptionMetadata$inboundSchema;\n  /** @deprecated use `CustomerStateSubscriptionMetadata$outboundSchema` instead. */\n  export const outboundSchema =\n    CustomerStateSubscriptionMetadata$outboundSchema;\n  /** @deprecated use `CustomerStateSubscriptionMetadata$Outbound` instead. */\n  export type Outbound = CustomerStateSubscriptionMetadata$Outbound;\n}\n\nexport function customerStateSubscriptionMetadataToJSON(\n  customerStateSubscriptionMetadata: CustomerStateSubscriptionMetadata,\n): string {\n  return JSON.stringify(\n    CustomerStateSubscriptionMetadata$outboundSchema.parse(\n      customerStateSubscriptionMetadata,\n    ),\n  );\n}\n\nexport function customerStateSubscriptionMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomerStateSubscriptionMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomerStateSubscriptionMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomerStateSubscriptionMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const CustomerStateSubscription$inboundSchema: z.ZodType<\n  CustomerStateSubscription,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  id: z.string(),\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  custom_field_data: z.record(\n    z.nullable(\n      z.union([\n        z.string(),\n        z.number().int(),\n        z.boolean(),\n        z.string().datetime({ offset: true }).transform(v => new Date(v)),\n      ]),\n    ),\n  ).optional(),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  status: z.literal(\"active\").optional(),\n  amount: z.number().int(),\n  currency: z.string(),\n  recurring_interval: SubscriptionRecurringInterval$inboundSchema,\n  current_period_start: z.string().datetime({ offset: true }).transform(v =>\n    new Date(v)\n  ),\n  current_period_end: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  cancel_at_period_end: z.boolean(),\n  canceled_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  started_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  ends_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  product_id: z.string(),\n  discount_id: z.nullable(z.string()),\n  meters: z.array(CustomerStateSubscriptionMeter$inboundSchema),\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"custom_field_data\": \"customFieldData\",\n    \"recurring_interval\": \"recurringInterval\",\n    \"current_period_start\": \"currentPeriodStart\",\n    \"current_period_end\": \"currentPeriodEnd\",\n    \"cancel_at_period_end\": \"cancelAtPeriodEnd\",\n    \"canceled_at\": \"canceledAt\",\n    \"started_at\": \"startedAt\",\n    \"ends_at\": \"endsAt\",\n    \"product_id\": \"productId\",\n    \"discount_id\": \"discountId\",\n  });\n});\n\n/** @internal */\nexport type CustomerStateSubscription$Outbound = {\n  id: string;\n  created_at: string;\n  modified_at: string | null;\n  custom_field_data?:\n    | { [k: string]: string | number | boolean | string | null }\n    | undefined;\n  metadata: { [k: string]: string | number | number | boolean };\n  status: \"active\";\n  amount: number;\n  currency: string;\n  recurring_interval: string;\n  current_period_start: string;\n  current_period_end: string | null;\n  cancel_at_period_end: boolean;\n  canceled_at: string | null;\n  started_at: string | null;\n  ends_at: string | null;\n  product_id: string;\n  discount_id: string | null;\n  meters: Array<CustomerStateSubscriptionMeter$Outbound>;\n};\n\n/** @internal */\nexport const CustomerStateSubscription$outboundSchema: z.ZodType<\n  CustomerStateSubscription$Outbound,\n  z.ZodTypeDef,\n  CustomerStateSubscription\n> = z.object({\n  id: z.string(),\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  customFieldData: z.record(\n    z.nullable(\n      z.union([\n        z.string(),\n        z.number().int(),\n        z.boolean(),\n        z.date().transform(v => v.toISOString()),\n      ]),\n    ),\n  ).optional(),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  status: z.literal(\"active\").default(\"active\" as const),\n  amount: z.number().int(),\n  currency: z.string(),\n  recurringInterval: SubscriptionRecurringInterval$outboundSchema,\n  currentPeriodStart: z.date().transform(v => v.toISOString()),\n  currentPeriodEnd: z.nullable(z.date().transform(v => v.toISOString())),\n  cancelAtPeriodEnd: z.boolean(),\n  canceledAt: z.nullable(z.date().transform(v => v.toISOString())),\n  startedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  endsAt: z.nullable(z.date().transform(v => v.toISOString())),\n  productId: z.string(),\n  discountId: z.nullable(z.string()),\n  meters: z.array(CustomerStateSubscriptionMeter$outboundSchema),\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    customFieldData: \"custom_field_data\",\n    recurringInterval: \"recurring_interval\",\n    currentPeriodStart: \"current_period_start\",\n    currentPeriodEnd: \"current_period_end\",\n    cancelAtPeriodEnd: \"cancel_at_period_end\",\n    canceledAt: \"canceled_at\",\n    startedAt: \"started_at\",\n    endsAt: \"ends_at\",\n    productId: \"product_id\",\n    discountId: \"discount_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomerStateSubscription$ {\n  /** @deprecated use `CustomerStateSubscription$inboundSchema` instead. */\n  export const inboundSchema = CustomerStateSubscription$inboundSchema;\n  /** @deprecated use `CustomerStateSubscription$outboundSchema` instead. */\n  export const outboundSchema = CustomerStateSubscription$outboundSchema;\n  /** @deprecated use `CustomerStateSubscription$Outbound` instead. */\n  export type Outbound = CustomerStateSubscription$Outbound;\n}\n\nexport function customerStateSubscriptionToJSON(\n  customerStateSubscription: CustomerStateSubscription,\n): string {\n  return JSON.stringify(\n    CustomerStateSubscription$outboundSchema.parse(customerStateSubscription),\n  );\n}\n\nexport function customerStateSubscriptionFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomerStateSubscription, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomerStateSubscription$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomerStateSubscription' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 17405, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17411, "column": 0}, "map": {"version":3,"file":"customerstate.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customerstate.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  Address,\n  Address$inboundSchema,\n  Address$Outbound,\n  Address$outboundSchema,\n} from \"./address.js\";\nimport {\n  CustomerStateBenefitGrant,\n  CustomerStateBenefitGrant$inboundSchema,\n  CustomerStateBenefitGrant$Outbound,\n  CustomerStateBenefitGrant$outboundSchema,\n} from \"./customerstatebenefitgrant.js\";\nimport {\n  CustomerStateMeter,\n  CustomerStateMeter$inboundSchema,\n  CustomerStateMeter$Outbound,\n  CustomerStateMeter$outboundSchema,\n} from \"./customerstatemeter.js\";\nimport {\n  CustomerStateSubscription,\n  CustomerStateSubscription$inboundSchema,\n  CustomerStateSubscription$Outbound,\n  CustomerStateSubscription$outboundSchema,\n} from \"./customerstatesubscription.js\";\nimport {\n  TaxIDFormat,\n  TaxIDFormat$inboundSchema,\n  TaxIDFormat$outboundSchema,\n} from \"./taxidformat.js\";\n\nexport type CustomerStateMetadata = string | number | number | boolean;\n\nexport type CustomerStateTaxId = string | TaxIDFormat;\n\n/**\n * A customer along with additional state information:\n *\n * @remarks\n *\n * * Active subscriptions\n * * Granted benefits\n * * Active meters\n */\nexport type CustomerState = {\n  /**\n   * The ID of the customer.\n   */\n  id: string;\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  metadata: { [k: string]: string | number | number | boolean };\n  /**\n   * The ID of the customer in your system. This must be unique within the organization. Once set, it can't be updated.\n   */\n  externalId: string | null;\n  /**\n   * The email address of the customer. This must be unique within the organization.\n   */\n  email: string;\n  /**\n   * Whether the customer email address is verified. The address is automatically verified when the customer accesses the customer portal using their email address.\n   */\n  emailVerified: boolean;\n  /**\n   * The name of the customer.\n   */\n  name: string | null;\n  billingAddress: Address | null;\n  taxId: Array<string | TaxIDFormat | null> | null;\n  /**\n   * The ID of the organization owning the customer.\n   */\n  organizationId: string;\n  /**\n   * Timestamp for when the customer was soft deleted.\n   */\n  deletedAt: Date | null;\n  /**\n   * The customer's active subscriptions.\n   */\n  activeSubscriptions: Array<CustomerStateSubscription>;\n  /**\n   * The customer's active benefit grants.\n   */\n  grantedBenefits: Array<CustomerStateBenefitGrant>;\n  /**\n   * The customer's active meters.\n   */\n  activeMeters: Array<CustomerStateMeter>;\n  avatarUrl: string;\n};\n\n/** @internal */\nexport const CustomerStateMetadata$inboundSchema: z.ZodType<\n  CustomerStateMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type CustomerStateMetadata$Outbound = string | number | number | boolean;\n\n/** @internal */\nexport const CustomerStateMetadata$outboundSchema: z.ZodType<\n  CustomerStateMetadata$Outbound,\n  z.ZodTypeDef,\n  CustomerStateMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomerStateMetadata$ {\n  /** @deprecated use `CustomerStateMetadata$inboundSchema` instead. */\n  export const inboundSchema = CustomerStateMetadata$inboundSchema;\n  /** @deprecated use `CustomerStateMetadata$outboundSchema` instead. */\n  export const outboundSchema = CustomerStateMetadata$outboundSchema;\n  /** @deprecated use `CustomerStateMetadata$Outbound` instead. */\n  export type Outbound = CustomerStateMetadata$Outbound;\n}\n\nexport function customerStateMetadataToJSON(\n  customerStateMetadata: CustomerStateMetadata,\n): string {\n  return JSON.stringify(\n    CustomerStateMetadata$outboundSchema.parse(customerStateMetadata),\n  );\n}\n\nexport function customerStateMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomerStateMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomerStateMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomerStateMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const CustomerStateTaxId$inboundSchema: z.ZodType<\n  CustomerStateTaxId,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), TaxIDFormat$inboundSchema]);\n\n/** @internal */\nexport type CustomerStateTaxId$Outbound = string | string;\n\n/** @internal */\nexport const CustomerStateTaxId$outboundSchema: z.ZodType<\n  CustomerStateTaxId$Outbound,\n  z.ZodTypeDef,\n  CustomerStateTaxId\n> = z.union([z.string(), TaxIDFormat$outboundSchema]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomerStateTaxId$ {\n  /** @deprecated use `CustomerStateTaxId$inboundSchema` instead. */\n  export const inboundSchema = CustomerStateTaxId$inboundSchema;\n  /** @deprecated use `CustomerStateTaxId$outboundSchema` instead. */\n  export const outboundSchema = CustomerStateTaxId$outboundSchema;\n  /** @deprecated use `CustomerStateTaxId$Outbound` instead. */\n  export type Outbound = CustomerStateTaxId$Outbound;\n}\n\nexport function customerStateTaxIdToJSON(\n  customerStateTaxId: CustomerStateTaxId,\n): string {\n  return JSON.stringify(\n    CustomerStateTaxId$outboundSchema.parse(customerStateTaxId),\n  );\n}\n\nexport function customerStateTaxIdFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomerStateTaxId, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomerStateTaxId$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomerStateTaxId' from JSON`,\n  );\n}\n\n/** @internal */\nexport const CustomerState$inboundSchema: z.ZodType<\n  CustomerState,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  id: z.string(),\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  external_id: z.nullable(z.string()),\n  email: z.string(),\n  email_verified: z.boolean(),\n  name: z.nullable(z.string()),\n  billing_address: z.nullable(Address$inboundSchema),\n  tax_id: z.nullable(\n    z.array(z.nullable(z.union([z.string(), TaxIDFormat$inboundSchema]))),\n  ),\n  organization_id: z.string(),\n  deleted_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  active_subscriptions: z.array(CustomerStateSubscription$inboundSchema),\n  granted_benefits: z.array(CustomerStateBenefitGrant$inboundSchema),\n  active_meters: z.array(CustomerStateMeter$inboundSchema),\n  avatar_url: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"external_id\": \"externalId\",\n    \"email_verified\": \"emailVerified\",\n    \"billing_address\": \"billingAddress\",\n    \"tax_id\": \"taxId\",\n    \"organization_id\": \"organizationId\",\n    \"deleted_at\": \"deletedAt\",\n    \"active_subscriptions\": \"activeSubscriptions\",\n    \"granted_benefits\": \"grantedBenefits\",\n    \"active_meters\": \"activeMeters\",\n    \"avatar_url\": \"avatarUrl\",\n  });\n});\n\n/** @internal */\nexport type CustomerState$Outbound = {\n  id: string;\n  created_at: string;\n  modified_at: string | null;\n  metadata: { [k: string]: string | number | number | boolean };\n  external_id: string | null;\n  email: string;\n  email_verified: boolean;\n  name: string | null;\n  billing_address: Address$Outbound | null;\n  tax_id: Array<string | string | null> | null;\n  organization_id: string;\n  deleted_at: string | null;\n  active_subscriptions: Array<CustomerStateSubscription$Outbound>;\n  granted_benefits: Array<CustomerStateBenefitGrant$Outbound>;\n  active_meters: Array<CustomerStateMeter$Outbound>;\n  avatar_url: string;\n};\n\n/** @internal */\nexport const CustomerState$outboundSchema: z.ZodType<\n  CustomerState$Outbound,\n  z.ZodTypeDef,\n  CustomerState\n> = z.object({\n  id: z.string(),\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  externalId: z.nullable(z.string()),\n  email: z.string(),\n  emailVerified: z.boolean(),\n  name: z.nullable(z.string()),\n  billingAddress: z.nullable(Address$outboundSchema),\n  taxId: z.nullable(\n    z.array(z.nullable(z.union([z.string(), TaxIDFormat$outboundSchema]))),\n  ),\n  organizationId: z.string(),\n  deletedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  activeSubscriptions: z.array(CustomerStateSubscription$outboundSchema),\n  grantedBenefits: z.array(CustomerStateBenefitGrant$outboundSchema),\n  activeMeters: z.array(CustomerStateMeter$outboundSchema),\n  avatarUrl: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    externalId: \"external_id\",\n    emailVerified: \"email_verified\",\n    billingAddress: \"billing_address\",\n    taxId: \"tax_id\",\n    organizationId: \"organization_id\",\n    deletedAt: \"deleted_at\",\n    activeSubscriptions: \"active_subscriptions\",\n    grantedBenefits: \"granted_benefits\",\n    activeMeters: \"active_meters\",\n    avatarUrl: \"avatar_url\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomerState$ {\n  /** @deprecated use `CustomerState$inboundSchema` instead. */\n  export const inboundSchema = CustomerState$inboundSchema;\n  /** @deprecated use `CustomerState$outboundSchema` instead. */\n  export const outboundSchema = CustomerState$outboundSchema;\n  /** @deprecated use `CustomerState$Outbound` instead. */\n  export type Outbound = CustomerState$Outbound;\n}\n\nexport function customerStateToJSON(customerState: CustomerState): string {\n  return JSON.stringify(CustomerState$outboundSchema.parse(customerState));\n}\n\nexport function customerStateFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomerState, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomerState$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomerState' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 17588, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17594, "column": 0}, "map": {"version":3,"file":"customersortproperty.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customersortproperty.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { ClosedEnum } from \"../../types/enums.js\";\n\nexport const CustomerSortProperty = {\n  CreatedAt: \"created_at\",\n  MinusCreatedAt: \"-created_at\",\n  Email: \"email\",\n  MinusEmail: \"-email\",\n  Name: \"name\",\n  MinusName: \"-name\",\n} as const;\nexport type CustomerSortProperty = ClosedEnum<typeof CustomerSortProperty>;\n\n/** @internal */\nexport const CustomerSortProperty$inboundSchema: z.ZodNativeEnum<\n  typeof CustomerSortProperty\n> = z.nativeEnum(CustomerSortProperty);\n\n/** @internal */\nexport const CustomerSortProperty$outboundSchema: z.ZodNativeEnum<\n  typeof CustomerSortProperty\n> = CustomerSortProperty$inboundSchema;\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomerSortProperty$ {\n  /** @deprecated use `CustomerSortProperty$inboundSchema` instead. */\n  export const inboundSchema = CustomerSortProperty$inboundSchema;\n  /** @deprecated use `CustomerSortProperty$outboundSchema` instead. */\n  export const outboundSchema = CustomerSortProperty$outboundSchema;\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;AAGlB,MAAM,oBAAoB,GAAG;IAClC,SAAS,EAAE,YAAY;IACvB,cAAc,EAAE,aAAa;IAC7B,KAAK,EAAE,OAAO;IACd,UAAU,EAAE,QAAQ;IACpB,IAAI,EAAE,MAAM;IACZ,SAAS,EAAE,OAAO;CACV,CAAC;AAIJ,MAAM,kCAAkC,GAE3C,CAAC,6IAAC,UAAU,CAAC,oBAAoB,CAAC,CAAC;AAGhC,MAAM,mCAAmC,GAE5C,kCAAkC,CAAC;AAMjC,IAAW,qBAAqB,CAKrC;AALD,CAAA,SAAiB,qBAAqB;IACpC,kEAAA,EAAoE,CACvD,sBAAA,aAAa,GAAG,kCAAkC,CAAC;IAChE,mEAAA,EAAqE,CACxD,sBAAA,cAAc,GAAG,mCAAmC,CAAC;AACpE,CAAC,EALgB,qBAAqB,IAAA,CAArB,qBAAqB,GAAA,CAAA,CAAA,GAKrC","ignoreList":[0]}},
    {"offset": {"line": 17620, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17626, "column": 0}, "map": {"version":3,"file":"listresourcecustomer.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/listresourcecustomer.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  Customer,\n  Customer$inboundSchema,\n  Customer$Outbound,\n  Customer$outboundSchema,\n} from \"./customer.js\";\nimport {\n  Pagination,\n  Pagination$inboundSchema,\n  Pagination$Outbound,\n  Pagination$outboundSchema,\n} from \"./pagination.js\";\n\nexport type ListResourceCustomer = {\n  items: Array<Customer>;\n  pagination: Pagination;\n};\n\n/** @internal */\nexport const ListResourceCustomer$inboundSchema: z.ZodType<\n  ListResourceCustomer,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  items: z.array(Customer$inboundSchema),\n  pagination: Pagination$inboundSchema,\n});\n\n/** @internal */\nexport type ListResourceCustomer$Outbound = {\n  items: Array<Customer$Outbound>;\n  pagination: Pagination$Outbound;\n};\n\n/** @internal */\nexport const ListResourceCustomer$outboundSchema: z.ZodType<\n  ListResourceCustomer$Outbound,\n  z.ZodTypeDef,\n  ListResourceCustomer\n> = z.object({\n  items: z.array(Customer$outboundSchema),\n  pagination: Pagination$outboundSchema,\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace ListResourceCustomer$ {\n  /** @deprecated use `ListResourceCustomer$inboundSchema` instead. */\n  export const inboundSchema = ListResourceCustomer$inboundSchema;\n  /** @deprecated use `ListResourceCustomer$outboundSchema` instead. */\n  export const outboundSchema = ListResourceCustomer$outboundSchema;\n  /** @deprecated use `ListResourceCustomer$Outbound` instead. */\n  export type Outbound = ListResourceCustomer$Outbound;\n}\n\nexport function listResourceCustomerToJSON(\n  listResourceCustomer: ListResourceCustomer,\n): string {\n  return JSON.stringify(\n    ListResourceCustomer$outboundSchema.parse(listResourceCustomer),\n  );\n}\n\nexport function listResourceCustomerFromJSON(\n  jsonString: string,\n): SafeParseResult<ListResourceCustomer, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => ListResourceCustomer$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'ListResourceCustomer' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;AAGH,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,sBAAsB,EAEtB,uBAAuB,GACxB,MAAM,eAAe,CAAC;AACvB,OAAO,EAEL,wBAAwB,EAExB,yBAAyB,GAC1B,MAAM,iBAAiB,CAAC;AAfzB,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;;;;AAuBlB,MAAM,kCAAkC,GAI3C,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,KAAK,2LAAC,yBAAsB,CAAC;IACtC,UAAU,8LAAE,2BAAwB;CACrC,CAAC,CAAC;AASI,MAAM,mCAAmC,GAI5C,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,KAAK,2LAAC,0BAAuB,CAAC;IACvC,UAAU,8LAAE,4BAAyB;CACtC,CAAC,CAAC;AAMG,IAAW,qBAAqB,CAOrC;AAPD,CAAA,SAAiB,qBAAqB;IACpC,kEAAA,EAAoE,CACvD,sBAAA,aAAa,GAAG,kCAAkC,CAAC;IAChE,mEAAA,EAAqE,CACxD,sBAAA,cAAc,GAAG,mCAAmC,CAAC;AAGpE,CAAC,EAPgB,qBAAqB,IAAA,CAArB,qBAAqB,GAAA,CAAA,CAAA,GAOrC;AAEK,SAAU,0BAA0B,CACxC,oBAA0C;IAE1C,OAAO,IAAI,CAAC,SAAS,CACnB,mCAAmC,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAChE,CAAC;AACJ,CAAC;AAEK,SAAU,4BAA4B,CAC1C,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,iCAAmC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC9D,CAAA,gDAAA,CAAkD,CACnD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 17663, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17669, "column": 0}, "map": {"version":3,"file":"customerupdate.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customerupdate.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  Address,\n  Address$inboundSchema,\n  Address$Outbound,\n  Address$outboundSchema,\n} from \"./address.js\";\nimport {\n  TaxIDFormat,\n  TaxIDFormat$inboundSchema,\n  TaxIDFormat$outboundSchema,\n} from \"./taxidformat.js\";\n\nexport type CustomerUpdateMetadata = string | number | number | boolean;\n\nexport type CustomerUpdateTaxId = string | TaxIDFormat;\n\nexport type CustomerUpdate = {\n  /**\n   * Key-value object allowing you to store additional information.\n   *\n   * @remarks\n   *\n   * The key must be a string with a maximum length of **40 characters**.\n   * The value must be either:\n   *\n   * * A string with a maximum length of **500 characters**\n   * * An integer\n   * * A floating-point number\n   * * A boolean\n   *\n   * You can store up to **50 key-value pairs**.\n   */\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  /**\n   * The email address of the customer. This must be unique within the organization.\n   */\n  email?: string | null | undefined;\n  /**\n   * The name of the customer.\n   */\n  name?: string | null | undefined;\n  billingAddress?: Address | null | undefined;\n  taxId?: Array<string | TaxIDFormat | null> | null | undefined;\n  /**\n   * The ID of the customer in your system. This must be unique within the organization. Once set, it can't be updated.\n   */\n  externalId?: string | null | undefined;\n};\n\n/** @internal */\nexport const CustomerUpdateMetadata$inboundSchema: z.ZodType<\n  CustomerUpdateMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type CustomerUpdateMetadata$Outbound =\n  | string\n  | number\n  | number\n  | boolean;\n\n/** @internal */\nexport const CustomerUpdateMetadata$outboundSchema: z.ZodType<\n  CustomerUpdateMetadata$Outbound,\n  z.ZodTypeDef,\n  CustomerUpdateMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomerUpdateMetadata$ {\n  /** @deprecated use `CustomerUpdateMetadata$inboundSchema` instead. */\n  export const inboundSchema = CustomerUpdateMetadata$inboundSchema;\n  /** @deprecated use `CustomerUpdateMetadata$outboundSchema` instead. */\n  export const outboundSchema = CustomerUpdateMetadata$outboundSchema;\n  /** @deprecated use `CustomerUpdateMetadata$Outbound` instead. */\n  export type Outbound = CustomerUpdateMetadata$Outbound;\n}\n\nexport function customerUpdateMetadataToJSON(\n  customerUpdateMetadata: CustomerUpdateMetadata,\n): string {\n  return JSON.stringify(\n    CustomerUpdateMetadata$outboundSchema.parse(customerUpdateMetadata),\n  );\n}\n\nexport function customerUpdateMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomerUpdateMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomerUpdateMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomerUpdateMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const CustomerUpdateTaxId$inboundSchema: z.ZodType<\n  CustomerUpdateTaxId,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), TaxIDFormat$inboundSchema]);\n\n/** @internal */\nexport type CustomerUpdateTaxId$Outbound = string | string;\n\n/** @internal */\nexport const CustomerUpdateTaxId$outboundSchema: z.ZodType<\n  CustomerUpdateTaxId$Outbound,\n  z.ZodTypeDef,\n  CustomerUpdateTaxId\n> = z.union([z.string(), TaxIDFormat$outboundSchema]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomerUpdateTaxId$ {\n  /** @deprecated use `CustomerUpdateTaxId$inboundSchema` instead. */\n  export const inboundSchema = CustomerUpdateTaxId$inboundSchema;\n  /** @deprecated use `CustomerUpdateTaxId$outboundSchema` instead. */\n  export const outboundSchema = CustomerUpdateTaxId$outboundSchema;\n  /** @deprecated use `CustomerUpdateTaxId$Outbound` instead. */\n  export type Outbound = CustomerUpdateTaxId$Outbound;\n}\n\nexport function customerUpdateTaxIdToJSON(\n  customerUpdateTaxId: CustomerUpdateTaxId,\n): string {\n  return JSON.stringify(\n    CustomerUpdateTaxId$outboundSchema.parse(customerUpdateTaxId),\n  );\n}\n\nexport function customerUpdateTaxIdFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomerUpdateTaxId, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomerUpdateTaxId$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomerUpdateTaxId' from JSON`,\n  );\n}\n\n/** @internal */\nexport const CustomerUpdate$inboundSchema: z.ZodType<\n  CustomerUpdate,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  email: z.nullable(z.string()).optional(),\n  name: z.nullable(z.string()).optional(),\n  billing_address: z.nullable(Address$inboundSchema).optional(),\n  tax_id: z.nullable(\n    z.array(z.nullable(z.union([z.string(), TaxIDFormat$inboundSchema]))),\n  ).optional(),\n  external_id: z.nullable(z.string()).optional(),\n}).transform((v) => {\n  return remap$(v, {\n    \"billing_address\": \"billingAddress\",\n    \"tax_id\": \"taxId\",\n    \"external_id\": \"externalId\",\n  });\n});\n\n/** @internal */\nexport type CustomerUpdate$Outbound = {\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  email?: string | null | undefined;\n  name?: string | null | undefined;\n  billing_address?: Address$Outbound | null | undefined;\n  tax_id?: Array<string | string | null> | null | undefined;\n  external_id?: string | null | undefined;\n};\n\n/** @internal */\nexport const CustomerUpdate$outboundSchema: z.ZodType<\n  CustomerUpdate$Outbound,\n  z.ZodTypeDef,\n  CustomerUpdate\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  email: z.nullable(z.string()).optional(),\n  name: z.nullable(z.string()).optional(),\n  billingAddress: z.nullable(Address$outboundSchema).optional(),\n  taxId: z.nullable(\n    z.array(z.nullable(z.union([z.string(), TaxIDFormat$outboundSchema]))),\n  ).optional(),\n  externalId: z.nullable(z.string()).optional(),\n}).transform((v) => {\n  return remap$(v, {\n    billingAddress: \"billing_address\",\n    taxId: \"tax_id\",\n    externalId: \"external_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomerUpdate$ {\n  /** @deprecated use `CustomerUpdate$inboundSchema` instead. */\n  export const inboundSchema = CustomerUpdate$inboundSchema;\n  /** @deprecated use `CustomerUpdate$outboundSchema` instead. */\n  export const outboundSchema = CustomerUpdate$outboundSchema;\n  /** @deprecated use `CustomerUpdate$Outbound` instead. */\n  export type Outbound = CustomerUpdate$Outbound;\n}\n\nexport function customerUpdateToJSON(customerUpdate: CustomerUpdate): string {\n  return JSON.stringify(CustomerUpdate$outboundSchema.parse(customerUpdate));\n}\n\nexport function customerUpdateFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomerUpdate, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomerUpdate$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomerUpdate' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 17796, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17802, "column": 0}, "map": {"version":3,"file":"customerupdateexternalid.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customerupdateexternalid.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  Address,\n  Address$inboundSchema,\n  Address$Outbound,\n  Address$outboundSchema,\n} from \"./address.js\";\nimport {\n  TaxIDFormat,\n  TaxIDFormat$inboundSchema,\n  TaxIDFormat$outboundSchema,\n} from \"./taxidformat.js\";\n\nexport type CustomerUpdateExternalIDMetadata =\n  | string\n  | number\n  | number\n  | boolean;\n\nexport type CustomerUpdateExternalIDTaxID = string | TaxIDFormat;\n\nexport type CustomerUpdateExternalID = {\n  /**\n   * Key-value object allowing you to store additional information.\n   *\n   * @remarks\n   *\n   * The key must be a string with a maximum length of **40 characters**.\n   * The value must be either:\n   *\n   * * A string with a maximum length of **500 characters**\n   * * An integer\n   * * A floating-point number\n   * * A boolean\n   *\n   * You can store up to **50 key-value pairs**.\n   */\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  /**\n   * The email address of the customer. This must be unique within the organization.\n   */\n  email?: string | null | undefined;\n  /**\n   * The name of the customer.\n   */\n  name?: string | null | undefined;\n  billingAddress?: Address | null | undefined;\n  taxId?: Array<string | TaxIDFormat | null> | null | undefined;\n};\n\n/** @internal */\nexport const CustomerUpdateExternalIDMetadata$inboundSchema: z.ZodType<\n  CustomerUpdateExternalIDMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type CustomerUpdateExternalIDMetadata$Outbound =\n  | string\n  | number\n  | number\n  | boolean;\n\n/** @internal */\nexport const CustomerUpdateExternalIDMetadata$outboundSchema: z.ZodType<\n  CustomerUpdateExternalIDMetadata$Outbound,\n  z.ZodTypeDef,\n  CustomerUpdateExternalIDMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomerUpdateExternalIDMetadata$ {\n  /** @deprecated use `CustomerUpdateExternalIDMetadata$inboundSchema` instead. */\n  export const inboundSchema = CustomerUpdateExternalIDMetadata$inboundSchema;\n  /** @deprecated use `CustomerUpdateExternalIDMetadata$outboundSchema` instead. */\n  export const outboundSchema = CustomerUpdateExternalIDMetadata$outboundSchema;\n  /** @deprecated use `CustomerUpdateExternalIDMetadata$Outbound` instead. */\n  export type Outbound = CustomerUpdateExternalIDMetadata$Outbound;\n}\n\nexport function customerUpdateExternalIDMetadataToJSON(\n  customerUpdateExternalIDMetadata: CustomerUpdateExternalIDMetadata,\n): string {\n  return JSON.stringify(\n    CustomerUpdateExternalIDMetadata$outboundSchema.parse(\n      customerUpdateExternalIDMetadata,\n    ),\n  );\n}\n\nexport function customerUpdateExternalIDMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomerUpdateExternalIDMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomerUpdateExternalIDMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomerUpdateExternalIDMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const CustomerUpdateExternalIDTaxID$inboundSchema: z.ZodType<\n  CustomerUpdateExternalIDTaxID,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), TaxIDFormat$inboundSchema]);\n\n/** @internal */\nexport type CustomerUpdateExternalIDTaxID$Outbound = string | string;\n\n/** @internal */\nexport const CustomerUpdateExternalIDTaxID$outboundSchema: z.ZodType<\n  CustomerUpdateExternalIDTaxID$Outbound,\n  z.ZodTypeDef,\n  CustomerUpdateExternalIDTaxID\n> = z.union([z.string(), TaxIDFormat$outboundSchema]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomerUpdateExternalIDTaxID$ {\n  /** @deprecated use `CustomerUpdateExternalIDTaxID$inboundSchema` instead. */\n  export const inboundSchema = CustomerUpdateExternalIDTaxID$inboundSchema;\n  /** @deprecated use `CustomerUpdateExternalIDTaxID$outboundSchema` instead. */\n  export const outboundSchema = CustomerUpdateExternalIDTaxID$outboundSchema;\n  /** @deprecated use `CustomerUpdateExternalIDTaxID$Outbound` instead. */\n  export type Outbound = CustomerUpdateExternalIDTaxID$Outbound;\n}\n\nexport function customerUpdateExternalIDTaxIDToJSON(\n  customerUpdateExternalIDTaxID: CustomerUpdateExternalIDTaxID,\n): string {\n  return JSON.stringify(\n    CustomerUpdateExternalIDTaxID$outboundSchema.parse(\n      customerUpdateExternalIDTaxID,\n    ),\n  );\n}\n\nexport function customerUpdateExternalIDTaxIDFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomerUpdateExternalIDTaxID, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomerUpdateExternalIDTaxID$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomerUpdateExternalIDTaxID' from JSON`,\n  );\n}\n\n/** @internal */\nexport const CustomerUpdateExternalID$inboundSchema: z.ZodType<\n  CustomerUpdateExternalID,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  email: z.nullable(z.string()).optional(),\n  name: z.nullable(z.string()).optional(),\n  billing_address: z.nullable(Address$inboundSchema).optional(),\n  tax_id: z.nullable(\n    z.array(z.nullable(z.union([z.string(), TaxIDFormat$inboundSchema]))),\n  ).optional(),\n}).transform((v) => {\n  return remap$(v, {\n    \"billing_address\": \"billingAddress\",\n    \"tax_id\": \"taxId\",\n  });\n});\n\n/** @internal */\nexport type CustomerUpdateExternalID$Outbound = {\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  email?: string | null | undefined;\n  name?: string | null | undefined;\n  billing_address?: Address$Outbound | null | undefined;\n  tax_id?: Array<string | string | null> | null | undefined;\n};\n\n/** @internal */\nexport const CustomerUpdateExternalID$outboundSchema: z.ZodType<\n  CustomerUpdateExternalID$Outbound,\n  z.ZodTypeDef,\n  CustomerUpdateExternalID\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  email: z.nullable(z.string()).optional(),\n  name: z.nullable(z.string()).optional(),\n  billingAddress: z.nullable(Address$outboundSchema).optional(),\n  taxId: z.nullable(\n    z.array(z.nullable(z.union([z.string(), TaxIDFormat$outboundSchema]))),\n  ).optional(),\n}).transform((v) => {\n  return remap$(v, {\n    billingAddress: \"billing_address\",\n    taxId: \"tax_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomerUpdateExternalID$ {\n  /** @deprecated use `CustomerUpdateExternalID$inboundSchema` instead. */\n  export const inboundSchema = CustomerUpdateExternalID$inboundSchema;\n  /** @deprecated use `CustomerUpdateExternalID$outboundSchema` instead. */\n  export const outboundSchema = CustomerUpdateExternalID$outboundSchema;\n  /** @deprecated use `CustomerUpdateExternalID$Outbound` instead. */\n  export type Outbound = CustomerUpdateExternalID$Outbound;\n}\n\nexport function customerUpdateExternalIDToJSON(\n  customerUpdateExternalID: CustomerUpdateExternalID,\n): string {\n  return JSON.stringify(\n    CustomerUpdateExternalID$outboundSchema.parse(customerUpdateExternalID),\n  );\n}\n\nexport function customerUpdateExternalIDFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomerUpdateExternalID, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomerUpdateExternalID$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomerUpdateExternalID' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 17925, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17931, "column": 0}, "map": {"version":3,"file":"customersession.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customersession.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  Customer,\n  Customer$inboundSchema,\n  Customer$Outbound,\n  Customer$outboundSchema,\n} from \"./customer.js\";\n\n/**\n * A customer session that can be used to authenticate as a customer.\n */\nexport type CustomerSession = {\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  /**\n   * The ID of the object.\n   */\n  id: string;\n  token: string;\n  expiresAt: Date;\n  customerPortalUrl: string;\n  customerId: string;\n  /**\n   * A customer in an organization.\n   */\n  customer: Customer;\n};\n\n/** @internal */\nexport const CustomerSession$inboundSchema: z.ZodType<\n  CustomerSession,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  id: z.string(),\n  token: z.string(),\n  expires_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  customer_portal_url: z.string(),\n  customer_id: z.string(),\n  customer: Customer$inboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"expires_at\": \"expiresAt\",\n    \"customer_portal_url\": \"customerPortalUrl\",\n    \"customer_id\": \"customerId\",\n  });\n});\n\n/** @internal */\nexport type CustomerSession$Outbound = {\n  created_at: string;\n  modified_at: string | null;\n  id: string;\n  token: string;\n  expires_at: string;\n  customer_portal_url: string;\n  customer_id: string;\n  customer: Customer$Outbound;\n};\n\n/** @internal */\nexport const CustomerSession$outboundSchema: z.ZodType<\n  CustomerSession$Outbound,\n  z.ZodTypeDef,\n  CustomerSession\n> = z.object({\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  id: z.string(),\n  token: z.string(),\n  expiresAt: z.date().transform(v => v.toISOString()),\n  customerPortalUrl: z.string(),\n  customerId: z.string(),\n  customer: Customer$outboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    expiresAt: \"expires_at\",\n    customerPortalUrl: \"customer_portal_url\",\n    customerId: \"customer_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomerSession$ {\n  /** @deprecated use `CustomerSession$inboundSchema` instead. */\n  export const inboundSchema = CustomerSession$inboundSchema;\n  /** @deprecated use `CustomerSession$outboundSchema` instead. */\n  export const outboundSchema = CustomerSession$outboundSchema;\n  /** @deprecated use `CustomerSession$Outbound` instead. */\n  export type Outbound = CustomerSession$Outbound;\n}\n\nexport function customerSessionToJSON(\n  customerSession: CustomerSession,\n): string {\n  return JSON.stringify(CustomerSession$outboundSchema.parse(customerSession));\n}\n\nexport function customerSessionFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomerSession, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomerSession$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomerSession' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 18002, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18008, "column": 0}, "map": {"version":3,"file":"customersessioncustomerexternalidcreate.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customersessioncustomerexternalidcreate.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\n/**\n * Schema for creating a customer session using an external customer ID.\n */\nexport type CustomerSessionCustomerExternalIDCreate = {\n  /**\n   * External ID of the customer to create a session for.\n   */\n  externalCustomerId: string;\n};\n\n/** @internal */\nexport const CustomerSessionCustomerExternalIDCreate$inboundSchema: z.ZodType<\n  CustomerSessionCustomerExternalIDCreate,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  external_customer_id: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    \"external_customer_id\": \"externalCustomerId\",\n  });\n});\n\n/** @internal */\nexport type CustomerSessionCustomerExternalIDCreate$Outbound = {\n  external_customer_id: string;\n};\n\n/** @internal */\nexport const CustomerSessionCustomerExternalIDCreate$outboundSchema: z.ZodType<\n  CustomerSessionCustomerExternalIDCreate$Outbound,\n  z.ZodTypeDef,\n  CustomerSessionCustomerExternalIDCreate\n> = z.object({\n  externalCustomerId: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    externalCustomerId: \"external_customer_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomerSessionCustomerExternalIDCreate$ {\n  /** @deprecated use `CustomerSessionCustomerExternalIDCreate$inboundSchema` instead. */\n  export const inboundSchema =\n    CustomerSessionCustomerExternalIDCreate$inboundSchema;\n  /** @deprecated use `CustomerSessionCustomerExternalIDCreate$outboundSchema` instead. */\n  export const outboundSchema =\n    CustomerSessionCustomerExternalIDCreate$outboundSchema;\n  /** @deprecated use `CustomerSessionCustomerExternalIDCreate$Outbound` instead. */\n  export type Outbound = CustomerSessionCustomerExternalIDCreate$Outbound;\n}\n\nexport function customerSessionCustomerExternalIDCreateToJSON(\n  customerSessionCustomerExternalIDCreate:\n    CustomerSessionCustomerExternalIDCreate,\n): string {\n  return JSON.stringify(\n    CustomerSessionCustomerExternalIDCreate$outboundSchema.parse(\n      customerSessionCustomerExternalIDCreate,\n    ),\n  );\n}\n\nexport function customerSessionCustomerExternalIDCreateFromJSON(\n  jsonString: string,\n): SafeParseResult<\n  CustomerSessionCustomerExternalIDCreate,\n  SDKValidationError\n> {\n  return safeParse(\n    jsonString,\n    (x) =>\n      CustomerSessionCustomerExternalIDCreate$inboundSchema.parse(\n        JSON.parse(x),\n      ),\n    `Failed to parse 'CustomerSessionCustomerExternalIDCreate' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;;;;;AAe1C,MAAM,qDAAqD,GAI9D,CAAC,6IAAC,MAAM,CAAC;IACX,oBAAoB,EAAE,CAAC,6IAAC,MAAM,EAAE;CACjC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,WAAO,mLAAA,AAAM,EAAC,CAAC,EAAE;QACf,sBAAsB,EAAE,oBAAoB;KAC7C,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAQI,MAAM,sDAAsD,GAI/D,CAAC,6IAAC,MAAM,CAAC;IACX,kBAAkB,EAAE,CAAC,6IAAC,MAAM,EAAE;CAC/B,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,kBAAkB,EAAE,sBAAsB;KAC3C,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,wCAAwC,CASxD;AATD,CAAA,SAAiB,wCAAwC;IACvD,qFAAA,EAAuF,CAC1E,yCAAA,aAAa,GACxB,qDAAqD,CAAC;IACxD,sFAAA,EAAwF,CAC3E,yCAAA,cAAc,GACzB,sDAAsD,CAAC;AAG3D,CAAC,EATgB,wCAAwC,IAAA,CAAxC,wCAAwC,GAAA,CAAA,CAAA,GASxD;AAEK,SAAU,6CAA6C,CAC3D,uCACyC;IAEzC,OAAO,IAAI,CAAC,SAAS,CACnB,sDAAsD,CAAC,KAAK,CAC1D,uCAAuC,CACxC,CACF,CAAC;AACJ,CAAC;AAEK,SAAU,+CAA+C,CAC7D,UAAkB;IAKlB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CACF,CADI,oDACiD,CAAC,KAAK,CACzD,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CACd,EACH,CAAA,mEAAA,CAAqE,CACtE,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 18049, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18055, "column": 0}, "map": {"version":3,"file":"customersessioncustomeridcreate.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customersessioncustomeridcreate.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\n/**\n * Schema for creating a customer session using a customer ID.\n */\nexport type CustomerSessionCustomerIDCreate = {\n  /**\n   * ID of the customer to create a session for.\n   */\n  customerId: string;\n};\n\n/** @internal */\nexport const CustomerSessionCustomerIDCreate$inboundSchema: z.ZodType<\n  CustomerSessionCustomerIDCreate,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  customer_id: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    \"customer_id\": \"customerId\",\n  });\n});\n\n/** @internal */\nexport type CustomerSessionCustomerIDCreate$Outbound = {\n  customer_id: string;\n};\n\n/** @internal */\nexport const CustomerSessionCustomerIDCreate$outboundSchema: z.ZodType<\n  CustomerSessionCustomerIDCreate$Outbound,\n  z.ZodTypeDef,\n  CustomerSessionCustomerIDCreate\n> = z.object({\n  customerId: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    customerId: \"customer_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomerSessionCustomerIDCreate$ {\n  /** @deprecated use `CustomerSessionCustomerIDCreate$inboundSchema` instead. */\n  export const inboundSchema = CustomerSessionCustomerIDCreate$inboundSchema;\n  /** @deprecated use `CustomerSessionCustomerIDCreate$outboundSchema` instead. */\n  export const outboundSchema = CustomerSessionCustomerIDCreate$outboundSchema;\n  /** @deprecated use `CustomerSessionCustomerIDCreate$Outbound` instead. */\n  export type Outbound = CustomerSessionCustomerIDCreate$Outbound;\n}\n\nexport function customerSessionCustomerIDCreateToJSON(\n  customerSessionCustomerIDCreate: CustomerSessionCustomerIDCreate,\n): string {\n  return JSON.stringify(\n    CustomerSessionCustomerIDCreate$outboundSchema.parse(\n      customerSessionCustomerIDCreate,\n    ),\n  );\n}\n\nexport function customerSessionCustomerIDCreateFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomerSessionCustomerIDCreate, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomerSessionCustomerIDCreate$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomerSessionCustomerIDCreate' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;;;;;AAe1C,MAAM,6CAA6C,GAItD,CAAC,6IAAC,MAAM,CAAC;IACX,WAAW,EAAE,CAAC,6IAAC,MAAM,EAAE;CACxB,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,WAAO,mLAAA,AAAM,EAAC,CAAC,EAAE;QACf,aAAa,EAAE,YAAY;KAC5B,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAQI,MAAM,8CAA8C,GAIvD,CAAC,6IAAC,MAAM,CAAC;IACX,UAAU,EAAE,CAAC,6IAAC,MAAM,EAAE;CACvB,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,UAAU,EAAE,aAAa;KAC1B,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,gCAAgC,CAOhD;AAPD,CAAA,SAAiB,gCAAgC;IAC/C,6EAAA,EAA+E,CAClE,iCAAA,aAAa,GAAG,6CAA6C,CAAC;IAC3E,8EAAA,EAAgF,CACnE,iCAAA,cAAc,GAAG,8CAA8C,CAAC;AAG/E,CAAC,EAPgB,gCAAgC,IAAA,CAAhC,gCAAgC,GAAA,CAAA,CAAA,GAOhD;AAEK,SAAU,qCAAqC,CACnD,+BAAgE;IAEhE,OAAO,IAAI,CAAC,SAAS,CACnB,8CAA8C,CAAC,KAAK,CAClD,+BAA+B,CAChC,CACF,CAAC;AACJ,CAAC;AAEK,SAAU,uCAAuC,CACrD,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,4CAA8C,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACzE,CAAA,2DAAA,CAA6D,CAC9D,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 18096, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18102, "column": 0}, "map": {"version":3,"file":"customfieldcreatecheckbox.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customfieldcreatecheckbox.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  CustomFieldCheckboxProperties,\n  CustomFieldCheckboxProperties$inboundSchema,\n  CustomFieldCheckboxProperties$Outbound,\n  CustomFieldCheckboxProperties$outboundSchema,\n} from \"./customfieldcheckboxproperties.js\";\n\nexport type CustomFieldCreateCheckboxMetadata =\n  | string\n  | number\n  | number\n  | boolean;\n\n/**\n * Schema to create a custom field of type checkbox.\n */\nexport type CustomFieldCreateCheckbox = {\n  /**\n   * Key-value object allowing you to store additional information.\n   *\n   * @remarks\n   *\n   * The key must be a string with a maximum length of **40 characters**.\n   * The value must be either:\n   *\n   * * A string with a maximum length of **500 characters**\n   * * An integer\n   * * A floating-point number\n   * * A boolean\n   *\n   * You can store up to **50 key-value pairs**.\n   */\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  type?: \"checkbox\" | undefined;\n  /**\n   * Identifier of the custom field. It'll be used as key when storing the value. Must be unique across the organization.It can only contain ASCII letters, numbers and hyphens.\n   */\n  slug: string;\n  /**\n   * Name of the custom field.\n   */\n  name: string;\n  /**\n   * The ID of the organization owning the custom field. **Required unless you use an organization token.**\n   */\n  organizationId?: string | null | undefined;\n  properties: CustomFieldCheckboxProperties;\n};\n\n/** @internal */\nexport const CustomFieldCreateCheckboxMetadata$inboundSchema: z.ZodType<\n  CustomFieldCreateCheckboxMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type CustomFieldCreateCheckboxMetadata$Outbound =\n  | string\n  | number\n  | number\n  | boolean;\n\n/** @internal */\nexport const CustomFieldCreateCheckboxMetadata$outboundSchema: z.ZodType<\n  CustomFieldCreateCheckboxMetadata$Outbound,\n  z.ZodTypeDef,\n  CustomFieldCreateCheckboxMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomFieldCreateCheckboxMetadata$ {\n  /** @deprecated use `CustomFieldCreateCheckboxMetadata$inboundSchema` instead. */\n  export const inboundSchema = CustomFieldCreateCheckboxMetadata$inboundSchema;\n  /** @deprecated use `CustomFieldCreateCheckboxMetadata$outboundSchema` instead. */\n  export const outboundSchema =\n    CustomFieldCreateCheckboxMetadata$outboundSchema;\n  /** @deprecated use `CustomFieldCreateCheckboxMetadata$Outbound` instead. */\n  export type Outbound = CustomFieldCreateCheckboxMetadata$Outbound;\n}\n\nexport function customFieldCreateCheckboxMetadataToJSON(\n  customFieldCreateCheckboxMetadata: CustomFieldCreateCheckboxMetadata,\n): string {\n  return JSON.stringify(\n    CustomFieldCreateCheckboxMetadata$outboundSchema.parse(\n      customFieldCreateCheckboxMetadata,\n    ),\n  );\n}\n\nexport function customFieldCreateCheckboxMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomFieldCreateCheckboxMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomFieldCreateCheckboxMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomFieldCreateCheckboxMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const CustomFieldCreateCheckbox$inboundSchema: z.ZodType<\n  CustomFieldCreateCheckbox,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  type: z.literal(\"checkbox\").optional(),\n  slug: z.string(),\n  name: z.string(),\n  organization_id: z.nullable(z.string()).optional(),\n  properties: CustomFieldCheckboxProperties$inboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    \"organization_id\": \"organizationId\",\n  });\n});\n\n/** @internal */\nexport type CustomFieldCreateCheckbox$Outbound = {\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  type: \"checkbox\";\n  slug: string;\n  name: string;\n  organization_id?: string | null | undefined;\n  properties: CustomFieldCheckboxProperties$Outbound;\n};\n\n/** @internal */\nexport const CustomFieldCreateCheckbox$outboundSchema: z.ZodType<\n  CustomFieldCreateCheckbox$Outbound,\n  z.ZodTypeDef,\n  CustomFieldCreateCheckbox\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  type: z.literal(\"checkbox\").default(\"checkbox\" as const),\n  slug: z.string(),\n  name: z.string(),\n  organizationId: z.nullable(z.string()).optional(),\n  properties: CustomFieldCheckboxProperties$outboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    organizationId: \"organization_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomFieldCreateCheckbox$ {\n  /** @deprecated use `CustomFieldCreateCheckbox$inboundSchema` instead. */\n  export const inboundSchema = CustomFieldCreateCheckbox$inboundSchema;\n  /** @deprecated use `CustomFieldCreateCheckbox$outboundSchema` instead. */\n  export const outboundSchema = CustomFieldCreateCheckbox$outboundSchema;\n  /** @deprecated use `CustomFieldCreateCheckbox$Outbound` instead. */\n  export type Outbound = CustomFieldCreateCheckbox$Outbound;\n}\n\nexport function customFieldCreateCheckboxToJSON(\n  customFieldCreateCheckbox: CustomFieldCreateCheckbox,\n): string {\n  return JSON.stringify(\n    CustomFieldCreateCheckbox$outboundSchema.parse(customFieldCreateCheckbox),\n  );\n}\n\nexport function customFieldCreateCheckboxFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomFieldCreateCheckbox, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomFieldCreateCheckbox$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomFieldCreateCheckbox' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 18193, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18199, "column": 0}, "map": {"version":3,"file":"customfieldcreatedate.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customfieldcreatedate.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  CustomFieldDateProperties,\n  CustomFieldDateProperties$inboundSchema,\n  CustomFieldDateProperties$Outbound,\n  CustomFieldDateProperties$outboundSchema,\n} from \"./customfielddateproperties.js\";\n\nexport type CustomFieldCreateDateMetadata = string | number | number | boolean;\n\n/**\n * Schema to create a custom field of type date.\n */\nexport type CustomFieldCreateDate = {\n  /**\n   * Key-value object allowing you to store additional information.\n   *\n   * @remarks\n   *\n   * The key must be a string with a maximum length of **40 characters**.\n   * The value must be either:\n   *\n   * * A string with a maximum length of **500 characters**\n   * * An integer\n   * * A floating-point number\n   * * A boolean\n   *\n   * You can store up to **50 key-value pairs**.\n   */\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  type?: \"date\" | undefined;\n  /**\n   * Identifier of the custom field. It'll be used as key when storing the value. Must be unique across the organization.It can only contain ASCII letters, numbers and hyphens.\n   */\n  slug: string;\n  /**\n   * Name of the custom field.\n   */\n  name: string;\n  /**\n   * The ID of the organization owning the custom field. **Required unless you use an organization token.**\n   */\n  organizationId?: string | null | undefined;\n  properties: CustomFieldDateProperties;\n};\n\n/** @internal */\nexport const CustomFieldCreateDateMetadata$inboundSchema: z.ZodType<\n  CustomFieldCreateDateMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type CustomFieldCreateDateMetadata$Outbound =\n  | string\n  | number\n  | number\n  | boolean;\n\n/** @internal */\nexport const CustomFieldCreateDateMetadata$outboundSchema: z.ZodType<\n  CustomFieldCreateDateMetadata$Outbound,\n  z.ZodTypeDef,\n  CustomFieldCreateDateMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomFieldCreateDateMetadata$ {\n  /** @deprecated use `CustomFieldCreateDateMetadata$inboundSchema` instead. */\n  export const inboundSchema = CustomFieldCreateDateMetadata$inboundSchema;\n  /** @deprecated use `CustomFieldCreateDateMetadata$outboundSchema` instead. */\n  export const outboundSchema = CustomFieldCreateDateMetadata$outboundSchema;\n  /** @deprecated use `CustomFieldCreateDateMetadata$Outbound` instead. */\n  export type Outbound = CustomFieldCreateDateMetadata$Outbound;\n}\n\nexport function customFieldCreateDateMetadataToJSON(\n  customFieldCreateDateMetadata: CustomFieldCreateDateMetadata,\n): string {\n  return JSON.stringify(\n    CustomFieldCreateDateMetadata$outboundSchema.parse(\n      customFieldCreateDateMetadata,\n    ),\n  );\n}\n\nexport function customFieldCreateDateMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomFieldCreateDateMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomFieldCreateDateMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomFieldCreateDateMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const CustomFieldCreateDate$inboundSchema: z.ZodType<\n  CustomFieldCreateDate,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  type: z.literal(\"date\").optional(),\n  slug: z.string(),\n  name: z.string(),\n  organization_id: z.nullable(z.string()).optional(),\n  properties: CustomFieldDateProperties$inboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    \"organization_id\": \"organizationId\",\n  });\n});\n\n/** @internal */\nexport type CustomFieldCreateDate$Outbound = {\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  type: \"date\";\n  slug: string;\n  name: string;\n  organization_id?: string | null | undefined;\n  properties: CustomFieldDateProperties$Outbound;\n};\n\n/** @internal */\nexport const CustomFieldCreateDate$outboundSchema: z.ZodType<\n  CustomFieldCreateDate$Outbound,\n  z.ZodTypeDef,\n  CustomFieldCreateDate\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  type: z.literal(\"date\").default(\"date\" as const),\n  slug: z.string(),\n  name: z.string(),\n  organizationId: z.nullable(z.string()).optional(),\n  properties: CustomFieldDateProperties$outboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    organizationId: \"organization_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomFieldCreateDate$ {\n  /** @deprecated use `CustomFieldCreateDate$inboundSchema` instead. */\n  export const inboundSchema = CustomFieldCreateDate$inboundSchema;\n  /** @deprecated use `CustomFieldCreateDate$outboundSchema` instead. */\n  export const outboundSchema = CustomFieldCreateDate$outboundSchema;\n  /** @deprecated use `CustomFieldCreateDate$Outbound` instead. */\n  export type Outbound = CustomFieldCreateDate$Outbound;\n}\n\nexport function customFieldCreateDateToJSON(\n  customFieldCreateDate: CustomFieldCreateDate,\n): string {\n  return JSON.stringify(\n    CustomFieldCreateDate$outboundSchema.parse(customFieldCreateDate),\n  );\n}\n\nexport function customFieldCreateDateFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomFieldCreateDate, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomFieldCreateDate$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomFieldCreateDate' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 18290, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18296, "column": 0}, "map": {"version":3,"file":"customfieldcreatenumber.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customfieldcreatenumber.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  CustomFieldNumberProperties,\n  CustomFieldNumberProperties$inboundSchema,\n  CustomFieldNumberProperties$Outbound,\n  CustomFieldNumberProperties$outboundSchema,\n} from \"./customfieldnumberproperties.js\";\n\nexport type CustomFieldCreateNumberMetadata =\n  | string\n  | number\n  | number\n  | boolean;\n\n/**\n * Schema to create a custom field of type number.\n */\nexport type CustomFieldCreateNumber = {\n  /**\n   * Key-value object allowing you to store additional information.\n   *\n   * @remarks\n   *\n   * The key must be a string with a maximum length of **40 characters**.\n   * The value must be either:\n   *\n   * * A string with a maximum length of **500 characters**\n   * * An integer\n   * * A floating-point number\n   * * A boolean\n   *\n   * You can store up to **50 key-value pairs**.\n   */\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  type?: \"number\" | undefined;\n  /**\n   * Identifier of the custom field. It'll be used as key when storing the value. Must be unique across the organization.It can only contain ASCII letters, numbers and hyphens.\n   */\n  slug: string;\n  /**\n   * Name of the custom field.\n   */\n  name: string;\n  /**\n   * The ID of the organization owning the custom field. **Required unless you use an organization token.**\n   */\n  organizationId?: string | null | undefined;\n  properties: CustomFieldNumberProperties;\n};\n\n/** @internal */\nexport const CustomFieldCreateNumberMetadata$inboundSchema: z.ZodType<\n  CustomFieldCreateNumberMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type CustomFieldCreateNumberMetadata$Outbound =\n  | string\n  | number\n  | number\n  | boolean;\n\n/** @internal */\nexport const CustomFieldCreateNumberMetadata$outboundSchema: z.ZodType<\n  CustomFieldCreateNumberMetadata$Outbound,\n  z.ZodTypeDef,\n  CustomFieldCreateNumberMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomFieldCreateNumberMetadata$ {\n  /** @deprecated use `CustomFieldCreateNumberMetadata$inboundSchema` instead. */\n  export const inboundSchema = CustomFieldCreateNumberMetadata$inboundSchema;\n  /** @deprecated use `CustomFieldCreateNumberMetadata$outboundSchema` instead. */\n  export const outboundSchema = CustomFieldCreateNumberMetadata$outboundSchema;\n  /** @deprecated use `CustomFieldCreateNumberMetadata$Outbound` instead. */\n  export type Outbound = CustomFieldCreateNumberMetadata$Outbound;\n}\n\nexport function customFieldCreateNumberMetadataToJSON(\n  customFieldCreateNumberMetadata: CustomFieldCreateNumberMetadata,\n): string {\n  return JSON.stringify(\n    CustomFieldCreateNumberMetadata$outboundSchema.parse(\n      customFieldCreateNumberMetadata,\n    ),\n  );\n}\n\nexport function customFieldCreateNumberMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomFieldCreateNumberMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomFieldCreateNumberMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomFieldCreateNumberMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const CustomFieldCreateNumber$inboundSchema: z.ZodType<\n  CustomFieldCreateNumber,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  type: z.literal(\"number\").optional(),\n  slug: z.string(),\n  name: z.string(),\n  organization_id: z.nullable(z.string()).optional(),\n  properties: CustomFieldNumberProperties$inboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    \"organization_id\": \"organizationId\",\n  });\n});\n\n/** @internal */\nexport type CustomFieldCreateNumber$Outbound = {\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  type: \"number\";\n  slug: string;\n  name: string;\n  organization_id?: string | null | undefined;\n  properties: CustomFieldNumberProperties$Outbound;\n};\n\n/** @internal */\nexport const CustomFieldCreateNumber$outboundSchema: z.ZodType<\n  CustomFieldCreateNumber$Outbound,\n  z.ZodTypeDef,\n  CustomFieldCreateNumber\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  type: z.literal(\"number\").default(\"number\" as const),\n  slug: z.string(),\n  name: z.string(),\n  organizationId: z.nullable(z.string()).optional(),\n  properties: CustomFieldNumberProperties$outboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    organizationId: \"organization_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomFieldCreateNumber$ {\n  /** @deprecated use `CustomFieldCreateNumber$inboundSchema` instead. */\n  export const inboundSchema = CustomFieldCreateNumber$inboundSchema;\n  /** @deprecated use `CustomFieldCreateNumber$outboundSchema` instead. */\n  export const outboundSchema = CustomFieldCreateNumber$outboundSchema;\n  /** @deprecated use `CustomFieldCreateNumber$Outbound` instead. */\n  export type Outbound = CustomFieldCreateNumber$Outbound;\n}\n\nexport function customFieldCreateNumberToJSON(\n  customFieldCreateNumber: CustomFieldCreateNumber,\n): string {\n  return JSON.stringify(\n    CustomFieldCreateNumber$outboundSchema.parse(customFieldCreateNumber),\n  );\n}\n\nexport function customFieldCreateNumberFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomFieldCreateNumber, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomFieldCreateNumber$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomFieldCreateNumber' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 18387, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18393, "column": 0}, "map": {"version":3,"file":"customfieldcreateselect.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customfieldcreateselect.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  CustomFieldSelectProperties,\n  CustomFieldSelectProperties$inboundSchema,\n  CustomFieldSelectProperties$Outbound,\n  CustomFieldSelectProperties$outboundSchema,\n} from \"./customfieldselectproperties.js\";\n\nexport type CustomFieldCreateSelectMetadata =\n  | string\n  | number\n  | number\n  | boolean;\n\n/**\n * Schema to create a custom field of type select.\n */\nexport type CustomFieldCreateSelect = {\n  /**\n   * Key-value object allowing you to store additional information.\n   *\n   * @remarks\n   *\n   * The key must be a string with a maximum length of **40 characters**.\n   * The value must be either:\n   *\n   * * A string with a maximum length of **500 characters**\n   * * An integer\n   * * A floating-point number\n   * * A boolean\n   *\n   * You can store up to **50 key-value pairs**.\n   */\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  type?: \"select\" | undefined;\n  /**\n   * Identifier of the custom field. It'll be used as key when storing the value. Must be unique across the organization.It can only contain ASCII letters, numbers and hyphens.\n   */\n  slug: string;\n  /**\n   * Name of the custom field.\n   */\n  name: string;\n  /**\n   * The ID of the organization owning the custom field. **Required unless you use an organization token.**\n   */\n  organizationId?: string | null | undefined;\n  properties: CustomFieldSelectProperties;\n};\n\n/** @internal */\nexport const CustomFieldCreateSelectMetadata$inboundSchema: z.ZodType<\n  CustomFieldCreateSelectMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type CustomFieldCreateSelectMetadata$Outbound =\n  | string\n  | number\n  | number\n  | boolean;\n\n/** @internal */\nexport const CustomFieldCreateSelectMetadata$outboundSchema: z.ZodType<\n  CustomFieldCreateSelectMetadata$Outbound,\n  z.ZodTypeDef,\n  CustomFieldCreateSelectMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomFieldCreateSelectMetadata$ {\n  /** @deprecated use `CustomFieldCreateSelectMetadata$inboundSchema` instead. */\n  export const inboundSchema = CustomFieldCreateSelectMetadata$inboundSchema;\n  /** @deprecated use `CustomFieldCreateSelectMetadata$outboundSchema` instead. */\n  export const outboundSchema = CustomFieldCreateSelectMetadata$outboundSchema;\n  /** @deprecated use `CustomFieldCreateSelectMetadata$Outbound` instead. */\n  export type Outbound = CustomFieldCreateSelectMetadata$Outbound;\n}\n\nexport function customFieldCreateSelectMetadataToJSON(\n  customFieldCreateSelectMetadata: CustomFieldCreateSelectMetadata,\n): string {\n  return JSON.stringify(\n    CustomFieldCreateSelectMetadata$outboundSchema.parse(\n      customFieldCreateSelectMetadata,\n    ),\n  );\n}\n\nexport function customFieldCreateSelectMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomFieldCreateSelectMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomFieldCreateSelectMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomFieldCreateSelectMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const CustomFieldCreateSelect$inboundSchema: z.ZodType<\n  CustomFieldCreateSelect,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  type: z.literal(\"select\").optional(),\n  slug: z.string(),\n  name: z.string(),\n  organization_id: z.nullable(z.string()).optional(),\n  properties: CustomFieldSelectProperties$inboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    \"organization_id\": \"organizationId\",\n  });\n});\n\n/** @internal */\nexport type CustomFieldCreateSelect$Outbound = {\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  type: \"select\";\n  slug: string;\n  name: string;\n  organization_id?: string | null | undefined;\n  properties: CustomFieldSelectProperties$Outbound;\n};\n\n/** @internal */\nexport const CustomFieldCreateSelect$outboundSchema: z.ZodType<\n  CustomFieldCreateSelect$Outbound,\n  z.ZodTypeDef,\n  CustomFieldCreateSelect\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  type: z.literal(\"select\").default(\"select\" as const),\n  slug: z.string(),\n  name: z.string(),\n  organizationId: z.nullable(z.string()).optional(),\n  properties: CustomFieldSelectProperties$outboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    organizationId: \"organization_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomFieldCreateSelect$ {\n  /** @deprecated use `CustomFieldCreateSelect$inboundSchema` instead. */\n  export const inboundSchema = CustomFieldCreateSelect$inboundSchema;\n  /** @deprecated use `CustomFieldCreateSelect$outboundSchema` instead. */\n  export const outboundSchema = CustomFieldCreateSelect$outboundSchema;\n  /** @deprecated use `CustomFieldCreateSelect$Outbound` instead. */\n  export type Outbound = CustomFieldCreateSelect$Outbound;\n}\n\nexport function customFieldCreateSelectToJSON(\n  customFieldCreateSelect: CustomFieldCreateSelect,\n): string {\n  return JSON.stringify(\n    CustomFieldCreateSelect$outboundSchema.parse(customFieldCreateSelect),\n  );\n}\n\nexport function customFieldCreateSelectFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomFieldCreateSelect, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomFieldCreateSelect$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomFieldCreateSelect' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,yCAAyC,EAEzC,0CAA0C,GAC3C,MAAM,kCAAkC,CAAC;;;;;;AA6CnC,MAAM,6CAA6C,GAItD,CAAC,6IAAC,KAAK,CAAC;IAAC,CAAC,6IAAC,MAAM,EAAE;IAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAAE,CAAC,6IAAC,MAAM,EAAE;IAAE,CAAC,6IAAC,OAAO,EAAE;CAAC,CAAC,CAAC;AAU9D,MAAM,8CAA8C,GAIvD,CAAC,6IAAC,KAAK,CAAC;IAAC,CAAC,6IAAC,MAAM,EAAE;IAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAAE,CAAC,6IAAC,MAAM,EAAE;IAAE,CAAC,6IAAC,OAAO,EAAE;CAAC,CAAC,CAAC;AAM/D,IAAW,gCAAgC,CAOhD;AAPD,CAAA,SAAiB,gCAAgC;IAC/C,6EAAA,EAA+E,CAClE,iCAAA,aAAa,GAAG,6CAA6C,CAAC;IAC3E,8EAAA,EAAgF,CACnE,iCAAA,cAAc,GAAG,8CAA8C,CAAC;AAG/E,CAAC,EAPgB,gCAAgC,IAAA,CAAhC,gCAAgC,GAAA,CAAA,CAAA,GAOhD;AAEK,SAAU,qCAAqC,CACnD,+BAAgE;IAEhE,OAAO,IAAI,CAAC,SAAS,CACnB,8CAA8C,CAAC,KAAK,CAClD,+BAA+B,CAChC,CACF,CAAC;AACJ,CAAC;AAEK,SAAU,uCAAuC,CACrD,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,4CAA8C,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACzE,CAAA,2DAAA,CAA6D,CAC9D,CAAC;AACJ,CAAC;AAGM,MAAM,qCAAqC,GAI9C,CAAC,6IAAC,MAAM,CAAC;IACX,QAAQ,EAAE,CAAC,6IAAC,MAAM,CAChB,CAAC,6IAAC,KAAK,CAAC;QAAC,CAAC,6IAAC,MAAM,EAAE;QAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;QAAE,CAAC,6IAAC,MAAM,EAAE;QAAE,CAAC,6IAAC,OAAO,EAAE;KAAC,CAAC,CACjE,CAAC,QAAQ,EAAE;IACZ,IAAI,EAAE,CAAC,6IAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE;IACpC,IAAI,EAAE,CAAC,6IAAC,MAAM,EAAE;IAChB,IAAI,EAAE,CAAC,6IAAC,MAAM,EAAE;IAChB,eAAe,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;IAClD,UAAU,+MAAE,4CAAyC;CACtD,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAM,AAAN,EAAO,CAAC,EAAE;QACf,iBAAiB,EAAE,gBAAgB;KACpC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAaI,MAAM,sCAAsC,GAI/C,CAAC,6IAAC,MAAM,CAAC;IACX,QAAQ,EAAE,CAAC,6IAAC,MAAM,CAChB,CAAC,6IAAC,KAAK,CAAC;QAAC,CAAC,6IAAC,MAAM,EAAE;QAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;QAAE,CAAC,6IAAC,MAAM,EAAE;QAAE,CAAC,6IAAC,OAAO,EAAE;KAAC,CAAC,CACjE,CAAC,QAAQ,EAAE;IACZ,IAAI,EAAE,CAAC,6IAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,QAAiB,CAAC;IACpD,IAAI,EAAE,CAAC,6IAAC,MAAM,EAAE;IAChB,IAAI,EAAE,CAAC,6IAAC,MAAM,EAAE;IAChB,cAAc,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;IACjD,UAAU,EAAE,0PAA0C;CACvD,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,cAAc,EAAE,iBAAiB;KAClC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,wBAAwB,CAOxC;AAPD,CAAA,SAAiB,wBAAwB;IACvC,qEAAA,EAAuE,CAC1D,yBAAA,aAAa,GAAG,qCAAqC,CAAC;IACnE,sEAAA,EAAwE,CAC3D,yBAAA,cAAc,GAAG,sCAAsC,CAAC;AAGvE,CAAC,EAPgB,wBAAwB,IAAA,CAAxB,wBAAwB,GAAA,CAAA,CAAA,GAOxC;AAEK,SAAU,6BAA6B,CAC3C,uBAAgD;IAEhD,OAAO,IAAI,CAAC,SAAS,CACnB,sCAAsC,CAAC,KAAK,CAAC,uBAAuB,CAAC,CACtE,CAAC;AACJ,CAAC;AAEK,SAAU,+BAA+B,CAC7C,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,oCAAsC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACjE,CAAA,mDAAA,CAAqD,CACtD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 18484, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18490, "column": 0}, "map": {"version":3,"file":"customfieldcreatetext.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customfieldcreatetext.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  CustomFieldTextProperties,\n  CustomFieldTextProperties$inboundSchema,\n  CustomFieldTextProperties$Outbound,\n  CustomFieldTextProperties$outboundSchema,\n} from \"./customfieldtextproperties.js\";\n\nexport type CustomFieldCreateTextMetadata = string | number | number | boolean;\n\n/**\n * Schema to create a custom field of type text.\n */\nexport type CustomFieldCreateText = {\n  /**\n   * Key-value object allowing you to store additional information.\n   *\n   * @remarks\n   *\n   * The key must be a string with a maximum length of **40 characters**.\n   * The value must be either:\n   *\n   * * A string with a maximum length of **500 characters**\n   * * An integer\n   * * A floating-point number\n   * * A boolean\n   *\n   * You can store up to **50 key-value pairs**.\n   */\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  type?: \"text\" | undefined;\n  /**\n   * Identifier of the custom field. It'll be used as key when storing the value. Must be unique across the organization.It can only contain ASCII letters, numbers and hyphens.\n   */\n  slug: string;\n  /**\n   * Name of the custom field.\n   */\n  name: string;\n  /**\n   * The ID of the organization owning the custom field. **Required unless you use an organization token.**\n   */\n  organizationId?: string | null | undefined;\n  properties: CustomFieldTextProperties;\n};\n\n/** @internal */\nexport const CustomFieldCreateTextMetadata$inboundSchema: z.ZodType<\n  CustomFieldCreateTextMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type CustomFieldCreateTextMetadata$Outbound =\n  | string\n  | number\n  | number\n  | boolean;\n\n/** @internal */\nexport const CustomFieldCreateTextMetadata$outboundSchema: z.ZodType<\n  CustomFieldCreateTextMetadata$Outbound,\n  z.ZodTypeDef,\n  CustomFieldCreateTextMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomFieldCreateTextMetadata$ {\n  /** @deprecated use `CustomFieldCreateTextMetadata$inboundSchema` instead. */\n  export const inboundSchema = CustomFieldCreateTextMetadata$inboundSchema;\n  /** @deprecated use `CustomFieldCreateTextMetadata$outboundSchema` instead. */\n  export const outboundSchema = CustomFieldCreateTextMetadata$outboundSchema;\n  /** @deprecated use `CustomFieldCreateTextMetadata$Outbound` instead. */\n  export type Outbound = CustomFieldCreateTextMetadata$Outbound;\n}\n\nexport function customFieldCreateTextMetadataToJSON(\n  customFieldCreateTextMetadata: CustomFieldCreateTextMetadata,\n): string {\n  return JSON.stringify(\n    CustomFieldCreateTextMetadata$outboundSchema.parse(\n      customFieldCreateTextMetadata,\n    ),\n  );\n}\n\nexport function customFieldCreateTextMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomFieldCreateTextMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomFieldCreateTextMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomFieldCreateTextMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const CustomFieldCreateText$inboundSchema: z.ZodType<\n  CustomFieldCreateText,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  type: z.literal(\"text\").optional(),\n  slug: z.string(),\n  name: z.string(),\n  organization_id: z.nullable(z.string()).optional(),\n  properties: CustomFieldTextProperties$inboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    \"organization_id\": \"organizationId\",\n  });\n});\n\n/** @internal */\nexport type CustomFieldCreateText$Outbound = {\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  type: \"text\";\n  slug: string;\n  name: string;\n  organization_id?: string | null | undefined;\n  properties: CustomFieldTextProperties$Outbound;\n};\n\n/** @internal */\nexport const CustomFieldCreateText$outboundSchema: z.ZodType<\n  CustomFieldCreateText$Outbound,\n  z.ZodTypeDef,\n  CustomFieldCreateText\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  type: z.literal(\"text\").default(\"text\" as const),\n  slug: z.string(),\n  name: z.string(),\n  organizationId: z.nullable(z.string()).optional(),\n  properties: CustomFieldTextProperties$outboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    organizationId: \"organization_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomFieldCreateText$ {\n  /** @deprecated use `CustomFieldCreateText$inboundSchema` instead. */\n  export const inboundSchema = CustomFieldCreateText$inboundSchema;\n  /** @deprecated use `CustomFieldCreateText$outboundSchema` instead. */\n  export const outboundSchema = CustomFieldCreateText$outboundSchema;\n  /** @deprecated use `CustomFieldCreateText$Outbound` instead. */\n  export type Outbound = CustomFieldCreateText$Outbound;\n}\n\nexport function customFieldCreateTextToJSON(\n  customFieldCreateText: CustomFieldCreateText,\n): string {\n  return JSON.stringify(\n    CustomFieldCreateText$outboundSchema.parse(customFieldCreateText),\n  );\n}\n\nexport function customFieldCreateTextFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomFieldCreateText, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomFieldCreateText$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomFieldCreateText' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 18581, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18587, "column": 0}, "map": {"version":3,"file":"customfieldcreate.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customfieldcreate.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  CustomFieldCreateCheckbox,\n  CustomFieldCreateCheckbox$inboundSchema,\n  CustomFieldCreateCheckbox$Outbound,\n  CustomFieldCreateCheckbox$outboundSchema,\n} from \"./customfieldcreatecheckbox.js\";\nimport {\n  CustomFieldCreateDate,\n  CustomFieldCreateDate$inboundSchema,\n  CustomFieldCreateDate$Outbound,\n  CustomFieldCreateDate$outboundSchema,\n} from \"./customfieldcreatedate.js\";\nimport {\n  CustomFieldCreateNumber,\n  CustomFieldCreateNumber$inboundSchema,\n  CustomFieldCreateNumber$Outbound,\n  CustomFieldCreateNumber$outboundSchema,\n} from \"./customfieldcreatenumber.js\";\nimport {\n  CustomFieldCreateSelect,\n  CustomFieldCreateSelect$inboundSchema,\n  CustomFieldCreateSelect$Outbound,\n  CustomFieldCreateSelect$outboundSchema,\n} from \"./customfieldcreateselect.js\";\nimport {\n  CustomFieldCreateText,\n  CustomFieldCreateText$inboundSchema,\n  CustomFieldCreateText$Outbound,\n  CustomFieldCreateText$outboundSchema,\n} from \"./customfieldcreatetext.js\";\n\nexport type CustomFieldCreate =\n  | (CustomFieldCreateCheckbox & { type: \"checkbox\" })\n  | (CustomFieldCreateDate & { type: \"date\" })\n  | (CustomFieldCreateNumber & { type: \"number\" })\n  | (CustomFieldCreateSelect & { type: \"select\" })\n  | (CustomFieldCreateText & { type: \"text\" });\n\n/** @internal */\nexport const CustomFieldCreate$inboundSchema: z.ZodType<\n  CustomFieldCreate,\n  z.ZodTypeDef,\n  unknown\n> = z.union([\n  CustomFieldCreateCheckbox$inboundSchema.and(\n    z.object({ type: z.literal(\"checkbox\") }).transform((v) => ({\n      type: v.type,\n    })),\n  ),\n  CustomFieldCreateDate$inboundSchema.and(\n    z.object({ type: z.literal(\"date\") }).transform((v) => ({ type: v.type })),\n  ),\n  CustomFieldCreateNumber$inboundSchema.and(\n    z.object({ type: z.literal(\"number\") }).transform((v) => ({\n      type: v.type,\n    })),\n  ),\n  CustomFieldCreateSelect$inboundSchema.and(\n    z.object({ type: z.literal(\"select\") }).transform((v) => ({\n      type: v.type,\n    })),\n  ),\n  CustomFieldCreateText$inboundSchema.and(\n    z.object({ type: z.literal(\"text\") }).transform((v) => ({ type: v.type })),\n  ),\n]);\n\n/** @internal */\nexport type CustomFieldCreate$Outbound =\n  | (CustomFieldCreateCheckbox$Outbound & { type: \"checkbox\" })\n  | (CustomFieldCreateDate$Outbound & { type: \"date\" })\n  | (CustomFieldCreateNumber$Outbound & { type: \"number\" })\n  | (CustomFieldCreateSelect$Outbound & { type: \"select\" })\n  | (CustomFieldCreateText$Outbound & { type: \"text\" });\n\n/** @internal */\nexport const CustomFieldCreate$outboundSchema: z.ZodType<\n  CustomFieldCreate$Outbound,\n  z.ZodTypeDef,\n  CustomFieldCreate\n> = z.union([\n  CustomFieldCreateCheckbox$outboundSchema.and(\n    z.object({ type: z.literal(\"checkbox\") }).transform((v) => ({\n      type: v.type,\n    })),\n  ),\n  CustomFieldCreateDate$outboundSchema.and(\n    z.object({ type: z.literal(\"date\") }).transform((v) => ({ type: v.type })),\n  ),\n  CustomFieldCreateNumber$outboundSchema.and(\n    z.object({ type: z.literal(\"number\") }).transform((v) => ({\n      type: v.type,\n    })),\n  ),\n  CustomFieldCreateSelect$outboundSchema.and(\n    z.object({ type: z.literal(\"select\") }).transform((v) => ({\n      type: v.type,\n    })),\n  ),\n  CustomFieldCreateText$outboundSchema.and(\n    z.object({ type: z.literal(\"text\") }).transform((v) => ({ type: v.type })),\n  ),\n]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomFieldCreate$ {\n  /** @deprecated use `CustomFieldCreate$inboundSchema` instead. */\n  export const inboundSchema = CustomFieldCreate$inboundSchema;\n  /** @deprecated use `CustomFieldCreate$outboundSchema` instead. */\n  export const outboundSchema = CustomFieldCreate$outboundSchema;\n  /** @deprecated use `CustomFieldCreate$Outbound` instead. */\n  export type Outbound = CustomFieldCreate$Outbound;\n}\n\nexport function customFieldCreateToJSON(\n  customFieldCreate: CustomFieldCreate,\n): string {\n  return JSON.stringify(\n    CustomFieldCreate$outboundSchema.parse(customFieldCreate),\n  );\n}\n\nexport function customFieldCreateFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomFieldCreate, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomFieldCreate$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomFieldCreate' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,uCAAuC,EAEvC,wCAAwC,GACzC,MAAM,gCAAgC,CAAC;AACxC,OAAO,EAEL,mCAAmC,EAEnC,oCAAoC,GACrC,MAAM,4BAA4B,CAAC;AACpC,OAAO,EAEL,qCAAqC,EAErC,sCAAsC,GACvC,MAAM,8BAA8B,CAAC;AACtC,OAAO,EAEL,qCAAqC,EAErC,sCAAsC,GACvC,MAAM,8BAA8B,CAAC;AACtC,OAAO,EAEL,mCAAmC,EAEnC,oCAAoC,GACrC,MAAM,4BAA4B,CAAC;;;;;;;;;AAU7B,MAAM,+BAA+B,GAIxC,CAAC,6IAAC,KAAK,CAAC;+MACV,0CAAuC,CAAC,GAAG,CACzC,CAAC,6IAAC,MAAM,CAAC;QAAE,IAAI,EAAE,CAAC,6IAAC,OAAO,CAAC,UAAU,CAAC;IAAA,CAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAG,CAAD,AAAE;YAC1D,IAAI,EAAE,CAAC,CAAC,IAAI;SACb,CAAC,CAAC,CACJ;2MACD,sCAAmC,CAAC,GAAG,CACrC,CAAC,6IAAC,MAAM,CAAC;QAAE,IAAI,EAAE,CAAC,6IAAC,OAAO,CAAC,MAAM,CAAC;IAAA,CAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAG,CAAD,AAAE;YAAE,IAAI,EAAE,CAAC,CAAC,IAAI;QAAA,CAAE,CAAC,CAAC,CAC3E;6MACD,wCAAqC,CAAC,GAAG,CACvC,CAAC,6IAAC,MAAM,CAAC;QAAE,IAAI,EAAE,CAAC,6IAAC,OAAO,CAAC,QAAQ,CAAC;IAAA,CAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAG,CAAC,AAAF;YACtD,IAAI,EAAE,CAAC,CAAC,IAAI;SACb,CAAC,CAAC,CACJ;6MACD,wCAAqC,CAAC,GAAG,CACvC,CAAC,6IAAC,MAAM,CAAC;QAAE,IAAI,EAAE,CAAC,6IAAC,OAAO,CAAC,QAAQ,CAAC;IAAA,CAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAG,CAAD,AAAE;YACxD,IAAI,EAAE,CAAC,CAAC,IAAI;SACb,CAAC,CAAC,CACJ;2MACD,sCAAmC,CAAC,GAAG,CACrC,CAAC,6IAAC,MAAM,CAAC;QAAE,IAAI,EAAE,CAAC,6IAAC,OAAO,CAAC,MAAM,CAAC;IAAA,CAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAG,CAAD,AAAE;YAAE,IAAI,EAAE,CAAC,CAAC,IAAI;QAAA,CAAE,CAAC,CAAC,CAC3E;CACF,CAAC,CAAC;AAWI,MAAM,gCAAgC,GAIzC,CAAC,6IAAC,KAAK,CAAC;8MACV,4CAAwC,CAAC,GAAG,CAC1C,CAAC,6IAAC,MAAM,CAAC;QAAE,IAAI,EAAE,CAAC,6IAAC,OAAO,CAAC,UAAU,CAAC;IAAA,CAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAG,CAAD,AAAE;YAC1D,IAAI,EAAE,CAAC,CAAC,IAAI;SACb,CAAC,CAAC,CACJ;2MACD,uCAAoC,CAAC,GAAG,CACtC,CAAC,6IAAC,MAAM,CAAC;QAAE,IAAI,EAAE,CAAC,6IAAC,OAAO,CAAC,MAAM,CAAC;IAAA,CAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAG,CAAD,AAAE;YAAE,IAAI,EAAE,CAAC,CAAC,IAAI;QAAA,CAAE,CAAC,CAAC,CAC3E;6MACD,yCAAsC,CAAC,GAAG,CACxC,CAAC,6IAAC,MAAM,CAAC;QAAE,IAAI,EAAE,CAAC,6IAAC,OAAO,CAAC,QAAQ,CAAC;IAAA,CAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAG,CAAC,AAAF;YACtD,IAAI,EAAE,CAAC,CAAC,IAAI;SACb,CAAC,CAAC,CACJ;6MACD,yCAAsC,CAAC,GAAG,CACxC,CAAC,6IAAC,MAAM,CAAC;QAAE,IAAI,EAAE,CAAC,6IAAC,OAAO,CAAC,QAAQ,CAAC;IAAA,CAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAG,CAAD,AAAE;YACxD,IAAI,EAAE,CAAC,CAAC,IAAI;SACb,CAAC,CAAC,CACJ;2MACD,uCAAoC,CAAC,GAAG,CACtC,CAAC,6IAAC,MAAM,CAAC;QAAE,IAAI,EAAE,CAAC,6IAAC,OAAO,CAAC,MAAM,CAAC;IAAA,CAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAG,CAAD,AAAE;YAAE,IAAI,EAAE,CAAC,CAAC,IAAI;QAAA,CAAE,CAAC,CAAC,CAC3E;CACF,CAAC,CAAC;AAMG,IAAW,kBAAkB,CAOlC;AAPD,CAAA,SAAiB,kBAAkB;IACjC,+DAAA,EAAiE,CACpD,mBAAA,aAAa,GAAG,+BAA+B,CAAC;IAC7D,gEAAA,EAAkE,CACrD,mBAAA,cAAc,GAAG,gCAAgC,CAAC;AAGjE,CAAC,EAPgB,kBAAkB,IAAA,CAAlB,kBAAkB,GAAA,CAAA,CAAA,GAOlC;AAEK,SAAU,uBAAuB,CACrC,iBAAoC;IAEpC,OAAO,IAAI,CAAC,SAAS,CACnB,gCAAgC,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAC1D,CAAC;AACJ,CAAC;AAEK,SAAU,yBAAyB,CACvC,UAAkB;IAElB,mLAAO,YAAS,AAAT,EACL,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,8BAAgC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC3D,CAAA,6CAAA,CAA+C,CAChD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 18676, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18682, "column": 0}, "map": {"version":3,"file":"customfieldsortproperty.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customfieldsortproperty.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { ClosedEnum } from \"../../types/enums.js\";\n\nexport const CustomFieldSortProperty = {\n  CreatedAt: \"created_at\",\n  MinusCreatedAt: \"-created_at\",\n  Slug: \"slug\",\n  MinusSlug: \"-slug\",\n  Name: \"name\",\n  MinusName: \"-name\",\n  Type: \"type\",\n  MinusType: \"-type\",\n} as const;\nexport type CustomFieldSortProperty = ClosedEnum<\n  typeof CustomFieldSortProperty\n>;\n\n/** @internal */\nexport const CustomFieldSortProperty$inboundSchema: z.ZodNativeEnum<\n  typeof CustomFieldSortProperty\n> = z.nativeEnum(CustomFieldSortProperty);\n\n/** @internal */\nexport const CustomFieldSortProperty$outboundSchema: z.ZodNativeEnum<\n  typeof CustomFieldSortProperty\n> = CustomFieldSortProperty$inboundSchema;\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomFieldSortProperty$ {\n  /** @deprecated use `CustomFieldSortProperty$inboundSchema` instead. */\n  export const inboundSchema = CustomFieldSortProperty$inboundSchema;\n  /** @deprecated use `CustomFieldSortProperty$outboundSchema` instead. */\n  export const outboundSchema = CustomFieldSortProperty$outboundSchema;\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;AAGlB,MAAM,uBAAuB,GAAG;IACrC,SAAS,EAAE,YAAY;IACvB,cAAc,EAAE,aAAa;IAC7B,IAAI,EAAE,MAAM;IACZ,SAAS,EAAE,OAAO;IAClB,IAAI,EAAE,MAAM;IACZ,SAAS,EAAE,OAAO;IAClB,IAAI,EAAE,MAAM;IACZ,SAAS,EAAE,OAAO;CACV,CAAC;AAMJ,MAAM,qCAAqC,GAE9C,CAAC,6IAAC,UAAU,CAAC,uBAAuB,CAAC,CAAC;AAGnC,MAAM,sCAAsC,GAE/C,qCAAqC,CAAC;AAMpC,IAAW,wBAAwB,CAKxC;AALD,CAAA,SAAiB,wBAAwB;IACvC,qEAAA,EAAuE,CAC1D,yBAAA,aAAa,GAAG,qCAAqC,CAAC;IACnE,sEAAA,EAAwE,CAC3D,yBAAA,cAAc,GAAG,sCAAsC,CAAC;AACvE,CAAC,EALgB,wBAAwB,IAAA,CAAxB,wBAAwB,GAAA,CAAA,CAAA,GAKxC","ignoreList":[0]}},
    {"offset": {"line": 18710, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18716, "column": 0}, "map": {"version":3,"file":"customfieldtype.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customfieldtype.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { ClosedEnum } from \"../../types/enums.js\";\n\nexport const CustomFieldType = {\n  Text: \"text\",\n  Number: \"number\",\n  Date: \"date\",\n  Checkbox: \"checkbox\",\n  Select: \"select\",\n} as const;\nexport type CustomFieldType = ClosedEnum<typeof CustomFieldType>;\n\n/** @internal */\nexport const CustomFieldType$inboundSchema: z.ZodNativeEnum<\n  typeof CustomFieldType\n> = z.nativeEnum(CustomFieldType);\n\n/** @internal */\nexport const CustomFieldType$outboundSchema: z.ZodNativeEnum<\n  typeof CustomFieldType\n> = CustomFieldType$inboundSchema;\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomFieldType$ {\n  /** @deprecated use `CustomFieldType$inboundSchema` instead. */\n  export const inboundSchema = CustomFieldType$inboundSchema;\n  /** @deprecated use `CustomFieldType$outboundSchema` instead. */\n  export const outboundSchema = CustomFieldType$outboundSchema;\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;AAGlB,MAAM,eAAe,GAAG;IAC7B,IAAI,EAAE,MAAM;IACZ,MAAM,EAAE,QAAQ;IAChB,IAAI,EAAE,MAAM;IACZ,QAAQ,EAAE,UAAU;IACpB,MAAM,EAAE,QAAQ;CACR,CAAC;AAIJ,MAAM,6BAA6B,GAEtC,CAAC,6IAAC,UAAU,CAAC,eAAe,CAAC,CAAC;AAG3B,MAAM,8BAA8B,GAEvC,6BAA6B,CAAC;AAM5B,IAAW,gBAAgB,CAKhC;AALD,CAAA,SAAiB,gBAAgB;IAC/B,6DAAA,EAA+D,CAClD,iBAAA,aAAa,GAAG,6BAA6B,CAAC;IAC3D,8DAAA,EAAgE,CACnD,iBAAA,cAAc,GAAG,8BAA8B,CAAC;AAC/D,CAAC,EALgB,gBAAgB,IAAA,CAAhB,gBAAgB,GAAA,CAAA,CAAA,GAKhC","ignoreList":[0]}},
    {"offset": {"line": 18741, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18747, "column": 0}, "map": {"version":3,"file":"listresourcecustomfield.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/listresourcecustomfield.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  CustomField,\n  CustomField$inboundSchema,\n  CustomField$Outbound,\n  CustomField$outboundSchema,\n} from \"./customfield.js\";\nimport {\n  Pagination,\n  Pagination$inboundSchema,\n  Pagination$Outbound,\n  Pagination$outboundSchema,\n} from \"./pagination.js\";\n\nexport type ListResourceCustomField = {\n  items: Array<CustomField>;\n  pagination: Pagination;\n};\n\n/** @internal */\nexport const ListResourceCustomField$inboundSchema: z.ZodType<\n  ListResourceCustomField,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  items: z.array(CustomField$inboundSchema),\n  pagination: Pagination$inboundSchema,\n});\n\n/** @internal */\nexport type ListResourceCustomField$Outbound = {\n  items: Array<CustomField$Outbound>;\n  pagination: Pagination$Outbound;\n};\n\n/** @internal */\nexport const ListResourceCustomField$outboundSchema: z.ZodType<\n  ListResourceCustomField$Outbound,\n  z.ZodTypeDef,\n  ListResourceCustomField\n> = z.object({\n  items: z.array(CustomField$outboundSchema),\n  pagination: Pagination$outboundSchema,\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace ListResourceCustomField$ {\n  /** @deprecated use `ListResourceCustomField$inboundSchema` instead. */\n  export const inboundSchema = ListResourceCustomField$inboundSchema;\n  /** @deprecated use `ListResourceCustomField$outboundSchema` instead. */\n  export const outboundSchema = ListResourceCustomField$outboundSchema;\n  /** @deprecated use `ListResourceCustomField$Outbound` instead. */\n  export type Outbound = ListResourceCustomField$Outbound;\n}\n\nexport function listResourceCustomFieldToJSON(\n  listResourceCustomField: ListResourceCustomField,\n): string {\n  return JSON.stringify(\n    ListResourceCustomField$outboundSchema.parse(listResourceCustomField),\n  );\n}\n\nexport function listResourceCustomFieldFromJSON(\n  jsonString: string,\n): SafeParseResult<ListResourceCustomField, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => ListResourceCustomField$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'ListResourceCustomField' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;AAGH,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,yBAAyB,EAEzB,0BAA0B,GAC3B,MAAM,kBAAkB,CAAC;AAC1B,OAAO,EAEL,wBAAwB,EAExB,yBAAyB,GAC1B,MAAM,iBAAiB,CAAC;AAfzB,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;;;;AAuBlB,MAAM,qCAAqC,GAI9C,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,KAAK,8LAAC,4BAAyB,CAAC;IACzC,UAAU,8LAAE,2BAAwB;CACrC,CAAC,CAAC;AASI,MAAM,sCAAsC,GAI/C,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,KAAK,8LAAC,6BAA0B,CAAC;IAC1C,UAAU,8LAAE,4BAAyB;CACtC,CAAC,CAAC;AAMG,IAAW,wBAAwB,CAOxC;AAPD,CAAA,SAAiB,wBAAwB;IACvC,qEAAA,EAAuE,CAC1D,yBAAA,aAAa,GAAG,qCAAqC,CAAC;IACnE,sEAAA,EAAwE,CAC3D,yBAAA,cAAc,GAAG,sCAAsC,CAAC;AAGvE,CAAC,EAPgB,wBAAwB,IAAA,CAAxB,wBAAwB,GAAA,CAAA,CAAA,GAOxC;AAEK,SAAU,6BAA6B,CAC3C,uBAAgD;IAEhD,OAAO,IAAI,CAAC,SAAS,CACnB,sCAAsC,CAAC,KAAK,CAAC,uBAAuB,CAAC,CACtE,CAAC;AACJ,CAAC;AAEK,SAAU,+BAA+B,CAC7C,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,oCAAsC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACjE,CAAA,mDAAA,CAAqD,CACtD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 18784, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18790, "column": 0}, "map": {"version":3,"file":"customfieldupdatecheckbox.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customfieldupdatecheckbox.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  CustomFieldCheckboxProperties,\n  CustomFieldCheckboxProperties$inboundSchema,\n  CustomFieldCheckboxProperties$Outbound,\n  CustomFieldCheckboxProperties$outboundSchema,\n} from \"./customfieldcheckboxproperties.js\";\n\nexport type CustomFieldUpdateCheckboxMetadata =\n  | string\n  | number\n  | number\n  | boolean;\n\n/**\n * Schema to update a custom field of type checkbox.\n */\nexport type CustomFieldUpdateCheckbox = {\n  /**\n   * Key-value object allowing you to store additional information.\n   *\n   * @remarks\n   *\n   * The key must be a string with a maximum length of **40 characters**.\n   * The value must be either:\n   *\n   * * A string with a maximum length of **500 characters**\n   * * An integer\n   * * A floating-point number\n   * * A boolean\n   *\n   * You can store up to **50 key-value pairs**.\n   */\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  name?: string | null | undefined;\n  slug?: string | null | undefined;\n  type?: \"checkbox\" | undefined;\n  properties?: CustomFieldCheckboxProperties | null | undefined;\n};\n\n/** @internal */\nexport const CustomFieldUpdateCheckboxMetadata$inboundSchema: z.ZodType<\n  CustomFieldUpdateCheckboxMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type CustomFieldUpdateCheckboxMetadata$Outbound =\n  | string\n  | number\n  | number\n  | boolean;\n\n/** @internal */\nexport const CustomFieldUpdateCheckboxMetadata$outboundSchema: z.ZodType<\n  CustomFieldUpdateCheckboxMetadata$Outbound,\n  z.ZodTypeDef,\n  CustomFieldUpdateCheckboxMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomFieldUpdateCheckboxMetadata$ {\n  /** @deprecated use `CustomFieldUpdateCheckboxMetadata$inboundSchema` instead. */\n  export const inboundSchema = CustomFieldUpdateCheckboxMetadata$inboundSchema;\n  /** @deprecated use `CustomFieldUpdateCheckboxMetadata$outboundSchema` instead. */\n  export const outboundSchema =\n    CustomFieldUpdateCheckboxMetadata$outboundSchema;\n  /** @deprecated use `CustomFieldUpdateCheckboxMetadata$Outbound` instead. */\n  export type Outbound = CustomFieldUpdateCheckboxMetadata$Outbound;\n}\n\nexport function customFieldUpdateCheckboxMetadataToJSON(\n  customFieldUpdateCheckboxMetadata: CustomFieldUpdateCheckboxMetadata,\n): string {\n  return JSON.stringify(\n    CustomFieldUpdateCheckboxMetadata$outboundSchema.parse(\n      customFieldUpdateCheckboxMetadata,\n    ),\n  );\n}\n\nexport function customFieldUpdateCheckboxMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomFieldUpdateCheckboxMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomFieldUpdateCheckboxMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomFieldUpdateCheckboxMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const CustomFieldUpdateCheckbox$inboundSchema: z.ZodType<\n  CustomFieldUpdateCheckbox,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  name: z.nullable(z.string()).optional(),\n  slug: z.nullable(z.string()).optional(),\n  type: z.literal(\"checkbox\").optional(),\n  properties: z.nullable(CustomFieldCheckboxProperties$inboundSchema)\n    .optional(),\n});\n\n/** @internal */\nexport type CustomFieldUpdateCheckbox$Outbound = {\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  name?: string | null | undefined;\n  slug?: string | null | undefined;\n  type: \"checkbox\";\n  properties?: CustomFieldCheckboxProperties$Outbound | null | undefined;\n};\n\n/** @internal */\nexport const CustomFieldUpdateCheckbox$outboundSchema: z.ZodType<\n  CustomFieldUpdateCheckbox$Outbound,\n  z.ZodTypeDef,\n  CustomFieldUpdateCheckbox\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  name: z.nullable(z.string()).optional(),\n  slug: z.nullable(z.string()).optional(),\n  type: z.literal(\"checkbox\").default(\"checkbox\" as const),\n  properties: z.nullable(CustomFieldCheckboxProperties$outboundSchema)\n    .optional(),\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomFieldUpdateCheckbox$ {\n  /** @deprecated use `CustomFieldUpdateCheckbox$inboundSchema` instead. */\n  export const inboundSchema = CustomFieldUpdateCheckbox$inboundSchema;\n  /** @deprecated use `CustomFieldUpdateCheckbox$outboundSchema` instead. */\n  export const outboundSchema = CustomFieldUpdateCheckbox$outboundSchema;\n  /** @deprecated use `CustomFieldUpdateCheckbox$Outbound` instead. */\n  export type Outbound = CustomFieldUpdateCheckbox$Outbound;\n}\n\nexport function customFieldUpdateCheckboxToJSON(\n  customFieldUpdateCheckbox: CustomFieldUpdateCheckbox,\n): string {\n  return JSON.stringify(\n    CustomFieldUpdateCheckbox$outboundSchema.parse(customFieldUpdateCheckbox),\n  );\n}\n\nexport function customFieldUpdateCheckboxFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomFieldUpdateCheckbox, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomFieldUpdateCheckbox$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomFieldUpdateCheckbox' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 18869, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18875, "column": 0}, "map": {"version":3,"file":"customfieldupdatedate.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customfieldupdatedate.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  CustomFieldDateProperties,\n  CustomFieldDateProperties$inboundSchema,\n  CustomFieldDateProperties$Outbound,\n  CustomFieldDateProperties$outboundSchema,\n} from \"./customfielddateproperties.js\";\n\nexport type CustomFieldUpdateDateMetadata = string | number | number | boolean;\n\n/**\n * Schema to update a custom field of type date.\n */\nexport type CustomFieldUpdateDate = {\n  /**\n   * Key-value object allowing you to store additional information.\n   *\n   * @remarks\n   *\n   * The key must be a string with a maximum length of **40 characters**.\n   * The value must be either:\n   *\n   * * A string with a maximum length of **500 characters**\n   * * An integer\n   * * A floating-point number\n   * * A boolean\n   *\n   * You can store up to **50 key-value pairs**.\n   */\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  name?: string | null | undefined;\n  slug?: string | null | undefined;\n  type?: \"date\" | undefined;\n  properties?: CustomFieldDateProperties | null | undefined;\n};\n\n/** @internal */\nexport const CustomFieldUpdateDateMetadata$inboundSchema: z.ZodType<\n  CustomFieldUpdateDateMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type CustomFieldUpdateDateMetadata$Outbound =\n  | string\n  | number\n  | number\n  | boolean;\n\n/** @internal */\nexport const CustomFieldUpdateDateMetadata$outboundSchema: z.ZodType<\n  CustomFieldUpdateDateMetadata$Outbound,\n  z.ZodTypeDef,\n  CustomFieldUpdateDateMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomFieldUpdateDateMetadata$ {\n  /** @deprecated use `CustomFieldUpdateDateMetadata$inboundSchema` instead. */\n  export const inboundSchema = CustomFieldUpdateDateMetadata$inboundSchema;\n  /** @deprecated use `CustomFieldUpdateDateMetadata$outboundSchema` instead. */\n  export const outboundSchema = CustomFieldUpdateDateMetadata$outboundSchema;\n  /** @deprecated use `CustomFieldUpdateDateMetadata$Outbound` instead. */\n  export type Outbound = CustomFieldUpdateDateMetadata$Outbound;\n}\n\nexport function customFieldUpdateDateMetadataToJSON(\n  customFieldUpdateDateMetadata: CustomFieldUpdateDateMetadata,\n): string {\n  return JSON.stringify(\n    CustomFieldUpdateDateMetadata$outboundSchema.parse(\n      customFieldUpdateDateMetadata,\n    ),\n  );\n}\n\nexport function customFieldUpdateDateMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomFieldUpdateDateMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomFieldUpdateDateMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomFieldUpdateDateMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const CustomFieldUpdateDate$inboundSchema: z.ZodType<\n  CustomFieldUpdateDate,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  name: z.nullable(z.string()).optional(),\n  slug: z.nullable(z.string()).optional(),\n  type: z.literal(\"date\").optional(),\n  properties: z.nullable(CustomFieldDateProperties$inboundSchema).optional(),\n});\n\n/** @internal */\nexport type CustomFieldUpdateDate$Outbound = {\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  name?: string | null | undefined;\n  slug?: string | null | undefined;\n  type: \"date\";\n  properties?: CustomFieldDateProperties$Outbound | null | undefined;\n};\n\n/** @internal */\nexport const CustomFieldUpdateDate$outboundSchema: z.ZodType<\n  CustomFieldUpdateDate$Outbound,\n  z.ZodTypeDef,\n  CustomFieldUpdateDate\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  name: z.nullable(z.string()).optional(),\n  slug: z.nullable(z.string()).optional(),\n  type: z.literal(\"date\").default(\"date\" as const),\n  properties: z.nullable(CustomFieldDateProperties$outboundSchema).optional(),\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomFieldUpdateDate$ {\n  /** @deprecated use `CustomFieldUpdateDate$inboundSchema` instead. */\n  export const inboundSchema = CustomFieldUpdateDate$inboundSchema;\n  /** @deprecated use `CustomFieldUpdateDate$outboundSchema` instead. */\n  export const outboundSchema = CustomFieldUpdateDate$outboundSchema;\n  /** @deprecated use `CustomFieldUpdateDate$Outbound` instead. */\n  export type Outbound = CustomFieldUpdateDate$Outbound;\n}\n\nexport function customFieldUpdateDateToJSON(\n  customFieldUpdateDate: CustomFieldUpdateDate,\n): string {\n  return JSON.stringify(\n    CustomFieldUpdateDate$outboundSchema.parse(customFieldUpdateDate),\n  );\n}\n\nexport function customFieldUpdateDateFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomFieldUpdateDate, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomFieldUpdateDate$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomFieldUpdateDate' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 18954, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18960, "column": 0}, "map": {"version":3,"file":"customfieldupdatenumber.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customfieldupdatenumber.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  CustomFieldNumberProperties,\n  CustomFieldNumberProperties$inboundSchema,\n  CustomFieldNumberProperties$Outbound,\n  CustomFieldNumberProperties$outboundSchema,\n} from \"./customfieldnumberproperties.js\";\n\nexport type CustomFieldUpdateNumberMetadata =\n  | string\n  | number\n  | number\n  | boolean;\n\n/**\n * Schema to update a custom field of type number.\n */\nexport type CustomFieldUpdateNumber = {\n  /**\n   * Key-value object allowing you to store additional information.\n   *\n   * @remarks\n   *\n   * The key must be a string with a maximum length of **40 characters**.\n   * The value must be either:\n   *\n   * * A string with a maximum length of **500 characters**\n   * * An integer\n   * * A floating-point number\n   * * A boolean\n   *\n   * You can store up to **50 key-value pairs**.\n   */\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  name?: string | null | undefined;\n  slug?: string | null | undefined;\n  type?: \"number\" | undefined;\n  properties?: CustomFieldNumberProperties | null | undefined;\n};\n\n/** @internal */\nexport const CustomFieldUpdateNumberMetadata$inboundSchema: z.ZodType<\n  CustomFieldUpdateNumberMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type CustomFieldUpdateNumberMetadata$Outbound =\n  | string\n  | number\n  | number\n  | boolean;\n\n/** @internal */\nexport const CustomFieldUpdateNumberMetadata$outboundSchema: z.ZodType<\n  CustomFieldUpdateNumberMetadata$Outbound,\n  z.ZodTypeDef,\n  CustomFieldUpdateNumberMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomFieldUpdateNumberMetadata$ {\n  /** @deprecated use `CustomFieldUpdateNumberMetadata$inboundSchema` instead. */\n  export const inboundSchema = CustomFieldUpdateNumberMetadata$inboundSchema;\n  /** @deprecated use `CustomFieldUpdateNumberMetadata$outboundSchema` instead. */\n  export const outboundSchema = CustomFieldUpdateNumberMetadata$outboundSchema;\n  /** @deprecated use `CustomFieldUpdateNumberMetadata$Outbound` instead. */\n  export type Outbound = CustomFieldUpdateNumberMetadata$Outbound;\n}\n\nexport function customFieldUpdateNumberMetadataToJSON(\n  customFieldUpdateNumberMetadata: CustomFieldUpdateNumberMetadata,\n): string {\n  return JSON.stringify(\n    CustomFieldUpdateNumberMetadata$outboundSchema.parse(\n      customFieldUpdateNumberMetadata,\n    ),\n  );\n}\n\nexport function customFieldUpdateNumberMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomFieldUpdateNumberMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomFieldUpdateNumberMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomFieldUpdateNumberMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const CustomFieldUpdateNumber$inboundSchema: z.ZodType<\n  CustomFieldUpdateNumber,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  name: z.nullable(z.string()).optional(),\n  slug: z.nullable(z.string()).optional(),\n  type: z.literal(\"number\").optional(),\n  properties: z.nullable(CustomFieldNumberProperties$inboundSchema).optional(),\n});\n\n/** @internal */\nexport type CustomFieldUpdateNumber$Outbound = {\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  name?: string | null | undefined;\n  slug?: string | null | undefined;\n  type: \"number\";\n  properties?: CustomFieldNumberProperties$Outbound | null | undefined;\n};\n\n/** @internal */\nexport const CustomFieldUpdateNumber$outboundSchema: z.ZodType<\n  CustomFieldUpdateNumber$Outbound,\n  z.ZodTypeDef,\n  CustomFieldUpdateNumber\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  name: z.nullable(z.string()).optional(),\n  slug: z.nullable(z.string()).optional(),\n  type: z.literal(\"number\").default(\"number\" as const),\n  properties: z.nullable(CustomFieldNumberProperties$outboundSchema).optional(),\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomFieldUpdateNumber$ {\n  /** @deprecated use `CustomFieldUpdateNumber$inboundSchema` instead. */\n  export const inboundSchema = CustomFieldUpdateNumber$inboundSchema;\n  /** @deprecated use `CustomFieldUpdateNumber$outboundSchema` instead. */\n  export const outboundSchema = CustomFieldUpdateNumber$outboundSchema;\n  /** @deprecated use `CustomFieldUpdateNumber$Outbound` instead. */\n  export type Outbound = CustomFieldUpdateNumber$Outbound;\n}\n\nexport function customFieldUpdateNumberToJSON(\n  customFieldUpdateNumber: CustomFieldUpdateNumber,\n): string {\n  return JSON.stringify(\n    CustomFieldUpdateNumber$outboundSchema.parse(customFieldUpdateNumber),\n  );\n}\n\nexport function customFieldUpdateNumberFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomFieldUpdateNumber, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomFieldUpdateNumber$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomFieldUpdateNumber' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 19039, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19045, "column": 0}, "map": {"version":3,"file":"customfieldupdateselect.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customfieldupdateselect.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  CustomFieldSelectProperties,\n  CustomFieldSelectProperties$inboundSchema,\n  CustomFieldSelectProperties$Outbound,\n  CustomFieldSelectProperties$outboundSchema,\n} from \"./customfieldselectproperties.js\";\n\nexport type CustomFieldUpdateSelectMetadata =\n  | string\n  | number\n  | number\n  | boolean;\n\n/**\n * Schema to update a custom field of type select.\n */\nexport type CustomFieldUpdateSelect = {\n  /**\n   * Key-value object allowing you to store additional information.\n   *\n   * @remarks\n   *\n   * The key must be a string with a maximum length of **40 characters**.\n   * The value must be either:\n   *\n   * * A string with a maximum length of **500 characters**\n   * * An integer\n   * * A floating-point number\n   * * A boolean\n   *\n   * You can store up to **50 key-value pairs**.\n   */\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  name?: string | null | undefined;\n  slug?: string | null | undefined;\n  type?: \"select\" | undefined;\n  properties?: CustomFieldSelectProperties | null | undefined;\n};\n\n/** @internal */\nexport const CustomFieldUpdateSelectMetadata$inboundSchema: z.ZodType<\n  CustomFieldUpdateSelectMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type CustomFieldUpdateSelectMetadata$Outbound =\n  | string\n  | number\n  | number\n  | boolean;\n\n/** @internal */\nexport const CustomFieldUpdateSelectMetadata$outboundSchema: z.ZodType<\n  CustomFieldUpdateSelectMetadata$Outbound,\n  z.ZodTypeDef,\n  CustomFieldUpdateSelectMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomFieldUpdateSelectMetadata$ {\n  /** @deprecated use `CustomFieldUpdateSelectMetadata$inboundSchema` instead. */\n  export const inboundSchema = CustomFieldUpdateSelectMetadata$inboundSchema;\n  /** @deprecated use `CustomFieldUpdateSelectMetadata$outboundSchema` instead. */\n  export const outboundSchema = CustomFieldUpdateSelectMetadata$outboundSchema;\n  /** @deprecated use `CustomFieldUpdateSelectMetadata$Outbound` instead. */\n  export type Outbound = CustomFieldUpdateSelectMetadata$Outbound;\n}\n\nexport function customFieldUpdateSelectMetadataToJSON(\n  customFieldUpdateSelectMetadata: CustomFieldUpdateSelectMetadata,\n): string {\n  return JSON.stringify(\n    CustomFieldUpdateSelectMetadata$outboundSchema.parse(\n      customFieldUpdateSelectMetadata,\n    ),\n  );\n}\n\nexport function customFieldUpdateSelectMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomFieldUpdateSelectMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomFieldUpdateSelectMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomFieldUpdateSelectMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const CustomFieldUpdateSelect$inboundSchema: z.ZodType<\n  CustomFieldUpdateSelect,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  name: z.nullable(z.string()).optional(),\n  slug: z.nullable(z.string()).optional(),\n  type: z.literal(\"select\").optional(),\n  properties: z.nullable(CustomFieldSelectProperties$inboundSchema).optional(),\n});\n\n/** @internal */\nexport type CustomFieldUpdateSelect$Outbound = {\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  name?: string | null | undefined;\n  slug?: string | null | undefined;\n  type: \"select\";\n  properties?: CustomFieldSelectProperties$Outbound | null | undefined;\n};\n\n/** @internal */\nexport const CustomFieldUpdateSelect$outboundSchema: z.ZodType<\n  CustomFieldUpdateSelect$Outbound,\n  z.ZodTypeDef,\n  CustomFieldUpdateSelect\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  name: z.nullable(z.string()).optional(),\n  slug: z.nullable(z.string()).optional(),\n  type: z.literal(\"select\").default(\"select\" as const),\n  properties: z.nullable(CustomFieldSelectProperties$outboundSchema).optional(),\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomFieldUpdateSelect$ {\n  /** @deprecated use `CustomFieldUpdateSelect$inboundSchema` instead. */\n  export const inboundSchema = CustomFieldUpdateSelect$inboundSchema;\n  /** @deprecated use `CustomFieldUpdateSelect$outboundSchema` instead. */\n  export const outboundSchema = CustomFieldUpdateSelect$outboundSchema;\n  /** @deprecated use `CustomFieldUpdateSelect$Outbound` instead. */\n  export type Outbound = CustomFieldUpdateSelect$Outbound;\n}\n\nexport function customFieldUpdateSelectToJSON(\n  customFieldUpdateSelect: CustomFieldUpdateSelect,\n): string {\n  return JSON.stringify(\n    CustomFieldUpdateSelect$outboundSchema.parse(customFieldUpdateSelect),\n  );\n}\n\nexport function customFieldUpdateSelectFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomFieldUpdateSelect, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomFieldUpdateSelect$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomFieldUpdateSelect' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 19124, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19130, "column": 0}, "map": {"version":3,"file":"customfieldupdatetext.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customfieldupdatetext.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  CustomFieldTextProperties,\n  CustomFieldTextProperties$inboundSchema,\n  CustomFieldTextProperties$Outbound,\n  CustomFieldTextProperties$outboundSchema,\n} from \"./customfieldtextproperties.js\";\n\nexport type CustomFieldUpdateTextMetadata = string | number | number | boolean;\n\n/**\n * Schema to update a custom field of type text.\n */\nexport type CustomFieldUpdateText = {\n  /**\n   * Key-value object allowing you to store additional information.\n   *\n   * @remarks\n   *\n   * The key must be a string with a maximum length of **40 characters**.\n   * The value must be either:\n   *\n   * * A string with a maximum length of **500 characters**\n   * * An integer\n   * * A floating-point number\n   * * A boolean\n   *\n   * You can store up to **50 key-value pairs**.\n   */\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  name?: string | null | undefined;\n  slug?: string | null | undefined;\n  type?: \"text\" | undefined;\n  properties?: CustomFieldTextProperties | null | undefined;\n};\n\n/** @internal */\nexport const CustomFieldUpdateTextMetadata$inboundSchema: z.ZodType<\n  CustomFieldUpdateTextMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type CustomFieldUpdateTextMetadata$Outbound =\n  | string\n  | number\n  | number\n  | boolean;\n\n/** @internal */\nexport const CustomFieldUpdateTextMetadata$outboundSchema: z.ZodType<\n  CustomFieldUpdateTextMetadata$Outbound,\n  z.ZodTypeDef,\n  CustomFieldUpdateTextMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomFieldUpdateTextMetadata$ {\n  /** @deprecated use `CustomFieldUpdateTextMetadata$inboundSchema` instead. */\n  export const inboundSchema = CustomFieldUpdateTextMetadata$inboundSchema;\n  /** @deprecated use `CustomFieldUpdateTextMetadata$outboundSchema` instead. */\n  export const outboundSchema = CustomFieldUpdateTextMetadata$outboundSchema;\n  /** @deprecated use `CustomFieldUpdateTextMetadata$Outbound` instead. */\n  export type Outbound = CustomFieldUpdateTextMetadata$Outbound;\n}\n\nexport function customFieldUpdateTextMetadataToJSON(\n  customFieldUpdateTextMetadata: CustomFieldUpdateTextMetadata,\n): string {\n  return JSON.stringify(\n    CustomFieldUpdateTextMetadata$outboundSchema.parse(\n      customFieldUpdateTextMetadata,\n    ),\n  );\n}\n\nexport function customFieldUpdateTextMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomFieldUpdateTextMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomFieldUpdateTextMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomFieldUpdateTextMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const CustomFieldUpdateText$inboundSchema: z.ZodType<\n  CustomFieldUpdateText,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  name: z.nullable(z.string()).optional(),\n  slug: z.nullable(z.string()).optional(),\n  type: z.literal(\"text\").optional(),\n  properties: z.nullable(CustomFieldTextProperties$inboundSchema).optional(),\n});\n\n/** @internal */\nexport type CustomFieldUpdateText$Outbound = {\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  name?: string | null | undefined;\n  slug?: string | null | undefined;\n  type: \"text\";\n  properties?: CustomFieldTextProperties$Outbound | null | undefined;\n};\n\n/** @internal */\nexport const CustomFieldUpdateText$outboundSchema: z.ZodType<\n  CustomFieldUpdateText$Outbound,\n  z.ZodTypeDef,\n  CustomFieldUpdateText\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  name: z.nullable(z.string()).optional(),\n  slug: z.nullable(z.string()).optional(),\n  type: z.literal(\"text\").default(\"text\" as const),\n  properties: z.nullable(CustomFieldTextProperties$outboundSchema).optional(),\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomFieldUpdateText$ {\n  /** @deprecated use `CustomFieldUpdateText$inboundSchema` instead. */\n  export const inboundSchema = CustomFieldUpdateText$inboundSchema;\n  /** @deprecated use `CustomFieldUpdateText$outboundSchema` instead. */\n  export const outboundSchema = CustomFieldUpdateText$outboundSchema;\n  /** @deprecated use `CustomFieldUpdateText$Outbound` instead. */\n  export type Outbound = CustomFieldUpdateText$Outbound;\n}\n\nexport function customFieldUpdateTextToJSON(\n  customFieldUpdateText: CustomFieldUpdateText,\n): string {\n  return JSON.stringify(\n    CustomFieldUpdateText$outboundSchema.parse(customFieldUpdateText),\n  );\n}\n\nexport function customFieldUpdateTextFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomFieldUpdateText, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomFieldUpdateText$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomFieldUpdateText' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 19209, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19215, "column": 0}, "map": {"version":3,"file":"customfieldupdate.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/customfieldupdate.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  CustomFieldUpdateCheckbox,\n  CustomFieldUpdateCheckbox$inboundSchema,\n  CustomFieldUpdateCheckbox$Outbound,\n  CustomFieldUpdateCheckbox$outboundSchema,\n} from \"./customfieldupdatecheckbox.js\";\nimport {\n  CustomFieldUpdateDate,\n  CustomFieldUpdateDate$inboundSchema,\n  CustomFieldUpdateDate$Outbound,\n  CustomFieldUpdateDate$outboundSchema,\n} from \"./customfieldupdatedate.js\";\nimport {\n  CustomFieldUpdateNumber,\n  CustomFieldUpdateNumber$inboundSchema,\n  CustomFieldUpdateNumber$Outbound,\n  CustomFieldUpdateNumber$outboundSchema,\n} from \"./customfieldupdatenumber.js\";\nimport {\n  CustomFieldUpdateSelect,\n  CustomFieldUpdateSelect$inboundSchema,\n  CustomFieldUpdateSelect$Outbound,\n  CustomFieldUpdateSelect$outboundSchema,\n} from \"./customfieldupdateselect.js\";\nimport {\n  CustomFieldUpdateText,\n  CustomFieldUpdateText$inboundSchema,\n  CustomFieldUpdateText$Outbound,\n  CustomFieldUpdateText$outboundSchema,\n} from \"./customfieldupdatetext.js\";\n\nexport type CustomFieldUpdate =\n  | (CustomFieldUpdateCheckbox & { type: \"checkbox\" })\n  | (CustomFieldUpdateDate & { type: \"date\" })\n  | (CustomFieldUpdateNumber & { type: \"number\" })\n  | (CustomFieldUpdateSelect & { type: \"select\" })\n  | (CustomFieldUpdateText & { type: \"text\" });\n\n/** @internal */\nexport const CustomFieldUpdate$inboundSchema: z.ZodType<\n  CustomFieldUpdate,\n  z.ZodTypeDef,\n  unknown\n> = z.union([\n  CustomFieldUpdateCheckbox$inboundSchema.and(\n    z.object({ type: z.literal(\"checkbox\") }).transform((v) => ({\n      type: v.type,\n    })),\n  ),\n  CustomFieldUpdateDate$inboundSchema.and(\n    z.object({ type: z.literal(\"date\") }).transform((v) => ({ type: v.type })),\n  ),\n  CustomFieldUpdateNumber$inboundSchema.and(\n    z.object({ type: z.literal(\"number\") }).transform((v) => ({\n      type: v.type,\n    })),\n  ),\n  CustomFieldUpdateSelect$inboundSchema.and(\n    z.object({ type: z.literal(\"select\") }).transform((v) => ({\n      type: v.type,\n    })),\n  ),\n  CustomFieldUpdateText$inboundSchema.and(\n    z.object({ type: z.literal(\"text\") }).transform((v) => ({ type: v.type })),\n  ),\n]);\n\n/** @internal */\nexport type CustomFieldUpdate$Outbound =\n  | (CustomFieldUpdateCheckbox$Outbound & { type: \"checkbox\" })\n  | (CustomFieldUpdateDate$Outbound & { type: \"date\" })\n  | (CustomFieldUpdateNumber$Outbound & { type: \"number\" })\n  | (CustomFieldUpdateSelect$Outbound & { type: \"select\" })\n  | (CustomFieldUpdateText$Outbound & { type: \"text\" });\n\n/** @internal */\nexport const CustomFieldUpdate$outboundSchema: z.ZodType<\n  CustomFieldUpdate$Outbound,\n  z.ZodTypeDef,\n  CustomFieldUpdate\n> = z.union([\n  CustomFieldUpdateCheckbox$outboundSchema.and(\n    z.object({ type: z.literal(\"checkbox\") }).transform((v) => ({\n      type: v.type,\n    })),\n  ),\n  CustomFieldUpdateDate$outboundSchema.and(\n    z.object({ type: z.literal(\"date\") }).transform((v) => ({ type: v.type })),\n  ),\n  CustomFieldUpdateNumber$outboundSchema.and(\n    z.object({ type: z.literal(\"number\") }).transform((v) => ({\n      type: v.type,\n    })),\n  ),\n  CustomFieldUpdateSelect$outboundSchema.and(\n    z.object({ type: z.literal(\"select\") }).transform((v) => ({\n      type: v.type,\n    })),\n  ),\n  CustomFieldUpdateText$outboundSchema.and(\n    z.object({ type: z.literal(\"text\") }).transform((v) => ({ type: v.type })),\n  ),\n]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomFieldUpdate$ {\n  /** @deprecated use `CustomFieldUpdate$inboundSchema` instead. */\n  export const inboundSchema = CustomFieldUpdate$inboundSchema;\n  /** @deprecated use `CustomFieldUpdate$outboundSchema` instead. */\n  export const outboundSchema = CustomFieldUpdate$outboundSchema;\n  /** @deprecated use `CustomFieldUpdate$Outbound` instead. */\n  export type Outbound = CustomFieldUpdate$Outbound;\n}\n\nexport function customFieldUpdateToJSON(\n  customFieldUpdate: CustomFieldUpdate,\n): string {\n  return JSON.stringify(\n    CustomFieldUpdate$outboundSchema.parse(customFieldUpdate),\n  );\n}\n\nexport function customFieldUpdateFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomFieldUpdate, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomFieldUpdate$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomFieldUpdate' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 19304, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19310, "column": 0}, "map": {"version":3,"file":"discountproduct.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/discountproduct.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  SubscriptionRecurringInterval,\n  SubscriptionRecurringInterval$inboundSchema,\n  SubscriptionRecurringInterval$outboundSchema,\n} from \"./subscriptionrecurringinterval.js\";\n\nexport type DiscountProductMetadata = string | number | number | boolean;\n\n/**\n * A product that a discount can be applied to.\n */\nexport type DiscountProduct = {\n  metadata: { [k: string]: string | number | number | boolean };\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  /**\n   * The ID of the product.\n   */\n  id: string;\n  /**\n   * The name of the product.\n   */\n  name: string;\n  /**\n   * The description of the product.\n   */\n  description: string | null;\n  /**\n   * The recurring interval of the product. If `None`, the product is a one-time purchase.\n   */\n  recurringInterval: SubscriptionRecurringInterval | null;\n  /**\n   * Whether the product is a subscription.\n   */\n  isRecurring: boolean;\n  /**\n   * Whether the product is archived and no longer available.\n   */\n  isArchived: boolean;\n  /**\n   * The ID of the organization owning the product.\n   */\n  organizationId: string;\n};\n\n/** @internal */\nexport const DiscountProductMetadata$inboundSchema: z.ZodType<\n  DiscountProductMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type DiscountProductMetadata$Outbound =\n  | string\n  | number\n  | number\n  | boolean;\n\n/** @internal */\nexport const DiscountProductMetadata$outboundSchema: z.ZodType<\n  DiscountProductMetadata$Outbound,\n  z.ZodTypeDef,\n  DiscountProductMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace DiscountProductMetadata$ {\n  /** @deprecated use `DiscountProductMetadata$inboundSchema` instead. */\n  export const inboundSchema = DiscountProductMetadata$inboundSchema;\n  /** @deprecated use `DiscountProductMetadata$outboundSchema` instead. */\n  export const outboundSchema = DiscountProductMetadata$outboundSchema;\n  /** @deprecated use `DiscountProductMetadata$Outbound` instead. */\n  export type Outbound = DiscountProductMetadata$Outbound;\n}\n\nexport function discountProductMetadataToJSON(\n  discountProductMetadata: DiscountProductMetadata,\n): string {\n  return JSON.stringify(\n    DiscountProductMetadata$outboundSchema.parse(discountProductMetadata),\n  );\n}\n\nexport function discountProductMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<DiscountProductMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => DiscountProductMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'DiscountProductMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const DiscountProduct$inboundSchema: z.ZodType<\n  DiscountProduct,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  id: z.string(),\n  name: z.string(),\n  description: z.nullable(z.string()),\n  recurring_interval: z.nullable(SubscriptionRecurringInterval$inboundSchema),\n  is_recurring: z.boolean(),\n  is_archived: z.boolean(),\n  organization_id: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"recurring_interval\": \"recurringInterval\",\n    \"is_recurring\": \"isRecurring\",\n    \"is_archived\": \"isArchived\",\n    \"organization_id\": \"organizationId\",\n  });\n});\n\n/** @internal */\nexport type DiscountProduct$Outbound = {\n  metadata: { [k: string]: string | number | number | boolean };\n  created_at: string;\n  modified_at: string | null;\n  id: string;\n  name: string;\n  description: string | null;\n  recurring_interval: string | null;\n  is_recurring: boolean;\n  is_archived: boolean;\n  organization_id: string;\n};\n\n/** @internal */\nexport const DiscountProduct$outboundSchema: z.ZodType<\n  DiscountProduct$Outbound,\n  z.ZodTypeDef,\n  DiscountProduct\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  id: z.string(),\n  name: z.string(),\n  description: z.nullable(z.string()),\n  recurringInterval: z.nullable(SubscriptionRecurringInterval$outboundSchema),\n  isRecurring: z.boolean(),\n  isArchived: z.boolean(),\n  organizationId: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    recurringInterval: \"recurring_interval\",\n    isRecurring: \"is_recurring\",\n    isArchived: \"is_archived\",\n    organizationId: \"organization_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace DiscountProduct$ {\n  /** @deprecated use `DiscountProduct$inboundSchema` instead. */\n  export const inboundSchema = DiscountProduct$inboundSchema;\n  /** @deprecated use `DiscountProduct$outboundSchema` instead. */\n  export const outboundSchema = DiscountProduct$outboundSchema;\n  /** @deprecated use `DiscountProduct$Outbound` instead. */\n  export type Outbound = DiscountProduct$Outbound;\n}\n\nexport function discountProductToJSON(\n  discountProduct: DiscountProduct,\n): string {\n  return JSON.stringify(DiscountProduct$outboundSchema.parse(discountProduct));\n}\n\nexport function discountProductFromJSON(\n  jsonString: string,\n): SafeParseResult<DiscountProduct, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => DiscountProduct$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'DiscountProduct' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 19423, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19429, "column": 0}, "map": {"version":3,"file":"discountfixedonceforeverduration.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/discountfixedonceforeverduration.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  DiscountDuration,\n  DiscountDuration$inboundSchema,\n  DiscountDuration$outboundSchema,\n} from \"./discountduration.js\";\nimport {\n  DiscountProduct,\n  DiscountProduct$inboundSchema,\n  DiscountProduct$Outbound,\n  DiscountProduct$outboundSchema,\n} from \"./discountproduct.js\";\nimport {\n  DiscountType,\n  DiscountType$inboundSchema,\n  DiscountType$outboundSchema,\n} from \"./discounttype.js\";\n\nexport type DiscountFixedOnceForeverDurationMetadata =\n  | string\n  | number\n  | number\n  | boolean;\n\n/**\n * Schema for a fixed amount discount that is applied once or forever.\n */\nexport type DiscountFixedOnceForeverDuration = {\n  duration: DiscountDuration;\n  type: DiscountType;\n  amount: number;\n  currency: string;\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  /**\n   * The ID of the object.\n   */\n  id: string;\n  metadata: { [k: string]: string | number | number | boolean };\n  /**\n   * Name of the discount. Will be displayed to the customer when the discount is applied.\n   */\n  name: string;\n  /**\n   * Code customers can use to apply the discount during checkout.\n   */\n  code: string | null;\n  /**\n   * Timestamp after which the discount is redeemable.\n   */\n  startsAt: Date | null;\n  /**\n   * Timestamp after which the discount is no longer redeemable.\n   */\n  endsAt: Date | null;\n  /**\n   * Maximum number of times the discount can be redeemed.\n   */\n  maxRedemptions: number | null;\n  /**\n   * Number of times the discount has been redeemed.\n   */\n  redemptionsCount: number;\n  /**\n   * The organization ID.\n   */\n  organizationId: string;\n  products: Array<DiscountProduct>;\n};\n\n/** @internal */\nexport const DiscountFixedOnceForeverDurationMetadata$inboundSchema: z.ZodType<\n  DiscountFixedOnceForeverDurationMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type DiscountFixedOnceForeverDurationMetadata$Outbound =\n  | string\n  | number\n  | number\n  | boolean;\n\n/** @internal */\nexport const DiscountFixedOnceForeverDurationMetadata$outboundSchema: z.ZodType<\n  DiscountFixedOnceForeverDurationMetadata$Outbound,\n  z.ZodTypeDef,\n  DiscountFixedOnceForeverDurationMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace DiscountFixedOnceForeverDurationMetadata$ {\n  /** @deprecated use `DiscountFixedOnceForeverDurationMetadata$inboundSchema` instead. */\n  export const inboundSchema =\n    DiscountFixedOnceForeverDurationMetadata$inboundSchema;\n  /** @deprecated use `DiscountFixedOnceForeverDurationMetadata$outboundSchema` instead. */\n  export const outboundSchema =\n    DiscountFixedOnceForeverDurationMetadata$outboundSchema;\n  /** @deprecated use `DiscountFixedOnceForeverDurationMetadata$Outbound` instead. */\n  export type Outbound = DiscountFixedOnceForeverDurationMetadata$Outbound;\n}\n\nexport function discountFixedOnceForeverDurationMetadataToJSON(\n  discountFixedOnceForeverDurationMetadata:\n    DiscountFixedOnceForeverDurationMetadata,\n): string {\n  return JSON.stringify(\n    DiscountFixedOnceForeverDurationMetadata$outboundSchema.parse(\n      discountFixedOnceForeverDurationMetadata,\n    ),\n  );\n}\n\nexport function discountFixedOnceForeverDurationMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<\n  DiscountFixedOnceForeverDurationMetadata,\n  SDKValidationError\n> {\n  return safeParse(\n    jsonString,\n    (x) =>\n      DiscountFixedOnceForeverDurationMetadata$inboundSchema.parse(\n        JSON.parse(x),\n      ),\n    `Failed to parse 'DiscountFixedOnceForeverDurationMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const DiscountFixedOnceForeverDuration$inboundSchema: z.ZodType<\n  DiscountFixedOnceForeverDuration,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  duration: DiscountDuration$inboundSchema,\n  type: DiscountType$inboundSchema,\n  amount: z.number().int(),\n  currency: z.string(),\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  id: z.string(),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  name: z.string(),\n  code: z.nullable(z.string()),\n  starts_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  ends_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  max_redemptions: z.nullable(z.number().int()),\n  redemptions_count: z.number().int(),\n  organization_id: z.string(),\n  products: z.array(DiscountProduct$inboundSchema),\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"starts_at\": \"startsAt\",\n    \"ends_at\": \"endsAt\",\n    \"max_redemptions\": \"maxRedemptions\",\n    \"redemptions_count\": \"redemptionsCount\",\n    \"organization_id\": \"organizationId\",\n  });\n});\n\n/** @internal */\nexport type DiscountFixedOnceForeverDuration$Outbound = {\n  duration: string;\n  type: string;\n  amount: number;\n  currency: string;\n  created_at: string;\n  modified_at: string | null;\n  id: string;\n  metadata: { [k: string]: string | number | number | boolean };\n  name: string;\n  code: string | null;\n  starts_at: string | null;\n  ends_at: string | null;\n  max_redemptions: number | null;\n  redemptions_count: number;\n  organization_id: string;\n  products: Array<DiscountProduct$Outbound>;\n};\n\n/** @internal */\nexport const DiscountFixedOnceForeverDuration$outboundSchema: z.ZodType<\n  DiscountFixedOnceForeverDuration$Outbound,\n  z.ZodTypeDef,\n  DiscountFixedOnceForeverDuration\n> = z.object({\n  duration: DiscountDuration$outboundSchema,\n  type: DiscountType$outboundSchema,\n  amount: z.number().int(),\n  currency: z.string(),\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  id: z.string(),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  name: z.string(),\n  code: z.nullable(z.string()),\n  startsAt: z.nullable(z.date().transform(v => v.toISOString())),\n  endsAt: z.nullable(z.date().transform(v => v.toISOString())),\n  maxRedemptions: z.nullable(z.number().int()),\n  redemptionsCount: z.number().int(),\n  organizationId: z.string(),\n  products: z.array(DiscountProduct$outboundSchema),\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    startsAt: \"starts_at\",\n    endsAt: \"ends_at\",\n    maxRedemptions: \"max_redemptions\",\n    redemptionsCount: \"redemptions_count\",\n    organizationId: \"organization_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace DiscountFixedOnceForeverDuration$ {\n  /** @deprecated use `DiscountFixedOnceForeverDuration$inboundSchema` instead. */\n  export const inboundSchema = DiscountFixedOnceForeverDuration$inboundSchema;\n  /** @deprecated use `DiscountFixedOnceForeverDuration$outboundSchema` instead. */\n  export const outboundSchema = DiscountFixedOnceForeverDuration$outboundSchema;\n  /** @deprecated use `DiscountFixedOnceForeverDuration$Outbound` instead. */\n  export type Outbound = DiscountFixedOnceForeverDuration$Outbound;\n}\n\nexport function discountFixedOnceForeverDurationToJSON(\n  discountFixedOnceForeverDuration: DiscountFixedOnceForeverDuration,\n): string {\n  return JSON.stringify(\n    DiscountFixedOnceForeverDuration$outboundSchema.parse(\n      discountFixedOnceForeverDuration,\n    ),\n  );\n}\n\nexport function discountFixedOnceForeverDurationFromJSON(\n  jsonString: string,\n): SafeParseResult<DiscountFixedOnceForeverDuration, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => DiscountFixedOnceForeverDuration$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'DiscountFixedOnceForeverDuration' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 19564, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19570, "column": 0}, "map": {"version":3,"file":"discountfixedrepeatduration.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/discountfixedrepeatduration.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  DiscountDuration,\n  DiscountDuration$inboundSchema,\n  DiscountDuration$outboundSchema,\n} from \"./discountduration.js\";\nimport {\n  DiscountProduct,\n  DiscountProduct$inboundSchema,\n  DiscountProduct$Outbound,\n  DiscountProduct$outboundSchema,\n} from \"./discountproduct.js\";\nimport {\n  DiscountType,\n  DiscountType$inboundSchema,\n  DiscountType$outboundSchema,\n} from \"./discounttype.js\";\n\nexport type DiscountFixedRepeatDurationMetadata =\n  | string\n  | number\n  | number\n  | boolean;\n\n/**\n * Schema for a fixed amount discount that is applied on every invoice\n *\n * @remarks\n * for a certain number of months.\n */\nexport type DiscountFixedRepeatDuration = {\n  duration: DiscountDuration;\n  durationInMonths: number;\n  type: DiscountType;\n  amount: number;\n  currency: string;\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  /**\n   * The ID of the object.\n   */\n  id: string;\n  metadata: { [k: string]: string | number | number | boolean };\n  /**\n   * Name of the discount. Will be displayed to the customer when the discount is applied.\n   */\n  name: string;\n  /**\n   * Code customers can use to apply the discount during checkout.\n   */\n  code: string | null;\n  /**\n   * Timestamp after which the discount is redeemable.\n   */\n  startsAt: Date | null;\n  /**\n   * Timestamp after which the discount is no longer redeemable.\n   */\n  endsAt: Date | null;\n  /**\n   * Maximum number of times the discount can be redeemed.\n   */\n  maxRedemptions: number | null;\n  /**\n   * Number of times the discount has been redeemed.\n   */\n  redemptionsCount: number;\n  /**\n   * The organization ID.\n   */\n  organizationId: string;\n  products: Array<DiscountProduct>;\n};\n\n/** @internal */\nexport const DiscountFixedRepeatDurationMetadata$inboundSchema: z.ZodType<\n  DiscountFixedRepeatDurationMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type DiscountFixedRepeatDurationMetadata$Outbound =\n  | string\n  | number\n  | number\n  | boolean;\n\n/** @internal */\nexport const DiscountFixedRepeatDurationMetadata$outboundSchema: z.ZodType<\n  DiscountFixedRepeatDurationMetadata$Outbound,\n  z.ZodTypeDef,\n  DiscountFixedRepeatDurationMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace DiscountFixedRepeatDurationMetadata$ {\n  /** @deprecated use `DiscountFixedRepeatDurationMetadata$inboundSchema` instead. */\n  export const inboundSchema =\n    DiscountFixedRepeatDurationMetadata$inboundSchema;\n  /** @deprecated use `DiscountFixedRepeatDurationMetadata$outboundSchema` instead. */\n  export const outboundSchema =\n    DiscountFixedRepeatDurationMetadata$outboundSchema;\n  /** @deprecated use `DiscountFixedRepeatDurationMetadata$Outbound` instead. */\n  export type Outbound = DiscountFixedRepeatDurationMetadata$Outbound;\n}\n\nexport function discountFixedRepeatDurationMetadataToJSON(\n  discountFixedRepeatDurationMetadata: DiscountFixedRepeatDurationMetadata,\n): string {\n  return JSON.stringify(\n    DiscountFixedRepeatDurationMetadata$outboundSchema.parse(\n      discountFixedRepeatDurationMetadata,\n    ),\n  );\n}\n\nexport function discountFixedRepeatDurationMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<DiscountFixedRepeatDurationMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) =>\n      DiscountFixedRepeatDurationMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'DiscountFixedRepeatDurationMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const DiscountFixedRepeatDuration$inboundSchema: z.ZodType<\n  DiscountFixedRepeatDuration,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  duration: DiscountDuration$inboundSchema,\n  duration_in_months: z.number().int(),\n  type: DiscountType$inboundSchema,\n  amount: z.number().int(),\n  currency: z.string(),\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  id: z.string(),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  name: z.string(),\n  code: z.nullable(z.string()),\n  starts_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  ends_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  max_redemptions: z.nullable(z.number().int()),\n  redemptions_count: z.number().int(),\n  organization_id: z.string(),\n  products: z.array(DiscountProduct$inboundSchema),\n}).transform((v) => {\n  return remap$(v, {\n    \"duration_in_months\": \"durationInMonths\",\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"starts_at\": \"startsAt\",\n    \"ends_at\": \"endsAt\",\n    \"max_redemptions\": \"maxRedemptions\",\n    \"redemptions_count\": \"redemptionsCount\",\n    \"organization_id\": \"organizationId\",\n  });\n});\n\n/** @internal */\nexport type DiscountFixedRepeatDuration$Outbound = {\n  duration: string;\n  duration_in_months: number;\n  type: string;\n  amount: number;\n  currency: string;\n  created_at: string;\n  modified_at: string | null;\n  id: string;\n  metadata: { [k: string]: string | number | number | boolean };\n  name: string;\n  code: string | null;\n  starts_at: string | null;\n  ends_at: string | null;\n  max_redemptions: number | null;\n  redemptions_count: number;\n  organization_id: string;\n  products: Array<DiscountProduct$Outbound>;\n};\n\n/** @internal */\nexport const DiscountFixedRepeatDuration$outboundSchema: z.ZodType<\n  DiscountFixedRepeatDuration$Outbound,\n  z.ZodTypeDef,\n  DiscountFixedRepeatDuration\n> = z.object({\n  duration: DiscountDuration$outboundSchema,\n  durationInMonths: z.number().int(),\n  type: DiscountType$outboundSchema,\n  amount: z.number().int(),\n  currency: z.string(),\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  id: z.string(),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  name: z.string(),\n  code: z.nullable(z.string()),\n  startsAt: z.nullable(z.date().transform(v => v.toISOString())),\n  endsAt: z.nullable(z.date().transform(v => v.toISOString())),\n  maxRedemptions: z.nullable(z.number().int()),\n  redemptionsCount: z.number().int(),\n  organizationId: z.string(),\n  products: z.array(DiscountProduct$outboundSchema),\n}).transform((v) => {\n  return remap$(v, {\n    durationInMonths: \"duration_in_months\",\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    startsAt: \"starts_at\",\n    endsAt: \"ends_at\",\n    maxRedemptions: \"max_redemptions\",\n    redemptionsCount: \"redemptions_count\",\n    organizationId: \"organization_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace DiscountFixedRepeatDuration$ {\n  /** @deprecated use `DiscountFixedRepeatDuration$inboundSchema` instead. */\n  export const inboundSchema = DiscountFixedRepeatDuration$inboundSchema;\n  /** @deprecated use `DiscountFixedRepeatDuration$outboundSchema` instead. */\n  export const outboundSchema = DiscountFixedRepeatDuration$outboundSchema;\n  /** @deprecated use `DiscountFixedRepeatDuration$Outbound` instead. */\n  export type Outbound = DiscountFixedRepeatDuration$Outbound;\n}\n\nexport function discountFixedRepeatDurationToJSON(\n  discountFixedRepeatDuration: DiscountFixedRepeatDuration,\n): string {\n  return JSON.stringify(\n    DiscountFixedRepeatDuration$outboundSchema.parse(\n      discountFixedRepeatDuration,\n    ),\n  );\n}\n\nexport function discountFixedRepeatDurationFromJSON(\n  jsonString: string,\n): SafeParseResult<DiscountFixedRepeatDuration, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => DiscountFixedRepeatDuration$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'DiscountFixedRepeatDuration' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 19709, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19715, "column": 0}, "map": {"version":3,"file":"discountpercentageonceforeverduration.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/discountpercentageonceforeverduration.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  DiscountDuration,\n  DiscountDuration$inboundSchema,\n  DiscountDuration$outboundSchema,\n} from \"./discountduration.js\";\nimport {\n  DiscountProduct,\n  DiscountProduct$inboundSchema,\n  DiscountProduct$Outbound,\n  DiscountProduct$outboundSchema,\n} from \"./discountproduct.js\";\nimport {\n  DiscountType,\n  DiscountType$inboundSchema,\n  DiscountType$outboundSchema,\n} from \"./discounttype.js\";\n\nexport type DiscountPercentageOnceForeverDurationMetadata =\n  | string\n  | number\n  | number\n  | boolean;\n\n/**\n * Schema for a percentage discount that is applied once or forever.\n */\nexport type DiscountPercentageOnceForeverDuration = {\n  duration: DiscountDuration;\n  type: DiscountType;\n  basisPoints: number;\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  /**\n   * The ID of the object.\n   */\n  id: string;\n  metadata: { [k: string]: string | number | number | boolean };\n  /**\n   * Name of the discount. Will be displayed to the customer when the discount is applied.\n   */\n  name: string;\n  /**\n   * Code customers can use to apply the discount during checkout.\n   */\n  code: string | null;\n  /**\n   * Timestamp after which the discount is redeemable.\n   */\n  startsAt: Date | null;\n  /**\n   * Timestamp after which the discount is no longer redeemable.\n   */\n  endsAt: Date | null;\n  /**\n   * Maximum number of times the discount can be redeemed.\n   */\n  maxRedemptions: number | null;\n  /**\n   * Number of times the discount has been redeemed.\n   */\n  redemptionsCount: number;\n  /**\n   * The organization ID.\n   */\n  organizationId: string;\n  products: Array<DiscountProduct>;\n};\n\n/** @internal */\nexport const DiscountPercentageOnceForeverDurationMetadata$inboundSchema:\n  z.ZodType<\n    DiscountPercentageOnceForeverDurationMetadata,\n    z.ZodTypeDef,\n    unknown\n  > = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type DiscountPercentageOnceForeverDurationMetadata$Outbound =\n  | string\n  | number\n  | number\n  | boolean;\n\n/** @internal */\nexport const DiscountPercentageOnceForeverDurationMetadata$outboundSchema:\n  z.ZodType<\n    DiscountPercentageOnceForeverDurationMetadata$Outbound,\n    z.ZodTypeDef,\n    DiscountPercentageOnceForeverDurationMetadata\n  > = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace DiscountPercentageOnceForeverDurationMetadata$ {\n  /** @deprecated use `DiscountPercentageOnceForeverDurationMetadata$inboundSchema` instead. */\n  export const inboundSchema =\n    DiscountPercentageOnceForeverDurationMetadata$inboundSchema;\n  /** @deprecated use `DiscountPercentageOnceForeverDurationMetadata$outboundSchema` instead. */\n  export const outboundSchema =\n    DiscountPercentageOnceForeverDurationMetadata$outboundSchema;\n  /** @deprecated use `DiscountPercentageOnceForeverDurationMetadata$Outbound` instead. */\n  export type Outbound = DiscountPercentageOnceForeverDurationMetadata$Outbound;\n}\n\nexport function discountPercentageOnceForeverDurationMetadataToJSON(\n  discountPercentageOnceForeverDurationMetadata:\n    DiscountPercentageOnceForeverDurationMetadata,\n): string {\n  return JSON.stringify(\n    DiscountPercentageOnceForeverDurationMetadata$outboundSchema.parse(\n      discountPercentageOnceForeverDurationMetadata,\n    ),\n  );\n}\n\nexport function discountPercentageOnceForeverDurationMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<\n  DiscountPercentageOnceForeverDurationMetadata,\n  SDKValidationError\n> {\n  return safeParse(\n    jsonString,\n    (x) =>\n      DiscountPercentageOnceForeverDurationMetadata$inboundSchema.parse(\n        JSON.parse(x),\n      ),\n    `Failed to parse 'DiscountPercentageOnceForeverDurationMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const DiscountPercentageOnceForeverDuration$inboundSchema: z.ZodType<\n  DiscountPercentageOnceForeverDuration,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  duration: DiscountDuration$inboundSchema,\n  type: DiscountType$inboundSchema,\n  basis_points: z.number().int(),\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  id: z.string(),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  name: z.string(),\n  code: z.nullable(z.string()),\n  starts_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  ends_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  max_redemptions: z.nullable(z.number().int()),\n  redemptions_count: z.number().int(),\n  organization_id: z.string(),\n  products: z.array(DiscountProduct$inboundSchema),\n}).transform((v) => {\n  return remap$(v, {\n    \"basis_points\": \"basisPoints\",\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"starts_at\": \"startsAt\",\n    \"ends_at\": \"endsAt\",\n    \"max_redemptions\": \"maxRedemptions\",\n    \"redemptions_count\": \"redemptionsCount\",\n    \"organization_id\": \"organizationId\",\n  });\n});\n\n/** @internal */\nexport type DiscountPercentageOnceForeverDuration$Outbound = {\n  duration: string;\n  type: string;\n  basis_points: number;\n  created_at: string;\n  modified_at: string | null;\n  id: string;\n  metadata: { [k: string]: string | number | number | boolean };\n  name: string;\n  code: string | null;\n  starts_at: string | null;\n  ends_at: string | null;\n  max_redemptions: number | null;\n  redemptions_count: number;\n  organization_id: string;\n  products: Array<DiscountProduct$Outbound>;\n};\n\n/** @internal */\nexport const DiscountPercentageOnceForeverDuration$outboundSchema: z.ZodType<\n  DiscountPercentageOnceForeverDuration$Outbound,\n  z.ZodTypeDef,\n  DiscountPercentageOnceForeverDuration\n> = z.object({\n  duration: DiscountDuration$outboundSchema,\n  type: DiscountType$outboundSchema,\n  basisPoints: z.number().int(),\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  id: z.string(),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  name: z.string(),\n  code: z.nullable(z.string()),\n  startsAt: z.nullable(z.date().transform(v => v.toISOString())),\n  endsAt: z.nullable(z.date().transform(v => v.toISOString())),\n  maxRedemptions: z.nullable(z.number().int()),\n  redemptionsCount: z.number().int(),\n  organizationId: z.string(),\n  products: z.array(DiscountProduct$outboundSchema),\n}).transform((v) => {\n  return remap$(v, {\n    basisPoints: \"basis_points\",\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    startsAt: \"starts_at\",\n    endsAt: \"ends_at\",\n    maxRedemptions: \"max_redemptions\",\n    redemptionsCount: \"redemptions_count\",\n    organizationId: \"organization_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace DiscountPercentageOnceForeverDuration$ {\n  /** @deprecated use `DiscountPercentageOnceForeverDuration$inboundSchema` instead. */\n  export const inboundSchema =\n    DiscountPercentageOnceForeverDuration$inboundSchema;\n  /** @deprecated use `DiscountPercentageOnceForeverDuration$outboundSchema` instead. */\n  export const outboundSchema =\n    DiscountPercentageOnceForeverDuration$outboundSchema;\n  /** @deprecated use `DiscountPercentageOnceForeverDuration$Outbound` instead. */\n  export type Outbound = DiscountPercentageOnceForeverDuration$Outbound;\n}\n\nexport function discountPercentageOnceForeverDurationToJSON(\n  discountPercentageOnceForeverDuration: DiscountPercentageOnceForeverDuration,\n): string {\n  return JSON.stringify(\n    DiscountPercentageOnceForeverDuration$outboundSchema.parse(\n      discountPercentageOnceForeverDuration,\n    ),\n  );\n}\n\nexport function discountPercentageOnceForeverDurationFromJSON(\n  jsonString: string,\n): SafeParseResult<DiscountPercentageOnceForeverDuration, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) =>\n      DiscountPercentageOnceForeverDuration$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'DiscountPercentageOnceForeverDuration' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 19850, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19856, "column": 0}, "map": {"version":3,"file":"discountpercentagerepeatduration.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/discountpercentagerepeatduration.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  DiscountDuration,\n  DiscountDuration$inboundSchema,\n  DiscountDuration$outboundSchema,\n} from \"./discountduration.js\";\nimport {\n  DiscountProduct,\n  DiscountProduct$inboundSchema,\n  DiscountProduct$Outbound,\n  DiscountProduct$outboundSchema,\n} from \"./discountproduct.js\";\nimport {\n  DiscountType,\n  DiscountType$inboundSchema,\n  DiscountType$outboundSchema,\n} from \"./discounttype.js\";\n\nexport type DiscountPercentageRepeatDurationMetadata =\n  | string\n  | number\n  | number\n  | boolean;\n\n/**\n * Schema for a percentage discount that is applied on every invoice\n *\n * @remarks\n * for a certain number of months.\n */\nexport type DiscountPercentageRepeatDuration = {\n  duration: DiscountDuration;\n  durationInMonths: number;\n  type: DiscountType;\n  basisPoints: number;\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  /**\n   * The ID of the object.\n   */\n  id: string;\n  metadata: { [k: string]: string | number | number | boolean };\n  /**\n   * Name of the discount. Will be displayed to the customer when the discount is applied.\n   */\n  name: string;\n  /**\n   * Code customers can use to apply the discount during checkout.\n   */\n  code: string | null;\n  /**\n   * Timestamp after which the discount is redeemable.\n   */\n  startsAt: Date | null;\n  /**\n   * Timestamp after which the discount is no longer redeemable.\n   */\n  endsAt: Date | null;\n  /**\n   * Maximum number of times the discount can be redeemed.\n   */\n  maxRedemptions: number | null;\n  /**\n   * Number of times the discount has been redeemed.\n   */\n  redemptionsCount: number;\n  /**\n   * The organization ID.\n   */\n  organizationId: string;\n  products: Array<DiscountProduct>;\n};\n\n/** @internal */\nexport const DiscountPercentageRepeatDurationMetadata$inboundSchema: z.ZodType<\n  DiscountPercentageRepeatDurationMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type DiscountPercentageRepeatDurationMetadata$Outbound =\n  | string\n  | number\n  | number\n  | boolean;\n\n/** @internal */\nexport const DiscountPercentageRepeatDurationMetadata$outboundSchema: z.ZodType<\n  DiscountPercentageRepeatDurationMetadata$Outbound,\n  z.ZodTypeDef,\n  DiscountPercentageRepeatDurationMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace DiscountPercentageRepeatDurationMetadata$ {\n  /** @deprecated use `DiscountPercentageRepeatDurationMetadata$inboundSchema` instead. */\n  export const inboundSchema =\n    DiscountPercentageRepeatDurationMetadata$inboundSchema;\n  /** @deprecated use `DiscountPercentageRepeatDurationMetadata$outboundSchema` instead. */\n  export const outboundSchema =\n    DiscountPercentageRepeatDurationMetadata$outboundSchema;\n  /** @deprecated use `DiscountPercentageRepeatDurationMetadata$Outbound` instead. */\n  export type Outbound = DiscountPercentageRepeatDurationMetadata$Outbound;\n}\n\nexport function discountPercentageRepeatDurationMetadataToJSON(\n  discountPercentageRepeatDurationMetadata:\n    DiscountPercentageRepeatDurationMetadata,\n): string {\n  return JSON.stringify(\n    DiscountPercentageRepeatDurationMetadata$outboundSchema.parse(\n      discountPercentageRepeatDurationMetadata,\n    ),\n  );\n}\n\nexport function discountPercentageRepeatDurationMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<\n  DiscountPercentageRepeatDurationMetadata,\n  SDKValidationError\n> {\n  return safeParse(\n    jsonString,\n    (x) =>\n      DiscountPercentageRepeatDurationMetadata$inboundSchema.parse(\n        JSON.parse(x),\n      ),\n    `Failed to parse 'DiscountPercentageRepeatDurationMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const DiscountPercentageRepeatDuration$inboundSchema: z.ZodType<\n  DiscountPercentageRepeatDuration,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  duration: DiscountDuration$inboundSchema,\n  duration_in_months: z.number().int(),\n  type: DiscountType$inboundSchema,\n  basis_points: z.number().int(),\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  id: z.string(),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  name: z.string(),\n  code: z.nullable(z.string()),\n  starts_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  ends_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  max_redemptions: z.nullable(z.number().int()),\n  redemptions_count: z.number().int(),\n  organization_id: z.string(),\n  products: z.array(DiscountProduct$inboundSchema),\n}).transform((v) => {\n  return remap$(v, {\n    \"duration_in_months\": \"durationInMonths\",\n    \"basis_points\": \"basisPoints\",\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"starts_at\": \"startsAt\",\n    \"ends_at\": \"endsAt\",\n    \"max_redemptions\": \"maxRedemptions\",\n    \"redemptions_count\": \"redemptionsCount\",\n    \"organization_id\": \"organizationId\",\n  });\n});\n\n/** @internal */\nexport type DiscountPercentageRepeatDuration$Outbound = {\n  duration: string;\n  duration_in_months: number;\n  type: string;\n  basis_points: number;\n  created_at: string;\n  modified_at: string | null;\n  id: string;\n  metadata: { [k: string]: string | number | number | boolean };\n  name: string;\n  code: string | null;\n  starts_at: string | null;\n  ends_at: string | null;\n  max_redemptions: number | null;\n  redemptions_count: number;\n  organization_id: string;\n  products: Array<DiscountProduct$Outbound>;\n};\n\n/** @internal */\nexport const DiscountPercentageRepeatDuration$outboundSchema: z.ZodType<\n  DiscountPercentageRepeatDuration$Outbound,\n  z.ZodTypeDef,\n  DiscountPercentageRepeatDuration\n> = z.object({\n  duration: DiscountDuration$outboundSchema,\n  durationInMonths: z.number().int(),\n  type: DiscountType$outboundSchema,\n  basisPoints: z.number().int(),\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  id: z.string(),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  name: z.string(),\n  code: z.nullable(z.string()),\n  startsAt: z.nullable(z.date().transform(v => v.toISOString())),\n  endsAt: z.nullable(z.date().transform(v => v.toISOString())),\n  maxRedemptions: z.nullable(z.number().int()),\n  redemptionsCount: z.number().int(),\n  organizationId: z.string(),\n  products: z.array(DiscountProduct$outboundSchema),\n}).transform((v) => {\n  return remap$(v, {\n    durationInMonths: \"duration_in_months\",\n    basisPoints: \"basis_points\",\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    startsAt: \"starts_at\",\n    endsAt: \"ends_at\",\n    maxRedemptions: \"max_redemptions\",\n    redemptionsCount: \"redemptions_count\",\n    organizationId: \"organization_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace DiscountPercentageRepeatDuration$ {\n  /** @deprecated use `DiscountPercentageRepeatDuration$inboundSchema` instead. */\n  export const inboundSchema = DiscountPercentageRepeatDuration$inboundSchema;\n  /** @deprecated use `DiscountPercentageRepeatDuration$outboundSchema` instead. */\n  export const outboundSchema = DiscountPercentageRepeatDuration$outboundSchema;\n  /** @deprecated use `DiscountPercentageRepeatDuration$Outbound` instead. */\n  export type Outbound = DiscountPercentageRepeatDuration$Outbound;\n}\n\nexport function discountPercentageRepeatDurationToJSON(\n  discountPercentageRepeatDuration: DiscountPercentageRepeatDuration,\n): string {\n  return JSON.stringify(\n    DiscountPercentageRepeatDuration$outboundSchema.parse(\n      discountPercentageRepeatDuration,\n    ),\n  );\n}\n\nexport function discountPercentageRepeatDurationFromJSON(\n  jsonString: string,\n): SafeParseResult<DiscountPercentageRepeatDuration, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => DiscountPercentageRepeatDuration$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'DiscountPercentageRepeatDuration' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 19995, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20001, "column": 0}, "map": {"version":3,"file":"discount.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/discount.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  DiscountFixedOnceForeverDuration,\n  DiscountFixedOnceForeverDuration$inboundSchema,\n  DiscountFixedOnceForeverDuration$Outbound,\n  DiscountFixedOnceForeverDuration$outboundSchema,\n} from \"./discountfixedonceforeverduration.js\";\nimport {\n  DiscountFixedRepeatDuration,\n  DiscountFixedRepeatDuration$inboundSchema,\n  DiscountFixedRepeatDuration$Outbound,\n  DiscountFixedRepeatDuration$outboundSchema,\n} from \"./discountfixedrepeatduration.js\";\nimport {\n  DiscountPercentageOnceForeverDuration,\n  DiscountPercentageOnceForeverDuration$inboundSchema,\n  DiscountPercentageOnceForeverDuration$Outbound,\n  DiscountPercentageOnceForeverDuration$outboundSchema,\n} from \"./discountpercentageonceforeverduration.js\";\nimport {\n  DiscountPercentageRepeatDuration,\n  DiscountPercentageRepeatDuration$inboundSchema,\n  DiscountPercentageRepeatDuration$Outbound,\n  DiscountPercentageRepeatDuration$outboundSchema,\n} from \"./discountpercentagerepeatduration.js\";\n\nexport type Discount =\n  | DiscountPercentageOnceForeverDuration\n  | DiscountFixedOnceForeverDuration\n  | DiscountPercentageRepeatDuration\n  | DiscountFixedRepeatDuration;\n\n/** @internal */\nexport const Discount$inboundSchema: z.ZodType<\n  Discount,\n  z.ZodTypeDef,\n  unknown\n> = z.union([\n  DiscountPercentageOnceForeverDuration$inboundSchema,\n  DiscountFixedOnceForeverDuration$inboundSchema,\n  DiscountPercentageRepeatDuration$inboundSchema,\n  DiscountFixedRepeatDuration$inboundSchema,\n]);\n\n/** @internal */\nexport type Discount$Outbound =\n  | DiscountPercentageOnceForeverDuration$Outbound\n  | DiscountFixedOnceForeverDuration$Outbound\n  | DiscountPercentageRepeatDuration$Outbound\n  | DiscountFixedRepeatDuration$Outbound;\n\n/** @internal */\nexport const Discount$outboundSchema: z.ZodType<\n  Discount$Outbound,\n  z.ZodTypeDef,\n  Discount\n> = z.union([\n  DiscountPercentageOnceForeverDuration$outboundSchema,\n  DiscountFixedOnceForeverDuration$outboundSchema,\n  DiscountPercentageRepeatDuration$outboundSchema,\n  DiscountFixedRepeatDuration$outboundSchema,\n]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace Discount$ {\n  /** @deprecated use `Discount$inboundSchema` instead. */\n  export const inboundSchema = Discount$inboundSchema;\n  /** @deprecated use `Discount$outboundSchema` instead. */\n  export const outboundSchema = Discount$outboundSchema;\n  /** @deprecated use `Discount$Outbound` instead. */\n  export type Outbound = Discount$Outbound;\n}\n\nexport function discountToJSON(discount: Discount): string {\n  return JSON.stringify(Discount$outboundSchema.parse(discount));\n}\n\nexport function discountFromJSON(\n  jsonString: string,\n): SafeParseResult<Discount, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => Discount$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'Discount' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,8CAA8C,EAE9C,+CAA+C,GAChD,MAAM,uCAAuC,CAAC;AAC/C,OAAO,EAEL,yCAAyC,EAEzC,0CAA0C,GAC3C,MAAM,kCAAkC,CAAC;AAC1C,OAAO,EAEL,mDAAmD,EAEnD,oDAAoD,GACrD,MAAM,4CAA4C,CAAC;AACpD,OAAO,EAEL,8CAA8C,EAE9C,+CAA+C,GAChD,MAAM,uCAAuC,CAAC;;;;;;;;AASxC,MAAM,sBAAsB,GAI/B,CAAC,6IAAC,KAAK,CAAC;2NACV,sDAAmD;qNACnD,kDAA8C;sNAC9C,iDAA8C;iNAC9C,4CAAyC;CAC1C,CAAC,CAAC;AAUI,MAAM,uBAAuB,GAIhC,CAAC,6IAAC,KAAK,CAAC;IACV,8QAAoD;sNACpD,kDAA+C;sNAC/C,kDAA+C;iNAC/C,6CAA0C;CAC3C,CAAC,CAAC;AAMG,IAAW,SAAS,CAOzB;AAPD,CAAA,SAAiB,SAAS;IACxB,sDAAA,EAAwD,CAC3C,UAAA,aAAa,GAAG,sBAAsB,CAAC;IACpD,uDAAA,EAAyD,CAC5C,UAAA,cAAc,GAAG,uBAAuB,CAAC;AAGxD,CAAC,EAPgB,SAAS,IAAA,CAAT,SAAS,GAAA,CAAA,CAAA,GAOzB;AAEK,SAAU,cAAc,CAAC,QAAkB;IAC/C,OAAO,IAAI,CAAC,SAAS,CAAC,uBAAuB,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;AACjE,CAAC;AAEK,SAAU,gBAAgB,CAC9B,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,qBAAuB,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAClD,CAAA,oCAAA,CAAsC,CACvC,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 20046, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20052, "column": 0}, "map": {"version":3,"file":"discountfixedonceforeverdurationcreate.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/discountfixedonceforeverdurationcreate.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  DiscountDuration,\n  DiscountDuration$inboundSchema,\n  DiscountDuration$outboundSchema,\n} from \"./discountduration.js\";\nimport {\n  DiscountType,\n  DiscountType$inboundSchema,\n  DiscountType$outboundSchema,\n} from \"./discounttype.js\";\n\nexport type DiscountFixedOnceForeverDurationCreateMetadata =\n  | string\n  | number\n  | number\n  | boolean;\n\n/**\n * Schema to create a fixed amount discount that is applied once or forever.\n */\nexport type DiscountFixedOnceForeverDurationCreate = {\n  duration: DiscountDuration;\n  type: DiscountType;\n  /**\n   * Fixed amount to discount from the invoice total.\n   */\n  amount: number;\n  /**\n   * The currency. Currently, only `usd` is supported.\n   */\n  currency?: string | undefined;\n  /**\n   * Key-value object allowing you to store additional information.\n   *\n   * @remarks\n   *\n   * The key must be a string with a maximum length of **40 characters**.\n   * The value must be either:\n   *\n   * * A string with a maximum length of **500 characters**\n   * * An integer\n   * * A floating-point number\n   * * A boolean\n   *\n   * You can store up to **50 key-value pairs**.\n   */\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  /**\n   * Name of the discount. Will be displayed to the customer when the discount is applied.\n   */\n  name: string;\n  /**\n   * Code customers can use to apply the discount during checkout. Must be between 3 and 256 characters long and contain only alphanumeric characters.If not provided, the discount can only be applied via the API.\n   */\n  code?: string | null | undefined;\n  /**\n   * Optional timestamp after which the discount is redeemable.\n   */\n  startsAt?: Date | null | undefined;\n  /**\n   * Optional timestamp after which the discount is no longer redeemable.\n   */\n  endsAt?: Date | null | undefined;\n  /**\n   * Optional maximum number of times the discount can be redeemed.\n   */\n  maxRedemptions?: number | null | undefined;\n  products?: Array<string> | null | undefined;\n  /**\n   * The ID of the organization owning the discount. **Required unless you use an organization token.**\n   */\n  organizationId?: string | null | undefined;\n};\n\n/** @internal */\nexport const DiscountFixedOnceForeverDurationCreateMetadata$inboundSchema:\n  z.ZodType<\n    DiscountFixedOnceForeverDurationCreateMetadata,\n    z.ZodTypeDef,\n    unknown\n  > = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type DiscountFixedOnceForeverDurationCreateMetadata$Outbound =\n  | string\n  | number\n  | number\n  | boolean;\n\n/** @internal */\nexport const DiscountFixedOnceForeverDurationCreateMetadata$outboundSchema:\n  z.ZodType<\n    DiscountFixedOnceForeverDurationCreateMetadata$Outbound,\n    z.ZodTypeDef,\n    DiscountFixedOnceForeverDurationCreateMetadata\n  > = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace DiscountFixedOnceForeverDurationCreateMetadata$ {\n  /** @deprecated use `DiscountFixedOnceForeverDurationCreateMetadata$inboundSchema` instead. */\n  export const inboundSchema =\n    DiscountFixedOnceForeverDurationCreateMetadata$inboundSchema;\n  /** @deprecated use `DiscountFixedOnceForeverDurationCreateMetadata$outboundSchema` instead. */\n  export const outboundSchema =\n    DiscountFixedOnceForeverDurationCreateMetadata$outboundSchema;\n  /** @deprecated use `DiscountFixedOnceForeverDurationCreateMetadata$Outbound` instead. */\n  export type Outbound =\n    DiscountFixedOnceForeverDurationCreateMetadata$Outbound;\n}\n\nexport function discountFixedOnceForeverDurationCreateMetadataToJSON(\n  discountFixedOnceForeverDurationCreateMetadata:\n    DiscountFixedOnceForeverDurationCreateMetadata,\n): string {\n  return JSON.stringify(\n    DiscountFixedOnceForeverDurationCreateMetadata$outboundSchema.parse(\n      discountFixedOnceForeverDurationCreateMetadata,\n    ),\n  );\n}\n\nexport function discountFixedOnceForeverDurationCreateMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<\n  DiscountFixedOnceForeverDurationCreateMetadata,\n  SDKValidationError\n> {\n  return safeParse(\n    jsonString,\n    (x) =>\n      DiscountFixedOnceForeverDurationCreateMetadata$inboundSchema.parse(\n        JSON.parse(x),\n      ),\n    `Failed to parse 'DiscountFixedOnceForeverDurationCreateMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const DiscountFixedOnceForeverDurationCreate$inboundSchema: z.ZodType<\n  DiscountFixedOnceForeverDurationCreate,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  duration: DiscountDuration$inboundSchema,\n  type: DiscountType$inboundSchema,\n  amount: z.number().int(),\n  currency: z.string().default(\"usd\"),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  name: z.string(),\n  code: z.nullable(z.string()).optional(),\n  starts_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ).optional(),\n  ends_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ).optional(),\n  max_redemptions: z.nullable(z.number().int()).optional(),\n  products: z.nullable(z.array(z.string())).optional(),\n  organization_id: z.nullable(z.string()).optional(),\n}).transform((v) => {\n  return remap$(v, {\n    \"starts_at\": \"startsAt\",\n    \"ends_at\": \"endsAt\",\n    \"max_redemptions\": \"maxRedemptions\",\n    \"organization_id\": \"organizationId\",\n  });\n});\n\n/** @internal */\nexport type DiscountFixedOnceForeverDurationCreate$Outbound = {\n  duration: string;\n  type: string;\n  amount: number;\n  currency: string;\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  name: string;\n  code?: string | null | undefined;\n  starts_at?: string | null | undefined;\n  ends_at?: string | null | undefined;\n  max_redemptions?: number | null | undefined;\n  products?: Array<string> | null | undefined;\n  organization_id?: string | null | undefined;\n};\n\n/** @internal */\nexport const DiscountFixedOnceForeverDurationCreate$outboundSchema: z.ZodType<\n  DiscountFixedOnceForeverDurationCreate$Outbound,\n  z.ZodTypeDef,\n  DiscountFixedOnceForeverDurationCreate\n> = z.object({\n  duration: DiscountDuration$outboundSchema,\n  type: DiscountType$outboundSchema,\n  amount: z.number().int(),\n  currency: z.string().default(\"usd\"),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  name: z.string(),\n  code: z.nullable(z.string()).optional(),\n  startsAt: z.nullable(z.date().transform(v => v.toISOString())).optional(),\n  endsAt: z.nullable(z.date().transform(v => v.toISOString())).optional(),\n  maxRedemptions: z.nullable(z.number().int()).optional(),\n  products: z.nullable(z.array(z.string())).optional(),\n  organizationId: z.nullable(z.string()).optional(),\n}).transform((v) => {\n  return remap$(v, {\n    startsAt: \"starts_at\",\n    endsAt: \"ends_at\",\n    maxRedemptions: \"max_redemptions\",\n    organizationId: \"organization_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace DiscountFixedOnceForeverDurationCreate$ {\n  /** @deprecated use `DiscountFixedOnceForeverDurationCreate$inboundSchema` instead. */\n  export const inboundSchema =\n    DiscountFixedOnceForeverDurationCreate$inboundSchema;\n  /** @deprecated use `DiscountFixedOnceForeverDurationCreate$outboundSchema` instead. */\n  export const outboundSchema =\n    DiscountFixedOnceForeverDurationCreate$outboundSchema;\n  /** @deprecated use `DiscountFixedOnceForeverDurationCreate$Outbound` instead. */\n  export type Outbound = DiscountFixedOnceForeverDurationCreate$Outbound;\n}\n\nexport function discountFixedOnceForeverDurationCreateToJSON(\n  discountFixedOnceForeverDurationCreate:\n    DiscountFixedOnceForeverDurationCreate,\n): string {\n  return JSON.stringify(\n    DiscountFixedOnceForeverDurationCreate$outboundSchema.parse(\n      discountFixedOnceForeverDurationCreate,\n    ),\n  );\n}\n\nexport function discountFixedOnceForeverDurationCreateFromJSON(\n  jsonString: string,\n): SafeParseResult<DiscountFixedOnceForeverDurationCreate, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) =>\n      DiscountFixedOnceForeverDurationCreate$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'DiscountFixedOnceForeverDurationCreate' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 20167, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20173, "column": 0}, "map": {"version":3,"file":"discountfixedrepeatdurationcreate.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/discountfixedrepeatdurationcreate.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  DiscountDuration,\n  DiscountDuration$inboundSchema,\n  DiscountDuration$outboundSchema,\n} from \"./discountduration.js\";\nimport {\n  DiscountType,\n  DiscountType$inboundSchema,\n  DiscountType$outboundSchema,\n} from \"./discounttype.js\";\n\nexport type DiscountFixedRepeatDurationCreateMetadata =\n  | string\n  | number\n  | number\n  | boolean;\n\n/**\n * Schema to create a fixed amount discount that is applied on every invoice\n *\n * @remarks\n * for a certain number of months.\n */\nexport type DiscountFixedRepeatDurationCreate = {\n  duration: DiscountDuration;\n  /**\n   * Number of months the discount should be applied.\n   *\n   * @remarks\n   *\n   * For this to work on yearly pricing, you should multiply this by 12.\n   * For example, to apply the discount for 2 years, set this to 24.\n   */\n  durationInMonths: number;\n  type: DiscountType;\n  /**\n   * Fixed amount to discount from the invoice total.\n   */\n  amount: number;\n  /**\n   * The currency. Currently, only `usd` is supported.\n   */\n  currency?: string | undefined;\n  /**\n   * Key-value object allowing you to store additional information.\n   *\n   * @remarks\n   *\n   * The key must be a string with a maximum length of **40 characters**.\n   * The value must be either:\n   *\n   * * A string with a maximum length of **500 characters**\n   * * An integer\n   * * A floating-point number\n   * * A boolean\n   *\n   * You can store up to **50 key-value pairs**.\n   */\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  /**\n   * Name of the discount. Will be displayed to the customer when the discount is applied.\n   */\n  name: string;\n  /**\n   * Code customers can use to apply the discount during checkout. Must be between 3 and 256 characters long and contain only alphanumeric characters.If not provided, the discount can only be applied via the API.\n   */\n  code?: string | null | undefined;\n  /**\n   * Optional timestamp after which the discount is redeemable.\n   */\n  startsAt?: Date | null | undefined;\n  /**\n   * Optional timestamp after which the discount is no longer redeemable.\n   */\n  endsAt?: Date | null | undefined;\n  /**\n   * Optional maximum number of times the discount can be redeemed.\n   */\n  maxRedemptions?: number | null | undefined;\n  products?: Array<string> | null | undefined;\n  /**\n   * The ID of the organization owning the discount. **Required unless you use an organization token.**\n   */\n  organizationId?: string | null | undefined;\n};\n\n/** @internal */\nexport const DiscountFixedRepeatDurationCreateMetadata$inboundSchema: z.ZodType<\n  DiscountFixedRepeatDurationCreateMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type DiscountFixedRepeatDurationCreateMetadata$Outbound =\n  | string\n  | number\n  | number\n  | boolean;\n\n/** @internal */\nexport const DiscountFixedRepeatDurationCreateMetadata$outboundSchema:\n  z.ZodType<\n    DiscountFixedRepeatDurationCreateMetadata$Outbound,\n    z.ZodTypeDef,\n    DiscountFixedRepeatDurationCreateMetadata\n  > = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace DiscountFixedRepeatDurationCreateMetadata$ {\n  /** @deprecated use `DiscountFixedRepeatDurationCreateMetadata$inboundSchema` instead. */\n  export const inboundSchema =\n    DiscountFixedRepeatDurationCreateMetadata$inboundSchema;\n  /** @deprecated use `DiscountFixedRepeatDurationCreateMetadata$outboundSchema` instead. */\n  export const outboundSchema =\n    DiscountFixedRepeatDurationCreateMetadata$outboundSchema;\n  /** @deprecated use `DiscountFixedRepeatDurationCreateMetadata$Outbound` instead. */\n  export type Outbound = DiscountFixedRepeatDurationCreateMetadata$Outbound;\n}\n\nexport function discountFixedRepeatDurationCreateMetadataToJSON(\n  discountFixedRepeatDurationCreateMetadata:\n    DiscountFixedRepeatDurationCreateMetadata,\n): string {\n  return JSON.stringify(\n    DiscountFixedRepeatDurationCreateMetadata$outboundSchema.parse(\n      discountFixedRepeatDurationCreateMetadata,\n    ),\n  );\n}\n\nexport function discountFixedRepeatDurationCreateMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<\n  DiscountFixedRepeatDurationCreateMetadata,\n  SDKValidationError\n> {\n  return safeParse(\n    jsonString,\n    (x) =>\n      DiscountFixedRepeatDurationCreateMetadata$inboundSchema.parse(\n        JSON.parse(x),\n      ),\n    `Failed to parse 'DiscountFixedRepeatDurationCreateMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const DiscountFixedRepeatDurationCreate$inboundSchema: z.ZodType<\n  DiscountFixedRepeatDurationCreate,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  duration: DiscountDuration$inboundSchema,\n  duration_in_months: z.number().int(),\n  type: DiscountType$inboundSchema,\n  amount: z.number().int(),\n  currency: z.string().default(\"usd\"),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  name: z.string(),\n  code: z.nullable(z.string()).optional(),\n  starts_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ).optional(),\n  ends_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ).optional(),\n  max_redemptions: z.nullable(z.number().int()).optional(),\n  products: z.nullable(z.array(z.string())).optional(),\n  organization_id: z.nullable(z.string()).optional(),\n}).transform((v) => {\n  return remap$(v, {\n    \"duration_in_months\": \"durationInMonths\",\n    \"starts_at\": \"startsAt\",\n    \"ends_at\": \"endsAt\",\n    \"max_redemptions\": \"maxRedemptions\",\n    \"organization_id\": \"organizationId\",\n  });\n});\n\n/** @internal */\nexport type DiscountFixedRepeatDurationCreate$Outbound = {\n  duration: string;\n  duration_in_months: number;\n  type: string;\n  amount: number;\n  currency: string;\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  name: string;\n  code?: string | null | undefined;\n  starts_at?: string | null | undefined;\n  ends_at?: string | null | undefined;\n  max_redemptions?: number | null | undefined;\n  products?: Array<string> | null | undefined;\n  organization_id?: string | null | undefined;\n};\n\n/** @internal */\nexport const DiscountFixedRepeatDurationCreate$outboundSchema: z.ZodType<\n  DiscountFixedRepeatDurationCreate$Outbound,\n  z.ZodTypeDef,\n  DiscountFixedRepeatDurationCreate\n> = z.object({\n  duration: DiscountDuration$outboundSchema,\n  durationInMonths: z.number().int(),\n  type: DiscountType$outboundSchema,\n  amount: z.number().int(),\n  currency: z.string().default(\"usd\"),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  name: z.string(),\n  code: z.nullable(z.string()).optional(),\n  startsAt: z.nullable(z.date().transform(v => v.toISOString())).optional(),\n  endsAt: z.nullable(z.date().transform(v => v.toISOString())).optional(),\n  maxRedemptions: z.nullable(z.number().int()).optional(),\n  products: z.nullable(z.array(z.string())).optional(),\n  organizationId: z.nullable(z.string()).optional(),\n}).transform((v) => {\n  return remap$(v, {\n    durationInMonths: \"duration_in_months\",\n    startsAt: \"starts_at\",\n    endsAt: \"ends_at\",\n    maxRedemptions: \"max_redemptions\",\n    organizationId: \"organization_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace DiscountFixedRepeatDurationCreate$ {\n  /** @deprecated use `DiscountFixedRepeatDurationCreate$inboundSchema` instead. */\n  export const inboundSchema = DiscountFixedRepeatDurationCreate$inboundSchema;\n  /** @deprecated use `DiscountFixedRepeatDurationCreate$outboundSchema` instead. */\n  export const outboundSchema =\n    DiscountFixedRepeatDurationCreate$outboundSchema;\n  /** @deprecated use `DiscountFixedRepeatDurationCreate$Outbound` instead. */\n  export type Outbound = DiscountFixedRepeatDurationCreate$Outbound;\n}\n\nexport function discountFixedRepeatDurationCreateToJSON(\n  discountFixedRepeatDurationCreate: DiscountFixedRepeatDurationCreate,\n): string {\n  return JSON.stringify(\n    DiscountFixedRepeatDurationCreate$outboundSchema.parse(\n      discountFixedRepeatDurationCreate,\n    ),\n  );\n}\n\nexport function discountFixedRepeatDurationCreateFromJSON(\n  jsonString: string,\n): SafeParseResult<DiscountFixedRepeatDurationCreate, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => DiscountFixedRepeatDurationCreate$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'DiscountFixedRepeatDurationCreate' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,8BAA8B,EAC9B,+BAA+B,GAChC,MAAM,uBAAuB,CAAC;AAC/B,OAAO,EAEL,0BAA0B,EAC1B,2BAA2B,GAC5B,MAAM,mBAAmB,CAAC;;;;;;;AA8EpB,MAAM,uDAAuD,GAIhE,CAAC,6IAAC,KAAK,CAAC;IAAC,CAAC,6IAAC,MAAM,EAAE;IAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAAE,CAAC,6IAAC,MAAM,EAAE;IAAE,CAAC,6IAAC,OAAO,EAAE;CAAC,CAAC,CAAC;AAU9D,MAAM,wDAAwD,GAK/D,CAAC,6IAAC,KAAK,CAAC;IAAC,CAAC,6IAAC,MAAM,EAAE;IAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAAE,CAAC,6IAAC,MAAM,EAAE;IAAE,CAAC,6IAAC,OAAO,EAAE;CAAC,CAAC,CAAC;AAMjE,IAAW,0CAA0C,CAS1D;AATD,CAAA,SAAiB,0CAA0C;IACzD,uFAAA,EAAyF,CAC5E,2CAAA,aAAa,GACxB,uDAAuD,CAAC;IAC1D,wFAAA,EAA0F,CAC7E,2CAAA,cAAc,GACzB,wDAAwD,CAAC;AAG7D,CAAC,EATgB,0CAA0C,IAAA,CAA1C,0CAA0C,GAAA,CAAA,CAAA,GAS1D;AAEK,SAAU,+CAA+C,CAC7D,yCAC2C;IAE3C,OAAO,IAAI,CAAC,SAAS,CACnB,wDAAwD,CAAC,KAAK,CAC5D,yCAAyC,CAC1C,CACF,CAAC;AACJ,CAAC;AAEK,SAAU,iDAAiD,CAC/D,UAAkB;IAKlB,OAAO,wLAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CACF,CADI,sDACmD,CAAC,KAAK,CAC3D,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CACd,EACH,CAAA,qEAAA,CAAuE,CACxE,CAAC;AACJ,CAAC;AAGM,MAAM,+CAA+C,GAIxD,CAAC,6IAAC,MAAM,CAAC;IACX,QAAQ,oMAAE,iCAA8B;IACxC,kBAAkB,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IACpC,IAAI,+LAAE,8BAA0B;IAChC,MAAM,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IACxB,QAAQ,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC;IACnC,QAAQ,EAAE,CAAC,6IAAC,MAAM,CAChB,CAAC,6IAAC,KAAK,CAAC;QAAC,CAAC,6IAAC,MAAM,EAAE;QAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;QAAE,CAAC,6IAAC,MAAM,EAAE;QAAE,CAAC,6IAAC,OAAO,EAAE;KAAC,CAAC,CACjE,CAAC,QAAQ,EAAE;IACZ,IAAI,EAAE,CAAC,6IAAC,MAAM,EAAE;IAChB,IAAI,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;IACvC,SAAS,EAAE,CAAC,6IAAC,QAAQ,CACnB,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,CAAC;QAAE,MAAM,EAAE,IAAI;IAAA,CAAE,CAAC,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAClE,CAAC,QAAQ,EAAE;IACZ,OAAO,EAAE,CAAC,6IAAC,QAAQ,CACjB,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,CAAC;QAAE,MAAM,EAAE,IAAI;IAAA,CAAE,CAAC,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAClE,CAAC,QAAQ,EAAE;IACZ,eAAe,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,QAAQ,EAAE;IACxD,QAAQ,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,KAAK,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,CAAC,CAAC,QAAQ,EAAE;IACpD,eAAe,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;CACnD,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,oBAAoB,EAAE,kBAAkB;QACxC,WAAW,EAAE,UAAU;QACvB,SAAS,EAAE,QAAQ;QACnB,iBAAiB,EAAE,gBAAgB;QACnC,iBAAiB,EAAE,gBAAgB;KACpC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAoBI,MAAM,gDAAgD,GAIzD,CAAC,6IAAC,MAAM,CAAC;IACX,QAAQ,EAAE,oOAA+B;IACzC,gBAAgB,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAClC,IAAI,gMAAE,8BAA2B;IACjC,MAAM,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IACxB,QAAQ,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC;IACnC,QAAQ,EAAE,CAAC,6IAAC,MAAM,CAChB,CAAC,6IAAC,KAAK,CAAC;QAAC,CAAC,6IAAC,MAAM,EAAE;QAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;QAAE,CAAC,6IAAC,MAAM,EAAE;QAAE,CAAC,6IAAC,OAAO,EAAE;KAAC,CAAC,CACjE,CAAC,QAAQ,EAAE;IACZ,IAAI,EAAE,CAAC,6IAAC,MAAM,EAAE;IAChB,IAAI,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;IACvC,QAAQ,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,IAAI,EAAE,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,QAAQ,EAAE;IACzE,MAAM,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,IAAI,EAAE,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,QAAQ,EAAE;IACvE,cAAc,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,QAAQ,EAAE;IACvD,QAAQ,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,KAAK,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,CAAC,CAAC,QAAQ,EAAE;IACpD,cAAc,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;CAClD,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,gBAAgB,EAAE,oBAAoB;QACtC,QAAQ,EAAE,WAAW;QACrB,MAAM,EAAE,SAAS;QACjB,cAAc,EAAE,iBAAiB;QACjC,cAAc,EAAE,iBAAiB;KAClC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,kCAAkC,CAQlD;AARD,CAAA,SAAiB,kCAAkC;IACjD,+EAAA,EAAiF,CACpE,mCAAA,aAAa,GAAG,+CAA+C,CAAC;IAC7E,gFAAA,EAAkF,CACrE,mCAAA,cAAc,GACzB,gDAAgD,CAAC;AAGrD,CAAC,EARgB,kCAAkC,IAAA,CAAlC,kCAAkC,GAAA,CAAA,CAAA,GAQlD;AAEK,SAAU,uCAAuC,CACrD,iCAAoE;IAEpE,OAAO,IAAI,CAAC,SAAS,CACnB,gDAAgD,CAAC,KAAK,CACpD,iCAAiC,CAClC,CACF,CAAC;AACJ,CAAC;AAEK,SAAU,yCAAyC,CACvD,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,8CAAgD,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC3E,CAAA,6DAAA,CAA+D,CAChE,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 20292, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20298, "column": 0}, "map": {"version":3,"file":"discountpercentageonceforeverdurationcreate.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/discountpercentageonceforeverdurationcreate.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  DiscountDuration,\n  DiscountDuration$inboundSchema,\n  DiscountDuration$outboundSchema,\n} from \"./discountduration.js\";\nimport {\n  DiscountType,\n  DiscountType$inboundSchema,\n  DiscountType$outboundSchema,\n} from \"./discounttype.js\";\n\nexport type DiscountPercentageOnceForeverDurationCreateMetadata =\n  | string\n  | number\n  | number\n  | boolean;\n\n/**\n * Schema to create a percentage discount that is applied once or forever.\n */\nexport type DiscountPercentageOnceForeverDurationCreate = {\n  duration: DiscountDuration;\n  type: DiscountType;\n  /**\n   * Discount percentage in basis points.\n   *\n   * @remarks\n   *\n   * A basis point is 1/100th of a percent.\n   * For example, to create a 25.5% discount, set this to 2550.\n   */\n  basisPoints: number;\n  /**\n   * Key-value object allowing you to store additional information.\n   *\n   * @remarks\n   *\n   * The key must be a string with a maximum length of **40 characters**.\n   * The value must be either:\n   *\n   * * A string with a maximum length of **500 characters**\n   * * An integer\n   * * A floating-point number\n   * * A boolean\n   *\n   * You can store up to **50 key-value pairs**.\n   */\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  /**\n   * Name of the discount. Will be displayed to the customer when the discount is applied.\n   */\n  name: string;\n  /**\n   * Code customers can use to apply the discount during checkout. Must be between 3 and 256 characters long and contain only alphanumeric characters.If not provided, the discount can only be applied via the API.\n   */\n  code?: string | null | undefined;\n  /**\n   * Optional timestamp after which the discount is redeemable.\n   */\n  startsAt?: Date | null | undefined;\n  /**\n   * Optional timestamp after which the discount is no longer redeemable.\n   */\n  endsAt?: Date | null | undefined;\n  /**\n   * Optional maximum number of times the discount can be redeemed.\n   */\n  maxRedemptions?: number | null | undefined;\n  products?: Array<string> | null | undefined;\n  /**\n   * The ID of the organization owning the discount. **Required unless you use an organization token.**\n   */\n  organizationId?: string | null | undefined;\n};\n\n/** @internal */\nexport const DiscountPercentageOnceForeverDurationCreateMetadata$inboundSchema:\n  z.ZodType<\n    DiscountPercentageOnceForeverDurationCreateMetadata,\n    z.ZodTypeDef,\n    unknown\n  > = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type DiscountPercentageOnceForeverDurationCreateMetadata$Outbound =\n  | string\n  | number\n  | number\n  | boolean;\n\n/** @internal */\nexport const DiscountPercentageOnceForeverDurationCreateMetadata$outboundSchema:\n  z.ZodType<\n    DiscountPercentageOnceForeverDurationCreateMetadata$Outbound,\n    z.ZodTypeDef,\n    DiscountPercentageOnceForeverDurationCreateMetadata\n  > = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace DiscountPercentageOnceForeverDurationCreateMetadata$ {\n  /** @deprecated use `DiscountPercentageOnceForeverDurationCreateMetadata$inboundSchema` instead. */\n  export const inboundSchema =\n    DiscountPercentageOnceForeverDurationCreateMetadata$inboundSchema;\n  /** @deprecated use `DiscountPercentageOnceForeverDurationCreateMetadata$outboundSchema` instead. */\n  export const outboundSchema =\n    DiscountPercentageOnceForeverDurationCreateMetadata$outboundSchema;\n  /** @deprecated use `DiscountPercentageOnceForeverDurationCreateMetadata$Outbound` instead. */\n  export type Outbound =\n    DiscountPercentageOnceForeverDurationCreateMetadata$Outbound;\n}\n\nexport function discountPercentageOnceForeverDurationCreateMetadataToJSON(\n  discountPercentageOnceForeverDurationCreateMetadata:\n    DiscountPercentageOnceForeverDurationCreateMetadata,\n): string {\n  return JSON.stringify(\n    DiscountPercentageOnceForeverDurationCreateMetadata$outboundSchema.parse(\n      discountPercentageOnceForeverDurationCreateMetadata,\n    ),\n  );\n}\n\nexport function discountPercentageOnceForeverDurationCreateMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<\n  DiscountPercentageOnceForeverDurationCreateMetadata,\n  SDKValidationError\n> {\n  return safeParse(\n    jsonString,\n    (x) =>\n      DiscountPercentageOnceForeverDurationCreateMetadata$inboundSchema.parse(\n        JSON.parse(x),\n      ),\n    `Failed to parse 'DiscountPercentageOnceForeverDurationCreateMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const DiscountPercentageOnceForeverDurationCreate$inboundSchema:\n  z.ZodType<\n    DiscountPercentageOnceForeverDurationCreate,\n    z.ZodTypeDef,\n    unknown\n  > = z.object({\n    duration: DiscountDuration$inboundSchema,\n    type: DiscountType$inboundSchema,\n    basis_points: z.number().int(),\n    metadata: z.record(\n      z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n    ).optional(),\n    name: z.string(),\n    code: z.nullable(z.string()).optional(),\n    starts_at: z.nullable(\n      z.string().datetime({ offset: true }).transform(v => new Date(v)),\n    ).optional(),\n    ends_at: z.nullable(\n      z.string().datetime({ offset: true }).transform(v => new Date(v)),\n    ).optional(),\n    max_redemptions: z.nullable(z.number().int()).optional(),\n    products: z.nullable(z.array(z.string())).optional(),\n    organization_id: z.nullable(z.string()).optional(),\n  }).transform((v) => {\n    return remap$(v, {\n      \"basis_points\": \"basisPoints\",\n      \"starts_at\": \"startsAt\",\n      \"ends_at\": \"endsAt\",\n      \"max_redemptions\": \"maxRedemptions\",\n      \"organization_id\": \"organizationId\",\n    });\n  });\n\n/** @internal */\nexport type DiscountPercentageOnceForeverDurationCreate$Outbound = {\n  duration: string;\n  type: string;\n  basis_points: number;\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  name: string;\n  code?: string | null | undefined;\n  starts_at?: string | null | undefined;\n  ends_at?: string | null | undefined;\n  max_redemptions?: number | null | undefined;\n  products?: Array<string> | null | undefined;\n  organization_id?: string | null | undefined;\n};\n\n/** @internal */\nexport const DiscountPercentageOnceForeverDurationCreate$outboundSchema:\n  z.ZodType<\n    DiscountPercentageOnceForeverDurationCreate$Outbound,\n    z.ZodTypeDef,\n    DiscountPercentageOnceForeverDurationCreate\n  > = z.object({\n    duration: DiscountDuration$outboundSchema,\n    type: DiscountType$outboundSchema,\n    basisPoints: z.number().int(),\n    metadata: z.record(\n      z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n    ).optional(),\n    name: z.string(),\n    code: z.nullable(z.string()).optional(),\n    startsAt: z.nullable(z.date().transform(v => v.toISOString())).optional(),\n    endsAt: z.nullable(z.date().transform(v => v.toISOString())).optional(),\n    maxRedemptions: z.nullable(z.number().int()).optional(),\n    products: z.nullable(z.array(z.string())).optional(),\n    organizationId: z.nullable(z.string()).optional(),\n  }).transform((v) => {\n    return remap$(v, {\n      basisPoints: \"basis_points\",\n      startsAt: \"starts_at\",\n      endsAt: \"ends_at\",\n      maxRedemptions: \"max_redemptions\",\n      organizationId: \"organization_id\",\n    });\n  });\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace DiscountPercentageOnceForeverDurationCreate$ {\n  /** @deprecated use `DiscountPercentageOnceForeverDurationCreate$inboundSchema` instead. */\n  export const inboundSchema =\n    DiscountPercentageOnceForeverDurationCreate$inboundSchema;\n  /** @deprecated use `DiscountPercentageOnceForeverDurationCreate$outboundSchema` instead. */\n  export const outboundSchema =\n    DiscountPercentageOnceForeverDurationCreate$outboundSchema;\n  /** @deprecated use `DiscountPercentageOnceForeverDurationCreate$Outbound` instead. */\n  export type Outbound = DiscountPercentageOnceForeverDurationCreate$Outbound;\n}\n\nexport function discountPercentageOnceForeverDurationCreateToJSON(\n  discountPercentageOnceForeverDurationCreate:\n    DiscountPercentageOnceForeverDurationCreate,\n): string {\n  return JSON.stringify(\n    DiscountPercentageOnceForeverDurationCreate$outboundSchema.parse(\n      discountPercentageOnceForeverDurationCreate,\n    ),\n  );\n}\n\nexport function discountPercentageOnceForeverDurationCreateFromJSON(\n  jsonString: string,\n): SafeParseResult<\n  DiscountPercentageOnceForeverDurationCreate,\n  SDKValidationError\n> {\n  return safeParse(\n    jsonString,\n    (x) =>\n      DiscountPercentageOnceForeverDurationCreate$inboundSchema.parse(\n        JSON.parse(x),\n      ),\n    `Failed to parse 'DiscountPercentageOnceForeverDurationCreate' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,8BAA8B,EAC9B,+BAA+B,GAChC,MAAM,uBAAuB,CAAC;AAC/B,OAAO,EAEL,0BAA0B,EAC1B,2BAA2B,GAC5B,MAAM,mBAAmB,CAAC;;;;;;;AAmEpB,MAAM,iEAAiE,GAKxE,CAAC,6IAAC,KAAK,CAAC;IAAC,CAAC,6IAAC,MAAM,EAAE;IAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAAE,CAAC,6IAAC,MAAM,EAAE;IAAE,CAAC,6IAAC,OAAO,EAAE;CAAC,CAAC,CAAC;AAUhE,MAAM,kEAAkE,GAKzE,CAAC,6IAAC,KAAK,CAAC;IAAC,CAAC,6IAAC,MAAM,EAAE;IAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAAE,CAAC,6IAAC,MAAM,EAAE;IAAE,CAAC,6IAAC,OAAO,EAAE;CAAC,CAAC,CAAC;AAMjE,IAAW,oDAAoD,CAUpE;AAVD,CAAA,SAAiB,oDAAoD;IACnE,iGAAA,EAAmG,CACtF,qDAAA,aAAa,GACxB,iEAAiE,CAAC;IACpE,kGAAA,EAAoG,CACvF,qDAAA,cAAc,GACzB,kEAAkE,CAAC;AAIvE,CAAC,EAVgB,oDAAoD,IAAA,CAApD,oDAAoD,GAAA,CAAA,CAAA,GAUpE;AAEK,SAAU,yDAAyD,CACvE,mDACqD;IAErD,OAAO,IAAI,CAAC,SAAS,CACnB,kEAAkE,CAAC,KAAK,CACtE,mDAAmD,CACpD,CACF,CAAC;AACJ,CAAC;AAEK,SAAU,2DAA2D,CACzE,UAAkB;IAKlB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CACF,CADI,gEAC6D,CAAC,KAAK,CACrE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CACd,EACH,CAAA,+EAAA,CAAiF,CAClF,CAAC;AACJ,CAAC;AAGM,MAAM,yDAAyD,GAKhE,CAAC,6IAAC,MAAM,CAAC;IACX,QAAQ,EAAE,mOAA8B;IACxC,IAAI,gMAAE,6BAA0B;IAChC,YAAY,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAC9B,QAAQ,EAAE,CAAC,6IAAC,MAAM,CAChB,CAAC,6IAAC,KAAK,CAAC;QAAC,CAAC,6IAAC,MAAM,EAAE;QAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;QAAE,CAAC,6IAAC,MAAM,EAAE;QAAE,CAAC,6IAAC,OAAO,EAAE;KAAC,CAAC,CACjE,CAAC,QAAQ,EAAE;IACZ,IAAI,EAAE,CAAC,6IAAC,MAAM,EAAE;IAChB,IAAI,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;IACvC,SAAS,EAAE,CAAC,6IAAC,QAAQ,CACnB,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,CAAC;QAAE,MAAM,EAAE,IAAI;IAAA,CAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAClE,CAAC,QAAQ,EAAE;IACZ,OAAO,EAAE,CAAC,6IAAC,QAAQ,CACjB,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,CAAC;QAAE,MAAM,EAAE,IAAI;IAAA,CAAE,CAAC,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAClE,CAAC,QAAQ,EAAE;IACZ,eAAe,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,QAAQ,EAAE;IACxD,QAAQ,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,KAAK,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,CAAC,CAAC,QAAQ,EAAE;IACpD,eAAe,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;CACnD,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,cAAc,EAAE,aAAa;QAC7B,WAAW,EAAE,UAAU;QACvB,SAAS,EAAE,QAAQ;QACnB,iBAAiB,EAAE,gBAAgB;QACnC,iBAAiB,EAAE,gBAAgB;KACpC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAkBE,MAAM,0DAA0D,GAKjE,CAAC,6IAAC,MAAM,CAAC;IACX,QAAQ,oMAAE,kCAA+B;IACzC,IAAI,gMAAE,8BAA2B;IACjC,WAAW,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAC7B,QAAQ,EAAE,CAAC,6IAAC,MAAM,CAChB,CAAC,6IAAC,KAAK,CAAC;QAAC,CAAC,6IAAC,MAAM,EAAE;QAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;QAAE,CAAC,6IAAC,MAAM,EAAE;QAAE,CAAC,6IAAC,OAAO,EAAE;KAAC,CAAC,CACjE,CAAC,QAAQ,EAAE;IACZ,IAAI,EAAE,CAAC,6IAAC,MAAM,EAAE;IAChB,IAAI,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;IACvC,QAAQ,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,IAAI,EAAE,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,QAAQ,EAAE;IACzE,MAAM,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,IAAI,EAAE,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,QAAQ,EAAE;IACvE,cAAc,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,QAAQ,EAAE;IACvD,QAAQ,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,KAAK,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,CAAC,CAAC,QAAQ,EAAE;IACpD,cAAc,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;CAClD,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,WAAW,EAAE,cAAc;QAC3B,QAAQ,EAAE,WAAW;QACrB,MAAM,EAAE,SAAS;QACjB,cAAc,EAAE,iBAAiB;QACjC,cAAc,EAAE,iBAAiB;KAClC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMC,IAAW,4CAA4C,CAS5D;AATD,CAAA,SAAiB,4CAA4C;IAC3D,yFAAA,EAA2F,CAC9E,6CAAA,aAAa,GACxB,yDAAyD,CAAC;IAC5D,0FAAA,EAA4F,CAC/E,6CAAA,cAAc,GACzB,0DAA0D,CAAC;AAG/D,CAAC,EATgB,4CAA4C,IAAA,CAA5C,4CAA4C,GAAA,CAAA,CAAA,GAS5D;AAEK,SAAU,iDAAiD,CAC/D,2CAC6C;IAE7C,OAAO,IAAI,CAAC,SAAS,CACnB,0DAA0D,CAAC,KAAK,CAC9D,2CAA2C,CAC5C,CACF,CAAC;AACJ,CAAC;AAEK,SAAU,mDAAmD,CACjE,UAAkB;IAKlB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CACF,CADI,wDACqD,CAAC,KAAK,CAC7D,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CACd,EACH,CAAA,uEAAA,CAAyE,CAC1E,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 20413, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20419, "column": 0}, "map": {"version":3,"file":"discountpercentagerepeatdurationcreate.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/discountpercentagerepeatdurationcreate.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  DiscountDuration,\n  DiscountDuration$inboundSchema,\n  DiscountDuration$outboundSchema,\n} from \"./discountduration.js\";\nimport {\n  DiscountType,\n  DiscountType$inboundSchema,\n  DiscountType$outboundSchema,\n} from \"./discounttype.js\";\n\nexport type DiscountPercentageRepeatDurationCreateMetadata =\n  | string\n  | number\n  | number\n  | boolean;\n\n/**\n * Schema to create a percentage discount that is applied on every invoice\n *\n * @remarks\n * for a certain number of months.\n */\nexport type DiscountPercentageRepeatDurationCreate = {\n  duration: DiscountDuration;\n  /**\n   * Number of months the discount should be applied.\n   *\n   * @remarks\n   *\n   * For this to work on yearly pricing, you should multiply this by 12.\n   * For example, to apply the discount for 2 years, set this to 24.\n   */\n  durationInMonths: number;\n  type: DiscountType;\n  /**\n   * Discount percentage in basis points.\n   *\n   * @remarks\n   *\n   * A basis point is 1/100th of a percent.\n   * For example, to create a 25.5% discount, set this to 2550.\n   */\n  basisPoints: number;\n  /**\n   * Key-value object allowing you to store additional information.\n   *\n   * @remarks\n   *\n   * The key must be a string with a maximum length of **40 characters**.\n   * The value must be either:\n   *\n   * * A string with a maximum length of **500 characters**\n   * * An integer\n   * * A floating-point number\n   * * A boolean\n   *\n   * You can store up to **50 key-value pairs**.\n   */\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  /**\n   * Name of the discount. Will be displayed to the customer when the discount is applied.\n   */\n  name: string;\n  /**\n   * Code customers can use to apply the discount during checkout. Must be between 3 and 256 characters long and contain only alphanumeric characters.If not provided, the discount can only be applied via the API.\n   */\n  code?: string | null | undefined;\n  /**\n   * Optional timestamp after which the discount is redeemable.\n   */\n  startsAt?: Date | null | undefined;\n  /**\n   * Optional timestamp after which the discount is no longer redeemable.\n   */\n  endsAt?: Date | null | undefined;\n  /**\n   * Optional maximum number of times the discount can be redeemed.\n   */\n  maxRedemptions?: number | null | undefined;\n  products?: Array<string> | null | undefined;\n  /**\n   * The ID of the organization owning the discount. **Required unless you use an organization token.**\n   */\n  organizationId?: string | null | undefined;\n};\n\n/** @internal */\nexport const DiscountPercentageRepeatDurationCreateMetadata$inboundSchema:\n  z.ZodType<\n    DiscountPercentageRepeatDurationCreateMetadata,\n    z.ZodTypeDef,\n    unknown\n  > = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type DiscountPercentageRepeatDurationCreateMetadata$Outbound =\n  | string\n  | number\n  | number\n  | boolean;\n\n/** @internal */\nexport const DiscountPercentageRepeatDurationCreateMetadata$outboundSchema:\n  z.ZodType<\n    DiscountPercentageRepeatDurationCreateMetadata$Outbound,\n    z.ZodTypeDef,\n    DiscountPercentageRepeatDurationCreateMetadata\n  > = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace DiscountPercentageRepeatDurationCreateMetadata$ {\n  /** @deprecated use `DiscountPercentageRepeatDurationCreateMetadata$inboundSchema` instead. */\n  export const inboundSchema =\n    DiscountPercentageRepeatDurationCreateMetadata$inboundSchema;\n  /** @deprecated use `DiscountPercentageRepeatDurationCreateMetadata$outboundSchema` instead. */\n  export const outboundSchema =\n    DiscountPercentageRepeatDurationCreateMetadata$outboundSchema;\n  /** @deprecated use `DiscountPercentageRepeatDurationCreateMetadata$Outbound` instead. */\n  export type Outbound =\n    DiscountPercentageRepeatDurationCreateMetadata$Outbound;\n}\n\nexport function discountPercentageRepeatDurationCreateMetadataToJSON(\n  discountPercentageRepeatDurationCreateMetadata:\n    DiscountPercentageRepeatDurationCreateMetadata,\n): string {\n  return JSON.stringify(\n    DiscountPercentageRepeatDurationCreateMetadata$outboundSchema.parse(\n      discountPercentageRepeatDurationCreateMetadata,\n    ),\n  );\n}\n\nexport function discountPercentageRepeatDurationCreateMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<\n  DiscountPercentageRepeatDurationCreateMetadata,\n  SDKValidationError\n> {\n  return safeParse(\n    jsonString,\n    (x) =>\n      DiscountPercentageRepeatDurationCreateMetadata$inboundSchema.parse(\n        JSON.parse(x),\n      ),\n    `Failed to parse 'DiscountPercentageRepeatDurationCreateMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const DiscountPercentageRepeatDurationCreate$inboundSchema: z.ZodType<\n  DiscountPercentageRepeatDurationCreate,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  duration: DiscountDuration$inboundSchema,\n  duration_in_months: z.number().int(),\n  type: DiscountType$inboundSchema,\n  basis_points: z.number().int(),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  name: z.string(),\n  code: z.nullable(z.string()).optional(),\n  starts_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ).optional(),\n  ends_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ).optional(),\n  max_redemptions: z.nullable(z.number().int()).optional(),\n  products: z.nullable(z.array(z.string())).optional(),\n  organization_id: z.nullable(z.string()).optional(),\n}).transform((v) => {\n  return remap$(v, {\n    \"duration_in_months\": \"durationInMonths\",\n    \"basis_points\": \"basisPoints\",\n    \"starts_at\": \"startsAt\",\n    \"ends_at\": \"endsAt\",\n    \"max_redemptions\": \"maxRedemptions\",\n    \"organization_id\": \"organizationId\",\n  });\n});\n\n/** @internal */\nexport type DiscountPercentageRepeatDurationCreate$Outbound = {\n  duration: string;\n  duration_in_months: number;\n  type: string;\n  basis_points: number;\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  name: string;\n  code?: string | null | undefined;\n  starts_at?: string | null | undefined;\n  ends_at?: string | null | undefined;\n  max_redemptions?: number | null | undefined;\n  products?: Array<string> | null | undefined;\n  organization_id?: string | null | undefined;\n};\n\n/** @internal */\nexport const DiscountPercentageRepeatDurationCreate$outboundSchema: z.ZodType<\n  DiscountPercentageRepeatDurationCreate$Outbound,\n  z.ZodTypeDef,\n  DiscountPercentageRepeatDurationCreate\n> = z.object({\n  duration: DiscountDuration$outboundSchema,\n  durationInMonths: z.number().int(),\n  type: DiscountType$outboundSchema,\n  basisPoints: z.number().int(),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  name: z.string(),\n  code: z.nullable(z.string()).optional(),\n  startsAt: z.nullable(z.date().transform(v => v.toISOString())).optional(),\n  endsAt: z.nullable(z.date().transform(v => v.toISOString())).optional(),\n  maxRedemptions: z.nullable(z.number().int()).optional(),\n  products: z.nullable(z.array(z.string())).optional(),\n  organizationId: z.nullable(z.string()).optional(),\n}).transform((v) => {\n  return remap$(v, {\n    durationInMonths: \"duration_in_months\",\n    basisPoints: \"basis_points\",\n    startsAt: \"starts_at\",\n    endsAt: \"ends_at\",\n    maxRedemptions: \"max_redemptions\",\n    organizationId: \"organization_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace DiscountPercentageRepeatDurationCreate$ {\n  /** @deprecated use `DiscountPercentageRepeatDurationCreate$inboundSchema` instead. */\n  export const inboundSchema =\n    DiscountPercentageRepeatDurationCreate$inboundSchema;\n  /** @deprecated use `DiscountPercentageRepeatDurationCreate$outboundSchema` instead. */\n  export const outboundSchema =\n    DiscountPercentageRepeatDurationCreate$outboundSchema;\n  /** @deprecated use `DiscountPercentageRepeatDurationCreate$Outbound` instead. */\n  export type Outbound = DiscountPercentageRepeatDurationCreate$Outbound;\n}\n\nexport function discountPercentageRepeatDurationCreateToJSON(\n  discountPercentageRepeatDurationCreate:\n    DiscountPercentageRepeatDurationCreate,\n): string {\n  return JSON.stringify(\n    DiscountPercentageRepeatDurationCreate$outboundSchema.parse(\n      discountPercentageRepeatDurationCreate,\n    ),\n  );\n}\n\nexport function discountPercentageRepeatDurationCreateFromJSON(\n  jsonString: string,\n): SafeParseResult<DiscountPercentageRepeatDurationCreate, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) =>\n      DiscountPercentageRepeatDurationCreate$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'DiscountPercentageRepeatDurationCreate' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 20538, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20544, "column": 0}, "map": {"version":3,"file":"discountcreate.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/discountcreate.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  DiscountFixedOnceForeverDurationCreate,\n  DiscountFixedOnceForeverDurationCreate$inboundSchema,\n  DiscountFixedOnceForeverDurationCreate$Outbound,\n  DiscountFixedOnceForeverDurationCreate$outboundSchema,\n} from \"./discountfixedonceforeverdurationcreate.js\";\nimport {\n  DiscountFixedRepeatDurationCreate,\n  DiscountFixedRepeatDurationCreate$inboundSchema,\n  DiscountFixedRepeatDurationCreate$Outbound,\n  DiscountFixedRepeatDurationCreate$outboundSchema,\n} from \"./discountfixedrepeatdurationcreate.js\";\nimport {\n  DiscountPercentageOnceForeverDurationCreate,\n  DiscountPercentageOnceForeverDurationCreate$inboundSchema,\n  DiscountPercentageOnceForeverDurationCreate$Outbound,\n  DiscountPercentageOnceForeverDurationCreate$outboundSchema,\n} from \"./discountpercentageonceforeverdurationcreate.js\";\nimport {\n  DiscountPercentageRepeatDurationCreate,\n  DiscountPercentageRepeatDurationCreate$inboundSchema,\n  DiscountPercentageRepeatDurationCreate$Outbound,\n  DiscountPercentageRepeatDurationCreate$outboundSchema,\n} from \"./discountpercentagerepeatdurationcreate.js\";\n\nexport type DiscountCreate =\n  | DiscountPercentageOnceForeverDurationCreate\n  | DiscountFixedOnceForeverDurationCreate\n  | DiscountPercentageRepeatDurationCreate\n  | DiscountFixedRepeatDurationCreate;\n\n/** @internal */\nexport const DiscountCreate$inboundSchema: z.ZodType<\n  DiscountCreate,\n  z.ZodTypeDef,\n  unknown\n> = z.union([\n  DiscountPercentageOnceForeverDurationCreate$inboundSchema,\n  DiscountFixedOnceForeverDurationCreate$inboundSchema,\n  DiscountPercentageRepeatDurationCreate$inboundSchema,\n  DiscountFixedRepeatDurationCreate$inboundSchema,\n]);\n\n/** @internal */\nexport type DiscountCreate$Outbound =\n  | DiscountPercentageOnceForeverDurationCreate$Outbound\n  | DiscountFixedOnceForeverDurationCreate$Outbound\n  | DiscountPercentageRepeatDurationCreate$Outbound\n  | DiscountFixedRepeatDurationCreate$Outbound;\n\n/** @internal */\nexport const DiscountCreate$outboundSchema: z.ZodType<\n  DiscountCreate$Outbound,\n  z.ZodTypeDef,\n  DiscountCreate\n> = z.union([\n  DiscountPercentageOnceForeverDurationCreate$outboundSchema,\n  DiscountFixedOnceForeverDurationCreate$outboundSchema,\n  DiscountPercentageRepeatDurationCreate$outboundSchema,\n  DiscountFixedRepeatDurationCreate$outboundSchema,\n]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace DiscountCreate$ {\n  /** @deprecated use `DiscountCreate$inboundSchema` instead. */\n  export const inboundSchema = DiscountCreate$inboundSchema;\n  /** @deprecated use `DiscountCreate$outboundSchema` instead. */\n  export const outboundSchema = DiscountCreate$outboundSchema;\n  /** @deprecated use `DiscountCreate$Outbound` instead. */\n  export type Outbound = DiscountCreate$Outbound;\n}\n\nexport function discountCreateToJSON(discountCreate: DiscountCreate): string {\n  return JSON.stringify(DiscountCreate$outboundSchema.parse(discountCreate));\n}\n\nexport function discountCreateFromJSON(\n  jsonString: string,\n): SafeParseResult<DiscountCreate, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => DiscountCreate$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'DiscountCreate' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,oDAAoD,EAEpD,qDAAqD,GACtD,MAAM,6CAA6C,CAAC;AACrD,OAAO,EAEL,+CAA+C,EAE/C,gDAAgD,GACjD,MAAM,wCAAwC,CAAC;AAChD,OAAO,EAEL,yDAAyD,EAEzD,0DAA0D,GAC3D,MAAM,kDAAkD,CAAC;AAC1D,OAAO,EAEL,oDAAoD,EAEpD,qDAAqD,GACtD,MAAM,6CAA6C,CAAC;;;;;;;;AAS9C,MAAM,4BAA4B,GAIrC,CAAC,6IAAC,KAAK,CAAC;iOACV,4DAAyD;2NACzD,wDAAoD;4NACpD,uDAAoD;uNACpD,kDAA+C;CAChD,CAAC,CAAC;AAUI,MAAM,6BAA6B,GAItC,CAAC,6IAAC,KAAK,CAAC;IACV,0RAA0D;4NAC1D,wDAAqD;4NACrD,wDAAqD;uNACrD,mDAAgD;CACjD,CAAC,CAAC;AAMG,IAAW,eAAe,CAO/B;AAPD,CAAA,SAAiB,eAAe;IAC9B,4DAAA,EAA8D,CACjD,gBAAA,aAAa,GAAG,4BAA4B,CAAC;IAC1D,6DAAA,EAA+D,CAClD,gBAAA,cAAc,GAAG,6BAA6B,CAAC;AAG9D,CAAC,EAPgB,eAAe,IAAA,CAAf,eAAe,GAAA,CAAA,CAAA,GAO/B;AAEK,SAAU,oBAAoB,CAAC,cAA8B;IACjE,OAAO,IAAI,CAAC,SAAS,CAAC,6BAA6B,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC;AAC7E,CAAC;AAEK,SAAU,sBAAsB,CACpC,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,2BAA6B,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACxD,CAAA,0CAAA,CAA4C,CAC7C,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 20589, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20595, "column": 0}, "map": {"version":3,"file":"discountsortproperty.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/discountsortproperty.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { ClosedEnum } from \"../../types/enums.js\";\n\nexport const DiscountSortProperty = {\n  CreatedAt: \"created_at\",\n  MinusCreatedAt: \"-created_at\",\n  Name: \"name\",\n  MinusName: \"-name\",\n  Code: \"code\",\n  MinusCode: \"-code\",\n  RedemptionsCount: \"redemptions_count\",\n  MinusRedemptionsCount: \"-redemptions_count\",\n} as const;\nexport type DiscountSortProperty = ClosedEnum<typeof DiscountSortProperty>;\n\n/** @internal */\nexport const DiscountSortProperty$inboundSchema: z.ZodNativeEnum<\n  typeof DiscountSortProperty\n> = z.nativeEnum(DiscountSortProperty);\n\n/** @internal */\nexport const DiscountSortProperty$outboundSchema: z.ZodNativeEnum<\n  typeof DiscountSortProperty\n> = DiscountSortProperty$inboundSchema;\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace DiscountSortProperty$ {\n  /** @deprecated use `DiscountSortProperty$inboundSchema` instead. */\n  export const inboundSchema = DiscountSortProperty$inboundSchema;\n  /** @deprecated use `DiscountSortProperty$outboundSchema` instead. */\n  export const outboundSchema = DiscountSortProperty$outboundSchema;\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;AAGlB,MAAM,oBAAoB,GAAG;IAClC,SAAS,EAAE,YAAY;IACvB,cAAc,EAAE,aAAa;IAC7B,IAAI,EAAE,MAAM;IACZ,SAAS,EAAE,OAAO;IAClB,IAAI,EAAE,MAAM;IACZ,SAAS,EAAE,OAAO;IAClB,gBAAgB,EAAE,mBAAmB;IACrC,qBAAqB,EAAE,oBAAoB;CACnC,CAAC;AAIJ,MAAM,kCAAkC,GAE3C,CAAC,6IAAC,UAAU,CAAC,oBAAoB,CAAC,CAAC;AAGhC,MAAM,mCAAmC,GAE5C,kCAAkC,CAAC;AAMjC,IAAW,qBAAqB,CAKrC;AALD,CAAA,SAAiB,qBAAqB;IACpC,kEAAA,EAAoE,CACvD,sBAAA,aAAa,GAAG,kCAAkC,CAAC;IAChE,mEAAA,EAAqE,CACxD,sBAAA,cAAc,GAAG,mCAAmC,CAAC;AACpE,CAAC,EALgB,qBAAqB,IAAA,CAArB,qBAAqB,GAAA,CAAA,CAAA,GAKrC","ignoreList":[0]}},
    {"offset": {"line": 20623, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20629, "column": 0}, "map": {"version":3,"file":"listresourcediscount.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/listresourcediscount.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  Discount,\n  Discount$inboundSchema,\n  Discount$Outbound,\n  Discount$outboundSchema,\n} from \"./discount.js\";\nimport {\n  Pagination,\n  Pagination$inboundSchema,\n  Pagination$Outbound,\n  Pagination$outboundSchema,\n} from \"./pagination.js\";\n\nexport type ListResourceDiscount = {\n  items: Array<Discount>;\n  pagination: Pagination;\n};\n\n/** @internal */\nexport const ListResourceDiscount$inboundSchema: z.ZodType<\n  ListResourceDiscount,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  items: z.array(Discount$inboundSchema),\n  pagination: Pagination$inboundSchema,\n});\n\n/** @internal */\nexport type ListResourceDiscount$Outbound = {\n  items: Array<Discount$Outbound>;\n  pagination: Pagination$Outbound;\n};\n\n/** @internal */\nexport const ListResourceDiscount$outboundSchema: z.ZodType<\n  ListResourceDiscount$Outbound,\n  z.ZodTypeDef,\n  ListResourceDiscount\n> = z.object({\n  items: z.array(Discount$outboundSchema),\n  pagination: Pagination$outboundSchema,\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace ListResourceDiscount$ {\n  /** @deprecated use `ListResourceDiscount$inboundSchema` instead. */\n  export const inboundSchema = ListResourceDiscount$inboundSchema;\n  /** @deprecated use `ListResourceDiscount$outboundSchema` instead. */\n  export const outboundSchema = ListResourceDiscount$outboundSchema;\n  /** @deprecated use `ListResourceDiscount$Outbound` instead. */\n  export type Outbound = ListResourceDiscount$Outbound;\n}\n\nexport function listResourceDiscountToJSON(\n  listResourceDiscount: ListResourceDiscount,\n): string {\n  return JSON.stringify(\n    ListResourceDiscount$outboundSchema.parse(listResourceDiscount),\n  );\n}\n\nexport function listResourceDiscountFromJSON(\n  jsonString: string,\n): SafeParseResult<ListResourceDiscount, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => ListResourceDiscount$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'ListResourceDiscount' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;AAGH,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,sBAAsB,EAEtB,uBAAuB,GACxB,MAAM,eAAe,CAAC;AACvB,OAAO,EAEL,wBAAwB,EAExB,yBAAyB,GAC1B,MAAM,iBAAiB,CAAC;AAfzB,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;;;;AAuBlB,MAAM,kCAAkC,GAI3C,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,KAAK,2LAAC,yBAAsB,CAAC;IACtC,UAAU,8LAAE,2BAAwB;CACrC,CAAC,CAAC;AASI,MAAM,mCAAmC,GAI5C,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,KAAK,2LAAC,0BAAuB,CAAC;IACvC,UAAU,8LAAE,4BAAyB;CACtC,CAAC,CAAC;AAMG,IAAW,qBAAqB,CAOrC;AAPD,CAAA,SAAiB,qBAAqB;IACpC,kEAAA,EAAoE,CACvD,sBAAA,aAAa,GAAG,kCAAkC,CAAC;IAChE,mEAAA,EAAqE,CACxD,sBAAA,cAAc,GAAG,mCAAmC,CAAC;AAGpE,CAAC,EAPgB,qBAAqB,IAAA,CAArB,qBAAqB,GAAA,CAAA,CAAA,GAOrC;AAEK,SAAU,0BAA0B,CACxC,oBAA0C;IAE1C,OAAO,IAAI,CAAC,SAAS,CACnB,mCAAmC,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAChE,CAAC;AACJ,CAAC;AAEK,SAAU,4BAA4B,CAC1C,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,iCAAmC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC9D,CAAA,gDAAA,CAAkD,CACnD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 20666, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20672, "column": 0}, "map": {"version":3,"file":"discountupdate.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/discountupdate.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  DiscountDuration,\n  DiscountDuration$inboundSchema,\n  DiscountDuration$outboundSchema,\n} from \"./discountduration.js\";\nimport {\n  DiscountType,\n  DiscountType$inboundSchema,\n  DiscountType$outboundSchema,\n} from \"./discounttype.js\";\n\nexport type DiscountUpdateMetadata = string | number | number | boolean;\n\n/**\n * Schema to update a discount.\n */\nexport type DiscountUpdate = {\n  /**\n   * Key-value object allowing you to store additional information.\n   *\n   * @remarks\n   *\n   * The key must be a string with a maximum length of **40 characters**.\n   * The value must be either:\n   *\n   * * A string with a maximum length of **500 characters**\n   * * An integer\n   * * A floating-point number\n   * * A boolean\n   *\n   * You can store up to **50 key-value pairs**.\n   */\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  name?: string | null | undefined;\n  code?: string | null | undefined;\n  startsAt?: Date | null | undefined;\n  endsAt?: Date | null | undefined;\n  maxRedemptions?: number | null | undefined;\n  duration?: DiscountDuration | null | undefined;\n  durationInMonths?: number | null | undefined;\n  type?: DiscountType | null | undefined;\n  amount?: number | null | undefined;\n  currency?: string | null | undefined;\n  basisPoints?: number | null | undefined;\n  products?: Array<string> | null | undefined;\n};\n\n/** @internal */\nexport const DiscountUpdateMetadata$inboundSchema: z.ZodType<\n  DiscountUpdateMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type DiscountUpdateMetadata$Outbound =\n  | string\n  | number\n  | number\n  | boolean;\n\n/** @internal */\nexport const DiscountUpdateMetadata$outboundSchema: z.ZodType<\n  DiscountUpdateMetadata$Outbound,\n  z.ZodTypeDef,\n  DiscountUpdateMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace DiscountUpdateMetadata$ {\n  /** @deprecated use `DiscountUpdateMetadata$inboundSchema` instead. */\n  export const inboundSchema = DiscountUpdateMetadata$inboundSchema;\n  /** @deprecated use `DiscountUpdateMetadata$outboundSchema` instead. */\n  export const outboundSchema = DiscountUpdateMetadata$outboundSchema;\n  /** @deprecated use `DiscountUpdateMetadata$Outbound` instead. */\n  export type Outbound = DiscountUpdateMetadata$Outbound;\n}\n\nexport function discountUpdateMetadataToJSON(\n  discountUpdateMetadata: DiscountUpdateMetadata,\n): string {\n  return JSON.stringify(\n    DiscountUpdateMetadata$outboundSchema.parse(discountUpdateMetadata),\n  );\n}\n\nexport function discountUpdateMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<DiscountUpdateMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => DiscountUpdateMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'DiscountUpdateMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const DiscountUpdate$inboundSchema: z.ZodType<\n  DiscountUpdate,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  name: z.nullable(z.string()).optional(),\n  code: z.nullable(z.string()).optional(),\n  starts_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ).optional(),\n  ends_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ).optional(),\n  max_redemptions: z.nullable(z.number().int()).optional(),\n  duration: z.nullable(DiscountDuration$inboundSchema).optional(),\n  duration_in_months: z.nullable(z.number().int()).optional(),\n  type: z.nullable(DiscountType$inboundSchema).optional(),\n  amount: z.nullable(z.number().int()).optional(),\n  currency: z.nullable(z.string().default(\"usd\")),\n  basis_points: z.nullable(z.number().int()).optional(),\n  products: z.nullable(z.array(z.string())).optional(),\n}).transform((v) => {\n  return remap$(v, {\n    \"starts_at\": \"startsAt\",\n    \"ends_at\": \"endsAt\",\n    \"max_redemptions\": \"maxRedemptions\",\n    \"duration_in_months\": \"durationInMonths\",\n    \"basis_points\": \"basisPoints\",\n  });\n});\n\n/** @internal */\nexport type DiscountUpdate$Outbound = {\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  name?: string | null | undefined;\n  code?: string | null | undefined;\n  starts_at?: string | null | undefined;\n  ends_at?: string | null | undefined;\n  max_redemptions?: number | null | undefined;\n  duration?: string | null | undefined;\n  duration_in_months?: number | null | undefined;\n  type?: string | null | undefined;\n  amount?: number | null | undefined;\n  currency: string | null;\n  basis_points?: number | null | undefined;\n  products?: Array<string> | null | undefined;\n};\n\n/** @internal */\nexport const DiscountUpdate$outboundSchema: z.ZodType<\n  DiscountUpdate$Outbound,\n  z.ZodTypeDef,\n  DiscountUpdate\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  name: z.nullable(z.string()).optional(),\n  code: z.nullable(z.string()).optional(),\n  startsAt: z.nullable(z.date().transform(v => v.toISOString())).optional(),\n  endsAt: z.nullable(z.date().transform(v => v.toISOString())).optional(),\n  maxRedemptions: z.nullable(z.number().int()).optional(),\n  duration: z.nullable(DiscountDuration$outboundSchema).optional(),\n  durationInMonths: z.nullable(z.number().int()).optional(),\n  type: z.nullable(DiscountType$outboundSchema).optional(),\n  amount: z.nullable(z.number().int()).optional(),\n  currency: z.nullable(z.string().default(\"usd\")),\n  basisPoints: z.nullable(z.number().int()).optional(),\n  products: z.nullable(z.array(z.string())).optional(),\n}).transform((v) => {\n  return remap$(v, {\n    startsAt: \"starts_at\",\n    endsAt: \"ends_at\",\n    maxRedemptions: \"max_redemptions\",\n    durationInMonths: \"duration_in_months\",\n    basisPoints: \"basis_points\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace DiscountUpdate$ {\n  /** @deprecated use `DiscountUpdate$inboundSchema` instead. */\n  export const inboundSchema = DiscountUpdate$inboundSchema;\n  /** @deprecated use `DiscountUpdate$outboundSchema` instead. */\n  export const outboundSchema = DiscountUpdate$outboundSchema;\n  /** @deprecated use `DiscountUpdate$Outbound` instead. */\n  export type Outbound = DiscountUpdate$Outbound;\n}\n\nexport function discountUpdateToJSON(discountUpdate: DiscountUpdate): string {\n  return JSON.stringify(DiscountUpdate$outboundSchema.parse(discountUpdate));\n}\n\nexport function discountUpdateFromJSON(\n  jsonString: string,\n): SafeParseResult<DiscountUpdate, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => DiscountUpdate$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'DiscountUpdate' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 20791, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20797, "column": 0}, "map": {"version":3,"file":"benefitgrantmetadata.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/benefitgrantmetadata.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  BenefitType,\n  BenefitType$inboundSchema,\n  BenefitType$outboundSchema,\n} from \"./benefittype.js\";\n\nexport type BenefitGrantMetadata = {\n  benefitId: string;\n  benefitGrantId: string;\n  benefitType: BenefitType;\n};\n\n/** @internal */\nexport const BenefitGrantMetadata$inboundSchema: z.ZodType<\n  BenefitGrantMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  benefit_id: z.string(),\n  benefit_grant_id: z.string(),\n  benefit_type: BenefitType$inboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    \"benefit_id\": \"benefitId\",\n    \"benefit_grant_id\": \"benefitGrantId\",\n    \"benefit_type\": \"benefitType\",\n  });\n});\n\n/** @internal */\nexport type BenefitGrantMetadata$Outbound = {\n  benefit_id: string;\n  benefit_grant_id: string;\n  benefit_type: string;\n};\n\n/** @internal */\nexport const BenefitGrantMetadata$outboundSchema: z.ZodType<\n  BenefitGrantMetadata$Outbound,\n  z.ZodTypeDef,\n  BenefitGrantMetadata\n> = z.object({\n  benefitId: z.string(),\n  benefitGrantId: z.string(),\n  benefitType: BenefitType$outboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    benefitId: \"benefit_id\",\n    benefitGrantId: \"benefit_grant_id\",\n    benefitType: \"benefit_type\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitGrantMetadata$ {\n  /** @deprecated use `BenefitGrantMetadata$inboundSchema` instead. */\n  export const inboundSchema = BenefitGrantMetadata$inboundSchema;\n  /** @deprecated use `BenefitGrantMetadata$outboundSchema` instead. */\n  export const outboundSchema = BenefitGrantMetadata$outboundSchema;\n  /** @deprecated use `BenefitGrantMetadata$Outbound` instead. */\n  export type Outbound = BenefitGrantMetadata$Outbound;\n}\n\nexport function benefitGrantMetadataToJSON(\n  benefitGrantMetadata: BenefitGrantMetadata,\n): string {\n  return JSON.stringify(\n    BenefitGrantMetadata$outboundSchema.parse(benefitGrantMetadata),\n  );\n}\n\nexport function benefitGrantMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitGrantMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => BenefitGrantMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitGrantMetadata' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,yBAAyB,EACzB,0BAA0B,GAC3B,MAAM,kBAAkB,CAAC;;;;;;AASnB,MAAM,kCAAkC,GAI3C,CAAC,6IAAC,MAAM,CAAC;IACX,UAAU,EAAE,CAAC,6IAAC,MAAM,EAAE;IACtB,gBAAgB,EAAE,CAAC,6IAAC,MAAM,EAAE;IAC5B,YAAY,+LAAE,4BAAyB;CACxC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAM,AAAN,EAAO,CAAC,EAAE;QACf,YAAY,EAAE,WAAW;QACzB,kBAAkB,EAAE,gBAAgB;QACpC,cAAc,EAAE,aAAa;KAC9B,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAUI,MAAM,mCAAmC,GAI5C,CAAC,6IAAC,MAAM,CAAC;IACX,SAAS,EAAE,CAAC,6IAAC,MAAM,EAAE;IACrB,cAAc,EAAE,CAAC,6IAAC,MAAM,EAAE;IAC1B,WAAW,EAAE,0NAA0B;CACxC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAM,AAAN,EAAO,CAAC,EAAE;QACf,SAAS,EAAE,YAAY;QACvB,cAAc,EAAE,kBAAkB;QAClC,WAAW,EAAE,cAAc;KAC5B,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,qBAAqB,CAOrC;AAPD,CAAA,SAAiB,qBAAqB;IACpC,kEAAA,EAAoE,CACvD,sBAAA,aAAa,GAAG,kCAAkC,CAAC;IAChE,mEAAA,EAAqE,CACxD,sBAAA,cAAc,GAAG,mCAAmC,CAAC;AAGpE,CAAC,EAPgB,qBAAqB,IAAA,CAArB,qBAAqB,GAAA,CAAA,CAAA,GAOrC;AAEK,SAAU,0BAA0B,CACxC,oBAA0C;IAE1C,OAAO,IAAI,CAAC,SAAS,CACnB,mCAAmC,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAChE,CAAC;AACJ,CAAC;AAEK,SAAU,4BAA4B,CAC1C,UAAkB;IAElB,mLAAO,YAAS,AAAT,EACL,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,iCAAmC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC9D,CAAA,gDAAA,CAAkD,CACnD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 20848, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20854, "column": 0}, "map": {"version":3,"file":"benefitcycledevent.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/benefitcycledevent.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  BenefitGrantMetadata,\n  BenefitGrantMetadata$inboundSchema,\n  BenefitGrantMetadata$Outbound,\n  BenefitGrantMetadata$outboundSchema,\n} from \"./benefitgrantmetadata.js\";\nimport {\n  Customer,\n  Customer$inboundSchema,\n  Customer$Outbound,\n  Customer$outboundSchema,\n} from \"./customer.js\";\n\n/**\n * An event created by Polar when a benefit is cycled.\n */\nexport type BenefitCycledEvent = {\n  /**\n   * The ID of the object.\n   */\n  id: string;\n  /**\n   * The timestamp of the event.\n   */\n  timestamp: Date;\n  /**\n   * The ID of the organization owning the event.\n   */\n  organizationId: string;\n  /**\n   * ID of the customer in your Polar organization associated with the event.\n   */\n  customerId: string | null;\n  /**\n   * The customer associated with the event.\n   */\n  customer: Customer | null;\n  /**\n   * ID of the customer in your system associated with the event.\n   */\n  externalCustomerId: string | null;\n  /**\n   * The source of the event. `system` events are created by Polar. `user` events are the one you create through our ingestion API.\n   */\n  source?: \"system\" | undefined;\n  /**\n   * The name of the event.\n   */\n  name?: \"benefit.cycled\" | undefined;\n  metadata: BenefitGrantMetadata;\n};\n\n/** @internal */\nexport const BenefitCycledEvent$inboundSchema: z.ZodType<\n  BenefitCycledEvent,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  id: z.string(),\n  timestamp: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  organization_id: z.string(),\n  customer_id: z.nullable(z.string()),\n  customer: z.nullable(Customer$inboundSchema),\n  external_customer_id: z.nullable(z.string()),\n  source: z.literal(\"system\").optional(),\n  name: z.literal(\"benefit.cycled\").optional(),\n  metadata: BenefitGrantMetadata$inboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    \"organization_id\": \"organizationId\",\n    \"customer_id\": \"customerId\",\n    \"external_customer_id\": \"externalCustomerId\",\n  });\n});\n\n/** @internal */\nexport type BenefitCycledEvent$Outbound = {\n  id: string;\n  timestamp: string;\n  organization_id: string;\n  customer_id: string | null;\n  customer: Customer$Outbound | null;\n  external_customer_id: string | null;\n  source: \"system\";\n  name: \"benefit.cycled\";\n  metadata: BenefitGrantMetadata$Outbound;\n};\n\n/** @internal */\nexport const BenefitCycledEvent$outboundSchema: z.ZodType<\n  BenefitCycledEvent$Outbound,\n  z.ZodTypeDef,\n  BenefitCycledEvent\n> = z.object({\n  id: z.string(),\n  timestamp: z.date().transform(v => v.toISOString()),\n  organizationId: z.string(),\n  customerId: z.nullable(z.string()),\n  customer: z.nullable(Customer$outboundSchema),\n  externalCustomerId: z.nullable(z.string()),\n  source: z.literal(\"system\").default(\"system\" as const),\n  name: z.literal(\"benefit.cycled\").default(\"benefit.cycled\" as const),\n  metadata: BenefitGrantMetadata$outboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    organizationId: \"organization_id\",\n    customerId: \"customer_id\",\n    externalCustomerId: \"external_customer_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitCycledEvent$ {\n  /** @deprecated use `BenefitCycledEvent$inboundSchema` instead. */\n  export const inboundSchema = BenefitCycledEvent$inboundSchema;\n  /** @deprecated use `BenefitCycledEvent$outboundSchema` instead. */\n  export const outboundSchema = BenefitCycledEvent$outboundSchema;\n  /** @deprecated use `BenefitCycledEvent$Outbound` instead. */\n  export type Outbound = BenefitCycledEvent$Outbound;\n}\n\nexport function benefitCycledEventToJSON(\n  benefitCycledEvent: BenefitCycledEvent,\n): string {\n  return JSON.stringify(\n    BenefitCycledEvent$outboundSchema.parse(benefitCycledEvent),\n  );\n}\n\nexport function benefitCycledEventFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitCycledEvent, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => BenefitCycledEvent$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitCycledEvent' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 20921, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20927, "column": 0}, "map": {"version":3,"file":"benefitgrantedevent.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/benefitgrantedevent.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  BenefitGrantMetadata,\n  BenefitGrantMetadata$inboundSchema,\n  BenefitGrantMetadata$Outbound,\n  BenefitGrantMetadata$outboundSchema,\n} from \"./benefitgrantmetadata.js\";\nimport {\n  Customer,\n  Customer$inboundSchema,\n  Customer$Outbound,\n  Customer$outboundSchema,\n} from \"./customer.js\";\n\n/**\n * An event created by Polar when a benefit is granted to a customer.\n */\nexport type BenefitGrantedEvent = {\n  /**\n   * The ID of the object.\n   */\n  id: string;\n  /**\n   * The timestamp of the event.\n   */\n  timestamp: Date;\n  /**\n   * The ID of the organization owning the event.\n   */\n  organizationId: string;\n  /**\n   * ID of the customer in your Polar organization associated with the event.\n   */\n  customerId: string | null;\n  /**\n   * The customer associated with the event.\n   */\n  customer: Customer | null;\n  /**\n   * ID of the customer in your system associated with the event.\n   */\n  externalCustomerId: string | null;\n  /**\n   * The source of the event. `system` events are created by Polar. `user` events are the one you create through our ingestion API.\n   */\n  source?: \"system\" | undefined;\n  /**\n   * The name of the event.\n   */\n  name?: \"benefit.granted\" | undefined;\n  metadata: BenefitGrantMetadata;\n};\n\n/** @internal */\nexport const BenefitGrantedEvent$inboundSchema: z.ZodType<\n  BenefitGrantedEvent,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  id: z.string(),\n  timestamp: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  organization_id: z.string(),\n  customer_id: z.nullable(z.string()),\n  customer: z.nullable(Customer$inboundSchema),\n  external_customer_id: z.nullable(z.string()),\n  source: z.literal(\"system\").optional(),\n  name: z.literal(\"benefit.granted\").optional(),\n  metadata: BenefitGrantMetadata$inboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    \"organization_id\": \"organizationId\",\n    \"customer_id\": \"customerId\",\n    \"external_customer_id\": \"externalCustomerId\",\n  });\n});\n\n/** @internal */\nexport type BenefitGrantedEvent$Outbound = {\n  id: string;\n  timestamp: string;\n  organization_id: string;\n  customer_id: string | null;\n  customer: Customer$Outbound | null;\n  external_customer_id: string | null;\n  source: \"system\";\n  name: \"benefit.granted\";\n  metadata: BenefitGrantMetadata$Outbound;\n};\n\n/** @internal */\nexport const BenefitGrantedEvent$outboundSchema: z.ZodType<\n  BenefitGrantedEvent$Outbound,\n  z.ZodTypeDef,\n  BenefitGrantedEvent\n> = z.object({\n  id: z.string(),\n  timestamp: z.date().transform(v => v.toISOString()),\n  organizationId: z.string(),\n  customerId: z.nullable(z.string()),\n  customer: z.nullable(Customer$outboundSchema),\n  externalCustomerId: z.nullable(z.string()),\n  source: z.literal(\"system\").default(\"system\" as const),\n  name: z.literal(\"benefit.granted\").default(\"benefit.granted\" as const),\n  metadata: BenefitGrantMetadata$outboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    organizationId: \"organization_id\",\n    customerId: \"customer_id\",\n    externalCustomerId: \"external_customer_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitGrantedEvent$ {\n  /** @deprecated use `BenefitGrantedEvent$inboundSchema` instead. */\n  export const inboundSchema = BenefitGrantedEvent$inboundSchema;\n  /** @deprecated use `BenefitGrantedEvent$outboundSchema` instead. */\n  export const outboundSchema = BenefitGrantedEvent$outboundSchema;\n  /** @deprecated use `BenefitGrantedEvent$Outbound` instead. */\n  export type Outbound = BenefitGrantedEvent$Outbound;\n}\n\nexport function benefitGrantedEventToJSON(\n  benefitGrantedEvent: BenefitGrantedEvent,\n): string {\n  return JSON.stringify(\n    BenefitGrantedEvent$outboundSchema.parse(benefitGrantedEvent),\n  );\n}\n\nexport function benefitGrantedEventFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitGrantedEvent, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => BenefitGrantedEvent$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitGrantedEvent' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 20994, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21000, "column": 0}, "map": {"version":3,"file":"benefitrevokedevent.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/benefitrevokedevent.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  BenefitGrantMetadata,\n  BenefitGrantMetadata$inboundSchema,\n  BenefitGrantMetadata$Outbound,\n  BenefitGrantMetadata$outboundSchema,\n} from \"./benefitgrantmetadata.js\";\nimport {\n  Customer,\n  Customer$inboundSchema,\n  Customer$Outbound,\n  Customer$outboundSchema,\n} from \"./customer.js\";\n\n/**\n * An event created by Polar when a benefit is revoked from a customer.\n */\nexport type BenefitRevokedEvent = {\n  /**\n   * The ID of the object.\n   */\n  id: string;\n  /**\n   * The timestamp of the event.\n   */\n  timestamp: Date;\n  /**\n   * The ID of the organization owning the event.\n   */\n  organizationId: string;\n  /**\n   * ID of the customer in your Polar organization associated with the event.\n   */\n  customerId: string | null;\n  /**\n   * The customer associated with the event.\n   */\n  customer: Customer | null;\n  /**\n   * ID of the customer in your system associated with the event.\n   */\n  externalCustomerId: string | null;\n  /**\n   * The source of the event. `system` events are created by Polar. `user` events are the one you create through our ingestion API.\n   */\n  source?: \"system\" | undefined;\n  /**\n   * The name of the event.\n   */\n  name?: \"benefit.revoked\" | undefined;\n  metadata: BenefitGrantMetadata;\n};\n\n/** @internal */\nexport const BenefitRevokedEvent$inboundSchema: z.ZodType<\n  BenefitRevokedEvent,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  id: z.string(),\n  timestamp: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  organization_id: z.string(),\n  customer_id: z.nullable(z.string()),\n  customer: z.nullable(Customer$inboundSchema),\n  external_customer_id: z.nullable(z.string()),\n  source: z.literal(\"system\").optional(),\n  name: z.literal(\"benefit.revoked\").optional(),\n  metadata: BenefitGrantMetadata$inboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    \"organization_id\": \"organizationId\",\n    \"customer_id\": \"customerId\",\n    \"external_customer_id\": \"externalCustomerId\",\n  });\n});\n\n/** @internal */\nexport type BenefitRevokedEvent$Outbound = {\n  id: string;\n  timestamp: string;\n  organization_id: string;\n  customer_id: string | null;\n  customer: Customer$Outbound | null;\n  external_customer_id: string | null;\n  source: \"system\";\n  name: \"benefit.revoked\";\n  metadata: BenefitGrantMetadata$Outbound;\n};\n\n/** @internal */\nexport const BenefitRevokedEvent$outboundSchema: z.ZodType<\n  BenefitRevokedEvent$Outbound,\n  z.ZodTypeDef,\n  BenefitRevokedEvent\n> = z.object({\n  id: z.string(),\n  timestamp: z.date().transform(v => v.toISOString()),\n  organizationId: z.string(),\n  customerId: z.nullable(z.string()),\n  customer: z.nullable(Customer$outboundSchema),\n  externalCustomerId: z.nullable(z.string()),\n  source: z.literal(\"system\").default(\"system\" as const),\n  name: z.literal(\"benefit.revoked\").default(\"benefit.revoked\" as const),\n  metadata: BenefitGrantMetadata$outboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    organizationId: \"organization_id\",\n    customerId: \"customer_id\",\n    externalCustomerId: \"external_customer_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitRevokedEvent$ {\n  /** @deprecated use `BenefitRevokedEvent$inboundSchema` instead. */\n  export const inboundSchema = BenefitRevokedEvent$inboundSchema;\n  /** @deprecated use `BenefitRevokedEvent$outboundSchema` instead. */\n  export const outboundSchema = BenefitRevokedEvent$outboundSchema;\n  /** @deprecated use `BenefitRevokedEvent$Outbound` instead. */\n  export type Outbound = BenefitRevokedEvent$Outbound;\n}\n\nexport function benefitRevokedEventToJSON(\n  benefitRevokedEvent: BenefitRevokedEvent,\n): string {\n  return JSON.stringify(\n    BenefitRevokedEvent$outboundSchema.parse(benefitRevokedEvent),\n  );\n}\n\nexport function benefitRevokedEventFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitRevokedEvent, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => BenefitRevokedEvent$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitRevokedEvent' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 21067, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21073, "column": 0}, "map": {"version":3,"file":"benefitupdatedevent.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/benefitupdatedevent.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  BenefitGrantMetadata,\n  BenefitGrantMetadata$inboundSchema,\n  BenefitGrantMetadata$Outbound,\n  BenefitGrantMetadata$outboundSchema,\n} from \"./benefitgrantmetadata.js\";\nimport {\n  Customer,\n  Customer$inboundSchema,\n  Customer$Outbound,\n  Customer$outboundSchema,\n} from \"./customer.js\";\n\n/**\n * An event created by Polar when a benefit is updated.\n */\nexport type BenefitUpdatedEvent = {\n  /**\n   * The ID of the object.\n   */\n  id: string;\n  /**\n   * The timestamp of the event.\n   */\n  timestamp: Date;\n  /**\n   * The ID of the organization owning the event.\n   */\n  organizationId: string;\n  /**\n   * ID of the customer in your Polar organization associated with the event.\n   */\n  customerId: string | null;\n  /**\n   * The customer associated with the event.\n   */\n  customer: Customer | null;\n  /**\n   * ID of the customer in your system associated with the event.\n   */\n  externalCustomerId: string | null;\n  /**\n   * The source of the event. `system` events are created by Polar. `user` events are the one you create through our ingestion API.\n   */\n  source?: \"system\" | undefined;\n  /**\n   * The name of the event.\n   */\n  name?: \"benefit.updated\" | undefined;\n  metadata: BenefitGrantMetadata;\n};\n\n/** @internal */\nexport const BenefitUpdatedEvent$inboundSchema: z.ZodType<\n  BenefitUpdatedEvent,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  id: z.string(),\n  timestamp: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  organization_id: z.string(),\n  customer_id: z.nullable(z.string()),\n  customer: z.nullable(Customer$inboundSchema),\n  external_customer_id: z.nullable(z.string()),\n  source: z.literal(\"system\").optional(),\n  name: z.literal(\"benefit.updated\").optional(),\n  metadata: BenefitGrantMetadata$inboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    \"organization_id\": \"organizationId\",\n    \"customer_id\": \"customerId\",\n    \"external_customer_id\": \"externalCustomerId\",\n  });\n});\n\n/** @internal */\nexport type BenefitUpdatedEvent$Outbound = {\n  id: string;\n  timestamp: string;\n  organization_id: string;\n  customer_id: string | null;\n  customer: Customer$Outbound | null;\n  external_customer_id: string | null;\n  source: \"system\";\n  name: \"benefit.updated\";\n  metadata: BenefitGrantMetadata$Outbound;\n};\n\n/** @internal */\nexport const BenefitUpdatedEvent$outboundSchema: z.ZodType<\n  BenefitUpdatedEvent$Outbound,\n  z.ZodTypeDef,\n  BenefitUpdatedEvent\n> = z.object({\n  id: z.string(),\n  timestamp: z.date().transform(v => v.toISOString()),\n  organizationId: z.string(),\n  customerId: z.nullable(z.string()),\n  customer: z.nullable(Customer$outboundSchema),\n  externalCustomerId: z.nullable(z.string()),\n  source: z.literal(\"system\").default(\"system\" as const),\n  name: z.literal(\"benefit.updated\").default(\"benefit.updated\" as const),\n  metadata: BenefitGrantMetadata$outboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    organizationId: \"organization_id\",\n    customerId: \"customer_id\",\n    externalCustomerId: \"external_customer_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace BenefitUpdatedEvent$ {\n  /** @deprecated use `BenefitUpdatedEvent$inboundSchema` instead. */\n  export const inboundSchema = BenefitUpdatedEvent$inboundSchema;\n  /** @deprecated use `BenefitUpdatedEvent$outboundSchema` instead. */\n  export const outboundSchema = BenefitUpdatedEvent$outboundSchema;\n  /** @deprecated use `BenefitUpdatedEvent$Outbound` instead. */\n  export type Outbound = BenefitUpdatedEvent$Outbound;\n}\n\nexport function benefitUpdatedEventToJSON(\n  benefitUpdatedEvent: BenefitUpdatedEvent,\n): string {\n  return JSON.stringify(\n    BenefitUpdatedEvent$outboundSchema.parse(benefitUpdatedEvent),\n  );\n}\n\nexport function benefitUpdatedEventFromJSON(\n  jsonString: string,\n): SafeParseResult<BenefitUpdatedEvent, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => BenefitUpdatedEvent$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'BenefitUpdatedEvent' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 21140, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21146, "column": 0}, "map": {"version":3,"file":"metercreditedmetadata.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/metercreditedmetadata.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport type MeterCreditedMetadata = {\n  meterId: string;\n  units: number;\n  rollover: boolean;\n};\n\n/** @internal */\nexport const MeterCreditedMetadata$inboundSchema: z.ZodType<\n  MeterCreditedMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  meter_id: z.string(),\n  units: z.number().int(),\n  rollover: z.boolean(),\n}).transform((v) => {\n  return remap$(v, {\n    \"meter_id\": \"meterId\",\n  });\n});\n\n/** @internal */\nexport type MeterCreditedMetadata$Outbound = {\n  meter_id: string;\n  units: number;\n  rollover: boolean;\n};\n\n/** @internal */\nexport const MeterCreditedMetadata$outboundSchema: z.ZodType<\n  MeterCreditedMetadata$Outbound,\n  z.ZodTypeDef,\n  MeterCreditedMetadata\n> = z.object({\n  meterId: z.string(),\n  units: z.number().int(),\n  rollover: z.boolean(),\n}).transform((v) => {\n  return remap$(v, {\n    meterId: \"meter_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace MeterCreditedMetadata$ {\n  /** @deprecated use `MeterCreditedMetadata$inboundSchema` instead. */\n  export const inboundSchema = MeterCreditedMetadata$inboundSchema;\n  /** @deprecated use `MeterCreditedMetadata$outboundSchema` instead. */\n  export const outboundSchema = MeterCreditedMetadata$outboundSchema;\n  /** @deprecated use `MeterCreditedMetadata$Outbound` instead. */\n  export type Outbound = MeterCreditedMetadata$Outbound;\n}\n\nexport function meterCreditedMetadataToJSON(\n  meterCreditedMetadata: MeterCreditedMetadata,\n): string {\n  return JSON.stringify(\n    MeterCreditedMetadata$outboundSchema.parse(meterCreditedMetadata),\n  );\n}\n\nexport function meterCreditedMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<MeterCreditedMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => MeterCreditedMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'MeterCreditedMetadata' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;;;;;AAW1C,MAAM,mCAAmC,GAI5C,CAAC,6IAAC,MAAM,CAAC;IACX,QAAQ,EAAE,CAAC,6IAAC,MAAM,EAAE;IACpB,KAAK,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IACvB,QAAQ,EAAE,CAAC,6IAAC,OAAO,EAAE;CACtB,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,UAAU,EAAE,SAAS;KACtB,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAUI,MAAM,oCAAoC,GAI7C,CAAC,6IAAC,MAAM,CAAC;IACX,OAAO,EAAE,CAAC,6IAAC,MAAM,EAAE;IACnB,KAAK,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IACvB,QAAQ,EAAE,CAAC,6IAAC,OAAO,EAAE;CACtB,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAM,AAAN,EAAO,CAAC,EAAE;QACf,OAAO,EAAE,UAAU;KACpB,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,sBAAsB,CAOtC;AAPD,CAAA,SAAiB,sBAAsB;IACrC,mEAAA,EAAqE,CACxD,uBAAA,aAAa,GAAG,mCAAmC,CAAC;IACjE,oEAAA,EAAsE,CACzD,uBAAA,cAAc,GAAG,oCAAoC,CAAC;AAGrE,CAAC,EAPgB,sBAAsB,IAAA,CAAtB,sBAAsB,GAAA,CAAA,CAAA,GAOtC;AAEK,SAAU,2BAA2B,CACzC,qBAA4C;IAE5C,OAAO,IAAI,CAAC,SAAS,CACnB,oCAAoC,CAAC,KAAK,CAAC,qBAAqB,CAAC,CAClE,CAAC;AACJ,CAAC;AAEK,SAAU,6BAA6B,CAC3C,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,kCAAoC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC/D,CAAA,iDAAA,CAAmD,CACpD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 21191, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21197, "column": 0}, "map": {"version":3,"file":"metercreditevent.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/metercreditevent.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  Customer,\n  Customer$inboundSchema,\n  Customer$Outbound,\n  Customer$outboundSchema,\n} from \"./customer.js\";\nimport {\n  MeterCreditedMetadata,\n  MeterCreditedMetadata$inboundSchema,\n  MeterCreditedMetadata$Outbound,\n  MeterCreditedMetadata$outboundSchema,\n} from \"./metercreditedmetadata.js\";\n\n/**\n * An event created by Polar when credits are added to a customer meter.\n */\nexport type MeterCreditEvent = {\n  /**\n   * The ID of the object.\n   */\n  id: string;\n  /**\n   * The timestamp of the event.\n   */\n  timestamp: Date;\n  /**\n   * The ID of the organization owning the event.\n   */\n  organizationId: string;\n  /**\n   * ID of the customer in your Polar organization associated with the event.\n   */\n  customerId: string | null;\n  /**\n   * The customer associated with the event.\n   */\n  customer: Customer | null;\n  /**\n   * ID of the customer in your system associated with the event.\n   */\n  externalCustomerId: string | null;\n  /**\n   * The source of the event. `system` events are created by Polar. `user` events are the one you create through our ingestion API.\n   */\n  source?: \"system\" | undefined;\n  /**\n   * The name of the event.\n   */\n  name?: \"meter.credited\" | undefined;\n  metadata: MeterCreditedMetadata;\n};\n\n/** @internal */\nexport const MeterCreditEvent$inboundSchema: z.ZodType<\n  MeterCreditEvent,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  id: z.string(),\n  timestamp: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  organization_id: z.string(),\n  customer_id: z.nullable(z.string()),\n  customer: z.nullable(Customer$inboundSchema),\n  external_customer_id: z.nullable(z.string()),\n  source: z.literal(\"system\").optional(),\n  name: z.literal(\"meter.credited\").optional(),\n  metadata: MeterCreditedMetadata$inboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    \"organization_id\": \"organizationId\",\n    \"customer_id\": \"customerId\",\n    \"external_customer_id\": \"externalCustomerId\",\n  });\n});\n\n/** @internal */\nexport type MeterCreditEvent$Outbound = {\n  id: string;\n  timestamp: string;\n  organization_id: string;\n  customer_id: string | null;\n  customer: Customer$Outbound | null;\n  external_customer_id: string | null;\n  source: \"system\";\n  name: \"meter.credited\";\n  metadata: MeterCreditedMetadata$Outbound;\n};\n\n/** @internal */\nexport const MeterCreditEvent$outboundSchema: z.ZodType<\n  MeterCreditEvent$Outbound,\n  z.ZodTypeDef,\n  MeterCreditEvent\n> = z.object({\n  id: z.string(),\n  timestamp: z.date().transform(v => v.toISOString()),\n  organizationId: z.string(),\n  customerId: z.nullable(z.string()),\n  customer: z.nullable(Customer$outboundSchema),\n  externalCustomerId: z.nullable(z.string()),\n  source: z.literal(\"system\").default(\"system\" as const),\n  name: z.literal(\"meter.credited\").default(\"meter.credited\" as const),\n  metadata: MeterCreditedMetadata$outboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    organizationId: \"organization_id\",\n    customerId: \"customer_id\",\n    externalCustomerId: \"external_customer_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace MeterCreditEvent$ {\n  /** @deprecated use `MeterCreditEvent$inboundSchema` instead. */\n  export const inboundSchema = MeterCreditEvent$inboundSchema;\n  /** @deprecated use `MeterCreditEvent$outboundSchema` instead. */\n  export const outboundSchema = MeterCreditEvent$outboundSchema;\n  /** @deprecated use `MeterCreditEvent$Outbound` instead. */\n  export type Outbound = MeterCreditEvent$Outbound;\n}\n\nexport function meterCreditEventToJSON(\n  meterCreditEvent: MeterCreditEvent,\n): string {\n  return JSON.stringify(\n    MeterCreditEvent$outboundSchema.parse(meterCreditEvent),\n  );\n}\n\nexport function meterCreditEventFromJSON(\n  jsonString: string,\n): SafeParseResult<MeterCreditEvent, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => MeterCreditEvent$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'MeterCreditEvent' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 21264, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21270, "column": 0}, "map": {"version":3,"file":"meterresetmetadata.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/meterresetmetadata.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport type MeterResetMetadata = {\n  meterId: string;\n};\n\n/** @internal */\nexport const MeterResetMetadata$inboundSchema: z.ZodType<\n  MeterResetMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  meter_id: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    \"meter_id\": \"meterId\",\n  });\n});\n\n/** @internal */\nexport type MeterResetMetadata$Outbound = {\n  meter_id: string;\n};\n\n/** @internal */\nexport const MeterResetMetadata$outboundSchema: z.ZodType<\n  MeterResetMetadata$Outbound,\n  z.ZodTypeDef,\n  MeterResetMetadata\n> = z.object({\n  meterId: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    meterId: \"meter_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace MeterResetMetadata$ {\n  /** @deprecated use `MeterResetMetadata$inboundSchema` instead. */\n  export const inboundSchema = MeterResetMetadata$inboundSchema;\n  /** @deprecated use `MeterResetMetadata$outboundSchema` instead. */\n  export const outboundSchema = MeterResetMetadata$outboundSchema;\n  /** @deprecated use `MeterResetMetadata$Outbound` instead. */\n  export type Outbound = MeterResetMetadata$Outbound;\n}\n\nexport function meterResetMetadataToJSON(\n  meterResetMetadata: MeterResetMetadata,\n): string {\n  return JSON.stringify(\n    MeterResetMetadata$outboundSchema.parse(meterResetMetadata),\n  );\n}\n\nexport function meterResetMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<MeterResetMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => MeterResetMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'MeterResetMetadata' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;;;;;AAS1C,MAAM,gCAAgC,GAIzC,CAAC,6IAAC,MAAM,CAAC;IACX,QAAQ,EAAE,CAAC,6IAAC,MAAM,EAAE;CACrB,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,WAAO,mLAAA,AAAM,EAAC,CAAC,EAAE;QACf,UAAU,EAAE,SAAS;KACtB,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAQI,MAAM,iCAAiC,GAI1C,CAAC,6IAAC,MAAM,CAAC;IACX,OAAO,EAAE,CAAC,6IAAC,MAAM,EAAE;CACpB,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,OAAO,EAAE,UAAU;KACpB,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,mBAAmB,CAOnC;AAPD,CAAA,SAAiB,mBAAmB;IAClC,gEAAA,EAAkE,CACrD,oBAAA,aAAa,GAAG,gCAAgC,CAAC;IAC9D,iEAAA,EAAmE,CACtD,oBAAA,cAAc,GAAG,iCAAiC,CAAC;AAGlE,CAAC,EAPgB,mBAAmB,IAAA,CAAnB,mBAAmB,GAAA,CAAA,CAAA,GAOnC;AAEK,SAAU,wBAAwB,CACtC,kBAAsC;IAEtC,OAAO,IAAI,CAAC,SAAS,CACnB,iCAAiC,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAC5D,CAAC;AACJ,CAAC;AAEK,SAAU,0BAA0B,CACxC,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,+BAAiC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC5D,CAAA,8CAAA,CAAgD,CACjD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 21311, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21317, "column": 0}, "map": {"version":3,"file":"meterresetevent.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/meterresetevent.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  Customer,\n  Customer$inboundSchema,\n  Customer$Outbound,\n  Customer$outboundSchema,\n} from \"./customer.js\";\nimport {\n  MeterResetMetadata,\n  MeterResetMetadata$inboundSchema,\n  MeterResetMetadata$Outbound,\n  MeterResetMetadata$outboundSchema,\n} from \"./meterresetmetadata.js\";\n\n/**\n * An event created by Polar when a customer meter is reset.\n */\nexport type MeterResetEvent = {\n  /**\n   * The ID of the object.\n   */\n  id: string;\n  /**\n   * The timestamp of the event.\n   */\n  timestamp: Date;\n  /**\n   * The ID of the organization owning the event.\n   */\n  organizationId: string;\n  /**\n   * ID of the customer in your Polar organization associated with the event.\n   */\n  customerId: string | null;\n  /**\n   * The customer associated with the event.\n   */\n  customer: Customer | null;\n  /**\n   * ID of the customer in your system associated with the event.\n   */\n  externalCustomerId: string | null;\n  /**\n   * The source of the event. `system` events are created by Polar. `user` events are the one you create through our ingestion API.\n   */\n  source?: \"system\" | undefined;\n  /**\n   * The name of the event.\n   */\n  name?: \"meter.reset\" | undefined;\n  metadata: MeterResetMetadata;\n};\n\n/** @internal */\nexport const MeterResetEvent$inboundSchema: z.ZodType<\n  MeterResetEvent,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  id: z.string(),\n  timestamp: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  organization_id: z.string(),\n  customer_id: z.nullable(z.string()),\n  customer: z.nullable(Customer$inboundSchema),\n  external_customer_id: z.nullable(z.string()),\n  source: z.literal(\"system\").optional(),\n  name: z.literal(\"meter.reset\").optional(),\n  metadata: MeterResetMetadata$inboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    \"organization_id\": \"organizationId\",\n    \"customer_id\": \"customerId\",\n    \"external_customer_id\": \"externalCustomerId\",\n  });\n});\n\n/** @internal */\nexport type MeterResetEvent$Outbound = {\n  id: string;\n  timestamp: string;\n  organization_id: string;\n  customer_id: string | null;\n  customer: Customer$Outbound | null;\n  external_customer_id: string | null;\n  source: \"system\";\n  name: \"meter.reset\";\n  metadata: MeterResetMetadata$Outbound;\n};\n\n/** @internal */\nexport const MeterResetEvent$outboundSchema: z.ZodType<\n  MeterResetEvent$Outbound,\n  z.ZodTypeDef,\n  MeterResetEvent\n> = z.object({\n  id: z.string(),\n  timestamp: z.date().transform(v => v.toISOString()),\n  organizationId: z.string(),\n  customerId: z.nullable(z.string()),\n  customer: z.nullable(Customer$outboundSchema),\n  externalCustomerId: z.nullable(z.string()),\n  source: z.literal(\"system\").default(\"system\" as const),\n  name: z.literal(\"meter.reset\").default(\"meter.reset\" as const),\n  metadata: MeterResetMetadata$outboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    organizationId: \"organization_id\",\n    customerId: \"customer_id\",\n    externalCustomerId: \"external_customer_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace MeterResetEvent$ {\n  /** @deprecated use `MeterResetEvent$inboundSchema` instead. */\n  export const inboundSchema = MeterResetEvent$inboundSchema;\n  /** @deprecated use `MeterResetEvent$outboundSchema` instead. */\n  export const outboundSchema = MeterResetEvent$outboundSchema;\n  /** @deprecated use `MeterResetEvent$Outbound` instead. */\n  export type Outbound = MeterResetEvent$Outbound;\n}\n\nexport function meterResetEventToJSON(\n  meterResetEvent: MeterResetEvent,\n): string {\n  return JSON.stringify(MeterResetEvent$outboundSchema.parse(meterResetEvent));\n}\n\nexport function meterResetEventFromJSON(\n  jsonString: string,\n): SafeParseResult<MeterResetEvent, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => MeterResetEvent$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'MeterResetEvent' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 21384, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21390, "column": 0}, "map": {"version":3,"file":"systemevent.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/systemevent.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  BenefitCycledEvent,\n  BenefitCycledEvent$inboundSchema,\n  BenefitCycledEvent$Outbound,\n  BenefitCycledEvent$outboundSchema,\n} from \"./benefitcycledevent.js\";\nimport {\n  BenefitGrantedEvent,\n  BenefitGrantedEvent$inboundSchema,\n  BenefitGrantedEvent$Outbound,\n  BenefitGrantedEvent$outboundSchema,\n} from \"./benefitgrantedevent.js\";\nimport {\n  BenefitRevokedEvent,\n  BenefitRevokedEvent$inboundSchema,\n  BenefitRevokedEvent$Outbound,\n  BenefitRevokedEvent$outboundSchema,\n} from \"./benefitrevokedevent.js\";\nimport {\n  BenefitUpdatedEvent,\n  BenefitUpdatedEvent$inboundSchema,\n  BenefitUpdatedEvent$Outbound,\n  BenefitUpdatedEvent$outboundSchema,\n} from \"./benefitupdatedevent.js\";\nimport {\n  MeterCreditEvent,\n  MeterCreditEvent$inboundSchema,\n  MeterCreditEvent$Outbound,\n  MeterCreditEvent$outboundSchema,\n} from \"./metercreditevent.js\";\nimport {\n  MeterResetEvent,\n  MeterResetEvent$inboundSchema,\n  MeterResetEvent$Outbound,\n  MeterResetEvent$outboundSchema,\n} from \"./meterresetevent.js\";\n\nexport type SystemEvent =\n  | (BenefitCycledEvent & { name: \"benefit.cycled\" })\n  | (BenefitGrantedEvent & { name: \"benefit.granted\" })\n  | (BenefitRevokedEvent & { name: \"benefit.revoked\" })\n  | (BenefitUpdatedEvent & { name: \"benefit.updated\" })\n  | (MeterCreditEvent & { name: \"meter.credited\" })\n  | (MeterResetEvent & { name: \"meter.reset\" });\n\n/** @internal */\nexport const SystemEvent$inboundSchema: z.ZodType<\n  SystemEvent,\n  z.ZodTypeDef,\n  unknown\n> = z.union([\n  BenefitCycledEvent$inboundSchema.and(\n    z.object({ name: z.literal(\"benefit.cycled\") }).transform((v) => ({\n      name: v.name,\n    })),\n  ),\n  BenefitGrantedEvent$inboundSchema.and(\n    z.object({ name: z.literal(\"benefit.granted\") }).transform((v) => ({\n      name: v.name,\n    })),\n  ),\n  BenefitRevokedEvent$inboundSchema.and(\n    z.object({ name: z.literal(\"benefit.revoked\") }).transform((v) => ({\n      name: v.name,\n    })),\n  ),\n  BenefitUpdatedEvent$inboundSchema.and(\n    z.object({ name: z.literal(\"benefit.updated\") }).transform((v) => ({\n      name: v.name,\n    })),\n  ),\n  MeterCreditEvent$inboundSchema.and(\n    z.object({ name: z.literal(\"meter.credited\") }).transform((v) => ({\n      name: v.name,\n    })),\n  ),\n  MeterResetEvent$inboundSchema.and(\n    z.object({ name: z.literal(\"meter.reset\") }).transform((v) => ({\n      name: v.name,\n    })),\n  ),\n]);\n\n/** @internal */\nexport type SystemEvent$Outbound =\n  | (BenefitCycledEvent$Outbound & { name: \"benefit.cycled\" })\n  | (BenefitGrantedEvent$Outbound & { name: \"benefit.granted\" })\n  | (BenefitRevokedEvent$Outbound & { name: \"benefit.revoked\" })\n  | (BenefitUpdatedEvent$Outbound & { name: \"benefit.updated\" })\n  | (MeterCreditEvent$Outbound & { name: \"meter.credited\" })\n  | (MeterResetEvent$Outbound & { name: \"meter.reset\" });\n\n/** @internal */\nexport const SystemEvent$outboundSchema: z.ZodType<\n  SystemEvent$Outbound,\n  z.ZodTypeDef,\n  SystemEvent\n> = z.union([\n  BenefitCycledEvent$outboundSchema.and(\n    z.object({ name: z.literal(\"benefit.cycled\") }).transform((v) => ({\n      name: v.name,\n    })),\n  ),\n  BenefitGrantedEvent$outboundSchema.and(\n    z.object({ name: z.literal(\"benefit.granted\") }).transform((v) => ({\n      name: v.name,\n    })),\n  ),\n  BenefitRevokedEvent$outboundSchema.and(\n    z.object({ name: z.literal(\"benefit.revoked\") }).transform((v) => ({\n      name: v.name,\n    })),\n  ),\n  BenefitUpdatedEvent$outboundSchema.and(\n    z.object({ name: z.literal(\"benefit.updated\") }).transform((v) => ({\n      name: v.name,\n    })),\n  ),\n  MeterCreditEvent$outboundSchema.and(\n    z.object({ name: z.literal(\"meter.credited\") }).transform((v) => ({\n      name: v.name,\n    })),\n  ),\n  MeterResetEvent$outboundSchema.and(\n    z.object({ name: z.literal(\"meter.reset\") }).transform((v) => ({\n      name: v.name,\n    })),\n  ),\n]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace SystemEvent$ {\n  /** @deprecated use `SystemEvent$inboundSchema` instead. */\n  export const inboundSchema = SystemEvent$inboundSchema;\n  /** @deprecated use `SystemEvent$outboundSchema` instead. */\n  export const outboundSchema = SystemEvent$outboundSchema;\n  /** @deprecated use `SystemEvent$Outbound` instead. */\n  export type Outbound = SystemEvent$Outbound;\n}\n\nexport function systemEventToJSON(systemEvent: SystemEvent): string {\n  return JSON.stringify(SystemEvent$outboundSchema.parse(systemEvent));\n}\n\nexport function systemEventFromJSON(\n  jsonString: string,\n): SafeParseResult<SystemEvent, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => SystemEvent$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'SystemEvent' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 21491, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21497, "column": 0}, "map": {"version":3,"file":"userevent.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/userevent.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  Customer,\n  Customer$inboundSchema,\n  Customer$Outbound,\n  Customer$outboundSchema,\n} from \"./customer.js\";\n\nexport type UserEventMetadata = string | number | number | boolean;\n\n/**\n * An event you created through the ingestion API.\n */\nexport type UserEvent = {\n  metadata: { [k: string]: string | number | number | boolean };\n  /**\n   * The ID of the object.\n   */\n  id: string;\n  /**\n   * The timestamp of the event.\n   */\n  timestamp: Date;\n  /**\n   * The ID of the organization owning the event.\n   */\n  organizationId: string;\n  /**\n   * ID of the customer in your Polar organization associated with the event.\n   */\n  customerId: string | null;\n  /**\n   * The customer associated with the event.\n   */\n  customer: Customer | null;\n  /**\n   * ID of the customer in your system associated with the event.\n   */\n  externalCustomerId: string | null;\n  /**\n   * The name of the event.\n   */\n  name: string;\n  /**\n   * The source of the event. `system` events are created by Polar. `user` events are the one you create through our ingestion API.\n   */\n  source?: \"user\" | undefined;\n};\n\n/** @internal */\nexport const UserEventMetadata$inboundSchema: z.ZodType<\n  UserEventMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type UserEventMetadata$Outbound = string | number | number | boolean;\n\n/** @internal */\nexport const UserEventMetadata$outboundSchema: z.ZodType<\n  UserEventMetadata$Outbound,\n  z.ZodTypeDef,\n  UserEventMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace UserEventMetadata$ {\n  /** @deprecated use `UserEventMetadata$inboundSchema` instead. */\n  export const inboundSchema = UserEventMetadata$inboundSchema;\n  /** @deprecated use `UserEventMetadata$outboundSchema` instead. */\n  export const outboundSchema = UserEventMetadata$outboundSchema;\n  /** @deprecated use `UserEventMetadata$Outbound` instead. */\n  export type Outbound = UserEventMetadata$Outbound;\n}\n\nexport function userEventMetadataToJSON(\n  userEventMetadata: UserEventMetadata,\n): string {\n  return JSON.stringify(\n    UserEventMetadata$outboundSchema.parse(userEventMetadata),\n  );\n}\n\nexport function userEventMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<UserEventMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => UserEventMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'UserEventMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const UserEvent$inboundSchema: z.ZodType<\n  UserEvent,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  id: z.string(),\n  timestamp: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  organization_id: z.string(),\n  customer_id: z.nullable(z.string()),\n  customer: z.nullable(Customer$inboundSchema),\n  external_customer_id: z.nullable(z.string()),\n  name: z.string(),\n  source: z.literal(\"user\").optional(),\n}).transform((v) => {\n  return remap$(v, {\n    \"organization_id\": \"organizationId\",\n    \"customer_id\": \"customerId\",\n    \"external_customer_id\": \"externalCustomerId\",\n  });\n});\n\n/** @internal */\nexport type UserEvent$Outbound = {\n  metadata: { [k: string]: string | number | number | boolean };\n  id: string;\n  timestamp: string;\n  organization_id: string;\n  customer_id: string | null;\n  customer: Customer$Outbound | null;\n  external_customer_id: string | null;\n  name: string;\n  source: \"user\";\n};\n\n/** @internal */\nexport const UserEvent$outboundSchema: z.ZodType<\n  UserEvent$Outbound,\n  z.ZodTypeDef,\n  UserEvent\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  id: z.string(),\n  timestamp: z.date().transform(v => v.toISOString()),\n  organizationId: z.string(),\n  customerId: z.nullable(z.string()),\n  customer: z.nullable(Customer$outboundSchema),\n  externalCustomerId: z.nullable(z.string()),\n  name: z.string(),\n  source: z.literal(\"user\").default(\"user\" as const),\n}).transform((v) => {\n  return remap$(v, {\n    organizationId: \"organization_id\",\n    customerId: \"customer_id\",\n    externalCustomerId: \"external_customer_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace UserEvent$ {\n  /** @deprecated use `UserEvent$inboundSchema` instead. */\n  export const inboundSchema = UserEvent$inboundSchema;\n  /** @deprecated use `UserEvent$outboundSchema` instead. */\n  export const outboundSchema = UserEvent$outboundSchema;\n  /** @deprecated use `UserEvent$Outbound` instead. */\n  export type Outbound = UserEvent$Outbound;\n}\n\nexport function userEventToJSON(userEvent: UserEvent): string {\n  return JSON.stringify(UserEvent$outboundSchema.parse(userEvent));\n}\n\nexport function userEventFromJSON(\n  jsonString: string,\n): SafeParseResult<UserEvent, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => UserEvent$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'UserEvent' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,sBAAsB,EAEtB,uBAAuB,GACxB,MAAM,eAAe,CAAC;;;;;;AA4ChB,MAAM,+BAA+B,GAIxC,CAAC,6IAAC,KAAK,CAAC;IAAC,CAAC,6IAAC,MAAM,EAAE;IAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAAE,CAAC,6IAAC,MAAM,EAAE;IAAE,CAAC,6IAAC,OAAO,EAAE;CAAC,CAAC,CAAC;AAM9D,MAAM,gCAAgC,GAIzC,CAAC,6IAAC,KAAK,CAAC;IAAC,CAAC,6IAAC,MAAM,EAAE;IAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAAE,CAAC,6IAAC,MAAM,EAAE;IAAE,CAAC,6IAAC,OAAO,EAAE;CAAC,CAAC,CAAC;AAM/D,IAAW,kBAAkB,CAOlC;AAPD,CAAA,SAAiB,kBAAkB;IACjC,+DAAA,EAAiE,CACpD,mBAAA,aAAa,GAAG,+BAA+B,CAAC;IAC7D,gEAAA,EAAkE,CACrD,mBAAA,cAAc,GAAG,gCAAgC,CAAC;AAGjE,CAAC,EAPgB,kBAAkB,IAAA,CAAlB,kBAAkB,GAAA,CAAA,CAAA,GAOlC;AAEK,SAAU,uBAAuB,CACrC,iBAAoC;IAEpC,OAAO,IAAI,CAAC,SAAS,CACnB,gCAAgC,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAC1D,CAAC;AACJ,CAAC;AAEK,SAAU,yBAAyB,CACvC,UAAkB;IAElB,WAAO,oLAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,8BAAgC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC3D,CAAA,6CAAA,CAA+C,CAChD,CAAC;AACJ,CAAC;AAGM,MAAM,uBAAuB,GAIhC,CAAC,6IAAC,MAAM,CAAC;IACX,QAAQ,EAAE,CAAC,6IAAC,MAAM,CAChB,CAAC,6IAAC,KAAK,CAAC;QAAC,CAAC,6IAAC,MAAM,EAAE;QAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;QAAE,CAAC,6IAAC,MAAM,EAAE;QAAE,CAAC,6IAAC,OAAO,EAAE;KAAC,CAAC,CACjE;IACD,EAAE,EAAE,CAAC,6IAAC,MAAM,EAAE;IACd,SAAS,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,CAAC;QAAE,MAAM,EAAE,IAAI;IAAA,CAAE,CAAC,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;IAC5E,eAAe,EAAE,CAAC,6IAAC,MAAM,EAAE;IAC3B,WAAW,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;IACnC,QAAQ,EAAE,CAAC,6IAAC,QAAQ,2LAAC,yBAAsB,CAAC;IAC5C,oBAAoB,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;IAC5C,IAAI,EAAE,CAAC,6IAAC,MAAM,EAAE;IAChB,MAAM,EAAE,CAAC,6IAAC,OAAO,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE;CACrC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,iBAAiB,EAAE,gBAAgB;QACnC,aAAa,EAAE,YAAY;QAC3B,sBAAsB,EAAE,oBAAoB;KAC7C,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAgBI,MAAM,wBAAwB,GAIjC,CAAC,6IAAC,MAAM,CAAC;IACX,QAAQ,EAAE,CAAC,6IAAC,MAAM,CAChB,CAAC,6IAAC,KAAK,CAAC;QAAC,CAAC,6IAAC,MAAM,EAAE;QAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;QAAE,CAAC,6IAAC,MAAM,EAAE;QAAE,CAAC,6IAAC,OAAO,EAAE;KAAC,CAAC,CACjE;IACD,EAAE,EAAE,CAAC,6IAAC,MAAM,EAAE;IACd,SAAS,EAAE,CAAC,6IAAC,IAAI,EAAE,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,WAAW,EAAE,CAAC;IACnD,cAAc,EAAE,CAAC,6IAAC,MAAM,EAAE;IAC1B,UAAU,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;IAClC,QAAQ,EAAE,CAAC,6IAAC,QAAQ,2LAAC,0BAAuB,CAAC;IAC7C,kBAAkB,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;IAC1C,IAAI,EAAE,CAAC,6IAAC,MAAM,EAAE;IAChB,MAAM,EAAE,CAAC,6IAAC,OAAO,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,MAAe,CAAC;CACnD,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,QAAO,sLAAA,AAAM,EAAC,CAAC,EAAE;QACf,cAAc,EAAE,iBAAiB;QACjC,UAAU,EAAE,aAAa;QACzB,kBAAkB,EAAE,sBAAsB;KAC3C,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,UAAU,CAO1B;AAPD,CAAA,SAAiB,UAAU;IACzB,uDAAA,EAAyD,CAC5C,WAAA,aAAa,GAAG,uBAAuB,CAAC;IACrD,wDAAA,EAA0D,CAC7C,WAAA,cAAc,GAAG,wBAAwB,CAAC;AAGzD,CAAC,EAPgB,UAAU,IAAA,CAAV,UAAU,GAAA,CAAA,CAAA,GAO1B;AAEK,SAAU,eAAe,CAAC,SAAoB;IAClD,OAAO,IAAI,CAAC,SAAS,CAAC,wBAAwB,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;AACnE,CAAC;AAEK,SAAU,iBAAiB,CAC/B,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,sBAAwB,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACnD,CAAA,qCAAA,CAAuC,CACxC,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 21600, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21606, "column": 0}, "map": {"version":3,"file":"event.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/event.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  SystemEvent,\n  SystemEvent$inboundSchema,\n  SystemEvent$Outbound,\n  SystemEvent$outboundSchema,\n} from \"./systemevent.js\";\nimport {\n  UserEvent,\n  UserEvent$inboundSchema,\n  UserEvent$Outbound,\n  UserEvent$outboundSchema,\n} from \"./userevent.js\";\n\nexport type Event = UserEvent | SystemEvent;\n\n/** @internal */\nexport const Event$inboundSchema: z.ZodType<Event, z.ZodTypeDef, unknown> = z\n  .union([UserEvent$inboundSchema, SystemEvent$inboundSchema]);\n\n/** @internal */\nexport type Event$Outbound = UserEvent$Outbound | SystemEvent$Outbound;\n\n/** @internal */\nexport const Event$outboundSchema: z.ZodType<\n  Event$Outbound,\n  z.ZodTypeDef,\n  Event\n> = z.union([UserEvent$outboundSchema, SystemEvent$outboundSchema]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace Event$ {\n  /** @deprecated use `Event$inboundSchema` instead. */\n  export const inboundSchema = Event$inboundSchema;\n  /** @deprecated use `Event$outboundSchema` instead. */\n  export const outboundSchema = Event$outboundSchema;\n  /** @deprecated use `Event$Outbound` instead. */\n  export type Outbound = Event$Outbound;\n}\n\nexport function eventToJSON(event: Event): string {\n  return JSON.stringify(Event$outboundSchema.parse(event));\n}\n\nexport function eventFromJSON(\n  jsonString: string,\n): SafeParseResult<Event, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => Event$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'Event' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;AAGH,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,yBAAyB,EAEzB,0BAA0B,GAC3B,MAAM,kBAAkB,CAAC;AAC1B,OAAO,EAEL,uBAAuB,EAEvB,wBAAwB,GACzB,MAAM,gBAAgB,CAAC;AAfxB,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;;;;AAoBlB,MAAM,mBAAmB,GAA4C,CAAC,6IAC1E,KAAK,CAAC;+LAAC,0BAAuB;iMAAE,4BAAyB;CAAC,CAAC,CAAC;AAMxD,MAAM,oBAAoB,GAI7B,CAAC,6IAAC,KAAK,CAAC;IAAC,sNAAwB;iMAAE,6BAA0B;CAAC,CAAC,CAAC;AAM9D,IAAW,MAAM,CAOtB;AAPD,CAAA,SAAiB,MAAM;IACrB,mDAAA,EAAqD,CACxC,OAAA,aAAa,GAAG,mBAAmB,CAAC;IACjD,oDAAA,EAAsD,CACzC,OAAA,cAAc,GAAG,oBAAoB,CAAC;AAGrD,CAAC,EAPgB,MAAM,IAAA,CAAN,MAAM,GAAA,CAAA,CAAA,GAOtB;AAEK,SAAU,WAAW,CAAC,KAAY;IACtC,OAAO,IAAI,CAAC,SAAS,CAAC,oBAAoB,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;AAC3D,CAAC;AAEK,SAAU,aAAa,CAC3B,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,kBAAoB,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC/C,CAAA,iCAAA,CAAmC,CACpC,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 21643, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21649, "column": 0}, "map": {"version":3,"file":"eventcreatecustomer.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/eventcreatecustomer.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport type EventCreateCustomerMetadata = string | number | number | boolean;\n\nexport type EventCreateCustomer = {\n  /**\n   * Key-value object allowing you to store additional information.\n   *\n   * @remarks\n   *\n   * The key must be a string with a maximum length of **40 characters**.\n   * The value must be either:\n   *\n   * * A string with a maximum length of **500 characters**\n   * * An integer\n   * * A floating-point number\n   * * A boolean\n   *\n   * You can store up to **50 key-value pairs**.\n   */\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  /**\n   * The timestamp of the event.\n   */\n  timestamp?: Date | undefined;\n  /**\n   * The name of the event.\n   */\n  name: string;\n  /**\n   * The ID of the organization owning the event. **Required unless you use an organization token.**\n   */\n  organizationId?: string | null | undefined;\n  /**\n   * ID of the customer in your Polar organization associated with the event.\n   */\n  customerId: string;\n};\n\n/** @internal */\nexport const EventCreateCustomerMetadata$inboundSchema: z.ZodType<\n  EventCreateCustomerMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type EventCreateCustomerMetadata$Outbound =\n  | string\n  | number\n  | number\n  | boolean;\n\n/** @internal */\nexport const EventCreateCustomerMetadata$outboundSchema: z.ZodType<\n  EventCreateCustomerMetadata$Outbound,\n  z.ZodTypeDef,\n  EventCreateCustomerMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace EventCreateCustomerMetadata$ {\n  /** @deprecated use `EventCreateCustomerMetadata$inboundSchema` instead. */\n  export const inboundSchema = EventCreateCustomerMetadata$inboundSchema;\n  /** @deprecated use `EventCreateCustomerMetadata$outboundSchema` instead. */\n  export const outboundSchema = EventCreateCustomerMetadata$outboundSchema;\n  /** @deprecated use `EventCreateCustomerMetadata$Outbound` instead. */\n  export type Outbound = EventCreateCustomerMetadata$Outbound;\n}\n\nexport function eventCreateCustomerMetadataToJSON(\n  eventCreateCustomerMetadata: EventCreateCustomerMetadata,\n): string {\n  return JSON.stringify(\n    EventCreateCustomerMetadata$outboundSchema.parse(\n      eventCreateCustomerMetadata,\n    ),\n  );\n}\n\nexport function eventCreateCustomerMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<EventCreateCustomerMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => EventCreateCustomerMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'EventCreateCustomerMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const EventCreateCustomer$inboundSchema: z.ZodType<\n  EventCreateCustomer,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  timestamp: z.string().datetime({ offset: true }).transform(v => new Date(v))\n    .optional(),\n  name: z.string(),\n  organization_id: z.nullable(z.string()).optional(),\n  customer_id: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    \"organization_id\": \"organizationId\",\n    \"customer_id\": \"customerId\",\n  });\n});\n\n/** @internal */\nexport type EventCreateCustomer$Outbound = {\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  timestamp?: string | undefined;\n  name: string;\n  organization_id?: string | null | undefined;\n  customer_id: string;\n};\n\n/** @internal */\nexport const EventCreateCustomer$outboundSchema: z.ZodType<\n  EventCreateCustomer$Outbound,\n  z.ZodTypeDef,\n  EventCreateCustomer\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  timestamp: z.date().transform(v => v.toISOString()).optional(),\n  name: z.string(),\n  organizationId: z.nullable(z.string()).optional(),\n  customerId: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    organizationId: \"organization_id\",\n    customerId: \"customer_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace EventCreateCustomer$ {\n  /** @deprecated use `EventCreateCustomer$inboundSchema` instead. */\n  export const inboundSchema = EventCreateCustomer$inboundSchema;\n  /** @deprecated use `EventCreateCustomer$outboundSchema` instead. */\n  export const outboundSchema = EventCreateCustomer$outboundSchema;\n  /** @deprecated use `EventCreateCustomer$Outbound` instead. */\n  export type Outbound = EventCreateCustomer$Outbound;\n}\n\nexport function eventCreateCustomerToJSON(\n  eventCreateCustomer: EventCreateCustomer,\n): string {\n  return JSON.stringify(\n    EventCreateCustomer$outboundSchema.parse(eventCreateCustomer),\n  );\n}\n\nexport function eventCreateCustomerFromJSON(\n  jsonString: string,\n): SafeParseResult<EventCreateCustomer, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => EventCreateCustomer$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'EventCreateCustomer' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 21740, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21746, "column": 0}, "map": {"version":3,"file":"eventcreateexternalcustomer.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/eventcreateexternalcustomer.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport type EventCreateExternalCustomerMetadata =\n  | string\n  | number\n  | number\n  | boolean;\n\nexport type EventCreateExternalCustomer = {\n  /**\n   * Key-value object allowing you to store additional information.\n   *\n   * @remarks\n   *\n   * The key must be a string with a maximum length of **40 characters**.\n   * The value must be either:\n   *\n   * * A string with a maximum length of **500 characters**\n   * * An integer\n   * * A floating-point number\n   * * A boolean\n   *\n   * You can store up to **50 key-value pairs**.\n   */\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  /**\n   * The timestamp of the event.\n   */\n  timestamp?: Date | undefined;\n  /**\n   * The name of the event.\n   */\n  name: string;\n  /**\n   * The ID of the organization owning the event. **Required unless you use an organization token.**\n   */\n  organizationId?: string | null | undefined;\n  /**\n   * ID of the customer in your system associated with the event.\n   */\n  externalCustomerId: string;\n};\n\n/** @internal */\nexport const EventCreateExternalCustomerMetadata$inboundSchema: z.ZodType<\n  EventCreateExternalCustomerMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type EventCreateExternalCustomerMetadata$Outbound =\n  | string\n  | number\n  | number\n  | boolean;\n\n/** @internal */\nexport const EventCreateExternalCustomerMetadata$outboundSchema: z.ZodType<\n  EventCreateExternalCustomerMetadata$Outbound,\n  z.ZodTypeDef,\n  EventCreateExternalCustomerMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace EventCreateExternalCustomerMetadata$ {\n  /** @deprecated use `EventCreateExternalCustomerMetadata$inboundSchema` instead. */\n  export const inboundSchema =\n    EventCreateExternalCustomerMetadata$inboundSchema;\n  /** @deprecated use `EventCreateExternalCustomerMetadata$outboundSchema` instead. */\n  export const outboundSchema =\n    EventCreateExternalCustomerMetadata$outboundSchema;\n  /** @deprecated use `EventCreateExternalCustomerMetadata$Outbound` instead. */\n  export type Outbound = EventCreateExternalCustomerMetadata$Outbound;\n}\n\nexport function eventCreateExternalCustomerMetadataToJSON(\n  eventCreateExternalCustomerMetadata: EventCreateExternalCustomerMetadata,\n): string {\n  return JSON.stringify(\n    EventCreateExternalCustomerMetadata$outboundSchema.parse(\n      eventCreateExternalCustomerMetadata,\n    ),\n  );\n}\n\nexport function eventCreateExternalCustomerMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<EventCreateExternalCustomerMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) =>\n      EventCreateExternalCustomerMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'EventCreateExternalCustomerMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const EventCreateExternalCustomer$inboundSchema: z.ZodType<\n  EventCreateExternalCustomer,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  timestamp: z.string().datetime({ offset: true }).transform(v => new Date(v))\n    .optional(),\n  name: z.string(),\n  organization_id: z.nullable(z.string()).optional(),\n  external_customer_id: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    \"organization_id\": \"organizationId\",\n    \"external_customer_id\": \"externalCustomerId\",\n  });\n});\n\n/** @internal */\nexport type EventCreateExternalCustomer$Outbound = {\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  timestamp?: string | undefined;\n  name: string;\n  organization_id?: string | null | undefined;\n  external_customer_id: string;\n};\n\n/** @internal */\nexport const EventCreateExternalCustomer$outboundSchema: z.ZodType<\n  EventCreateExternalCustomer$Outbound,\n  z.ZodTypeDef,\n  EventCreateExternalCustomer\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  timestamp: z.date().transform(v => v.toISOString()).optional(),\n  name: z.string(),\n  organizationId: z.nullable(z.string()).optional(),\n  externalCustomerId: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    organizationId: \"organization_id\",\n    externalCustomerId: \"external_customer_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace EventCreateExternalCustomer$ {\n  /** @deprecated use `EventCreateExternalCustomer$inboundSchema` instead. */\n  export const inboundSchema = EventCreateExternalCustomer$inboundSchema;\n  /** @deprecated use `EventCreateExternalCustomer$outboundSchema` instead. */\n  export const outboundSchema = EventCreateExternalCustomer$outboundSchema;\n  /** @deprecated use `EventCreateExternalCustomer$Outbound` instead. */\n  export type Outbound = EventCreateExternalCustomer$Outbound;\n}\n\nexport function eventCreateExternalCustomerToJSON(\n  eventCreateExternalCustomer: EventCreateExternalCustomer,\n): string {\n  return JSON.stringify(\n    EventCreateExternalCustomer$outboundSchema.parse(\n      eventCreateExternalCustomer,\n    ),\n  );\n}\n\nexport function eventCreateExternalCustomerFromJSON(\n  jsonString: string,\n): SafeParseResult<EventCreateExternalCustomer, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => EventCreateExternalCustomer$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'EventCreateExternalCustomer' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 21837, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21843, "column": 0}, "map": {"version":3,"file":"eventsingest.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/eventsingest.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  EventCreateCustomer,\n  EventCreateCustomer$inboundSchema,\n  EventCreateCustomer$Outbound,\n  EventCreateCustomer$outboundSchema,\n} from \"./eventcreatecustomer.js\";\nimport {\n  EventCreateExternalCustomer,\n  EventCreateExternalCustomer$inboundSchema,\n  EventCreateExternalCustomer$Outbound,\n  EventCreateExternalCustomer$outboundSchema,\n} from \"./eventcreateexternalcustomer.js\";\n\nexport type Events = EventCreateCustomer | EventCreateExternalCustomer;\n\nexport type EventsIngest = {\n  /**\n   * List of events to ingest.\n   */\n  events: Array<EventCreateCustomer | EventCreateExternalCustomer>;\n};\n\n/** @internal */\nexport const Events$inboundSchema: z.ZodType<Events, z.ZodTypeDef, unknown> = z\n  .union([\n    EventCreateCustomer$inboundSchema,\n    EventCreateExternalCustomer$inboundSchema,\n  ]);\n\n/** @internal */\nexport type Events$Outbound =\n  | EventCreateCustomer$Outbound\n  | EventCreateExternalCustomer$Outbound;\n\n/** @internal */\nexport const Events$outboundSchema: z.ZodType<\n  Events$Outbound,\n  z.ZodTypeDef,\n  Events\n> = z.union([\n  EventCreateCustomer$outboundSchema,\n  EventCreateExternalCustomer$outboundSchema,\n]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace Events$ {\n  /** @deprecated use `Events$inboundSchema` instead. */\n  export const inboundSchema = Events$inboundSchema;\n  /** @deprecated use `Events$outboundSchema` instead. */\n  export const outboundSchema = Events$outboundSchema;\n  /** @deprecated use `Events$Outbound` instead. */\n  export type Outbound = Events$Outbound;\n}\n\nexport function eventsToJSON(events: Events): string {\n  return JSON.stringify(Events$outboundSchema.parse(events));\n}\n\nexport function eventsFromJSON(\n  jsonString: string,\n): SafeParseResult<Events, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => Events$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'Events' from JSON`,\n  );\n}\n\n/** @internal */\nexport const EventsIngest$inboundSchema: z.ZodType<\n  EventsIngest,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  events: z.array(\n    z.union([\n      EventCreateCustomer$inboundSchema,\n      EventCreateExternalCustomer$inboundSchema,\n    ]),\n  ),\n});\n\n/** @internal */\nexport type EventsIngest$Outbound = {\n  events: Array<\n    EventCreateCustomer$Outbound | EventCreateExternalCustomer$Outbound\n  >;\n};\n\n/** @internal */\nexport const EventsIngest$outboundSchema: z.ZodType<\n  EventsIngest$Outbound,\n  z.ZodTypeDef,\n  EventsIngest\n> = z.object({\n  events: z.array(\n    z.union([\n      EventCreateCustomer$outboundSchema,\n      EventCreateExternalCustomer$outboundSchema,\n    ]),\n  ),\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace EventsIngest$ {\n  /** @deprecated use `EventsIngest$inboundSchema` instead. */\n  export const inboundSchema = EventsIngest$inboundSchema;\n  /** @deprecated use `EventsIngest$outboundSchema` instead. */\n  export const outboundSchema = EventsIngest$outboundSchema;\n  /** @deprecated use `EventsIngest$Outbound` instead. */\n  export type Outbound = EventsIngest$Outbound;\n}\n\nexport function eventsIngestToJSON(eventsIngest: EventsIngest): string {\n  return JSON.stringify(EventsIngest$outboundSchema.parse(eventsIngest));\n}\n\nexport function eventsIngestFromJSON(\n  jsonString: string,\n): SafeParseResult<EventsIngest, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => EventsIngest$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'EventsIngest' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,iCAAiC,EAEjC,kCAAkC,GACnC,MAAM,0BAA0B,CAAC;AAClC,OAAO,EAEL,yCAAyC,EAEzC,0CAA0C,GAC3C,MAAM,kCAAkC,CAAC;;;;;;AAYnC,MAAM,oBAAoB,GAA6C,CAAC,6IAC5E,KAAK,CAAC;yMACL,oCAAiC;IACjC,yPAAyC;CAC1C,CAAC,CAAC;AAQE,MAAM,qBAAqB,GAI9B,CAAC,6IAAC,KAAK,CAAC;yMACV,qCAAkC;iNAClC,6CAA0C;CAC3C,CAAC,CAAC;AAMG,IAAW,OAAO,CAOvB;AAPD,CAAA,SAAiB,OAAO;IACtB,oDAAA,EAAsD,CACzC,QAAA,aAAa,GAAG,oBAAoB,CAAC;IAClD,qDAAA,EAAuD,CAC1C,QAAA,cAAc,GAAG,qBAAqB,CAAC;AAGtD,CAAC,EAPgB,OAAO,IAAA,CAAP,OAAO,GAAA,CAAA,CAAA,GAOvB;AAEK,SAAU,YAAY,CAAC,MAAc;IACzC,OAAO,IAAI,CAAC,SAAS,CAAC,qBAAqB,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;AAC7D,CAAC;AAEK,SAAU,cAAc,CAC5B,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,mBAAqB,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAChD,CAAA,kCAAA,CAAoC,CACrC,CAAC;AACJ,CAAC;AAGM,MAAM,0BAA0B,GAInC,CAAC,6IAAC,MAAM,CAAC;IACX,MAAM,EAAE,CAAC,6IAAC,KAAK,CACb,CAAC,6IAAC,KAAK,CAAC;6MACN,oCAAiC;QACjC,yPAAyC;KAC1C,CAAC,CACH;CACF,CAAC,CAAC;AAUI,MAAM,2BAA2B,GAIpC,CAAC,6IAAC,MAAM,CAAC;IACX,MAAM,EAAE,CAAC,6IAAC,KAAK,CACb,CAAC,6IAAC,KAAK,CAAC;6MACN,qCAAkC;QAClC,0PAA0C;KAC3C,CAAC,CACH;CACF,CAAC,CAAC;AAMG,IAAW,aAAa,CAO7B;AAPD,CAAA,SAAiB,aAAa;IAC5B,0DAAA,EAA4D,CAC/C,cAAA,aAAa,GAAG,0BAA0B,CAAC;IACxD,2DAAA,EAA6D,CAChD,cAAA,cAAc,GAAG,2BAA2B,CAAC;AAG5D,CAAC,EAPgB,aAAa,IAAA,CAAb,aAAa,GAAA,CAAA,CAAA,GAO7B;AAEK,SAAU,kBAAkB,CAAC,YAA0B;IAC3D,OAAO,IAAI,CAAC,SAAS,CAAC,2BAA2B,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC;AACzE,CAAC;AAEK,SAAU,oBAAoB,CAClC,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,yBAA2B,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACtD,CAAA,wCAAA,CAA0C,CAC3C,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 21908, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21914, "column": 0}, "map": {"version":3,"file":"eventsingestresponse.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/eventsingestresponse.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport type EventsIngestResponse = {\n  /**\n   * Number of events inserted.\n   */\n  inserted: number;\n};\n\n/** @internal */\nexport const EventsIngestResponse$inboundSchema: z.ZodType<\n  EventsIngestResponse,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  inserted: z.number().int(),\n});\n\n/** @internal */\nexport type EventsIngestResponse$Outbound = {\n  inserted: number;\n};\n\n/** @internal */\nexport const EventsIngestResponse$outboundSchema: z.ZodType<\n  EventsIngestResponse$Outbound,\n  z.ZodTypeDef,\n  EventsIngestResponse\n> = z.object({\n  inserted: z.number().int(),\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace EventsIngestResponse$ {\n  /** @deprecated use `EventsIngestResponse$inboundSchema` instead. */\n  export const inboundSchema = EventsIngestResponse$inboundSchema;\n  /** @deprecated use `EventsIngestResponse$outboundSchema` instead. */\n  export const outboundSchema = EventsIngestResponse$outboundSchema;\n  /** @deprecated use `EventsIngestResponse$Outbound` instead. */\n  export type Outbound = EventsIngestResponse$Outbound;\n}\n\nexport function eventsIngestResponseToJSON(\n  eventsIngestResponse: EventsIngestResponse,\n): string {\n  return JSON.stringify(\n    EventsIngestResponse$outboundSchema.parse(eventsIngestResponse),\n  );\n}\n\nexport function eventsIngestResponseFromJSON(\n  jsonString: string,\n): SafeParseResult<EventsIngestResponse, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => EventsIngestResponse$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'EventsIngestResponse' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;AAGH,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AADjD,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;;AAalB,MAAM,kCAAkC,GAI3C,CAAC,6IAAC,MAAM,CAAC;IACX,QAAQ,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;CAC3B,CAAC,CAAC;AAQI,MAAM,mCAAmC,GAI5C,CAAC,6IAAC,MAAM,CAAC;IACX,QAAQ,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;CAC3B,CAAC,CAAC;AAMG,IAAW,qBAAqB,CAOrC;AAPD,CAAA,SAAiB,qBAAqB;IACpC,kEAAA,EAAoE,CACvD,sBAAA,aAAa,GAAG,kCAAkC,CAAC;IAChE,mEAAA,EAAqE,CACxD,sBAAA,cAAc,GAAG,mCAAmC,CAAC;AAGpE,CAAC,EAPgB,qBAAqB,IAAA,CAArB,qBAAqB,GAAA,CAAA,CAAA,GAOrC;AAEK,SAAU,0BAA0B,CACxC,oBAA0C;IAE1C,OAAO,IAAI,CAAC,SAAS,CACnB,mCAAmC,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAChE,CAAC;AACJ,CAAC;AAEK,SAAU,4BAA4B,CAC1C,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,iCAAmC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC9D,CAAA,gDAAA,CAAkD,CACnD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 21945, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21951, "column": 0}, "map": {"version":3,"file":"eventsortproperty.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/eventsortproperty.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { ClosedEnum } from \"../../types/enums.js\";\n\nexport const EventSortProperty = {\n  Timestamp: \"timestamp\",\n  MinusTimestamp: \"-timestamp\",\n} as const;\nexport type EventSortProperty = ClosedEnum<typeof EventSortProperty>;\n\n/** @internal */\nexport const EventSortProperty$inboundSchema: z.ZodNativeEnum<\n  typeof EventSortProperty\n> = z.nativeEnum(EventSortProperty);\n\n/** @internal */\nexport const EventSortProperty$outboundSchema: z.ZodNativeEnum<\n  typeof EventSortProperty\n> = EventSortProperty$inboundSchema;\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace EventSortProperty$ {\n  /** @deprecated use `EventSortProperty$inboundSchema` instead. */\n  export const inboundSchema = EventSortProperty$inboundSchema;\n  /** @deprecated use `EventSortProperty$outboundSchema` instead. */\n  export const outboundSchema = EventSortProperty$outboundSchema;\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;AAGlB,MAAM,iBAAiB,GAAG;IAC/B,SAAS,EAAE,WAAW;IACtB,cAAc,EAAE,YAAY;CACpB,CAAC;AAIJ,MAAM,+BAA+B,GAExC,CAAC,6IAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC;AAG7B,MAAM,gCAAgC,GAEzC,+BAA+B,CAAC;AAM9B,IAAW,kBAAkB,CAKlC;AALD,CAAA,SAAiB,kBAAkB;IACjC,+DAAA,EAAiE,CACpD,mBAAA,aAAa,GAAG,+BAA+B,CAAC;IAC7D,gEAAA,EAAkE,CACrD,mBAAA,cAAc,GAAG,gCAAgC,CAAC;AACjE,CAAC,EALgB,kBAAkB,IAAA,CAAlB,kBAAkB,GAAA,CAAA,CAAA,GAKlC","ignoreList":[0]}},
    {"offset": {"line": 21973, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21979, "column": 0}, "map": {"version":3,"file":"eventsource.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/eventsource.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { ClosedEnum } from \"../../types/enums.js\";\n\nexport const EventSource = {\n  System: \"system\",\n  User: \"user\",\n} as const;\nexport type EventSource = ClosedEnum<typeof EventSource>;\n\n/** @internal */\nexport const EventSource$inboundSchema: z.ZodNativeEnum<typeof EventSource> = z\n  .nativeEnum(EventSource);\n\n/** @internal */\nexport const EventSource$outboundSchema: z.ZodNativeEnum<typeof EventSource> =\n  EventSource$inboundSchema;\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace EventSource$ {\n  /** @deprecated use `EventSource$inboundSchema` instead. */\n  export const inboundSchema = EventSource$inboundSchema;\n  /** @deprecated use `EventSource$outboundSchema` instead. */\n  export const outboundSchema = EventSource$outboundSchema;\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;AAGlB,MAAM,WAAW,GAAG;IACzB,MAAM,EAAE,QAAQ;IAChB,IAAI,EAAE,MAAM;CACJ,CAAC;AAIJ,MAAM,yBAAyB,GAAwC,CAAC,6IAC5E,UAAU,CAAC,WAAW,CAAC,CAAC;AAGpB,MAAM,0BAA0B,GACrC,yBAAyB,CAAC;AAMtB,IAAW,YAAY,CAK5B;AALD,CAAA,SAAiB,YAAY;IAC3B,yDAAA,EAA2D,CAC9C,aAAA,aAAa,GAAG,yBAAyB,CAAC;IACvD,0DAAA,EAA4D,CAC/C,aAAA,cAAc,GAAG,0BAA0B,CAAC;AAC3D,CAAC,EALgB,YAAY,IAAA,CAAZ,YAAY,GAAA,CAAA,CAAA,GAK5B","ignoreList":[0]}},
    {"offset": {"line": 22001, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 22007, "column": 0}, "map": {"version":3,"file":"listresourceevent.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/listresourceevent.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  Event,\n  Event$inboundSchema,\n  Event$Outbound,\n  Event$outboundSchema,\n} from \"./event.js\";\nimport {\n  Pagination,\n  Pagination$inboundSchema,\n  Pagination$Outbound,\n  Pagination$outboundSchema,\n} from \"./pagination.js\";\n\nexport type ListResourceEvent = {\n  items: Array<Event>;\n  pagination: Pagination;\n};\n\n/** @internal */\nexport const ListResourceEvent$inboundSchema: z.ZodType<\n  ListResourceEvent,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  items: z.array(Event$inboundSchema),\n  pagination: Pagination$inboundSchema,\n});\n\n/** @internal */\nexport type ListResourceEvent$Outbound = {\n  items: Array<Event$Outbound>;\n  pagination: Pagination$Outbound;\n};\n\n/** @internal */\nexport const ListResourceEvent$outboundSchema: z.ZodType<\n  ListResourceEvent$Outbound,\n  z.ZodTypeDef,\n  ListResourceEvent\n> = z.object({\n  items: z.array(Event$outboundSchema),\n  pagination: Pagination$outboundSchema,\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace ListResourceEvent$ {\n  /** @deprecated use `ListResourceEvent$inboundSchema` instead. */\n  export const inboundSchema = ListResourceEvent$inboundSchema;\n  /** @deprecated use `ListResourceEvent$outboundSchema` instead. */\n  export const outboundSchema = ListResourceEvent$outboundSchema;\n  /** @deprecated use `ListResourceEvent$Outbound` instead. */\n  export type Outbound = ListResourceEvent$Outbound;\n}\n\nexport function listResourceEventToJSON(\n  listResourceEvent: ListResourceEvent,\n): string {\n  return JSON.stringify(\n    ListResourceEvent$outboundSchema.parse(listResourceEvent),\n  );\n}\n\nexport function listResourceEventFromJSON(\n  jsonString: string,\n): SafeParseResult<ListResourceEvent, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => ListResourceEvent$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'ListResourceEvent' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;AAGH,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,mBAAmB,EAEnB,oBAAoB,GACrB,MAAM,YAAY,CAAC;AACpB,OAAO,EAEL,wBAAwB,EAExB,yBAAyB,GAC1B,MAAM,iBAAiB,CAAC;AAfzB,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;;;;AAuBlB,MAAM,+BAA+B,GAIxC,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,KAAK,wLAAC,sBAAmB,CAAC;IACnC,UAAU,8LAAE,2BAAwB;CACrC,CAAC,CAAC;AASI,MAAM,gCAAgC,GAIzC,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,KAAK,wLAAC,uBAAoB,CAAC;IACpC,UAAU,8LAAE,4BAAyB;CACtC,CAAC,CAAC;AAMG,IAAW,kBAAkB,CAOlC;AAPD,CAAA,SAAiB,kBAAkB;IACjC,+DAAA,EAAiE,CACpD,mBAAA,aAAa,GAAG,+BAA+B,CAAC;IAC7D,gEAAA,EAAkE,CACrD,mBAAA,cAAc,GAAG,gCAAgC,CAAC;AAGjE,CAAC,EAPgB,kBAAkB,IAAA,CAAlB,kBAAkB,GAAA,CAAA,CAAA,GAOlC;AAEK,SAAU,uBAAuB,CACrC,iBAAoC;IAEpC,OAAO,IAAI,CAAC,SAAS,CACnB,gCAAgC,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAC1D,CAAC;AACJ,CAAC;AAEK,SAAU,yBAAyB,CACvC,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,8BAAgC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC3D,CAAA,6CAAA,CAA+C,CAChD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 22044, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 22050, "column": 0}, "map": {"version":3,"file":"eventnamessortproperty.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/eventnamessortproperty.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { ClosedEnum } from \"../../types/enums.js\";\n\nexport const EventNamesSortProperty = {\n  Name: \"name\",\n  MinusName: \"-name\",\n  Occurrences: \"occurrences\",\n  MinusOccurrences: \"-occurrences\",\n  FirstSeen: \"first_seen\",\n  MinusFirstSeen: \"-first_seen\",\n  LastSeen: \"last_seen\",\n  MinusLastSeen: \"-last_seen\",\n} as const;\nexport type EventNamesSortProperty = ClosedEnum<typeof EventNamesSortProperty>;\n\n/** @internal */\nexport const EventNamesSortProperty$inboundSchema: z.ZodNativeEnum<\n  typeof EventNamesSortProperty\n> = z.nativeEnum(EventNamesSortProperty);\n\n/** @internal */\nexport const EventNamesSortProperty$outboundSchema: z.ZodNativeEnum<\n  typeof EventNamesSortProperty\n> = EventNamesSortProperty$inboundSchema;\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace EventNamesSortProperty$ {\n  /** @deprecated use `EventNamesSortProperty$inboundSchema` instead. */\n  export const inboundSchema = EventNamesSortProperty$inboundSchema;\n  /** @deprecated use `EventNamesSortProperty$outboundSchema` instead. */\n  export const outboundSchema = EventNamesSortProperty$outboundSchema;\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;AAGlB,MAAM,sBAAsB,GAAG;IACpC,IAAI,EAAE,MAAM;IACZ,SAAS,EAAE,OAAO;IAClB,WAAW,EAAE,aAAa;IAC1B,gBAAgB,EAAE,cAAc;IAChC,SAAS,EAAE,YAAY;IACvB,cAAc,EAAE,aAAa;IAC7B,QAAQ,EAAE,WAAW;IACrB,aAAa,EAAE,YAAY;CACnB,CAAC;AAIJ,MAAM,oCAAoC,GAE7C,CAAC,6IAAC,UAAU,CAAC,sBAAsB,CAAC,CAAC;AAGlC,MAAM,qCAAqC,GAE9C,oCAAoC,CAAC;AAMnC,IAAW,uBAAuB,CAKvC;AALD,CAAA,SAAiB,uBAAuB;IACtC,oEAAA,EAAsE,CACzD,wBAAA,aAAa,GAAG,oCAAoC,CAAC;IAClE,qEAAA,EAAuE,CAC1D,wBAAA,cAAc,GAAG,qCAAqC,CAAC;AACtE,CAAC,EALgB,uBAAuB,IAAA,CAAvB,uBAAuB,GAAA,CAAA,CAAA,GAKvC","ignoreList":[0]}},
    {"offset": {"line": 22078, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 22084, "column": 0}, "map": {"version":3,"file":"eventname.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/eventname.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  EventSource,\n  EventSource$inboundSchema,\n  EventSource$outboundSchema,\n} from \"./eventsource.js\";\n\nexport type EventName = {\n  /**\n   * The name of the event.\n   */\n  name: string;\n  source: EventSource;\n  /**\n   * Number of times the event has occurred.\n   */\n  occurrences: number;\n  /**\n   * The first time the event occurred.\n   */\n  firstSeen: Date;\n  /**\n   * The last time the event occurred.\n   */\n  lastSeen: Date;\n};\n\n/** @internal */\nexport const EventName$inboundSchema: z.ZodType<\n  EventName,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  name: z.string(),\n  source: EventSource$inboundSchema,\n  occurrences: z.number().int(),\n  first_seen: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  last_seen: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n}).transform((v) => {\n  return remap$(v, {\n    \"first_seen\": \"firstSeen\",\n    \"last_seen\": \"lastSeen\",\n  });\n});\n\n/** @internal */\nexport type EventName$Outbound = {\n  name: string;\n  source: string;\n  occurrences: number;\n  first_seen: string;\n  last_seen: string;\n};\n\n/** @internal */\nexport const EventName$outboundSchema: z.ZodType<\n  EventName$Outbound,\n  z.ZodTypeDef,\n  EventName\n> = z.object({\n  name: z.string(),\n  source: EventSource$outboundSchema,\n  occurrences: z.number().int(),\n  firstSeen: z.date().transform(v => v.toISOString()),\n  lastSeen: z.date().transform(v => v.toISOString()),\n}).transform((v) => {\n  return remap$(v, {\n    firstSeen: \"first_seen\",\n    lastSeen: \"last_seen\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace EventName$ {\n  /** @deprecated use `EventName$inboundSchema` instead. */\n  export const inboundSchema = EventName$inboundSchema;\n  /** @deprecated use `EventName$outboundSchema` instead. */\n  export const outboundSchema = EventName$outboundSchema;\n  /** @deprecated use `EventName$Outbound` instead. */\n  export type Outbound = EventName$Outbound;\n}\n\nexport function eventNameToJSON(eventName: EventName): string {\n  return JSON.stringify(EventName$outboundSchema.parse(eventName));\n}\n\nexport function eventNameFromJSON(\n  jsonString: string,\n): SafeParseResult<EventName, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => EventName$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'EventName' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,yBAAyB,EACzB,0BAA0B,GAC3B,MAAM,kBAAkB,CAAC;;;;;;AAuBnB,MAAM,uBAAuB,GAIhC,CAAC,6IAAC,MAAM,CAAC;IACX,IAAI,EAAE,CAAC,6IAAC,MAAM,EAAE;IAChB,MAAM,+LAAE,4BAAyB;IACjC,WAAW,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAC7B,UAAU,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,CAAC;QAAE,MAAM,EAAE,IAAI;IAAA,CAAE,CAAC,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;IAC7E,SAAS,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,CAAC;QAAE,MAAM,EAAE,IAAI;IAAA,CAAE,CAAC,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;CAC7E,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,YAAY,EAAE,WAAW;QACzB,WAAW,EAAE,UAAU;KACxB,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAYI,MAAM,wBAAwB,GAIjC,CAAC,6IAAC,MAAM,CAAC;IACX,IAAI,EAAE,CAAC,6IAAC,MAAM,EAAE;IAChB,MAAM,+LAAE,6BAA0B;IAClC,WAAW,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAC7B,SAAS,EAAE,CAAC,6IAAC,IAAI,EAAE,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,WAAW,EAAE,CAAC;IACnD,QAAQ,EAAE,CAAC,6IAAC,IAAI,EAAE,CAAC,SAAS,EAAC,CAAC,CAAC,EAAG,AAAD,CAAE,CAAC,WAAW,EAAE,CAAC;CACnD,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,SAAS,EAAE,YAAY;QACvB,QAAQ,EAAE,WAAW;KACtB,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,UAAU,CAO1B;AAPD,CAAA,SAAiB,UAAU;IACzB,uDAAA,EAAyD,CAC5C,WAAA,aAAa,GAAG,uBAAuB,CAAC;IACrD,wDAAA,EAA0D,CAC7C,WAAA,cAAc,GAAG,wBAAwB,CAAC;AAGzD,CAAC,EAPgB,UAAU,IAAA,CAAV,UAAU,GAAA,CAAA,CAAA,GAO1B;AAEK,SAAU,eAAe,CAAC,SAAoB;IAClD,OAAO,IAAI,CAAC,SAAS,CAAC,wBAAwB,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;AACnE,CAAC;AAEK,SAAU,iBAAiB,CAC/B,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,sBAAwB,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACnD,CAAA,qCAAA,CAAuC,CACxC,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 22141, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 22147, "column": 0}, "map": {"version":3,"file":"listresourceeventname.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/listresourceeventname.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  EventName,\n  EventName$inboundSchema,\n  EventName$Outbound,\n  EventName$outboundSchema,\n} from \"./eventname.js\";\nimport {\n  Pagination,\n  Pagination$inboundSchema,\n  Pagination$Outbound,\n  Pagination$outboundSchema,\n} from \"./pagination.js\";\n\nexport type ListResourceEventName = {\n  items: Array<EventName>;\n  pagination: Pagination;\n};\n\n/** @internal */\nexport const ListResourceEventName$inboundSchema: z.ZodType<\n  ListResourceEventName,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  items: z.array(EventName$inboundSchema),\n  pagination: Pagination$inboundSchema,\n});\n\n/** @internal */\nexport type ListResourceEventName$Outbound = {\n  items: Array<EventName$Outbound>;\n  pagination: Pagination$Outbound;\n};\n\n/** @internal */\nexport const ListResourceEventName$outboundSchema: z.ZodType<\n  ListResourceEventName$Outbound,\n  z.ZodTypeDef,\n  ListResourceEventName\n> = z.object({\n  items: z.array(EventName$outboundSchema),\n  pagination: Pagination$outboundSchema,\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace ListResourceEventName$ {\n  /** @deprecated use `ListResourceEventName$inboundSchema` instead. */\n  export const inboundSchema = ListResourceEventName$inboundSchema;\n  /** @deprecated use `ListResourceEventName$outboundSchema` instead. */\n  export const outboundSchema = ListResourceEventName$outboundSchema;\n  /** @deprecated use `ListResourceEventName$Outbound` instead. */\n  export type Outbound = ListResourceEventName$Outbound;\n}\n\nexport function listResourceEventNameToJSON(\n  listResourceEventName: ListResourceEventName,\n): string {\n  return JSON.stringify(\n    ListResourceEventName$outboundSchema.parse(listResourceEventName),\n  );\n}\n\nexport function listResourceEventNameFromJSON(\n  jsonString: string,\n): SafeParseResult<ListResourceEventName, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => ListResourceEventName$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'ListResourceEventName' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;AAGH,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,uBAAuB,EAEvB,wBAAwB,GACzB,MAAM,gBAAgB,CAAC;AACxB,OAAO,EAEL,wBAAwB,EAExB,yBAAyB,GAC1B,MAAM,iBAAiB,CAAC;AAfzB,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;;;;AAuBlB,MAAM,mCAAmC,GAI5C,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,KAAK,4LAAC,0BAAuB,CAAC;IACvC,UAAU,8LAAE,2BAAwB;CACrC,CAAC,CAAC;AASI,MAAM,oCAAoC,GAI7C,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,KAAK,4LAAC,2BAAwB,CAAC;IACxC,UAAU,8LAAE,4BAAyB;CACtC,CAAC,CAAC;AAMG,IAAW,sBAAsB,CAOtC;AAPD,CAAA,SAAiB,sBAAsB;IACrC,mEAAA,EAAqE,CACxD,uBAAA,aAAa,GAAG,mCAAmC,CAAC;IACjE,oEAAA,EAAsE,CACzD,uBAAA,cAAc,GAAG,oCAAoC,CAAC;AAGrE,CAAC,EAPgB,sBAAsB,IAAA,CAAtB,sBAAsB,GAAA,CAAA,CAAA,GAOtC;AAEK,SAAU,2BAA2B,CACzC,qBAA4C;IAE5C,OAAO,IAAI,CAAC,SAAS,CACnB,oCAAoC,CAAC,KAAK,CAAC,qBAAqB,CAAC,CAClE,CAAC;AACJ,CAAC;AAEK,SAAU,6BAA6B,CAC3C,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,kCAAoC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC/D,CAAA,iDAAA,CAAmD,CACpD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 22184, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 22190, "column": 0}, "map": {"version":3,"file":"s3filecreatepart.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/s3filecreatepart.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport type S3FileCreatePart = {\n  number: number;\n  chunkStart: number;\n  chunkEnd: number;\n  checksumSha256Base64?: string | null | undefined;\n};\n\n/** @internal */\nexport const S3FileCreatePart$inboundSchema: z.ZodType<\n  S3FileCreatePart,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  number: z.number().int(),\n  chunk_start: z.number().int(),\n  chunk_end: z.number().int(),\n  checksum_sha256_base64: z.nullable(z.string()).optional(),\n}).transform((v) => {\n  return remap$(v, {\n    \"chunk_start\": \"chunkStart\",\n    \"chunk_end\": \"chunkEnd\",\n    \"checksum_sha256_base64\": \"checksumSha256Base64\",\n  });\n});\n\n/** @internal */\nexport type S3FileCreatePart$Outbound = {\n  number: number;\n  chunk_start: number;\n  chunk_end: number;\n  checksum_sha256_base64?: string | null | undefined;\n};\n\n/** @internal */\nexport const S3FileCreatePart$outboundSchema: z.ZodType<\n  S3FileCreatePart$Outbound,\n  z.ZodTypeDef,\n  S3FileCreatePart\n> = z.object({\n  number: z.number().int(),\n  chunkStart: z.number().int(),\n  chunkEnd: z.number().int(),\n  checksumSha256Base64: z.nullable(z.string()).optional(),\n}).transform((v) => {\n  return remap$(v, {\n    chunkStart: \"chunk_start\",\n    chunkEnd: \"chunk_end\",\n    checksumSha256Base64: \"checksum_sha256_base64\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace S3FileCreatePart$ {\n  /** @deprecated use `S3FileCreatePart$inboundSchema` instead. */\n  export const inboundSchema = S3FileCreatePart$inboundSchema;\n  /** @deprecated use `S3FileCreatePart$outboundSchema` instead. */\n  export const outboundSchema = S3FileCreatePart$outboundSchema;\n  /** @deprecated use `S3FileCreatePart$Outbound` instead. */\n  export type Outbound = S3FileCreatePart$Outbound;\n}\n\nexport function s3FileCreatePartToJSON(\n  s3FileCreatePart: S3FileCreatePart,\n): string {\n  return JSON.stringify(\n    S3FileCreatePart$outboundSchema.parse(s3FileCreatePart),\n  );\n}\n\nexport function s3FileCreatePartFromJSON(\n  jsonString: string,\n): SafeParseResult<S3FileCreatePart, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => S3FileCreatePart$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'S3FileCreatePart' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;;;;;AAY1C,MAAM,8BAA8B,GAIvC,CAAC,6IAAC,MAAM,CAAC;IACX,MAAM,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IACxB,WAAW,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAC7B,SAAS,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAC3B,sBAAsB,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;CAC1D,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAM,AAAN,EAAO,CAAC,EAAE;QACf,aAAa,EAAE,YAAY;QAC3B,WAAW,EAAE,UAAU;QACvB,wBAAwB,EAAE,sBAAsB;KACjD,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAWI,MAAM,+BAA+B,GAIxC,CAAC,6IAAC,MAAM,CAAC;IACX,MAAM,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IACxB,UAAU,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAC5B,QAAQ,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAC1B,oBAAoB,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;CACxD,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,OAAO,uLAAA,AAAM,EAAC,CAAC,EAAE;QACf,UAAU,EAAE,aAAa;QACzB,QAAQ,EAAE,WAAW;QACrB,oBAAoB,EAAE,wBAAwB;KAC/C,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,iBAAiB,CAOjC;AAPD,CAAA,SAAiB,iBAAiB;IAChC,8DAAA,EAAgE,CACnD,kBAAA,aAAa,GAAG,8BAA8B,CAAC;IAC5D,+DAAA,EAAiE,CACpD,kBAAA,cAAc,GAAG,+BAA+B,CAAC;AAGhE,CAAC,EAPgB,iBAAiB,IAAA,CAAjB,iBAAiB,GAAA,CAAA,CAAA,GAOjC;AAEK,SAAU,sBAAsB,CACpC,gBAAkC;IAElC,OAAO,IAAI,CAAC,SAAS,CACnB,+BAA+B,CAAC,KAAK,CAAC,gBAAgB,CAAC,CACxD,CAAC;AACJ,CAAC;AAEK,SAAU,wBAAwB,CACtC,UAAkB;IAElB,OAAO,wLAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,6BAA+B,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC1D,CAAA,4CAAA,CAA8C,CAC/C,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 22241, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 22247, "column": 0}, "map": {"version":3,"file":"s3filecreatemultipart.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/s3filecreatemultipart.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  S3FileCreatePart,\n  S3FileCreatePart$inboundSchema,\n  S3FileCreatePart$Outbound,\n  S3FileCreatePart$outboundSchema,\n} from \"./s3filecreatepart.js\";\n\nexport type S3FileCreateMultipart = {\n  parts: Array<S3FileCreatePart>;\n};\n\n/** @internal */\nexport const S3FileCreateMultipart$inboundSchema: z.ZodType<\n  S3FileCreateMultipart,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  parts: z.array(S3FileCreatePart$inboundSchema),\n});\n\n/** @internal */\nexport type S3FileCreateMultipart$Outbound = {\n  parts: Array<S3FileCreatePart$Outbound>;\n};\n\n/** @internal */\nexport const S3FileCreateMultipart$outboundSchema: z.ZodType<\n  S3FileCreateMultipart$Outbound,\n  z.ZodTypeDef,\n  S3FileCreateMultipart\n> = z.object({\n  parts: z.array(S3FileCreatePart$outboundSchema),\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace S3FileCreateMultipart$ {\n  /** @deprecated use `S3FileCreateMultipart$inboundSchema` instead. */\n  export const inboundSchema = S3FileCreateMultipart$inboundSchema;\n  /** @deprecated use `S3FileCreateMultipart$outboundSchema` instead. */\n  export const outboundSchema = S3FileCreateMultipart$outboundSchema;\n  /** @deprecated use `S3FileCreateMultipart$Outbound` instead. */\n  export type Outbound = S3FileCreateMultipart$Outbound;\n}\n\nexport function s3FileCreateMultipartToJSON(\n  s3FileCreateMultipart: S3FileCreateMultipart,\n): string {\n  return JSON.stringify(\n    S3FileCreateMultipart$outboundSchema.parse(s3FileCreateMultipart),\n  );\n}\n\nexport function s3FileCreateMultipartFromJSON(\n  jsonString: string,\n): SafeParseResult<S3FileCreateMultipart, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => S3FileCreateMultipart$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'S3FileCreateMultipart' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;AAGH,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,8BAA8B,EAE9B,+BAA+B,GAChC,MAAM,uBAAuB,CAAC;AAT/B,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;;;AAgBlB,MAAM,mCAAmC,GAI5C,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,KAAK,mMAAC,iCAA8B,CAAC;CAC/C,CAAC,CAAC;AAQI,MAAM,oCAAoC,GAI7C,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,KAAK,mMAAC,kCAA+B,CAAC;CAChD,CAAC,CAAC;AAMG,IAAW,sBAAsB,CAOtC;AAPD,CAAA,SAAiB,sBAAsB;IACrC,mEAAA,EAAqE,CACxD,uBAAA,aAAa,GAAG,mCAAmC,CAAC;IACjE,oEAAA,EAAsE,CACzD,uBAAA,cAAc,GAAG,oCAAoC,CAAC;AAGrE,CAAC,EAPgB,sBAAsB,IAAA,CAAtB,sBAAsB,GAAA,CAAA,CAAA,GAOtC;AAEK,SAAU,2BAA2B,CACzC,qBAA4C;IAE5C,OAAO,IAAI,CAAC,SAAS,CACnB,oCAAoC,CAAC,KAAK,CAAC,qBAAqB,CAAC,CAClE,CAAC;AACJ,CAAC;AAEK,SAAU,6BAA6B,CAC3C,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,kCAAoC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC/D,CAAA,iDAAA,CAAmD,CACpD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 22280, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 22286, "column": 0}, "map": {"version":3,"file":"downloadablefilecreate.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/downloadablefilecreate.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  S3FileCreateMultipart,\n  S3FileCreateMultipart$inboundSchema,\n  S3FileCreateMultipart$Outbound,\n  S3FileCreateMultipart$outboundSchema,\n} from \"./s3filecreatemultipart.js\";\n\n/**\n * Schema to create a file to be associated with the downloadables benefit.\n */\nexport type DownloadableFileCreate = {\n  organizationId?: string | null | undefined;\n  name: string;\n  mimeType: string;\n  size: number;\n  checksumSha256Base64?: string | null | undefined;\n  upload: S3FileCreateMultipart;\n  service?: \"downloadable\" | undefined;\n  version?: string | null | undefined;\n};\n\n/** @internal */\nexport const DownloadableFileCreate$inboundSchema: z.ZodType<\n  DownloadableFileCreate,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  organization_id: z.nullable(z.string()).optional(),\n  name: z.string(),\n  mime_type: z.string(),\n  size: z.number().int(),\n  checksum_sha256_base64: z.nullable(z.string()).optional(),\n  upload: S3FileCreateMultipart$inboundSchema,\n  service: z.literal(\"downloadable\").optional(),\n  version: z.nullable(z.string()).optional(),\n}).transform((v) => {\n  return remap$(v, {\n    \"organization_id\": \"organizationId\",\n    \"mime_type\": \"mimeType\",\n    \"checksum_sha256_base64\": \"checksumSha256Base64\",\n  });\n});\n\n/** @internal */\nexport type DownloadableFileCreate$Outbound = {\n  organization_id?: string | null | undefined;\n  name: string;\n  mime_type: string;\n  size: number;\n  checksum_sha256_base64?: string | null | undefined;\n  upload: S3FileCreateMultipart$Outbound;\n  service: \"downloadable\";\n  version?: string | null | undefined;\n};\n\n/** @internal */\nexport const DownloadableFileCreate$outboundSchema: z.ZodType<\n  DownloadableFileCreate$Outbound,\n  z.ZodTypeDef,\n  DownloadableFileCreate\n> = z.object({\n  organizationId: z.nullable(z.string()).optional(),\n  name: z.string(),\n  mimeType: z.string(),\n  size: z.number().int(),\n  checksumSha256Base64: z.nullable(z.string()).optional(),\n  upload: S3FileCreateMultipart$outboundSchema,\n  service: z.literal(\"downloadable\").default(\"downloadable\" as const),\n  version: z.nullable(z.string()).optional(),\n}).transform((v) => {\n  return remap$(v, {\n    organizationId: \"organization_id\",\n    mimeType: \"mime_type\",\n    checksumSha256Base64: \"checksum_sha256_base64\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace DownloadableFileCreate$ {\n  /** @deprecated use `DownloadableFileCreate$inboundSchema` instead. */\n  export const inboundSchema = DownloadableFileCreate$inboundSchema;\n  /** @deprecated use `DownloadableFileCreate$outboundSchema` instead. */\n  export const outboundSchema = DownloadableFileCreate$outboundSchema;\n  /** @deprecated use `DownloadableFileCreate$Outbound` instead. */\n  export type Outbound = DownloadableFileCreate$Outbound;\n}\n\nexport function downloadableFileCreateToJSON(\n  downloadableFileCreate: DownloadableFileCreate,\n): string {\n  return JSON.stringify(\n    DownloadableFileCreate$outboundSchema.parse(downloadableFileCreate),\n  );\n}\n\nexport function downloadableFileCreateFromJSON(\n  jsonString: string,\n): SafeParseResult<DownloadableFileCreate, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => DownloadableFileCreate$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'DownloadableFileCreate' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 22347, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 22353, "column": 0}, "map": {"version":3,"file":"organizationavatarfilecreate.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/organizationavatarfilecreate.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  S3FileCreateMultipart,\n  S3FileCreateMultipart$inboundSchema,\n  S3FileCreateMultipart$Outbound,\n  S3FileCreateMultipart$outboundSchema,\n} from \"./s3filecreatemultipart.js\";\n\n/**\n * Schema to create a file to be used as an organization avatar.\n */\nexport type OrganizationAvatarFileCreate = {\n  organizationId?: string | null | undefined;\n  name: string;\n  /**\n   * MIME type of the file. Only images are supported for this type of file.\n   */\n  mimeType: string;\n  /**\n   * Size of the file. A maximum of 1 MB is allowed for this type of file.\n   */\n  size: number;\n  checksumSha256Base64?: string | null | undefined;\n  upload: S3FileCreateMultipart;\n  service?: \"organization_avatar\" | undefined;\n  version?: string | null | undefined;\n};\n\n/** @internal */\nexport const OrganizationAvatarFileCreate$inboundSchema: z.ZodType<\n  OrganizationAvatarFileCreate,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  organization_id: z.nullable(z.string()).optional(),\n  name: z.string(),\n  mime_type: z.string(),\n  size: z.number().int(),\n  checksum_sha256_base64: z.nullable(z.string()).optional(),\n  upload: S3FileCreateMultipart$inboundSchema,\n  service: z.literal(\"organization_avatar\").optional(),\n  version: z.nullable(z.string()).optional(),\n}).transform((v) => {\n  return remap$(v, {\n    \"organization_id\": \"organizationId\",\n    \"mime_type\": \"mimeType\",\n    \"checksum_sha256_base64\": \"checksumSha256Base64\",\n  });\n});\n\n/** @internal */\nexport type OrganizationAvatarFileCreate$Outbound = {\n  organization_id?: string | null | undefined;\n  name: string;\n  mime_type: string;\n  size: number;\n  checksum_sha256_base64?: string | null | undefined;\n  upload: S3FileCreateMultipart$Outbound;\n  service: \"organization_avatar\";\n  version?: string | null | undefined;\n};\n\n/** @internal */\nexport const OrganizationAvatarFileCreate$outboundSchema: z.ZodType<\n  OrganizationAvatarFileCreate$Outbound,\n  z.ZodTypeDef,\n  OrganizationAvatarFileCreate\n> = z.object({\n  organizationId: z.nullable(z.string()).optional(),\n  name: z.string(),\n  mimeType: z.string(),\n  size: z.number().int(),\n  checksumSha256Base64: z.nullable(z.string()).optional(),\n  upload: S3FileCreateMultipart$outboundSchema,\n  service: z.literal(\"organization_avatar\").default(\n    \"organization_avatar\" as const,\n  ),\n  version: z.nullable(z.string()).optional(),\n}).transform((v) => {\n  return remap$(v, {\n    organizationId: \"organization_id\",\n    mimeType: \"mime_type\",\n    checksumSha256Base64: \"checksum_sha256_base64\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace OrganizationAvatarFileCreate$ {\n  /** @deprecated use `OrganizationAvatarFileCreate$inboundSchema` instead. */\n  export const inboundSchema = OrganizationAvatarFileCreate$inboundSchema;\n  /** @deprecated use `OrganizationAvatarFileCreate$outboundSchema` instead. */\n  export const outboundSchema = OrganizationAvatarFileCreate$outboundSchema;\n  /** @deprecated use `OrganizationAvatarFileCreate$Outbound` instead. */\n  export type Outbound = OrganizationAvatarFileCreate$Outbound;\n}\n\nexport function organizationAvatarFileCreateToJSON(\n  organizationAvatarFileCreate: OrganizationAvatarFileCreate,\n): string {\n  return JSON.stringify(\n    OrganizationAvatarFileCreate$outboundSchema.parse(\n      organizationAvatarFileCreate,\n    ),\n  );\n}\n\nexport function organizationAvatarFileCreateFromJSON(\n  jsonString: string,\n): SafeParseResult<OrganizationAvatarFileCreate, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => OrganizationAvatarFileCreate$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'OrganizationAvatarFileCreate' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 22414, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 22420, "column": 0}, "map": {"version":3,"file":"productmediafilecreate.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/productmediafilecreate.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  S3FileCreateMultipart,\n  S3FileCreateMultipart$inboundSchema,\n  S3FileCreateMultipart$Outbound,\n  S3FileCreateMultipart$outboundSchema,\n} from \"./s3filecreatemultipart.js\";\n\n/**\n * Schema to create a file to be used as a product media file.\n */\nexport type ProductMediaFileCreate = {\n  organizationId?: string | null | undefined;\n  name: string;\n  /**\n   * MIME type of the file. Only images are supported for this type of file.\n   */\n  mimeType: string;\n  /**\n   * Size of the file. A maximum of 10 MB is allowed for this type of file.\n   */\n  size: number;\n  checksumSha256Base64?: string | null | undefined;\n  upload: S3FileCreateMultipart;\n  service?: \"product_media\" | undefined;\n  version?: string | null | undefined;\n};\n\n/** @internal */\nexport const ProductMediaFileCreate$inboundSchema: z.ZodType<\n  ProductMediaFileCreate,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  organization_id: z.nullable(z.string()).optional(),\n  name: z.string(),\n  mime_type: z.string(),\n  size: z.number().int(),\n  checksum_sha256_base64: z.nullable(z.string()).optional(),\n  upload: S3FileCreateMultipart$inboundSchema,\n  service: z.literal(\"product_media\").optional(),\n  version: z.nullable(z.string()).optional(),\n}).transform((v) => {\n  return remap$(v, {\n    \"organization_id\": \"organizationId\",\n    \"mime_type\": \"mimeType\",\n    \"checksum_sha256_base64\": \"checksumSha256Base64\",\n  });\n});\n\n/** @internal */\nexport type ProductMediaFileCreate$Outbound = {\n  organization_id?: string | null | undefined;\n  name: string;\n  mime_type: string;\n  size: number;\n  checksum_sha256_base64?: string | null | undefined;\n  upload: S3FileCreateMultipart$Outbound;\n  service: \"product_media\";\n  version?: string | null | undefined;\n};\n\n/** @internal */\nexport const ProductMediaFileCreate$outboundSchema: z.ZodType<\n  ProductMediaFileCreate$Outbound,\n  z.ZodTypeDef,\n  ProductMediaFileCreate\n> = z.object({\n  organizationId: z.nullable(z.string()).optional(),\n  name: z.string(),\n  mimeType: z.string(),\n  size: z.number().int(),\n  checksumSha256Base64: z.nullable(z.string()).optional(),\n  upload: S3FileCreateMultipart$outboundSchema,\n  service: z.literal(\"product_media\").default(\"product_media\" as const),\n  version: z.nullable(z.string()).optional(),\n}).transform((v) => {\n  return remap$(v, {\n    organizationId: \"organization_id\",\n    mimeType: \"mime_type\",\n    checksumSha256Base64: \"checksum_sha256_base64\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace ProductMediaFileCreate$ {\n  /** @deprecated use `ProductMediaFileCreate$inboundSchema` instead. */\n  export const inboundSchema = ProductMediaFileCreate$inboundSchema;\n  /** @deprecated use `ProductMediaFileCreate$outboundSchema` instead. */\n  export const outboundSchema = ProductMediaFileCreate$outboundSchema;\n  /** @deprecated use `ProductMediaFileCreate$Outbound` instead. */\n  export type Outbound = ProductMediaFileCreate$Outbound;\n}\n\nexport function productMediaFileCreateToJSON(\n  productMediaFileCreate: ProductMediaFileCreate,\n): string {\n  return JSON.stringify(\n    ProductMediaFileCreate$outboundSchema.parse(productMediaFileCreate),\n  );\n}\n\nexport function productMediaFileCreateFromJSON(\n  jsonString: string,\n): SafeParseResult<ProductMediaFileCreate, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => ProductMediaFileCreate$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'ProductMediaFileCreate' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 22481, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 22487, "column": 0}, "map": {"version":3,"file":"filecreate.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/filecreate.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  DownloadableFileCreate,\n  DownloadableFileCreate$inboundSchema,\n  DownloadableFileCreate$Outbound,\n  DownloadableFileCreate$outboundSchema,\n} from \"./downloadablefilecreate.js\";\nimport {\n  OrganizationAvatarFileCreate,\n  OrganizationAvatarFileCreate$inboundSchema,\n  OrganizationAvatarFileCreate$Outbound,\n  OrganizationAvatarFileCreate$outboundSchema,\n} from \"./organizationavatarfilecreate.js\";\nimport {\n  ProductMediaFileCreate,\n  ProductMediaFileCreate$inboundSchema,\n  ProductMediaFileCreate$Outbound,\n  ProductMediaFileCreate$outboundSchema,\n} from \"./productmediafilecreate.js\";\n\nexport type FileCreate =\n  | (DownloadableFileCreate & { service: \"downloadable\" })\n  | (OrganizationAvatarFileCreate & { service: \"organization_avatar\" })\n  | (ProductMediaFileCreate & { service: \"product_media\" });\n\n/** @internal */\nexport const FileCreate$inboundSchema: z.ZodType<\n  FileCreate,\n  z.ZodTypeDef,\n  unknown\n> = z.union([\n  DownloadableFileCreate$inboundSchema.and(\n    z.object({ service: z.literal(\"downloadable\") }).transform((v) => ({\n      service: v.service,\n    })),\n  ),\n  OrganizationAvatarFileCreate$inboundSchema.and(\n    z.object({ service: z.literal(\"organization_avatar\") }).transform((v) => ({\n      service: v.service,\n    })),\n  ),\n  ProductMediaFileCreate$inboundSchema.and(\n    z.object({ service: z.literal(\"product_media\") }).transform((v) => ({\n      service: v.service,\n    })),\n  ),\n]);\n\n/** @internal */\nexport type FileCreate$Outbound =\n  | (DownloadableFileCreate$Outbound & { service: \"downloadable\" })\n  | (OrganizationAvatarFileCreate$Outbound & { service: \"organization_avatar\" })\n  | (ProductMediaFileCreate$Outbound & { service: \"product_media\" });\n\n/** @internal */\nexport const FileCreate$outboundSchema: z.ZodType<\n  FileCreate$Outbound,\n  z.ZodTypeDef,\n  FileCreate\n> = z.union([\n  DownloadableFileCreate$outboundSchema.and(\n    z.object({ service: z.literal(\"downloadable\") }).transform((v) => ({\n      service: v.service,\n    })),\n  ),\n  OrganizationAvatarFileCreate$outboundSchema.and(\n    z.object({ service: z.literal(\"organization_avatar\") }).transform((v) => ({\n      service: v.service,\n    })),\n  ),\n  ProductMediaFileCreate$outboundSchema.and(\n    z.object({ service: z.literal(\"product_media\") }).transform((v) => ({\n      service: v.service,\n    })),\n  ),\n]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace FileCreate$ {\n  /** @deprecated use `FileCreate$inboundSchema` instead. */\n  export const inboundSchema = FileCreate$inboundSchema;\n  /** @deprecated use `FileCreate$outboundSchema` instead. */\n  export const outboundSchema = FileCreate$outboundSchema;\n  /** @deprecated use `FileCreate$Outbound` instead. */\n  export type Outbound = FileCreate$Outbound;\n}\n\nexport function fileCreateToJSON(fileCreate: FileCreate): string {\n  return JSON.stringify(FileCreate$outboundSchema.parse(fileCreate));\n}\n\nexport function fileCreateFromJSON(\n  jsonString: string,\n): SafeParseResult<FileCreate, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => FileCreate$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'FileCreate' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 22552, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 22558, "column": 0}, "map": {"version":3,"file":"s3fileuploadpart.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/s3fileuploadpart.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport type S3FileUploadPart = {\n  number: number;\n  chunkStart: number;\n  chunkEnd: number;\n  checksumSha256Base64?: string | null | undefined;\n  url: string;\n  expiresAt: Date;\n  headers?: { [k: string]: string } | undefined;\n};\n\n/** @internal */\nexport const S3FileUploadPart$inboundSchema: z.ZodType<\n  S3FileUploadPart,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  number: z.number().int(),\n  chunk_start: z.number().int(),\n  chunk_end: z.number().int(),\n  checksum_sha256_base64: z.nullable(z.string()).optional(),\n  url: z.string(),\n  expires_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  headers: z.record(z.string()).optional(),\n}).transform((v) => {\n  return remap$(v, {\n    \"chunk_start\": \"chunkStart\",\n    \"chunk_end\": \"chunkEnd\",\n    \"checksum_sha256_base64\": \"checksumSha256Base64\",\n    \"expires_at\": \"expiresAt\",\n  });\n});\n\n/** @internal */\nexport type S3FileUploadPart$Outbound = {\n  number: number;\n  chunk_start: number;\n  chunk_end: number;\n  checksum_sha256_base64?: string | null | undefined;\n  url: string;\n  expires_at: string;\n  headers?: { [k: string]: string } | undefined;\n};\n\n/** @internal */\nexport const S3FileUploadPart$outboundSchema: z.ZodType<\n  S3FileUploadPart$Outbound,\n  z.ZodTypeDef,\n  S3FileUploadPart\n> = z.object({\n  number: z.number().int(),\n  chunkStart: z.number().int(),\n  chunkEnd: z.number().int(),\n  checksumSha256Base64: z.nullable(z.string()).optional(),\n  url: z.string(),\n  expiresAt: z.date().transform(v => v.toISOString()),\n  headers: z.record(z.string()).optional(),\n}).transform((v) => {\n  return remap$(v, {\n    chunkStart: \"chunk_start\",\n    chunkEnd: \"chunk_end\",\n    checksumSha256Base64: \"checksum_sha256_base64\",\n    expiresAt: \"expires_at\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace S3FileUploadPart$ {\n  /** @deprecated use `S3FileUploadPart$inboundSchema` instead. */\n  export const inboundSchema = S3FileUploadPart$inboundSchema;\n  /** @deprecated use `S3FileUploadPart$outboundSchema` instead. */\n  export const outboundSchema = S3FileUploadPart$outboundSchema;\n  /** @deprecated use `S3FileUploadPart$Outbound` instead. */\n  export type Outbound = S3FileUploadPart$Outbound;\n}\n\nexport function s3FileUploadPartToJSON(\n  s3FileUploadPart: S3FileUploadPart,\n): string {\n  return JSON.stringify(\n    S3FileUploadPart$outboundSchema.parse(s3FileUploadPart),\n  );\n}\n\nexport function s3FileUploadPartFromJSON(\n  jsonString: string,\n): SafeParseResult<S3FileUploadPart, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => S3FileUploadPart$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'S3FileUploadPart' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 22619, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 22625, "column": 0}, "map": {"version":3,"file":"s3fileuploadmultipart.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/s3fileuploadmultipart.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  S3FileUploadPart,\n  S3FileUploadPart$inboundSchema,\n  S3FileUploadPart$Outbound,\n  S3FileUploadPart$outboundSchema,\n} from \"./s3fileuploadpart.js\";\n\nexport type S3FileUploadMultipart = {\n  id: string;\n  path: string;\n  parts: Array<S3FileUploadPart>;\n};\n\n/** @internal */\nexport const S3FileUploadMultipart$inboundSchema: z.ZodType<\n  S3FileUploadMultipart,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  id: z.string(),\n  path: z.string(),\n  parts: z.array(S3FileUploadPart$inboundSchema),\n});\n\n/** @internal */\nexport type S3FileUploadMultipart$Outbound = {\n  id: string;\n  path: string;\n  parts: Array<S3FileUploadPart$Outbound>;\n};\n\n/** @internal */\nexport const S3FileUploadMultipart$outboundSchema: z.ZodType<\n  S3FileUploadMultipart$Outbound,\n  z.ZodTypeDef,\n  S3FileUploadMultipart\n> = z.object({\n  id: z.string(),\n  path: z.string(),\n  parts: z.array(S3FileUploadPart$outboundSchema),\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace S3FileUploadMultipart$ {\n  /** @deprecated use `S3FileUploadMultipart$inboundSchema` instead. */\n  export const inboundSchema = S3FileUploadMultipart$inboundSchema;\n  /** @deprecated use `S3FileUploadMultipart$outboundSchema` instead. */\n  export const outboundSchema = S3FileUploadMultipart$outboundSchema;\n  /** @deprecated use `S3FileUploadMultipart$Outbound` instead. */\n  export type Outbound = S3FileUploadMultipart$Outbound;\n}\n\nexport function s3FileUploadMultipartToJSON(\n  s3FileUploadMultipart: S3FileUploadMultipart,\n): string {\n  return JSON.stringify(\n    S3FileUploadMultipart$outboundSchema.parse(s3FileUploadMultipart),\n  );\n}\n\nexport function s3FileUploadMultipartFromJSON(\n  jsonString: string,\n): SafeParseResult<S3FileUploadMultipart, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => S3FileUploadMultipart$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'S3FileUploadMultipart' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,8BAA8B,EAE9B,+BAA+B,GAChC,MAAM,uBAAuB,CAAC;;;;;AASxB,MAAM,mCAAmC,GAI5C,CAAC,6IAAC,MAAM,CAAC;IACX,EAAE,EAAE,CAAC,6IAAC,MAAM,EAAE;IACd,IAAI,EAAE,CAAC,6IAAC,MAAM,EAAE;IAChB,KAAK,EAAE,CAAC,6IAAC,KAAK,mMAAC,iCAA8B,CAAC;CAC/C,CAAC,CAAC;AAUI,MAAM,oCAAoC,GAI7C,CAAC,6IAAC,MAAM,CAAC;IACX,EAAE,EAAE,CAAC,6IAAC,MAAM,EAAE;IACd,IAAI,EAAE,CAAC,6IAAC,MAAM,EAAE;IAChB,KAAK,EAAE,CAAC,6IAAC,KAAK,mMAAC,kCAA+B,CAAC;CAChD,CAAC,CAAC;AAMG,IAAW,sBAAsB,CAOtC;AAPD,CAAA,SAAiB,sBAAsB;IACrC,mEAAA,EAAqE,CACxD,uBAAA,aAAa,GAAG,mCAAmC,CAAC;IACjE,oEAAA,EAAsE,CACzD,uBAAA,cAAc,GAAG,oCAAoC,CAAC;AAGrE,CAAC,EAPgB,sBAAsB,IAAA,CAAtB,sBAAsB,GAAA,CAAA,CAAA,GAOtC;AAEK,SAAU,2BAA2B,CACzC,qBAA4C;IAE5C,OAAO,IAAI,CAAC,SAAS,CACnB,oCAAoC,CAAC,KAAK,CAAC,qBAAqB,CAAC,CAClE,CAAC;AACJ,CAAC;AAEK,SAAU,6BAA6B,CAC3C,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,kCAAoC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC/D,CAAA,iDAAA,CAAmD,CACpD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 22662, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 22668, "column": 0}, "map": {"version":3,"file":"fileupload.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/fileupload.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  FileServiceTypes,\n  FileServiceTypes$inboundSchema,\n  FileServiceTypes$outboundSchema,\n} from \"./fileservicetypes.js\";\nimport {\n  S3FileUploadMultipart,\n  S3FileUploadMultipart$inboundSchema,\n  S3FileUploadMultipart$Outbound,\n  S3FileUploadMultipart$outboundSchema,\n} from \"./s3fileuploadmultipart.js\";\n\nexport type FileUpload = {\n  /**\n   * The ID of the object.\n   */\n  id: string;\n  organizationId: string;\n  name: string;\n  path: string;\n  mimeType: string;\n  size: number;\n  storageVersion: string | null;\n  checksumEtag: string | null;\n  checksumSha256Base64: string | null;\n  checksumSha256Hex: string | null;\n  lastModifiedAt: Date | null;\n  upload: S3FileUploadMultipart;\n  version: string | null;\n  isUploaded?: boolean | undefined;\n  service: FileServiceTypes;\n  sizeReadable: string;\n};\n\n/** @internal */\nexport const FileUpload$inboundSchema: z.ZodType<\n  FileUpload,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  id: z.string(),\n  organization_id: z.string(),\n  name: z.string(),\n  path: z.string(),\n  mime_type: z.string(),\n  size: z.number().int(),\n  storage_version: z.nullable(z.string()),\n  checksum_etag: z.nullable(z.string()),\n  checksum_sha256_base64: z.nullable(z.string()),\n  checksum_sha256_hex: z.nullable(z.string()),\n  last_modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  upload: S3FileUploadMultipart$inboundSchema,\n  version: z.nullable(z.string()),\n  is_uploaded: z.boolean().default(false),\n  service: FileServiceTypes$inboundSchema,\n  size_readable: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    \"organization_id\": \"organizationId\",\n    \"mime_type\": \"mimeType\",\n    \"storage_version\": \"storageVersion\",\n    \"checksum_etag\": \"checksumEtag\",\n    \"checksum_sha256_base64\": \"checksumSha256Base64\",\n    \"checksum_sha256_hex\": \"checksumSha256Hex\",\n    \"last_modified_at\": \"lastModifiedAt\",\n    \"is_uploaded\": \"isUploaded\",\n    \"size_readable\": \"sizeReadable\",\n  });\n});\n\n/** @internal */\nexport type FileUpload$Outbound = {\n  id: string;\n  organization_id: string;\n  name: string;\n  path: string;\n  mime_type: string;\n  size: number;\n  storage_version: string | null;\n  checksum_etag: string | null;\n  checksum_sha256_base64: string | null;\n  checksum_sha256_hex: string | null;\n  last_modified_at: string | null;\n  upload: S3FileUploadMultipart$Outbound;\n  version: string | null;\n  is_uploaded: boolean;\n  service: string;\n  size_readable: string;\n};\n\n/** @internal */\nexport const FileUpload$outboundSchema: z.ZodType<\n  FileUpload$Outbound,\n  z.ZodTypeDef,\n  FileUpload\n> = z.object({\n  id: z.string(),\n  organizationId: z.string(),\n  name: z.string(),\n  path: z.string(),\n  mimeType: z.string(),\n  size: z.number().int(),\n  storageVersion: z.nullable(z.string()),\n  checksumEtag: z.nullable(z.string()),\n  checksumSha256Base64: z.nullable(z.string()),\n  checksumSha256Hex: z.nullable(z.string()),\n  lastModifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  upload: S3FileUploadMultipart$outboundSchema,\n  version: z.nullable(z.string()),\n  isUploaded: z.boolean().default(false),\n  service: FileServiceTypes$outboundSchema,\n  sizeReadable: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    organizationId: \"organization_id\",\n    mimeType: \"mime_type\",\n    storageVersion: \"storage_version\",\n    checksumEtag: \"checksum_etag\",\n    checksumSha256Base64: \"checksum_sha256_base64\",\n    checksumSha256Hex: \"checksum_sha256_hex\",\n    lastModifiedAt: \"last_modified_at\",\n    isUploaded: \"is_uploaded\",\n    sizeReadable: \"size_readable\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace FileUpload$ {\n  /** @deprecated use `FileUpload$inboundSchema` instead. */\n  export const inboundSchema = FileUpload$inboundSchema;\n  /** @deprecated use `FileUpload$outboundSchema` instead. */\n  export const outboundSchema = FileUpload$outboundSchema;\n  /** @deprecated use `FileUpload$Outbound` instead. */\n  export type Outbound = FileUpload$Outbound;\n}\n\nexport function fileUploadToJSON(fileUpload: FileUpload): string {\n  return JSON.stringify(FileUpload$outboundSchema.parse(fileUpload));\n}\n\nexport function fileUploadFromJSON(\n  jsonString: string,\n): SafeParseResult<FileUpload, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => FileUpload$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'FileUpload' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 22761, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 22767, "column": 0}, "map": {"version":3,"file":"downloadablefileread.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/downloadablefileread.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\n/**\n * File to be associated with the downloadables benefit.\n */\nexport type DownloadableFileRead = {\n  /**\n   * The ID of the object.\n   */\n  id: string;\n  organizationId: string;\n  name: string;\n  path: string;\n  mimeType: string;\n  size: number;\n  storageVersion: string | null;\n  checksumEtag: string | null;\n  checksumSha256Base64: string | null;\n  checksumSha256Hex: string | null;\n  lastModifiedAt: Date | null;\n  version: string | null;\n  service?: \"downloadable\" | undefined;\n  isUploaded: boolean;\n  createdAt: Date;\n  sizeReadable: string;\n};\n\n/** @internal */\nexport const DownloadableFileRead$inboundSchema: z.ZodType<\n  DownloadableFileRead,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  id: z.string(),\n  organization_id: z.string(),\n  name: z.string(),\n  path: z.string(),\n  mime_type: z.string(),\n  size: z.number().int(),\n  storage_version: z.nullable(z.string()),\n  checksum_etag: z.nullable(z.string()),\n  checksum_sha256_base64: z.nullable(z.string()),\n  checksum_sha256_hex: z.nullable(z.string()),\n  last_modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  version: z.nullable(z.string()),\n  service: z.literal(\"downloadable\").optional(),\n  is_uploaded: z.boolean(),\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  size_readable: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    \"organization_id\": \"organizationId\",\n    \"mime_type\": \"mimeType\",\n    \"storage_version\": \"storageVersion\",\n    \"checksum_etag\": \"checksumEtag\",\n    \"checksum_sha256_base64\": \"checksumSha256Base64\",\n    \"checksum_sha256_hex\": \"checksumSha256Hex\",\n    \"last_modified_at\": \"lastModifiedAt\",\n    \"is_uploaded\": \"isUploaded\",\n    \"created_at\": \"createdAt\",\n    \"size_readable\": \"sizeReadable\",\n  });\n});\n\n/** @internal */\nexport type DownloadableFileRead$Outbound = {\n  id: string;\n  organization_id: string;\n  name: string;\n  path: string;\n  mime_type: string;\n  size: number;\n  storage_version: string | null;\n  checksum_etag: string | null;\n  checksum_sha256_base64: string | null;\n  checksum_sha256_hex: string | null;\n  last_modified_at: string | null;\n  version: string | null;\n  service: \"downloadable\";\n  is_uploaded: boolean;\n  created_at: string;\n  size_readable: string;\n};\n\n/** @internal */\nexport const DownloadableFileRead$outboundSchema: z.ZodType<\n  DownloadableFileRead$Outbound,\n  z.ZodTypeDef,\n  DownloadableFileRead\n> = z.object({\n  id: z.string(),\n  organizationId: z.string(),\n  name: z.string(),\n  path: z.string(),\n  mimeType: z.string(),\n  size: z.number().int(),\n  storageVersion: z.nullable(z.string()),\n  checksumEtag: z.nullable(z.string()),\n  checksumSha256Base64: z.nullable(z.string()),\n  checksumSha256Hex: z.nullable(z.string()),\n  lastModifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  version: z.nullable(z.string()),\n  service: z.literal(\"downloadable\").default(\"downloadable\" as const),\n  isUploaded: z.boolean(),\n  createdAt: z.date().transform(v => v.toISOString()),\n  sizeReadable: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    organizationId: \"organization_id\",\n    mimeType: \"mime_type\",\n    storageVersion: \"storage_version\",\n    checksumEtag: \"checksum_etag\",\n    checksumSha256Base64: \"checksum_sha256_base64\",\n    checksumSha256Hex: \"checksum_sha256_hex\",\n    lastModifiedAt: \"last_modified_at\",\n    isUploaded: \"is_uploaded\",\n    createdAt: \"created_at\",\n    sizeReadable: \"size_readable\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace DownloadableFileRead$ {\n  /** @deprecated use `DownloadableFileRead$inboundSchema` instead. */\n  export const inboundSchema = DownloadableFileRead$inboundSchema;\n  /** @deprecated use `DownloadableFileRead$outboundSchema` instead. */\n  export const outboundSchema = DownloadableFileRead$outboundSchema;\n  /** @deprecated use `DownloadableFileRead$Outbound` instead. */\n  export type Outbound = DownloadableFileRead$Outbound;\n}\n\nexport function downloadableFileReadToJSON(\n  downloadableFileRead: DownloadableFileRead,\n): string {\n  return JSON.stringify(\n    DownloadableFileRead$outboundSchema.parse(downloadableFileRead),\n  );\n}\n\nexport function downloadableFileReadFromJSON(\n  jsonString: string,\n): SafeParseResult<DownloadableFileRead, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => DownloadableFileRead$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'DownloadableFileRead' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 22860, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 22866, "column": 0}, "map": {"version":3,"file":"organizationavatarfileread.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/organizationavatarfileread.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\n/**\n * File to be used as an organization avatar.\n */\nexport type OrganizationAvatarFileRead = {\n  /**\n   * The ID of the object.\n   */\n  id: string;\n  organizationId: string;\n  name: string;\n  path: string;\n  mimeType: string;\n  size: number;\n  storageVersion: string | null;\n  checksumEtag: string | null;\n  checksumSha256Base64: string | null;\n  checksumSha256Hex: string | null;\n  lastModifiedAt: Date | null;\n  version: string | null;\n  service?: \"organization_avatar\" | undefined;\n  isUploaded: boolean;\n  createdAt: Date;\n  sizeReadable: string;\n  publicUrl: string;\n};\n\n/** @internal */\nexport const OrganizationAvatarFileRead$inboundSchema: z.ZodType<\n  OrganizationAvatarFileRead,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  id: z.string(),\n  organization_id: z.string(),\n  name: z.string(),\n  path: z.string(),\n  mime_type: z.string(),\n  size: z.number().int(),\n  storage_version: z.nullable(z.string()),\n  checksum_etag: z.nullable(z.string()),\n  checksum_sha256_base64: z.nullable(z.string()),\n  checksum_sha256_hex: z.nullable(z.string()),\n  last_modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  version: z.nullable(z.string()),\n  service: z.literal(\"organization_avatar\").optional(),\n  is_uploaded: z.boolean(),\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  size_readable: z.string(),\n  public_url: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    \"organization_id\": \"organizationId\",\n    \"mime_type\": \"mimeType\",\n    \"storage_version\": \"storageVersion\",\n    \"checksum_etag\": \"checksumEtag\",\n    \"checksum_sha256_base64\": \"checksumSha256Base64\",\n    \"checksum_sha256_hex\": \"checksumSha256Hex\",\n    \"last_modified_at\": \"lastModifiedAt\",\n    \"is_uploaded\": \"isUploaded\",\n    \"created_at\": \"createdAt\",\n    \"size_readable\": \"sizeReadable\",\n    \"public_url\": \"publicUrl\",\n  });\n});\n\n/** @internal */\nexport type OrganizationAvatarFileRead$Outbound = {\n  id: string;\n  organization_id: string;\n  name: string;\n  path: string;\n  mime_type: string;\n  size: number;\n  storage_version: string | null;\n  checksum_etag: string | null;\n  checksum_sha256_base64: string | null;\n  checksum_sha256_hex: string | null;\n  last_modified_at: string | null;\n  version: string | null;\n  service: \"organization_avatar\";\n  is_uploaded: boolean;\n  created_at: string;\n  size_readable: string;\n  public_url: string;\n};\n\n/** @internal */\nexport const OrganizationAvatarFileRead$outboundSchema: z.ZodType<\n  OrganizationAvatarFileRead$Outbound,\n  z.ZodTypeDef,\n  OrganizationAvatarFileRead\n> = z.object({\n  id: z.string(),\n  organizationId: z.string(),\n  name: z.string(),\n  path: z.string(),\n  mimeType: z.string(),\n  size: z.number().int(),\n  storageVersion: z.nullable(z.string()),\n  checksumEtag: z.nullable(z.string()),\n  checksumSha256Base64: z.nullable(z.string()),\n  checksumSha256Hex: z.nullable(z.string()),\n  lastModifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  version: z.nullable(z.string()),\n  service: z.literal(\"organization_avatar\").default(\n    \"organization_avatar\" as const,\n  ),\n  isUploaded: z.boolean(),\n  createdAt: z.date().transform(v => v.toISOString()),\n  sizeReadable: z.string(),\n  publicUrl: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    organizationId: \"organization_id\",\n    mimeType: \"mime_type\",\n    storageVersion: \"storage_version\",\n    checksumEtag: \"checksum_etag\",\n    checksumSha256Base64: \"checksum_sha256_base64\",\n    checksumSha256Hex: \"checksum_sha256_hex\",\n    lastModifiedAt: \"last_modified_at\",\n    isUploaded: \"is_uploaded\",\n    createdAt: \"created_at\",\n    sizeReadable: \"size_readable\",\n    publicUrl: \"public_url\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace OrganizationAvatarFileRead$ {\n  /** @deprecated use `OrganizationAvatarFileRead$inboundSchema` instead. */\n  export const inboundSchema = OrganizationAvatarFileRead$inboundSchema;\n  /** @deprecated use `OrganizationAvatarFileRead$outboundSchema` instead. */\n  export const outboundSchema = OrganizationAvatarFileRead$outboundSchema;\n  /** @deprecated use `OrganizationAvatarFileRead$Outbound` instead. */\n  export type Outbound = OrganizationAvatarFileRead$Outbound;\n}\n\nexport function organizationAvatarFileReadToJSON(\n  organizationAvatarFileRead: OrganizationAvatarFileRead,\n): string {\n  return JSON.stringify(\n    OrganizationAvatarFileRead$outboundSchema.parse(organizationAvatarFileRead),\n  );\n}\n\nexport function organizationAvatarFileReadFromJSON(\n  jsonString: string,\n): SafeParseResult<OrganizationAvatarFileRead, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => OrganizationAvatarFileRead$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'OrganizationAvatarFileRead' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 22963, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 22969, "column": 0}, "map": {"version":3,"file":"listresourcefileread.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/listresourcefileread.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  DownloadableFileRead,\n  DownloadableFileRead$inboundSchema,\n  DownloadableFileRead$Outbound,\n  DownloadableFileRead$outboundSchema,\n} from \"./downloadablefileread.js\";\nimport {\n  OrganizationAvatarFileRead,\n  OrganizationAvatarFileRead$inboundSchema,\n  OrganizationAvatarFileRead$Outbound,\n  OrganizationAvatarFileRead$outboundSchema,\n} from \"./organizationavatarfileread.js\";\nimport {\n  Pagination,\n  Pagination$inboundSchema,\n  Pagination$Outbound,\n  Pagination$outboundSchema,\n} from \"./pagination.js\";\nimport {\n  ProductMediaFileRead,\n  ProductMediaFileRead$inboundSchema,\n  ProductMediaFileRead$Outbound,\n  ProductMediaFileRead$outboundSchema,\n} from \"./productmediafileread.js\";\n\nexport type FileRead =\n  | (DownloadableFileRead & { service: \"downloadable\" })\n  | (OrganizationAvatarFileRead & { service: \"organization_avatar\" })\n  | (ProductMediaFileRead & { service: \"product_media\" });\n\nexport type ListResourceFileRead = {\n  items: Array<\n    | (DownloadableFileRead & { service: \"downloadable\" })\n    | (OrganizationAvatarFileRead & { service: \"organization_avatar\" })\n    | (ProductMediaFileRead & { service: \"product_media\" })\n  >;\n  pagination: Pagination;\n};\n\n/** @internal */\nexport const FileRead$inboundSchema: z.ZodType<\n  FileRead,\n  z.ZodTypeDef,\n  unknown\n> = z.union([\n  DownloadableFileRead$inboundSchema.and(\n    z.object({ service: z.literal(\"downloadable\") }).transform((v) => ({\n      service: v.service,\n    })),\n  ),\n  OrganizationAvatarFileRead$inboundSchema.and(\n    z.object({ service: z.literal(\"organization_avatar\") }).transform((v) => ({\n      service: v.service,\n    })),\n  ),\n  ProductMediaFileRead$inboundSchema.and(\n    z.object({ service: z.literal(\"product_media\") }).transform((v) => ({\n      service: v.service,\n    })),\n  ),\n]);\n\n/** @internal */\nexport type FileRead$Outbound =\n  | (DownloadableFileRead$Outbound & { service: \"downloadable\" })\n  | (OrganizationAvatarFileRead$Outbound & { service: \"organization_avatar\" })\n  | (ProductMediaFileRead$Outbound & { service: \"product_media\" });\n\n/** @internal */\nexport const FileRead$outboundSchema: z.ZodType<\n  FileRead$Outbound,\n  z.ZodTypeDef,\n  FileRead\n> = z.union([\n  DownloadableFileRead$outboundSchema.and(\n    z.object({ service: z.literal(\"downloadable\") }).transform((v) => ({\n      service: v.service,\n    })),\n  ),\n  OrganizationAvatarFileRead$outboundSchema.and(\n    z.object({ service: z.literal(\"organization_avatar\") }).transform((v) => ({\n      service: v.service,\n    })),\n  ),\n  ProductMediaFileRead$outboundSchema.and(\n    z.object({ service: z.literal(\"product_media\") }).transform((v) => ({\n      service: v.service,\n    })),\n  ),\n]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace FileRead$ {\n  /** @deprecated use `FileRead$inboundSchema` instead. */\n  export const inboundSchema = FileRead$inboundSchema;\n  /** @deprecated use `FileRead$outboundSchema` instead. */\n  export const outboundSchema = FileRead$outboundSchema;\n  /** @deprecated use `FileRead$Outbound` instead. */\n  export type Outbound = FileRead$Outbound;\n}\n\nexport function fileReadToJSON(fileRead: FileRead): string {\n  return JSON.stringify(FileRead$outboundSchema.parse(fileRead));\n}\n\nexport function fileReadFromJSON(\n  jsonString: string,\n): SafeParseResult<FileRead, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => FileRead$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'FileRead' from JSON`,\n  );\n}\n\n/** @internal */\nexport const ListResourceFileRead$inboundSchema: z.ZodType<\n  ListResourceFileRead,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  items: z.array(\n    z.union([\n      DownloadableFileRead$inboundSchema.and(\n        z.object({ service: z.literal(\"downloadable\") }).transform((v) => ({\n          service: v.service,\n        })),\n      ),\n      OrganizationAvatarFileRead$inboundSchema.and(\n        z.object({ service: z.literal(\"organization_avatar\") }).transform((\n          v,\n        ) => ({ service: v.service })),\n      ),\n      ProductMediaFileRead$inboundSchema.and(\n        z.object({ service: z.literal(\"product_media\") }).transform((v) => ({\n          service: v.service,\n        })),\n      ),\n    ]),\n  ),\n  pagination: Pagination$inboundSchema,\n});\n\n/** @internal */\nexport type ListResourceFileRead$Outbound = {\n  items: Array<\n    | (DownloadableFileRead$Outbound & { service: \"downloadable\" })\n    | (OrganizationAvatarFileRead$Outbound & { service: \"organization_avatar\" })\n    | (ProductMediaFileRead$Outbound & { service: \"product_media\" })\n  >;\n  pagination: Pagination$Outbound;\n};\n\n/** @internal */\nexport const ListResourceFileRead$outboundSchema: z.ZodType<\n  ListResourceFileRead$Outbound,\n  z.ZodTypeDef,\n  ListResourceFileRead\n> = z.object({\n  items: z.array(\n    z.union([\n      DownloadableFileRead$outboundSchema.and(\n        z.object({ service: z.literal(\"downloadable\") }).transform((v) => ({\n          service: v.service,\n        })),\n      ),\n      OrganizationAvatarFileRead$outboundSchema.and(\n        z.object({ service: z.literal(\"organization_avatar\") }).transform((\n          v,\n        ) => ({ service: v.service })),\n      ),\n      ProductMediaFileRead$outboundSchema.and(\n        z.object({ service: z.literal(\"product_media\") }).transform((v) => ({\n          service: v.service,\n        })),\n      ),\n    ]),\n  ),\n  pagination: Pagination$outboundSchema,\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace ListResourceFileRead$ {\n  /** @deprecated use `ListResourceFileRead$inboundSchema` instead. */\n  export const inboundSchema = ListResourceFileRead$inboundSchema;\n  /** @deprecated use `ListResourceFileRead$outboundSchema` instead. */\n  export const outboundSchema = ListResourceFileRead$outboundSchema;\n  /** @deprecated use `ListResourceFileRead$Outbound` instead. */\n  export type Outbound = ListResourceFileRead$Outbound;\n}\n\nexport function listResourceFileReadToJSON(\n  listResourceFileRead: ListResourceFileRead,\n): string {\n  return JSON.stringify(\n    ListResourceFileRead$outboundSchema.parse(listResourceFileRead),\n  );\n}\n\nexport function listResourceFileReadFromJSON(\n  jsonString: string,\n): SafeParseResult<ListResourceFileRead, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => ListResourceFileRead$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'ListResourceFileRead' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 23092, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23098, "column": 0}, "map": {"version":3,"file":"filepatch.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/filepatch.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport type FilePatch = {\n  name?: string | null | undefined;\n  version?: string | null | undefined;\n};\n\n/** @internal */\nexport const FilePatch$inboundSchema: z.ZodType<\n  FilePatch,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  name: z.nullable(z.string()).optional(),\n  version: z.nullable(z.string()).optional(),\n});\n\n/** @internal */\nexport type FilePatch$Outbound = {\n  name?: string | null | undefined;\n  version?: string | null | undefined;\n};\n\n/** @internal */\nexport const FilePatch$outboundSchema: z.ZodType<\n  FilePatch$Outbound,\n  z.ZodTypeDef,\n  FilePatch\n> = z.object({\n  name: z.nullable(z.string()).optional(),\n  version: z.nullable(z.string()).optional(),\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace FilePatch$ {\n  /** @deprecated use `FilePatch$inboundSchema` instead. */\n  export const inboundSchema = FilePatch$inboundSchema;\n  /** @deprecated use `FilePatch$outboundSchema` instead. */\n  export const outboundSchema = FilePatch$outboundSchema;\n  /** @deprecated use `FilePatch$Outbound` instead. */\n  export type Outbound = FilePatch$Outbound;\n}\n\nexport function filePatchToJSON(filePatch: FilePatch): string {\n  return JSON.stringify(FilePatch$outboundSchema.parse(filePatch));\n}\n\nexport function filePatchFromJSON(\n  jsonString: string,\n): SafeParseResult<FilePatch, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => FilePatch$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'FilePatch' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;;;;AAU1C,MAAM,uBAAuB,GAIhC,CAAC,6IAAC,MAAM,CAAC;IACX,IAAI,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;IACvC,OAAO,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;CAC3C,CAAC,CAAC;AASI,MAAM,wBAAwB,GAIjC,CAAC,6IAAC,MAAM,CAAC;IACX,IAAI,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;IACvC,OAAO,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;CAC3C,CAAC,CAAC;AAMG,IAAW,UAAU,CAO1B;AAPD,CAAA,SAAiB,UAAU;IACzB,uDAAA,EAAyD,CAC5C,WAAA,aAAa,GAAG,uBAAuB,CAAC;IACrD,wDAAA,EAA0D,CAC7C,WAAA,cAAc,GAAG,wBAAwB,CAAC;AAGzD,CAAC,EAPgB,UAAU,IAAA,CAAV,UAAU,GAAA,CAAA,CAAA,GAO1B;AAEK,SAAU,eAAe,CAAC,SAAoB;IAClD,OAAO,IAAI,CAAC,SAAS,CAAC,wBAAwB,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;AACnE,CAAC;AAEK,SAAU,iBAAiB,CAC/B,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,sBAAwB,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACnD,CAAA,qCAAA,CAAuC,CACxC,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 23131, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23137, "column": 0}, "map": {"version":3,"file":"s3fileuploadcompletedpart.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/s3fileuploadcompletedpart.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport type S3FileUploadCompletedPart = {\n  number: number;\n  checksumEtag: string;\n  checksumSha256Base64: string | null;\n};\n\n/** @internal */\nexport const S3FileUploadCompletedPart$inboundSchema: z.ZodType<\n  S3FileUploadCompletedPart,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  number: z.number().int(),\n  checksum_etag: z.string(),\n  checksum_sha256_base64: z.nullable(z.string()),\n}).transform((v) => {\n  return remap$(v, {\n    \"checksum_etag\": \"checksumEtag\",\n    \"checksum_sha256_base64\": \"checksumSha256Base64\",\n  });\n});\n\n/** @internal */\nexport type S3FileUploadCompletedPart$Outbound = {\n  number: number;\n  checksum_etag: string;\n  checksum_sha256_base64: string | null;\n};\n\n/** @internal */\nexport const S3FileUploadCompletedPart$outboundSchema: z.ZodType<\n  S3FileUploadCompletedPart$Outbound,\n  z.ZodTypeDef,\n  S3FileUploadCompletedPart\n> = z.object({\n  number: z.number().int(),\n  checksumEtag: z.string(),\n  checksumSha256Base64: z.nullable(z.string()),\n}).transform((v) => {\n  return remap$(v, {\n    checksumEtag: \"checksum_etag\",\n    checksumSha256Base64: \"checksum_sha256_base64\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace S3FileUploadCompletedPart$ {\n  /** @deprecated use `S3FileUploadCompletedPart$inboundSchema` instead. */\n  export const inboundSchema = S3FileUploadCompletedPart$inboundSchema;\n  /** @deprecated use `S3FileUploadCompletedPart$outboundSchema` instead. */\n  export const outboundSchema = S3FileUploadCompletedPart$outboundSchema;\n  /** @deprecated use `S3FileUploadCompletedPart$Outbound` instead. */\n  export type Outbound = S3FileUploadCompletedPart$Outbound;\n}\n\nexport function s3FileUploadCompletedPartToJSON(\n  s3FileUploadCompletedPart: S3FileUploadCompletedPart,\n): string {\n  return JSON.stringify(\n    S3FileUploadCompletedPart$outboundSchema.parse(s3FileUploadCompletedPart),\n  );\n}\n\nexport function s3FileUploadCompletedPartFromJSON(\n  jsonString: string,\n): SafeParseResult<S3FileUploadCompletedPart, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => S3FileUploadCompletedPart$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'S3FileUploadCompletedPart' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;;;;;AAW1C,MAAM,uCAAuC,GAIhD,CAAC,6IAAC,MAAM,CAAC;IACX,MAAM,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IACxB,aAAa,EAAE,CAAC,6IAAC,MAAM,EAAE;IACzB,sBAAsB,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;CAC/C,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,eAAe,EAAE,cAAc;QAC/B,wBAAwB,EAAE,sBAAsB;KACjD,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAUI,MAAM,wCAAwC,GAIjD,CAAC,6IAAC,MAAM,CAAC;IACX,MAAM,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IACxB,YAAY,EAAE,CAAC,6IAAC,MAAM,EAAE;IACxB,oBAAoB,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;CAC7C,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAM,AAAN,EAAO,CAAC,EAAE;QACf,YAAY,EAAE,eAAe;QAC7B,oBAAoB,EAAE,wBAAwB;KAC/C,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,0BAA0B,CAO1C;AAPD,CAAA,SAAiB,0BAA0B;IACzC,uEAAA,EAAyE,CAC5D,2BAAA,aAAa,GAAG,uCAAuC,CAAC;IACrE,wEAAA,EAA0E,CAC7D,2BAAA,cAAc,GAAG,wCAAwC,CAAC;AAGzE,CAAC,EAPgB,0BAA0B,IAAA,CAA1B,0BAA0B,GAAA,CAAA,CAAA,GAO1C;AAEK,SAAU,+BAA+B,CAC7C,yBAAoD;IAEpD,OAAO,IAAI,CAAC,SAAS,CACnB,wCAAwC,CAAC,KAAK,CAAC,yBAAyB,CAAC,CAC1E,CAAC;AACJ,CAAC;AAEK,SAAU,iCAAiC,CAC/C,UAAkB;IAElB,mLAAO,YAAS,AAAT,EACL,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,sCAAwC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACnE,CAAA,qDAAA,CAAuD,CACxD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 23184, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23190, "column": 0}, "map": {"version":3,"file":"fileuploadcompleted.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/fileuploadcompleted.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  S3FileUploadCompletedPart,\n  S3FileUploadCompletedPart$inboundSchema,\n  S3FileUploadCompletedPart$Outbound,\n  S3FileUploadCompletedPart$outboundSchema,\n} from \"./s3fileuploadcompletedpart.js\";\n\nexport type FileUploadCompleted = {\n  id: string;\n  path: string;\n  parts: Array<S3FileUploadCompletedPart>;\n};\n\n/** @internal */\nexport const FileUploadCompleted$inboundSchema: z.ZodType<\n  FileUploadCompleted,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  id: z.string(),\n  path: z.string(),\n  parts: z.array(S3FileUploadCompletedPart$inboundSchema),\n});\n\n/** @internal */\nexport type FileUploadCompleted$Outbound = {\n  id: string;\n  path: string;\n  parts: Array<S3FileUploadCompletedPart$Outbound>;\n};\n\n/** @internal */\nexport const FileUploadCompleted$outboundSchema: z.ZodType<\n  FileUploadCompleted$Outbound,\n  z.ZodTypeDef,\n  FileUploadCompleted\n> = z.object({\n  id: z.string(),\n  path: z.string(),\n  parts: z.array(S3FileUploadCompletedPart$outboundSchema),\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace FileUploadCompleted$ {\n  /** @deprecated use `FileUploadCompleted$inboundSchema` instead. */\n  export const inboundSchema = FileUploadCompleted$inboundSchema;\n  /** @deprecated use `FileUploadCompleted$outboundSchema` instead. */\n  export const outboundSchema = FileUploadCompleted$outboundSchema;\n  /** @deprecated use `FileUploadCompleted$Outbound` instead. */\n  export type Outbound = FileUploadCompleted$Outbound;\n}\n\nexport function fileUploadCompletedToJSON(\n  fileUploadCompleted: FileUploadCompleted,\n): string {\n  return JSON.stringify(\n    FileUploadCompleted$outboundSchema.parse(fileUploadCompleted),\n  );\n}\n\nexport function fileUploadCompletedFromJSON(\n  jsonString: string,\n): SafeParseResult<FileUploadCompleted, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => FileUploadCompleted$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'FileUploadCompleted' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,uCAAuC,EAEvC,wCAAwC,GACzC,MAAM,gCAAgC,CAAC;;;;;AASjC,MAAM,iCAAiC,GAI1C,CAAC,6IAAC,MAAM,CAAC;IACX,EAAE,EAAE,CAAC,6IAAC,MAAM,EAAE;IACd,IAAI,EAAE,CAAC,6IAAC,MAAM,EAAE;IAChB,KAAK,EAAE,CAAC,6IAAC,KAAK,4MAAC,0CAAuC,CAAC;CACxD,CAAC,CAAC;AAUI,MAAM,kCAAkC,GAI3C,CAAC,6IAAC,MAAM,CAAC;IACX,EAAE,EAAE,CAAC,6IAAC,MAAM,EAAE;IACd,IAAI,EAAE,CAAC,6IAAC,MAAM,EAAE;IAChB,KAAK,EAAE,CAAC,6IAAC,KAAK,4MAAC,2CAAwC,CAAC;CACzD,CAAC,CAAC;AAMG,IAAW,oBAAoB,CAOpC;AAPD,CAAA,SAAiB,oBAAoB;IACnC,iEAAA,EAAmE,CACtD,qBAAA,aAAa,GAAG,iCAAiC,CAAC;IAC/D,kEAAA,EAAoE,CACvD,qBAAA,cAAc,GAAG,kCAAkC,CAAC;AAGnE,CAAC,EAPgB,oBAAoB,IAAA,CAApB,oBAAoB,GAAA,CAAA,CAAA,GAOpC;AAEK,SAAU,yBAAyB,CACvC,mBAAwC;IAExC,OAAO,IAAI,CAAC,SAAS,CACnB,kCAAkC,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAC9D,CAAC;AACJ,CAAC;AAEK,SAAU,2BAA2B,CACzC,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,gCAAkC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC7D,CAAA,+CAAA,CAAiD,CAClD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 23227, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23233, "column": 0}, "map": {"version":3,"file":"licensekeyupdate.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/licensekeyupdate.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  LicenseKeyStatus,\n  LicenseKeyStatus$inboundSchema,\n  LicenseKeyStatus$outboundSchema,\n} from \"./licensekeystatus.js\";\n\nexport type LicenseKeyUpdate = {\n  status?: LicenseKeyStatus | null | undefined;\n  usage?: number | undefined;\n  limitActivations?: number | null | undefined;\n  limitUsage?: number | null | undefined;\n  expiresAt?: Date | null | undefined;\n};\n\n/** @internal */\nexport const LicenseKeyUpdate$inboundSchema: z.ZodType<\n  LicenseKeyUpdate,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  status: z.nullable(LicenseKeyStatus$inboundSchema).optional(),\n  usage: z.number().int().default(0),\n  limit_activations: z.nullable(z.number().int()).optional(),\n  limit_usage: z.nullable(z.number().int()).optional(),\n  expires_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ).optional(),\n}).transform((v) => {\n  return remap$(v, {\n    \"limit_activations\": \"limitActivations\",\n    \"limit_usage\": \"limitUsage\",\n    \"expires_at\": \"expiresAt\",\n  });\n});\n\n/** @internal */\nexport type LicenseKeyUpdate$Outbound = {\n  status?: string | null | undefined;\n  usage: number;\n  limit_activations?: number | null | undefined;\n  limit_usage?: number | null | undefined;\n  expires_at?: string | null | undefined;\n};\n\n/** @internal */\nexport const LicenseKeyUpdate$outboundSchema: z.ZodType<\n  LicenseKeyUpdate$Outbound,\n  z.ZodTypeDef,\n  LicenseKeyUpdate\n> = z.object({\n  status: z.nullable(LicenseKeyStatus$outboundSchema).optional(),\n  usage: z.number().int().default(0),\n  limitActivations: z.nullable(z.number().int()).optional(),\n  limitUsage: z.nullable(z.number().int()).optional(),\n  expiresAt: z.nullable(z.date().transform(v => v.toISOString())).optional(),\n}).transform((v) => {\n  return remap$(v, {\n    limitActivations: \"limit_activations\",\n    limitUsage: \"limit_usage\",\n    expiresAt: \"expires_at\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace LicenseKeyUpdate$ {\n  /** @deprecated use `LicenseKeyUpdate$inboundSchema` instead. */\n  export const inboundSchema = LicenseKeyUpdate$inboundSchema;\n  /** @deprecated use `LicenseKeyUpdate$outboundSchema` instead. */\n  export const outboundSchema = LicenseKeyUpdate$outboundSchema;\n  /** @deprecated use `LicenseKeyUpdate$Outbound` instead. */\n  export type Outbound = LicenseKeyUpdate$Outbound;\n}\n\nexport function licenseKeyUpdateToJSON(\n  licenseKeyUpdate: LicenseKeyUpdate,\n): string {\n  return JSON.stringify(\n    LicenseKeyUpdate$outboundSchema.parse(licenseKeyUpdate),\n  );\n}\n\nexport function licenseKeyUpdateFromJSON(\n  jsonString: string,\n): SafeParseResult<LicenseKeyUpdate, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => LicenseKeyUpdate$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'LicenseKeyUpdate' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 23290, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23296, "column": 0}, "map": {"version":3,"file":"metercreate.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/metercreate.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  CountAggregation,\n  CountAggregation$inboundSchema,\n  CountAggregation$Outbound,\n  CountAggregation$outboundSchema,\n} from \"./countaggregation.js\";\nimport {\n  Filter,\n  Filter$inboundSchema,\n  Filter$Outbound,\n  Filter$outboundSchema,\n} from \"./filter.js\";\nimport {\n  PropertyAggregation,\n  PropertyAggregation$inboundSchema,\n  PropertyAggregation$Outbound,\n  PropertyAggregation$outboundSchema,\n} from \"./propertyaggregation.js\";\n\nexport type MeterCreateMetadata = string | number | number | boolean;\n\n/**\n * The aggregation to apply on the filtered events to calculate the meter.\n */\nexport type MeterCreateAggregation =\n  | (CountAggregation & { func: \"count\" })\n  | (PropertyAggregation & { func: \"avg\" })\n  | (PropertyAggregation & { func: \"max\" })\n  | (PropertyAggregation & { func: \"min\" })\n  | (PropertyAggregation & { func: \"sum\" });\n\nexport type MeterCreate = {\n  /**\n   * Key-value object allowing you to store additional information.\n   *\n   * @remarks\n   *\n   * The key must be a string with a maximum length of **40 characters**.\n   * The value must be either:\n   *\n   * * A string with a maximum length of **500 characters**\n   * * An integer\n   * * A floating-point number\n   * * A boolean\n   *\n   * You can store up to **50 key-value pairs**.\n   */\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  /**\n   * The name of the meter. Will be shown on customer's invoices and usage.\n   */\n  name: string;\n  filter: Filter;\n  /**\n   * The aggregation to apply on the filtered events to calculate the meter.\n   */\n  aggregation:\n    | (CountAggregation & { func: \"count\" })\n    | (PropertyAggregation & { func: \"avg\" })\n    | (PropertyAggregation & { func: \"max\" })\n    | (PropertyAggregation & { func: \"min\" })\n    | (PropertyAggregation & { func: \"sum\" });\n  /**\n   * The ID of the organization owning the meter. **Required unless you use an organization token.**\n   */\n  organizationId?: string | null | undefined;\n};\n\n/** @internal */\nexport const MeterCreateMetadata$inboundSchema: z.ZodType<\n  MeterCreateMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type MeterCreateMetadata$Outbound = string | number | number | boolean;\n\n/** @internal */\nexport const MeterCreateMetadata$outboundSchema: z.ZodType<\n  MeterCreateMetadata$Outbound,\n  z.ZodTypeDef,\n  MeterCreateMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace MeterCreateMetadata$ {\n  /** @deprecated use `MeterCreateMetadata$inboundSchema` instead. */\n  export const inboundSchema = MeterCreateMetadata$inboundSchema;\n  /** @deprecated use `MeterCreateMetadata$outboundSchema` instead. */\n  export const outboundSchema = MeterCreateMetadata$outboundSchema;\n  /** @deprecated use `MeterCreateMetadata$Outbound` instead. */\n  export type Outbound = MeterCreateMetadata$Outbound;\n}\n\nexport function meterCreateMetadataToJSON(\n  meterCreateMetadata: MeterCreateMetadata,\n): string {\n  return JSON.stringify(\n    MeterCreateMetadata$outboundSchema.parse(meterCreateMetadata),\n  );\n}\n\nexport function meterCreateMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<MeterCreateMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => MeterCreateMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'MeterCreateMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const MeterCreateAggregation$inboundSchema: z.ZodType<\n  MeterCreateAggregation,\n  z.ZodTypeDef,\n  unknown\n> = z.union([\n  CountAggregation$inboundSchema.and(\n    z.object({ func: z.literal(\"count\") }).transform((v) => ({ func: v.func })),\n  ),\n  PropertyAggregation$inboundSchema.and(\n    z.object({ func: z.literal(\"avg\") }).transform((v) => ({ func: v.func })),\n  ),\n  PropertyAggregation$inboundSchema.and(\n    z.object({ func: z.literal(\"max\") }).transform((v) => ({ func: v.func })),\n  ),\n  PropertyAggregation$inboundSchema.and(\n    z.object({ func: z.literal(\"min\") }).transform((v) => ({ func: v.func })),\n  ),\n  PropertyAggregation$inboundSchema.and(\n    z.object({ func: z.literal(\"sum\") }).transform((v) => ({ func: v.func })),\n  ),\n]);\n\n/** @internal */\nexport type MeterCreateAggregation$Outbound =\n  | (CountAggregation$Outbound & { func: \"count\" })\n  | (PropertyAggregation$Outbound & { func: \"avg\" })\n  | (PropertyAggregation$Outbound & { func: \"max\" })\n  | (PropertyAggregation$Outbound & { func: \"min\" })\n  | (PropertyAggregation$Outbound & { func: \"sum\" });\n\n/** @internal */\nexport const MeterCreateAggregation$outboundSchema: z.ZodType<\n  MeterCreateAggregation$Outbound,\n  z.ZodTypeDef,\n  MeterCreateAggregation\n> = z.union([\n  CountAggregation$outboundSchema.and(\n    z.object({ func: z.literal(\"count\") }).transform((v) => ({ func: v.func })),\n  ),\n  PropertyAggregation$outboundSchema.and(\n    z.object({ func: z.literal(\"avg\") }).transform((v) => ({ func: v.func })),\n  ),\n  PropertyAggregation$outboundSchema.and(\n    z.object({ func: z.literal(\"max\") }).transform((v) => ({ func: v.func })),\n  ),\n  PropertyAggregation$outboundSchema.and(\n    z.object({ func: z.literal(\"min\") }).transform((v) => ({ func: v.func })),\n  ),\n  PropertyAggregation$outboundSchema.and(\n    z.object({ func: z.literal(\"sum\") }).transform((v) => ({ func: v.func })),\n  ),\n]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace MeterCreateAggregation$ {\n  /** @deprecated use `MeterCreateAggregation$inboundSchema` instead. */\n  export const inboundSchema = MeterCreateAggregation$inboundSchema;\n  /** @deprecated use `MeterCreateAggregation$outboundSchema` instead. */\n  export const outboundSchema = MeterCreateAggregation$outboundSchema;\n  /** @deprecated use `MeterCreateAggregation$Outbound` instead. */\n  export type Outbound = MeterCreateAggregation$Outbound;\n}\n\nexport function meterCreateAggregationToJSON(\n  meterCreateAggregation: MeterCreateAggregation,\n): string {\n  return JSON.stringify(\n    MeterCreateAggregation$outboundSchema.parse(meterCreateAggregation),\n  );\n}\n\nexport function meterCreateAggregationFromJSON(\n  jsonString: string,\n): SafeParseResult<MeterCreateAggregation, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => MeterCreateAggregation$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'MeterCreateAggregation' from JSON`,\n  );\n}\n\n/** @internal */\nexport const MeterCreate$inboundSchema: z.ZodType<\n  MeterCreate,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  name: z.string(),\n  filter: Filter$inboundSchema,\n  aggregation: z.union([\n    CountAggregation$inboundSchema.and(\n      z.object({ func: z.literal(\"count\") }).transform((v) => ({\n        func: v.func,\n      })),\n    ),\n    PropertyAggregation$inboundSchema.and(\n      z.object({ func: z.literal(\"avg\") }).transform((v) => ({ func: v.func })),\n    ),\n    PropertyAggregation$inboundSchema.and(\n      z.object({ func: z.literal(\"max\") }).transform((v) => ({ func: v.func })),\n    ),\n    PropertyAggregation$inboundSchema.and(\n      z.object({ func: z.literal(\"min\") }).transform((v) => ({ func: v.func })),\n    ),\n    PropertyAggregation$inboundSchema.and(\n      z.object({ func: z.literal(\"sum\") }).transform((v) => ({ func: v.func })),\n    ),\n  ]),\n  organization_id: z.nullable(z.string()).optional(),\n}).transform((v) => {\n  return remap$(v, {\n    \"organization_id\": \"organizationId\",\n  });\n});\n\n/** @internal */\nexport type MeterCreate$Outbound = {\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  name: string;\n  filter: Filter$Outbound;\n  aggregation:\n    | (CountAggregation$Outbound & { func: \"count\" })\n    | (PropertyAggregation$Outbound & { func: \"avg\" })\n    | (PropertyAggregation$Outbound & { func: \"max\" })\n    | (PropertyAggregation$Outbound & { func: \"min\" })\n    | (PropertyAggregation$Outbound & { func: \"sum\" });\n  organization_id?: string | null | undefined;\n};\n\n/** @internal */\nexport const MeterCreate$outboundSchema: z.ZodType<\n  MeterCreate$Outbound,\n  z.ZodTypeDef,\n  MeterCreate\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  name: z.string(),\n  filter: Filter$outboundSchema,\n  aggregation: z.union([\n    CountAggregation$outboundSchema.and(\n      z.object({ func: z.literal(\"count\") }).transform((v) => ({\n        func: v.func,\n      })),\n    ),\n    PropertyAggregation$outboundSchema.and(\n      z.object({ func: z.literal(\"avg\") }).transform((v) => ({ func: v.func })),\n    ),\n    PropertyAggregation$outboundSchema.and(\n      z.object({ func: z.literal(\"max\") }).transform((v) => ({ func: v.func })),\n    ),\n    PropertyAggregation$outboundSchema.and(\n      z.object({ func: z.literal(\"min\") }).transform((v) => ({ func: v.func })),\n    ),\n    PropertyAggregation$outboundSchema.and(\n      z.object({ func: z.literal(\"sum\") }).transform((v) => ({ func: v.func })),\n    ),\n  ]),\n  organizationId: z.nullable(z.string()).optional(),\n}).transform((v) => {\n  return remap$(v, {\n    organizationId: \"organization_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace MeterCreate$ {\n  /** @deprecated use `MeterCreate$inboundSchema` instead. */\n  export const inboundSchema = MeterCreate$inboundSchema;\n  /** @deprecated use `MeterCreate$outboundSchema` instead. */\n  export const outboundSchema = MeterCreate$outboundSchema;\n  /** @deprecated use `MeterCreate$Outbound` instead. */\n  export type Outbound = MeterCreate$Outbound;\n}\n\nexport function meterCreateToJSON(meterCreate: MeterCreate): string {\n  return JSON.stringify(MeterCreate$outboundSchema.parse(meterCreate));\n}\n\nexport function meterCreateFromJSON(\n  jsonString: string,\n): SafeParseResult<MeterCreate, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => MeterCreate$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'MeterCreate' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 23511, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23517, "column": 0}, "map": {"version":3,"file":"listresourcemeter.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/listresourcemeter.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  Meter,\n  Meter$inboundSchema,\n  Meter$Outbound,\n  Meter$outboundSchema,\n} from \"./meter.js\";\nimport {\n  Pagination,\n  Pagination$inboundSchema,\n  Pagination$Outbound,\n  Pagination$outboundSchema,\n} from \"./pagination.js\";\n\nexport type ListResourceMeter = {\n  items: Array<Meter>;\n  pagination: Pagination;\n};\n\n/** @internal */\nexport const ListResourceMeter$inboundSchema: z.ZodType<\n  ListResourceMeter,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  items: z.array(Meter$inboundSchema),\n  pagination: Pagination$inboundSchema,\n});\n\n/** @internal */\nexport type ListResourceMeter$Outbound = {\n  items: Array<Meter$Outbound>;\n  pagination: Pagination$Outbound;\n};\n\n/** @internal */\nexport const ListResourceMeter$outboundSchema: z.ZodType<\n  ListResourceMeter$Outbound,\n  z.ZodTypeDef,\n  ListResourceMeter\n> = z.object({\n  items: z.array(Meter$outboundSchema),\n  pagination: Pagination$outboundSchema,\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace ListResourceMeter$ {\n  /** @deprecated use `ListResourceMeter$inboundSchema` instead. */\n  export const inboundSchema = ListResourceMeter$inboundSchema;\n  /** @deprecated use `ListResourceMeter$outboundSchema` instead. */\n  export const outboundSchema = ListResourceMeter$outboundSchema;\n  /** @deprecated use `ListResourceMeter$Outbound` instead. */\n  export type Outbound = ListResourceMeter$Outbound;\n}\n\nexport function listResourceMeterToJSON(\n  listResourceMeter: ListResourceMeter,\n): string {\n  return JSON.stringify(\n    ListResourceMeter$outboundSchema.parse(listResourceMeter),\n  );\n}\n\nexport function listResourceMeterFromJSON(\n  jsonString: string,\n): SafeParseResult<ListResourceMeter, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => ListResourceMeter$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'ListResourceMeter' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;AAGH,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,mBAAmB,EAEnB,oBAAoB,GACrB,MAAM,YAAY,CAAC;AACpB,OAAO,EAEL,wBAAwB,EAExB,yBAAyB,GAC1B,MAAM,iBAAiB,CAAC;AAfzB,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;;;;AAuBlB,MAAM,+BAA+B,GAIxC,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,KAAK,wLAAC,sBAAmB,CAAC;IACnC,UAAU,8LAAE,2BAAwB;CACrC,CAAC,CAAC;AASI,MAAM,gCAAgC,GAIzC,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,KAAK,wLAAC,uBAAoB,CAAC;IACpC,UAAU,8LAAE,4BAAyB;CACtC,CAAC,CAAC;AAMG,IAAW,kBAAkB,CAOlC;AAPD,CAAA,SAAiB,kBAAkB;IACjC,+DAAA,EAAiE,CACpD,mBAAA,aAAa,GAAG,+BAA+B,CAAC;IAC7D,gEAAA,EAAkE,CACrD,mBAAA,cAAc,GAAG,gCAAgC,CAAC;AAGjE,CAAC,EAPgB,kBAAkB,IAAA,CAAlB,kBAAkB,GAAA,CAAA,CAAA,GAOlC;AAEK,SAAU,uBAAuB,CACrC,iBAAoC;IAEpC,OAAO,IAAI,CAAC,SAAS,CACnB,gCAAgC,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAC1D,CAAC;AACJ,CAAC;AAEK,SAAU,yBAAyB,CACvC,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,8BAAgC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC3D,CAAA,6CAAA,CAA+C,CAChD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 23554, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23560, "column": 0}, "map": {"version":3,"file":"metersortproperty.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/metersortproperty.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { ClosedEnum } from \"../../types/enums.js\";\n\nexport const MeterSortProperty = {\n  CreatedAt: \"created_at\",\n  MinusCreatedAt: \"-created_at\",\n  Name: \"name\",\n  MinusName: \"-name\",\n} as const;\nexport type MeterSortProperty = ClosedEnum<typeof MeterSortProperty>;\n\n/** @internal */\nexport const MeterSortProperty$inboundSchema: z.ZodNativeEnum<\n  typeof MeterSortProperty\n> = z.nativeEnum(MeterSortProperty);\n\n/** @internal */\nexport const MeterSortProperty$outboundSchema: z.ZodNativeEnum<\n  typeof MeterSortProperty\n> = MeterSortProperty$inboundSchema;\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace MeterSortProperty$ {\n  /** @deprecated use `MeterSortProperty$inboundSchema` instead. */\n  export const inboundSchema = MeterSortProperty$inboundSchema;\n  /** @deprecated use `MeterSortProperty$outboundSchema` instead. */\n  export const outboundSchema = MeterSortProperty$outboundSchema;\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;AAGlB,MAAM,iBAAiB,GAAG;IAC/B,SAAS,EAAE,YAAY;IACvB,cAAc,EAAE,aAAa;IAC7B,IAAI,EAAE,MAAM;IACZ,SAAS,EAAE,OAAO;CACV,CAAC;AAIJ,MAAM,+BAA+B,GAExC,CAAC,6IAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC;AAG7B,MAAM,gCAAgC,GAEzC,+BAA+B,CAAC;AAM9B,IAAW,kBAAkB,CAKlC;AALD,CAAA,SAAiB,kBAAkB;IACjC,+DAAA,EAAiE,CACpD,mBAAA,aAAa,GAAG,+BAA+B,CAAC;IAC7D,gEAAA,EAAkE,CACrD,mBAAA,cAAc,GAAG,gCAAgC,CAAC;AACjE,CAAC,EALgB,kBAAkB,IAAA,CAAlB,kBAAkB,GAAA,CAAA,CAAA,GAKlC","ignoreList":[0]}},
    {"offset": {"line": 23584, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23590, "column": 0}, "map": {"version":3,"file":"meterquantity.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/meterquantity.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport type MeterQuantity = {\n  /**\n   * The timestamp for the current period.\n   */\n  timestamp: Date;\n  /**\n   * The quantity for the current period.\n   */\n  quantity: number;\n};\n\n/** @internal */\nexport const MeterQuantity$inboundSchema: z.ZodType<\n  MeterQuantity,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  timestamp: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  quantity: z.number(),\n});\n\n/** @internal */\nexport type MeterQuantity$Outbound = {\n  timestamp: string;\n  quantity: number;\n};\n\n/** @internal */\nexport const MeterQuantity$outboundSchema: z.ZodType<\n  MeterQuantity$Outbound,\n  z.ZodTypeDef,\n  MeterQuantity\n> = z.object({\n  timestamp: z.date().transform(v => v.toISOString()),\n  quantity: z.number(),\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace MeterQuantity$ {\n  /** @deprecated use `MeterQuantity$inboundSchema` instead. */\n  export const inboundSchema = MeterQuantity$inboundSchema;\n  /** @deprecated use `MeterQuantity$outboundSchema` instead. */\n  export const outboundSchema = MeterQuantity$outboundSchema;\n  /** @deprecated use `MeterQuantity$Outbound` instead. */\n  export type Outbound = MeterQuantity$Outbound;\n}\n\nexport function meterQuantityToJSON(meterQuantity: MeterQuantity): string {\n  return JSON.stringify(MeterQuantity$outboundSchema.parse(meterQuantity));\n}\n\nexport function meterQuantityFromJSON(\n  jsonString: string,\n): SafeParseResult<MeterQuantity, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => MeterQuantity$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'MeterQuantity' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;;;;AAgB1C,MAAM,2BAA2B,GAIpC,CAAC,6IAAC,MAAM,CAAC;IACX,SAAS,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,CAAC;QAAE,MAAM,EAAE,IAAI;IAAA,CAAE,CAAC,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;IAC5E,QAAQ,EAAE,CAAC,6IAAC,MAAM,EAAE;CACrB,CAAC,CAAC;AASI,MAAM,4BAA4B,GAIrC,CAAC,6IAAC,MAAM,CAAC;IACX,SAAS,EAAE,CAAC,6IAAC,IAAI,EAAE,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,WAAW,EAAE,CAAC;IACnD,QAAQ,EAAE,CAAC,6IAAC,MAAM,EAAE;CACrB,CAAC,CAAC;AAMG,IAAW,cAAc,CAO9B;AAPD,CAAA,SAAiB,cAAc;IAC7B,2DAAA,EAA6D,CAChD,eAAA,aAAa,GAAG,2BAA2B,CAAC;IACzD,4DAAA,EAA8D,CACjD,eAAA,cAAc,GAAG,4BAA4B,CAAC;AAG7D,CAAC,EAPgB,cAAc,IAAA,CAAd,cAAc,GAAA,CAAA,CAAA,GAO9B;AAEK,SAAU,mBAAmB,CAAC,aAA4B;IAC9D,OAAO,IAAI,CAAC,SAAS,CAAC,4BAA4B,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC;AAC3E,CAAC;AAEK,SAAU,qBAAqB,CACnC,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,0BAA4B,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACvD,CAAA,yCAAA,CAA2C,CAC5C,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 23625, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23631, "column": 0}, "map": {"version":3,"file":"meterquantities.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/meterquantities.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  MeterQuantity,\n  MeterQuantity$inboundSchema,\n  MeterQuantity$Outbound,\n  MeterQuantity$outboundSchema,\n} from \"./meterquantity.js\";\n\nexport type MeterQuantities = {\n  quantities: Array<MeterQuantity>;\n  /**\n   * The total quantity for the period.\n   */\n  total: number;\n};\n\n/** @internal */\nexport const MeterQuantities$inboundSchema: z.ZodType<\n  MeterQuantities,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  quantities: z.array(MeterQuantity$inboundSchema),\n  total: z.number(),\n});\n\n/** @internal */\nexport type MeterQuantities$Outbound = {\n  quantities: Array<MeterQuantity$Outbound>;\n  total: number;\n};\n\n/** @internal */\nexport const MeterQuantities$outboundSchema: z.ZodType<\n  MeterQuantities$Outbound,\n  z.ZodTypeDef,\n  MeterQuantities\n> = z.object({\n  quantities: z.array(MeterQuantity$outboundSchema),\n  total: z.number(),\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace MeterQuantities$ {\n  /** @deprecated use `MeterQuantities$inboundSchema` instead. */\n  export const inboundSchema = MeterQuantities$inboundSchema;\n  /** @deprecated use `MeterQuantities$outboundSchema` instead. */\n  export const outboundSchema = MeterQuantities$outboundSchema;\n  /** @deprecated use `MeterQuantities$Outbound` instead. */\n  export type Outbound = MeterQuantities$Outbound;\n}\n\nexport function meterQuantitiesToJSON(\n  meterQuantities: MeterQuantities,\n): string {\n  return JSON.stringify(MeterQuantities$outboundSchema.parse(meterQuantities));\n}\n\nexport function meterQuantitiesFromJSON(\n  jsonString: string,\n): SafeParseResult<MeterQuantities, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => MeterQuantities$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'MeterQuantities' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;AAGH,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,2BAA2B,EAE3B,4BAA4B,GAC7B,MAAM,oBAAoB,CAAC;AAT5B,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;;;AAoBlB,MAAM,6BAA6B,GAItC,CAAC,6IAAC,MAAM,CAAC;IACX,UAAU,EAAE,CAAC,6IAAC,KAAK,gMAAC,8BAA2B,CAAC;IAChD,KAAK,EAAE,CAAC,6IAAC,MAAM,EAAE;CAClB,CAAC,CAAC;AASI,MAAM,8BAA8B,GAIvC,CAAC,6IAAC,MAAM,CAAC;IACX,UAAU,EAAE,CAAC,6IAAC,KAAK,gMAAC,+BAA4B,CAAC;IACjD,KAAK,EAAE,CAAC,6IAAC,MAAM,EAAE;CAClB,CAAC,CAAC;AAMG,IAAW,gBAAgB,CAOhC;AAPD,CAAA,SAAiB,gBAAgB;IAC/B,6DAAA,EAA+D,CAClD,iBAAA,aAAa,GAAG,6BAA6B,CAAC;IAC3D,8DAAA,EAAgE,CACnD,iBAAA,cAAc,GAAG,8BAA8B,CAAC;AAG/D,CAAC,EAPgB,gBAAgB,IAAA,CAAhB,gBAAgB,GAAA,CAAA,CAAA,GAOhC;AAEK,SAAU,qBAAqB,CACnC,eAAgC;IAEhC,OAAO,IAAI,CAAC,SAAS,CAAC,8BAA8B,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,CAAC;AAC/E,CAAC;AAEK,SAAU,uBAAuB,CACrC,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,4BAA8B,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACzD,CAAA,2CAAA,CAA6C,CAC9C,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 23666, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23672, "column": 0}, "map": {"version":3,"file":"timeinterval.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/timeinterval.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { ClosedEnum } from \"../../types/enums.js\";\n\nexport const TimeInterval = {\n  Year: \"year\",\n  Month: \"month\",\n  Week: \"week\",\n  Day: \"day\",\n  Hour: \"hour\",\n} as const;\nexport type TimeInterval = ClosedEnum<typeof TimeInterval>;\n\n/** @internal */\nexport const TimeInterval$inboundSchema: z.ZodNativeEnum<typeof TimeInterval> =\n  z.nativeEnum(TimeInterval);\n\n/** @internal */\nexport const TimeInterval$outboundSchema: z.ZodNativeEnum<typeof TimeInterval> =\n  TimeInterval$inboundSchema;\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace TimeInterval$ {\n  /** @deprecated use `TimeInterval$inboundSchema` instead. */\n  export const inboundSchema = TimeInterval$inboundSchema;\n  /** @deprecated use `TimeInterval$outboundSchema` instead. */\n  export const outboundSchema = TimeInterval$outboundSchema;\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;AAGlB,MAAM,YAAY,GAAG;IAC1B,IAAI,EAAE,MAAM;IACZ,KAAK,EAAE,OAAO;IACd,IAAI,EAAE,MAAM;IACZ,GAAG,EAAE,KAAK;IACV,IAAI,EAAE,MAAM;CACJ,CAAC;AAIJ,MAAM,0BAA0B,GACrC,CAAC,6IAAC,UAAU,CAAC,YAAY,CAAC,CAAC;AAGtB,MAAM,2BAA2B,GACtC,0BAA0B,CAAC;AAMvB,IAAW,aAAa,CAK7B;AALD,CAAA,SAAiB,aAAa;IAC5B,0DAAA,EAA4D,CAC/C,cAAA,aAAa,GAAG,0BAA0B,CAAC;IACxD,2DAAA,EAA6D,CAChD,cAAA,cAAc,GAAG,2BAA2B,CAAC;AAC5D,CAAC,EALgB,aAAa,IAAA,CAAb,aAAa,GAAA,CAAA,CAAA,GAK7B","ignoreList":[0]}},
    {"offset": {"line": 23697, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23703, "column": 0}, "map": {"version":3,"file":"meterupdate.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/meterupdate.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  CountAggregation,\n  CountAggregation$inboundSchema,\n  CountAggregation$Outbound,\n  CountAggregation$outboundSchema,\n} from \"./countaggregation.js\";\nimport {\n  Filter,\n  Filter$inboundSchema,\n  Filter$Outbound,\n  Filter$outboundSchema,\n} from \"./filter.js\";\nimport {\n  PropertyAggregation,\n  PropertyAggregation$inboundSchema,\n  PropertyAggregation$Outbound,\n  PropertyAggregation$outboundSchema,\n} from \"./propertyaggregation.js\";\n\nexport type MeterUpdateMetadata = string | number | number | boolean;\n\nexport type Aggregation =\n  | (CountAggregation & { func: \"count\" })\n  | (PropertyAggregation & { func: \"avg\" })\n  | (PropertyAggregation & { func: \"max\" })\n  | (PropertyAggregation & { func: \"min\" })\n  | (PropertyAggregation & { func: \"sum\" });\n\nexport type MeterUpdate = {\n  /**\n   * Key-value object allowing you to store additional information.\n   *\n   * @remarks\n   *\n   * The key must be a string with a maximum length of **40 characters**.\n   * The value must be either:\n   *\n   * * A string with a maximum length of **500 characters**\n   * * An integer\n   * * A floating-point number\n   * * A boolean\n   *\n   * You can store up to **50 key-value pairs**.\n   */\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  /**\n   * The name of the meter. Will be shown on customer's invoices and usage.\n   */\n  name?: string | null | undefined;\n  /**\n   * The filter to apply on events that'll be used to calculate the meter.\n   */\n  filter?: Filter | null | undefined;\n  /**\n   * The aggregation to apply on the filtered events to calculate the meter.\n   */\n  aggregation?:\n    | (CountAggregation & { func: \"count\" })\n    | (PropertyAggregation & { func: \"avg\" })\n    | (PropertyAggregation & { func: \"max\" })\n    | (PropertyAggregation & { func: \"min\" })\n    | (PropertyAggregation & { func: \"sum\" })\n    | null\n    | undefined;\n};\n\n/** @internal */\nexport const MeterUpdateMetadata$inboundSchema: z.ZodType<\n  MeterUpdateMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type MeterUpdateMetadata$Outbound = string | number | number | boolean;\n\n/** @internal */\nexport const MeterUpdateMetadata$outboundSchema: z.ZodType<\n  MeterUpdateMetadata$Outbound,\n  z.ZodTypeDef,\n  MeterUpdateMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace MeterUpdateMetadata$ {\n  /** @deprecated use `MeterUpdateMetadata$inboundSchema` instead. */\n  export const inboundSchema = MeterUpdateMetadata$inboundSchema;\n  /** @deprecated use `MeterUpdateMetadata$outboundSchema` instead. */\n  export const outboundSchema = MeterUpdateMetadata$outboundSchema;\n  /** @deprecated use `MeterUpdateMetadata$Outbound` instead. */\n  export type Outbound = MeterUpdateMetadata$Outbound;\n}\n\nexport function meterUpdateMetadataToJSON(\n  meterUpdateMetadata: MeterUpdateMetadata,\n): string {\n  return JSON.stringify(\n    MeterUpdateMetadata$outboundSchema.parse(meterUpdateMetadata),\n  );\n}\n\nexport function meterUpdateMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<MeterUpdateMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => MeterUpdateMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'MeterUpdateMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const Aggregation$inboundSchema: z.ZodType<\n  Aggregation,\n  z.ZodTypeDef,\n  unknown\n> = z.union([\n  CountAggregation$inboundSchema.and(\n    z.object({ func: z.literal(\"count\") }).transform((v) => ({ func: v.func })),\n  ),\n  PropertyAggregation$inboundSchema.and(\n    z.object({ func: z.literal(\"avg\") }).transform((v) => ({ func: v.func })),\n  ),\n  PropertyAggregation$inboundSchema.and(\n    z.object({ func: z.literal(\"max\") }).transform((v) => ({ func: v.func })),\n  ),\n  PropertyAggregation$inboundSchema.and(\n    z.object({ func: z.literal(\"min\") }).transform((v) => ({ func: v.func })),\n  ),\n  PropertyAggregation$inboundSchema.and(\n    z.object({ func: z.literal(\"sum\") }).transform((v) => ({ func: v.func })),\n  ),\n]);\n\n/** @internal */\nexport type Aggregation$Outbound =\n  | (CountAggregation$Outbound & { func: \"count\" })\n  | (PropertyAggregation$Outbound & { func: \"avg\" })\n  | (PropertyAggregation$Outbound & { func: \"max\" })\n  | (PropertyAggregation$Outbound & { func: \"min\" })\n  | (PropertyAggregation$Outbound & { func: \"sum\" });\n\n/** @internal */\nexport const Aggregation$outboundSchema: z.ZodType<\n  Aggregation$Outbound,\n  z.ZodTypeDef,\n  Aggregation\n> = z.union([\n  CountAggregation$outboundSchema.and(\n    z.object({ func: z.literal(\"count\") }).transform((v) => ({ func: v.func })),\n  ),\n  PropertyAggregation$outboundSchema.and(\n    z.object({ func: z.literal(\"avg\") }).transform((v) => ({ func: v.func })),\n  ),\n  PropertyAggregation$outboundSchema.and(\n    z.object({ func: z.literal(\"max\") }).transform((v) => ({ func: v.func })),\n  ),\n  PropertyAggregation$outboundSchema.and(\n    z.object({ func: z.literal(\"min\") }).transform((v) => ({ func: v.func })),\n  ),\n  PropertyAggregation$outboundSchema.and(\n    z.object({ func: z.literal(\"sum\") }).transform((v) => ({ func: v.func })),\n  ),\n]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace Aggregation$ {\n  /** @deprecated use `Aggregation$inboundSchema` instead. */\n  export const inboundSchema = Aggregation$inboundSchema;\n  /** @deprecated use `Aggregation$outboundSchema` instead. */\n  export const outboundSchema = Aggregation$outboundSchema;\n  /** @deprecated use `Aggregation$Outbound` instead. */\n  export type Outbound = Aggregation$Outbound;\n}\n\nexport function aggregationToJSON(aggregation: Aggregation): string {\n  return JSON.stringify(Aggregation$outboundSchema.parse(aggregation));\n}\n\nexport function aggregationFromJSON(\n  jsonString: string,\n): SafeParseResult<Aggregation, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => Aggregation$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'Aggregation' from JSON`,\n  );\n}\n\n/** @internal */\nexport const MeterUpdate$inboundSchema: z.ZodType<\n  MeterUpdate,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  name: z.nullable(z.string()).optional(),\n  filter: z.nullable(Filter$inboundSchema).optional(),\n  aggregation: z.nullable(\n    z.union([\n      CountAggregation$inboundSchema.and(\n        z.object({ func: z.literal(\"count\") }).transform((v) => ({\n          func: v.func,\n        })),\n      ),\n      PropertyAggregation$inboundSchema.and(\n        z.object({ func: z.literal(\"avg\") }).transform((v) => ({\n          func: v.func,\n        })),\n      ),\n      PropertyAggregation$inboundSchema.and(\n        z.object({ func: z.literal(\"max\") }).transform((v) => ({\n          func: v.func,\n        })),\n      ),\n      PropertyAggregation$inboundSchema.and(\n        z.object({ func: z.literal(\"min\") }).transform((v) => ({\n          func: v.func,\n        })),\n      ),\n      PropertyAggregation$inboundSchema.and(\n        z.object({ func: z.literal(\"sum\") }).transform((v) => ({\n          func: v.func,\n        })),\n      ),\n    ]),\n  ).optional(),\n});\n\n/** @internal */\nexport type MeterUpdate$Outbound = {\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  name?: string | null | undefined;\n  filter?: Filter$Outbound | null | undefined;\n  aggregation?:\n    | (CountAggregation$Outbound & { func: \"count\" })\n    | (PropertyAggregation$Outbound & { func: \"avg\" })\n    | (PropertyAggregation$Outbound & { func: \"max\" })\n    | (PropertyAggregation$Outbound & { func: \"min\" })\n    | (PropertyAggregation$Outbound & { func: \"sum\" })\n    | null\n    | undefined;\n};\n\n/** @internal */\nexport const MeterUpdate$outboundSchema: z.ZodType<\n  MeterUpdate$Outbound,\n  z.ZodTypeDef,\n  MeterUpdate\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  name: z.nullable(z.string()).optional(),\n  filter: z.nullable(Filter$outboundSchema).optional(),\n  aggregation: z.nullable(\n    z.union([\n      CountAggregation$outboundSchema.and(\n        z.object({ func: z.literal(\"count\") }).transform((v) => ({\n          func: v.func,\n        })),\n      ),\n      PropertyAggregation$outboundSchema.and(\n        z.object({ func: z.literal(\"avg\") }).transform((v) => ({\n          func: v.func,\n        })),\n      ),\n      PropertyAggregation$outboundSchema.and(\n        z.object({ func: z.literal(\"max\") }).transform((v) => ({\n          func: v.func,\n        })),\n      ),\n      PropertyAggregation$outboundSchema.and(\n        z.object({ func: z.literal(\"min\") }).transform((v) => ({\n          func: v.func,\n        })),\n      ),\n      PropertyAggregation$outboundSchema.and(\n        z.object({ func: z.literal(\"sum\") }).transform((v) => ({\n          func: v.func,\n        })),\n      ),\n    ]),\n  ).optional(),\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace MeterUpdate$ {\n  /** @deprecated use `MeterUpdate$inboundSchema` instead. */\n  export const inboundSchema = MeterUpdate$inboundSchema;\n  /** @deprecated use `MeterUpdate$outboundSchema` instead. */\n  export const outboundSchema = MeterUpdate$outboundSchema;\n  /** @deprecated use `MeterUpdate$Outbound` instead. */\n  export type Outbound = MeterUpdate$Outbound;\n}\n\nexport function meterUpdateToJSON(meterUpdate: MeterUpdate): string {\n  return JSON.stringify(MeterUpdate$outboundSchema.parse(meterUpdate));\n}\n\nexport function meterUpdateFromJSON(\n  jsonString: string,\n): SafeParseResult<MeterUpdate, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => MeterUpdate$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'MeterUpdate' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 23906, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23912, "column": 0}, "map": {"version":3,"file":"metricperiod.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/metricperiod.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport type Orders = number | number;\n\nexport type Revenue = number | number;\n\nexport type CumulativeRevenue = number | number;\n\nexport type AverageOrderValue = number | number;\n\nexport type OneTimeProducts = number | number;\n\nexport type OneTimeProductsRevenue = number | number;\n\nexport type NewSubscriptions = number | number;\n\nexport type NewSubscriptionsRevenue = number | number;\n\nexport type RenewedSubscriptions = number | number;\n\nexport type RenewedSubscriptionsRevenue = number | number;\n\nexport type ActiveSubscriptions = number | number;\n\nexport type MonthlyRecurringRevenue = number | number;\n\nexport type Checkouts = number | number;\n\nexport type SucceededCheckouts = number | number;\n\nexport type CheckoutsConversion = number | number;\n\nexport type MetricPeriod = {\n  /**\n   * Timestamp of this period data.\n   */\n  timestamp: Date;\n  orders: number | number;\n  revenue: number | number;\n  cumulativeRevenue: number | number;\n  averageOrderValue: number | number;\n  oneTimeProducts: number | number;\n  oneTimeProductsRevenue: number | number;\n  newSubscriptions: number | number;\n  newSubscriptionsRevenue: number | number;\n  renewedSubscriptions: number | number;\n  renewedSubscriptionsRevenue: number | number;\n  activeSubscriptions: number | number;\n  monthlyRecurringRevenue: number | number;\n  checkouts: number | number;\n  succeededCheckouts: number | number;\n  checkoutsConversion: number | number;\n};\n\n/** @internal */\nexport const Orders$inboundSchema: z.ZodType<Orders, z.ZodTypeDef, unknown> = z\n  .union([z.number().int(), z.number()]);\n\n/** @internal */\nexport type Orders$Outbound = number | number;\n\n/** @internal */\nexport const Orders$outboundSchema: z.ZodType<\n  Orders$Outbound,\n  z.ZodTypeDef,\n  Orders\n> = z.union([z.number().int(), z.number()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace Orders$ {\n  /** @deprecated use `Orders$inboundSchema` instead. */\n  export const inboundSchema = Orders$inboundSchema;\n  /** @deprecated use `Orders$outboundSchema` instead. */\n  export const outboundSchema = Orders$outboundSchema;\n  /** @deprecated use `Orders$Outbound` instead. */\n  export type Outbound = Orders$Outbound;\n}\n\nexport function ordersToJSON(orders: Orders): string {\n  return JSON.stringify(Orders$outboundSchema.parse(orders));\n}\n\nexport function ordersFromJSON(\n  jsonString: string,\n): SafeParseResult<Orders, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => Orders$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'Orders' from JSON`,\n  );\n}\n\n/** @internal */\nexport const Revenue$inboundSchema: z.ZodType<Revenue, z.ZodTypeDef, unknown> =\n  z.union([z.number().int(), z.number()]);\n\n/** @internal */\nexport type Revenue$Outbound = number | number;\n\n/** @internal */\nexport const Revenue$outboundSchema: z.ZodType<\n  Revenue$Outbound,\n  z.ZodTypeDef,\n  Revenue\n> = z.union([z.number().int(), z.number()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace Revenue$ {\n  /** @deprecated use `Revenue$inboundSchema` instead. */\n  export const inboundSchema = Revenue$inboundSchema;\n  /** @deprecated use `Revenue$outboundSchema` instead. */\n  export const outboundSchema = Revenue$outboundSchema;\n  /** @deprecated use `Revenue$Outbound` instead. */\n  export type Outbound = Revenue$Outbound;\n}\n\nexport function revenueToJSON(revenue: Revenue): string {\n  return JSON.stringify(Revenue$outboundSchema.parse(revenue));\n}\n\nexport function revenueFromJSON(\n  jsonString: string,\n): SafeParseResult<Revenue, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => Revenue$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'Revenue' from JSON`,\n  );\n}\n\n/** @internal */\nexport const CumulativeRevenue$inboundSchema: z.ZodType<\n  CumulativeRevenue,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.number().int(), z.number()]);\n\n/** @internal */\nexport type CumulativeRevenue$Outbound = number | number;\n\n/** @internal */\nexport const CumulativeRevenue$outboundSchema: z.ZodType<\n  CumulativeRevenue$Outbound,\n  z.ZodTypeDef,\n  CumulativeRevenue\n> = z.union([z.number().int(), z.number()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CumulativeRevenue$ {\n  /** @deprecated use `CumulativeRevenue$inboundSchema` instead. */\n  export const inboundSchema = CumulativeRevenue$inboundSchema;\n  /** @deprecated use `CumulativeRevenue$outboundSchema` instead. */\n  export const outboundSchema = CumulativeRevenue$outboundSchema;\n  /** @deprecated use `CumulativeRevenue$Outbound` instead. */\n  export type Outbound = CumulativeRevenue$Outbound;\n}\n\nexport function cumulativeRevenueToJSON(\n  cumulativeRevenue: CumulativeRevenue,\n): string {\n  return JSON.stringify(\n    CumulativeRevenue$outboundSchema.parse(cumulativeRevenue),\n  );\n}\n\nexport function cumulativeRevenueFromJSON(\n  jsonString: string,\n): SafeParseResult<CumulativeRevenue, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CumulativeRevenue$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CumulativeRevenue' from JSON`,\n  );\n}\n\n/** @internal */\nexport const AverageOrderValue$inboundSchema: z.ZodType<\n  AverageOrderValue,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.number().int(), z.number()]);\n\n/** @internal */\nexport type AverageOrderValue$Outbound = number | number;\n\n/** @internal */\nexport const AverageOrderValue$outboundSchema: z.ZodType<\n  AverageOrderValue$Outbound,\n  z.ZodTypeDef,\n  AverageOrderValue\n> = z.union([z.number().int(), z.number()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace AverageOrderValue$ {\n  /** @deprecated use `AverageOrderValue$inboundSchema` instead. */\n  export const inboundSchema = AverageOrderValue$inboundSchema;\n  /** @deprecated use `AverageOrderValue$outboundSchema` instead. */\n  export const outboundSchema = AverageOrderValue$outboundSchema;\n  /** @deprecated use `AverageOrderValue$Outbound` instead. */\n  export type Outbound = AverageOrderValue$Outbound;\n}\n\nexport function averageOrderValueToJSON(\n  averageOrderValue: AverageOrderValue,\n): string {\n  return JSON.stringify(\n    AverageOrderValue$outboundSchema.parse(averageOrderValue),\n  );\n}\n\nexport function averageOrderValueFromJSON(\n  jsonString: string,\n): SafeParseResult<AverageOrderValue, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => AverageOrderValue$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'AverageOrderValue' from JSON`,\n  );\n}\n\n/** @internal */\nexport const OneTimeProducts$inboundSchema: z.ZodType<\n  OneTimeProducts,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.number().int(), z.number()]);\n\n/** @internal */\nexport type OneTimeProducts$Outbound = number | number;\n\n/** @internal */\nexport const OneTimeProducts$outboundSchema: z.ZodType<\n  OneTimeProducts$Outbound,\n  z.ZodTypeDef,\n  OneTimeProducts\n> = z.union([z.number().int(), z.number()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace OneTimeProducts$ {\n  /** @deprecated use `OneTimeProducts$inboundSchema` instead. */\n  export const inboundSchema = OneTimeProducts$inboundSchema;\n  /** @deprecated use `OneTimeProducts$outboundSchema` instead. */\n  export const outboundSchema = OneTimeProducts$outboundSchema;\n  /** @deprecated use `OneTimeProducts$Outbound` instead. */\n  export type Outbound = OneTimeProducts$Outbound;\n}\n\nexport function oneTimeProductsToJSON(\n  oneTimeProducts: OneTimeProducts,\n): string {\n  return JSON.stringify(OneTimeProducts$outboundSchema.parse(oneTimeProducts));\n}\n\nexport function oneTimeProductsFromJSON(\n  jsonString: string,\n): SafeParseResult<OneTimeProducts, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => OneTimeProducts$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'OneTimeProducts' from JSON`,\n  );\n}\n\n/** @internal */\nexport const OneTimeProductsRevenue$inboundSchema: z.ZodType<\n  OneTimeProductsRevenue,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.number().int(), z.number()]);\n\n/** @internal */\nexport type OneTimeProductsRevenue$Outbound = number | number;\n\n/** @internal */\nexport const OneTimeProductsRevenue$outboundSchema: z.ZodType<\n  OneTimeProductsRevenue$Outbound,\n  z.ZodTypeDef,\n  OneTimeProductsRevenue\n> = z.union([z.number().int(), z.number()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace OneTimeProductsRevenue$ {\n  /** @deprecated use `OneTimeProductsRevenue$inboundSchema` instead. */\n  export const inboundSchema = OneTimeProductsRevenue$inboundSchema;\n  /** @deprecated use `OneTimeProductsRevenue$outboundSchema` instead. */\n  export const outboundSchema = OneTimeProductsRevenue$outboundSchema;\n  /** @deprecated use `OneTimeProductsRevenue$Outbound` instead. */\n  export type Outbound = OneTimeProductsRevenue$Outbound;\n}\n\nexport function oneTimeProductsRevenueToJSON(\n  oneTimeProductsRevenue: OneTimeProductsRevenue,\n): string {\n  return JSON.stringify(\n    OneTimeProductsRevenue$outboundSchema.parse(oneTimeProductsRevenue),\n  );\n}\n\nexport function oneTimeProductsRevenueFromJSON(\n  jsonString: string,\n): SafeParseResult<OneTimeProductsRevenue, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => OneTimeProductsRevenue$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'OneTimeProductsRevenue' from JSON`,\n  );\n}\n\n/** @internal */\nexport const NewSubscriptions$inboundSchema: z.ZodType<\n  NewSubscriptions,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.number().int(), z.number()]);\n\n/** @internal */\nexport type NewSubscriptions$Outbound = number | number;\n\n/** @internal */\nexport const NewSubscriptions$outboundSchema: z.ZodType<\n  NewSubscriptions$Outbound,\n  z.ZodTypeDef,\n  NewSubscriptions\n> = z.union([z.number().int(), z.number()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace NewSubscriptions$ {\n  /** @deprecated use `NewSubscriptions$inboundSchema` instead. */\n  export const inboundSchema = NewSubscriptions$inboundSchema;\n  /** @deprecated use `NewSubscriptions$outboundSchema` instead. */\n  export const outboundSchema = NewSubscriptions$outboundSchema;\n  /** @deprecated use `NewSubscriptions$Outbound` instead. */\n  export type Outbound = NewSubscriptions$Outbound;\n}\n\nexport function newSubscriptionsToJSON(\n  newSubscriptions: NewSubscriptions,\n): string {\n  return JSON.stringify(\n    NewSubscriptions$outboundSchema.parse(newSubscriptions),\n  );\n}\n\nexport function newSubscriptionsFromJSON(\n  jsonString: string,\n): SafeParseResult<NewSubscriptions, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => NewSubscriptions$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'NewSubscriptions' from JSON`,\n  );\n}\n\n/** @internal */\nexport const NewSubscriptionsRevenue$inboundSchema: z.ZodType<\n  NewSubscriptionsRevenue,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.number().int(), z.number()]);\n\n/** @internal */\nexport type NewSubscriptionsRevenue$Outbound = number | number;\n\n/** @internal */\nexport const NewSubscriptionsRevenue$outboundSchema: z.ZodType<\n  NewSubscriptionsRevenue$Outbound,\n  z.ZodTypeDef,\n  NewSubscriptionsRevenue\n> = z.union([z.number().int(), z.number()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace NewSubscriptionsRevenue$ {\n  /** @deprecated use `NewSubscriptionsRevenue$inboundSchema` instead. */\n  export const inboundSchema = NewSubscriptionsRevenue$inboundSchema;\n  /** @deprecated use `NewSubscriptionsRevenue$outboundSchema` instead. */\n  export const outboundSchema = NewSubscriptionsRevenue$outboundSchema;\n  /** @deprecated use `NewSubscriptionsRevenue$Outbound` instead. */\n  export type Outbound = NewSubscriptionsRevenue$Outbound;\n}\n\nexport function newSubscriptionsRevenueToJSON(\n  newSubscriptionsRevenue: NewSubscriptionsRevenue,\n): string {\n  return JSON.stringify(\n    NewSubscriptionsRevenue$outboundSchema.parse(newSubscriptionsRevenue),\n  );\n}\n\nexport function newSubscriptionsRevenueFromJSON(\n  jsonString: string,\n): SafeParseResult<NewSubscriptionsRevenue, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => NewSubscriptionsRevenue$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'NewSubscriptionsRevenue' from JSON`,\n  );\n}\n\n/** @internal */\nexport const RenewedSubscriptions$inboundSchema: z.ZodType<\n  RenewedSubscriptions,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.number().int(), z.number()]);\n\n/** @internal */\nexport type RenewedSubscriptions$Outbound = number | number;\n\n/** @internal */\nexport const RenewedSubscriptions$outboundSchema: z.ZodType<\n  RenewedSubscriptions$Outbound,\n  z.ZodTypeDef,\n  RenewedSubscriptions\n> = z.union([z.number().int(), z.number()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace RenewedSubscriptions$ {\n  /** @deprecated use `RenewedSubscriptions$inboundSchema` instead. */\n  export const inboundSchema = RenewedSubscriptions$inboundSchema;\n  /** @deprecated use `RenewedSubscriptions$outboundSchema` instead. */\n  export const outboundSchema = RenewedSubscriptions$outboundSchema;\n  /** @deprecated use `RenewedSubscriptions$Outbound` instead. */\n  export type Outbound = RenewedSubscriptions$Outbound;\n}\n\nexport function renewedSubscriptionsToJSON(\n  renewedSubscriptions: RenewedSubscriptions,\n): string {\n  return JSON.stringify(\n    RenewedSubscriptions$outboundSchema.parse(renewedSubscriptions),\n  );\n}\n\nexport function renewedSubscriptionsFromJSON(\n  jsonString: string,\n): SafeParseResult<RenewedSubscriptions, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => RenewedSubscriptions$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'RenewedSubscriptions' from JSON`,\n  );\n}\n\n/** @internal */\nexport const RenewedSubscriptionsRevenue$inboundSchema: z.ZodType<\n  RenewedSubscriptionsRevenue,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.number().int(), z.number()]);\n\n/** @internal */\nexport type RenewedSubscriptionsRevenue$Outbound = number | number;\n\n/** @internal */\nexport const RenewedSubscriptionsRevenue$outboundSchema: z.ZodType<\n  RenewedSubscriptionsRevenue$Outbound,\n  z.ZodTypeDef,\n  RenewedSubscriptionsRevenue\n> = z.union([z.number().int(), z.number()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace RenewedSubscriptionsRevenue$ {\n  /** @deprecated use `RenewedSubscriptionsRevenue$inboundSchema` instead. */\n  export const inboundSchema = RenewedSubscriptionsRevenue$inboundSchema;\n  /** @deprecated use `RenewedSubscriptionsRevenue$outboundSchema` instead. */\n  export const outboundSchema = RenewedSubscriptionsRevenue$outboundSchema;\n  /** @deprecated use `RenewedSubscriptionsRevenue$Outbound` instead. */\n  export type Outbound = RenewedSubscriptionsRevenue$Outbound;\n}\n\nexport function renewedSubscriptionsRevenueToJSON(\n  renewedSubscriptionsRevenue: RenewedSubscriptionsRevenue,\n): string {\n  return JSON.stringify(\n    RenewedSubscriptionsRevenue$outboundSchema.parse(\n      renewedSubscriptionsRevenue,\n    ),\n  );\n}\n\nexport function renewedSubscriptionsRevenueFromJSON(\n  jsonString: string,\n): SafeParseResult<RenewedSubscriptionsRevenue, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => RenewedSubscriptionsRevenue$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'RenewedSubscriptionsRevenue' from JSON`,\n  );\n}\n\n/** @internal */\nexport const ActiveSubscriptions$inboundSchema: z.ZodType<\n  ActiveSubscriptions,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.number().int(), z.number()]);\n\n/** @internal */\nexport type ActiveSubscriptions$Outbound = number | number;\n\n/** @internal */\nexport const ActiveSubscriptions$outboundSchema: z.ZodType<\n  ActiveSubscriptions$Outbound,\n  z.ZodTypeDef,\n  ActiveSubscriptions\n> = z.union([z.number().int(), z.number()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace ActiveSubscriptions$ {\n  /** @deprecated use `ActiveSubscriptions$inboundSchema` instead. */\n  export const inboundSchema = ActiveSubscriptions$inboundSchema;\n  /** @deprecated use `ActiveSubscriptions$outboundSchema` instead. */\n  export const outboundSchema = ActiveSubscriptions$outboundSchema;\n  /** @deprecated use `ActiveSubscriptions$Outbound` instead. */\n  export type Outbound = ActiveSubscriptions$Outbound;\n}\n\nexport function activeSubscriptionsToJSON(\n  activeSubscriptions: ActiveSubscriptions,\n): string {\n  return JSON.stringify(\n    ActiveSubscriptions$outboundSchema.parse(activeSubscriptions),\n  );\n}\n\nexport function activeSubscriptionsFromJSON(\n  jsonString: string,\n): SafeParseResult<ActiveSubscriptions, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => ActiveSubscriptions$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'ActiveSubscriptions' from JSON`,\n  );\n}\n\n/** @internal */\nexport const MonthlyRecurringRevenue$inboundSchema: z.ZodType<\n  MonthlyRecurringRevenue,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.number().int(), z.number()]);\n\n/** @internal */\nexport type MonthlyRecurringRevenue$Outbound = number | number;\n\n/** @internal */\nexport const MonthlyRecurringRevenue$outboundSchema: z.ZodType<\n  MonthlyRecurringRevenue$Outbound,\n  z.ZodTypeDef,\n  MonthlyRecurringRevenue\n> = z.union([z.number().int(), z.number()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace MonthlyRecurringRevenue$ {\n  /** @deprecated use `MonthlyRecurringRevenue$inboundSchema` instead. */\n  export const inboundSchema = MonthlyRecurringRevenue$inboundSchema;\n  /** @deprecated use `MonthlyRecurringRevenue$outboundSchema` instead. */\n  export const outboundSchema = MonthlyRecurringRevenue$outboundSchema;\n  /** @deprecated use `MonthlyRecurringRevenue$Outbound` instead. */\n  export type Outbound = MonthlyRecurringRevenue$Outbound;\n}\n\nexport function monthlyRecurringRevenueToJSON(\n  monthlyRecurringRevenue: MonthlyRecurringRevenue,\n): string {\n  return JSON.stringify(\n    MonthlyRecurringRevenue$outboundSchema.parse(monthlyRecurringRevenue),\n  );\n}\n\nexport function monthlyRecurringRevenueFromJSON(\n  jsonString: string,\n): SafeParseResult<MonthlyRecurringRevenue, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => MonthlyRecurringRevenue$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'MonthlyRecurringRevenue' from JSON`,\n  );\n}\n\n/** @internal */\nexport const Checkouts$inboundSchema: z.ZodType<\n  Checkouts,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.number().int(), z.number()]);\n\n/** @internal */\nexport type Checkouts$Outbound = number | number;\n\n/** @internal */\nexport const Checkouts$outboundSchema: z.ZodType<\n  Checkouts$Outbound,\n  z.ZodTypeDef,\n  Checkouts\n> = z.union([z.number().int(), z.number()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace Checkouts$ {\n  /** @deprecated use `Checkouts$inboundSchema` instead. */\n  export const inboundSchema = Checkouts$inboundSchema;\n  /** @deprecated use `Checkouts$outboundSchema` instead. */\n  export const outboundSchema = Checkouts$outboundSchema;\n  /** @deprecated use `Checkouts$Outbound` instead. */\n  export type Outbound = Checkouts$Outbound;\n}\n\nexport function checkoutsToJSON(checkouts: Checkouts): string {\n  return JSON.stringify(Checkouts$outboundSchema.parse(checkouts));\n}\n\nexport function checkoutsFromJSON(\n  jsonString: string,\n): SafeParseResult<Checkouts, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => Checkouts$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'Checkouts' from JSON`,\n  );\n}\n\n/** @internal */\nexport const SucceededCheckouts$inboundSchema: z.ZodType<\n  SucceededCheckouts,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.number().int(), z.number()]);\n\n/** @internal */\nexport type SucceededCheckouts$Outbound = number | number;\n\n/** @internal */\nexport const SucceededCheckouts$outboundSchema: z.ZodType<\n  SucceededCheckouts$Outbound,\n  z.ZodTypeDef,\n  SucceededCheckouts\n> = z.union([z.number().int(), z.number()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace SucceededCheckouts$ {\n  /** @deprecated use `SucceededCheckouts$inboundSchema` instead. */\n  export const inboundSchema = SucceededCheckouts$inboundSchema;\n  /** @deprecated use `SucceededCheckouts$outboundSchema` instead. */\n  export const outboundSchema = SucceededCheckouts$outboundSchema;\n  /** @deprecated use `SucceededCheckouts$Outbound` instead. */\n  export type Outbound = SucceededCheckouts$Outbound;\n}\n\nexport function succeededCheckoutsToJSON(\n  succeededCheckouts: SucceededCheckouts,\n): string {\n  return JSON.stringify(\n    SucceededCheckouts$outboundSchema.parse(succeededCheckouts),\n  );\n}\n\nexport function succeededCheckoutsFromJSON(\n  jsonString: string,\n): SafeParseResult<SucceededCheckouts, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => SucceededCheckouts$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'SucceededCheckouts' from JSON`,\n  );\n}\n\n/** @internal */\nexport const CheckoutsConversion$inboundSchema: z.ZodType<\n  CheckoutsConversion,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.number().int(), z.number()]);\n\n/** @internal */\nexport type CheckoutsConversion$Outbound = number | number;\n\n/** @internal */\nexport const CheckoutsConversion$outboundSchema: z.ZodType<\n  CheckoutsConversion$Outbound,\n  z.ZodTypeDef,\n  CheckoutsConversion\n> = z.union([z.number().int(), z.number()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CheckoutsConversion$ {\n  /** @deprecated use `CheckoutsConversion$inboundSchema` instead. */\n  export const inboundSchema = CheckoutsConversion$inboundSchema;\n  /** @deprecated use `CheckoutsConversion$outboundSchema` instead. */\n  export const outboundSchema = CheckoutsConversion$outboundSchema;\n  /** @deprecated use `CheckoutsConversion$Outbound` instead. */\n  export type Outbound = CheckoutsConversion$Outbound;\n}\n\nexport function checkoutsConversionToJSON(\n  checkoutsConversion: CheckoutsConversion,\n): string {\n  return JSON.stringify(\n    CheckoutsConversion$outboundSchema.parse(checkoutsConversion),\n  );\n}\n\nexport function checkoutsConversionFromJSON(\n  jsonString: string,\n): SafeParseResult<CheckoutsConversion, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CheckoutsConversion$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CheckoutsConversion' from JSON`,\n  );\n}\n\n/** @internal */\nexport const MetricPeriod$inboundSchema: z.ZodType<\n  MetricPeriod,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  timestamp: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  orders: z.union([z.number().int(), z.number()]),\n  revenue: z.union([z.number().int(), z.number()]),\n  cumulative_revenue: z.union([z.number().int(), z.number()]),\n  average_order_value: z.union([z.number().int(), z.number()]),\n  one_time_products: z.union([z.number().int(), z.number()]),\n  one_time_products_revenue: z.union([z.number().int(), z.number()]),\n  new_subscriptions: z.union([z.number().int(), z.number()]),\n  new_subscriptions_revenue: z.union([z.number().int(), z.number()]),\n  renewed_subscriptions: z.union([z.number().int(), z.number()]),\n  renewed_subscriptions_revenue: z.union([z.number().int(), z.number()]),\n  active_subscriptions: z.union([z.number().int(), z.number()]),\n  monthly_recurring_revenue: z.union([z.number().int(), z.number()]),\n  checkouts: z.union([z.number().int(), z.number()]),\n  succeeded_checkouts: z.union([z.number().int(), z.number()]),\n  checkouts_conversion: z.union([z.number().int(), z.number()]),\n}).transform((v) => {\n  return remap$(v, {\n    \"cumulative_revenue\": \"cumulativeRevenue\",\n    \"average_order_value\": \"averageOrderValue\",\n    \"one_time_products\": \"oneTimeProducts\",\n    \"one_time_products_revenue\": \"oneTimeProductsRevenue\",\n    \"new_subscriptions\": \"newSubscriptions\",\n    \"new_subscriptions_revenue\": \"newSubscriptionsRevenue\",\n    \"renewed_subscriptions\": \"renewedSubscriptions\",\n    \"renewed_subscriptions_revenue\": \"renewedSubscriptionsRevenue\",\n    \"active_subscriptions\": \"activeSubscriptions\",\n    \"monthly_recurring_revenue\": \"monthlyRecurringRevenue\",\n    \"succeeded_checkouts\": \"succeededCheckouts\",\n    \"checkouts_conversion\": \"checkoutsConversion\",\n  });\n});\n\n/** @internal */\nexport type MetricPeriod$Outbound = {\n  timestamp: string;\n  orders: number | number;\n  revenue: number | number;\n  cumulative_revenue: number | number;\n  average_order_value: number | number;\n  one_time_products: number | number;\n  one_time_products_revenue: number | number;\n  new_subscriptions: number | number;\n  new_subscriptions_revenue: number | number;\n  renewed_subscriptions: number | number;\n  renewed_subscriptions_revenue: number | number;\n  active_subscriptions: number | number;\n  monthly_recurring_revenue: number | number;\n  checkouts: number | number;\n  succeeded_checkouts: number | number;\n  checkouts_conversion: number | number;\n};\n\n/** @internal */\nexport const MetricPeriod$outboundSchema: z.ZodType<\n  MetricPeriod$Outbound,\n  z.ZodTypeDef,\n  MetricPeriod\n> = z.object({\n  timestamp: z.date().transform(v => v.toISOString()),\n  orders: z.union([z.number().int(), z.number()]),\n  revenue: z.union([z.number().int(), z.number()]),\n  cumulativeRevenue: z.union([z.number().int(), z.number()]),\n  averageOrderValue: z.union([z.number().int(), z.number()]),\n  oneTimeProducts: z.union([z.number().int(), z.number()]),\n  oneTimeProductsRevenue: z.union([z.number().int(), z.number()]),\n  newSubscriptions: z.union([z.number().int(), z.number()]),\n  newSubscriptionsRevenue: z.union([z.number().int(), z.number()]),\n  renewedSubscriptions: z.union([z.number().int(), z.number()]),\n  renewedSubscriptionsRevenue: z.union([z.number().int(), z.number()]),\n  activeSubscriptions: z.union([z.number().int(), z.number()]),\n  monthlyRecurringRevenue: z.union([z.number().int(), z.number()]),\n  checkouts: z.union([z.number().int(), z.number()]),\n  succeededCheckouts: z.union([z.number().int(), z.number()]),\n  checkoutsConversion: z.union([z.number().int(), z.number()]),\n}).transform((v) => {\n  return remap$(v, {\n    cumulativeRevenue: \"cumulative_revenue\",\n    averageOrderValue: \"average_order_value\",\n    oneTimeProducts: \"one_time_products\",\n    oneTimeProductsRevenue: \"one_time_products_revenue\",\n    newSubscriptions: \"new_subscriptions\",\n    newSubscriptionsRevenue: \"new_subscriptions_revenue\",\n    renewedSubscriptions: \"renewed_subscriptions\",\n    renewedSubscriptionsRevenue: \"renewed_subscriptions_revenue\",\n    activeSubscriptions: \"active_subscriptions\",\n    monthlyRecurringRevenue: \"monthly_recurring_revenue\",\n    succeededCheckouts: \"succeeded_checkouts\",\n    checkoutsConversion: \"checkouts_conversion\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace MetricPeriod$ {\n  /** @deprecated use `MetricPeriod$inboundSchema` instead. */\n  export const inboundSchema = MetricPeriod$inboundSchema;\n  /** @deprecated use `MetricPeriod$outboundSchema` instead. */\n  export const outboundSchema = MetricPeriod$outboundSchema;\n  /** @deprecated use `MetricPeriod$Outbound` instead. */\n  export type Outbound = MetricPeriod$Outbound;\n}\n\nexport function metricPeriodToJSON(metricPeriod: MetricPeriod): string {\n  return JSON.stringify(MetricPeriod$outboundSchema.parse(metricPeriod));\n}\n\nexport function metricPeriodFromJSON(\n  jsonString: string,\n): SafeParseResult<MetricPeriod, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => MetricPeriod$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'MetricPeriod' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 24457, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 24463, "column": 0}, "map": {"version":3,"file":"metrictype.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/metrictype.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { ClosedEnum } from \"../../types/enums.js\";\n\nexport const MetricType = {\n  Scalar: \"scalar\",\n  Currency: \"currency\",\n  Percentage: \"percentage\",\n} as const;\nexport type MetricType = ClosedEnum<typeof MetricType>;\n\n/** @internal */\nexport const MetricType$inboundSchema: z.ZodNativeEnum<typeof MetricType> = z\n  .nativeEnum(MetricType);\n\n/** @internal */\nexport const MetricType$outboundSchema: z.ZodNativeEnum<typeof MetricType> =\n  MetricType$inboundSchema;\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace MetricType$ {\n  /** @deprecated use `MetricType$inboundSchema` instead. */\n  export const inboundSchema = MetricType$inboundSchema;\n  /** @deprecated use `MetricType$outboundSchema` instead. */\n  export const outboundSchema = MetricType$outboundSchema;\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;AAGlB,MAAM,UAAU,GAAG;IACxB,MAAM,EAAE,QAAQ;IAChB,QAAQ,EAAE,UAAU;IACpB,UAAU,EAAE,YAAY;CAChB,CAAC;AAIJ,MAAM,wBAAwB,GAAuC,CAAC,6IAC1E,UAAU,CAAC,UAAU,CAAC,CAAC;AAGnB,MAAM,yBAAyB,GACpC,wBAAwB,CAAC;AAMrB,IAAW,WAAW,CAK3B;AALD,CAAA,SAAiB,WAAW;IAC1B,wDAAA,EAA0D,CAC7C,YAAA,aAAa,GAAG,wBAAwB,CAAC;IACtD,yDAAA,EAA2D,CAC9C,YAAA,cAAc,GAAG,yBAAyB,CAAC;AAC1D,CAAC,EALgB,WAAW,IAAA,CAAX,WAAW,GAAA,CAAA,CAAA,GAK3B","ignoreList":[0]}},
    {"offset": {"line": 24486, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 24492, "column": 0}, "map": {"version":3,"file":"metric.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/metric.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  MetricType,\n  MetricType$inboundSchema,\n  MetricType$outboundSchema,\n} from \"./metrictype.js\";\n\n/**\n * Information about a metric.\n */\nexport type Metric = {\n  /**\n   * Unique identifier for the metric.\n   */\n  slug: string;\n  /**\n   * Human-readable name for the metric.\n   */\n  displayName: string;\n  type: MetricType;\n};\n\n/** @internal */\nexport const Metric$inboundSchema: z.ZodType<Metric, z.ZodTypeDef, unknown> = z\n  .object({\n    slug: z.string(),\n    display_name: z.string(),\n    type: MetricType$inboundSchema,\n  }).transform((v) => {\n    return remap$(v, {\n      \"display_name\": \"displayName\",\n    });\n  });\n\n/** @internal */\nexport type Metric$Outbound = {\n  slug: string;\n  display_name: string;\n  type: string;\n};\n\n/** @internal */\nexport const Metric$outboundSchema: z.ZodType<\n  Metric$Outbound,\n  z.ZodTypeDef,\n  Metric\n> = z.object({\n  slug: z.string(),\n  displayName: z.string(),\n  type: MetricType$outboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    displayName: \"display_name\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace Metric$ {\n  /** @deprecated use `Metric$inboundSchema` instead. */\n  export const inboundSchema = Metric$inboundSchema;\n  /** @deprecated use `Metric$outboundSchema` instead. */\n  export const outboundSchema = Metric$outboundSchema;\n  /** @deprecated use `Metric$Outbound` instead. */\n  export type Outbound = Metric$Outbound;\n}\n\nexport function metricToJSON(metric: Metric): string {\n  return JSON.stringify(Metric$outboundSchema.parse(metric));\n}\n\nexport function metricFromJSON(\n  jsonString: string,\n): SafeParseResult<Metric, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => Metric$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'Metric' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,wBAAwB,EACxB,yBAAyB,GAC1B,MAAM,iBAAiB,CAAC;;;;;;AAkBlB,MAAM,oBAAoB,GAA6C,CAAC,6IAC5E,MAAM,CAAC;IACN,IAAI,EAAE,CAAC,6IAAC,MAAM,EAAE;IAChB,YAAY,EAAE,CAAC,6IAAC,MAAM,EAAE;IACxB,IAAI,8LAAE,2BAAwB;CAC/B,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,cAAc,EAAE,aAAa;KAC9B,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAUE,MAAM,qBAAqB,GAI9B,CAAC,6IAAC,MAAM,CAAC;IACX,IAAI,EAAE,CAAC,6IAAC,MAAM,EAAE;IAChB,WAAW,EAAE,CAAC,6IAAC,MAAM,EAAE;IACvB,IAAI,8LAAE,4BAAyB;CAChC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAM,AAAN,EAAO,CAAC,EAAE;QACf,WAAW,EAAE,cAAc;KAC5B,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,OAAO,CAOvB;AAPD,CAAA,SAAiB,OAAO;IACtB,oDAAA,EAAsD,CACzC,QAAA,aAAa,GAAG,oBAAoB,CAAC;IAClD,qDAAA,EAAuD,CAC1C,QAAA,cAAc,GAAG,qBAAqB,CAAC;AAGtD,CAAC,EAPgB,OAAO,IAAA,CAAP,OAAO,GAAA,CAAA,CAAA,GAOvB;AAEK,SAAU,YAAY,CAAC,MAAc;IACzC,OAAO,IAAI,CAAC,SAAS,CAAC,qBAAqB,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;AAC7D,CAAC;AAEK,SAAU,cAAc,CAC5B,UAAkB;IAElB,mLAAO,YAAS,AAAT,EACL,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,mBAAqB,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAChD,CAAA,kCAAA,CAAoC,CACrC,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 24539, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 24545, "column": 0}, "map": {"version":3,"file":"metrics.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/metrics.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  Metric,\n  Metric$inboundSchema,\n  Metric$Outbound,\n  Metric$outboundSchema,\n} from \"./metric.js\";\n\nexport type Metrics = {\n  /**\n   * Information about a metric.\n   */\n  orders: Metric;\n  /**\n   * Information about a metric.\n   */\n  revenue: Metric;\n  /**\n   * Information about a metric.\n   */\n  cumulativeRevenue: Metric;\n  /**\n   * Information about a metric.\n   */\n  averageOrderValue: Metric;\n  /**\n   * Information about a metric.\n   */\n  oneTimeProducts: Metric;\n  /**\n   * Information about a metric.\n   */\n  oneTimeProductsRevenue: Metric;\n  /**\n   * Information about a metric.\n   */\n  newSubscriptions: Metric;\n  /**\n   * Information about a metric.\n   */\n  newSubscriptionsRevenue: Metric;\n  /**\n   * Information about a metric.\n   */\n  renewedSubscriptions: Metric;\n  /**\n   * Information about a metric.\n   */\n  renewedSubscriptionsRevenue: Metric;\n  /**\n   * Information about a metric.\n   */\n  activeSubscriptions: Metric;\n  /**\n   * Information about a metric.\n   */\n  monthlyRecurringRevenue: Metric;\n  /**\n   * Information about a metric.\n   */\n  checkouts: Metric;\n  /**\n   * Information about a metric.\n   */\n  succeededCheckouts: Metric;\n  /**\n   * Information about a metric.\n   */\n  checkoutsConversion: Metric;\n};\n\n/** @internal */\nexport const Metrics$inboundSchema: z.ZodType<Metrics, z.ZodTypeDef, unknown> =\n  z.object({\n    orders: Metric$inboundSchema,\n    revenue: Metric$inboundSchema,\n    cumulative_revenue: Metric$inboundSchema,\n    average_order_value: Metric$inboundSchema,\n    one_time_products: Metric$inboundSchema,\n    one_time_products_revenue: Metric$inboundSchema,\n    new_subscriptions: Metric$inboundSchema,\n    new_subscriptions_revenue: Metric$inboundSchema,\n    renewed_subscriptions: Metric$inboundSchema,\n    renewed_subscriptions_revenue: Metric$inboundSchema,\n    active_subscriptions: Metric$inboundSchema,\n    monthly_recurring_revenue: Metric$inboundSchema,\n    checkouts: Metric$inboundSchema,\n    succeeded_checkouts: Metric$inboundSchema,\n    checkouts_conversion: Metric$inboundSchema,\n  }).transform((v) => {\n    return remap$(v, {\n      \"cumulative_revenue\": \"cumulativeRevenue\",\n      \"average_order_value\": \"averageOrderValue\",\n      \"one_time_products\": \"oneTimeProducts\",\n      \"one_time_products_revenue\": \"oneTimeProductsRevenue\",\n      \"new_subscriptions\": \"newSubscriptions\",\n      \"new_subscriptions_revenue\": \"newSubscriptionsRevenue\",\n      \"renewed_subscriptions\": \"renewedSubscriptions\",\n      \"renewed_subscriptions_revenue\": \"renewedSubscriptionsRevenue\",\n      \"active_subscriptions\": \"activeSubscriptions\",\n      \"monthly_recurring_revenue\": \"monthlyRecurringRevenue\",\n      \"succeeded_checkouts\": \"succeededCheckouts\",\n      \"checkouts_conversion\": \"checkoutsConversion\",\n    });\n  });\n\n/** @internal */\nexport type Metrics$Outbound = {\n  orders: Metric$Outbound;\n  revenue: Metric$Outbound;\n  cumulative_revenue: Metric$Outbound;\n  average_order_value: Metric$Outbound;\n  one_time_products: Metric$Outbound;\n  one_time_products_revenue: Metric$Outbound;\n  new_subscriptions: Metric$Outbound;\n  new_subscriptions_revenue: Metric$Outbound;\n  renewed_subscriptions: Metric$Outbound;\n  renewed_subscriptions_revenue: Metric$Outbound;\n  active_subscriptions: Metric$Outbound;\n  monthly_recurring_revenue: Metric$Outbound;\n  checkouts: Metric$Outbound;\n  succeeded_checkouts: Metric$Outbound;\n  checkouts_conversion: Metric$Outbound;\n};\n\n/** @internal */\nexport const Metrics$outboundSchema: z.ZodType<\n  Metrics$Outbound,\n  z.ZodTypeDef,\n  Metrics\n> = z.object({\n  orders: Metric$outboundSchema,\n  revenue: Metric$outboundSchema,\n  cumulativeRevenue: Metric$outboundSchema,\n  averageOrderValue: Metric$outboundSchema,\n  oneTimeProducts: Metric$outboundSchema,\n  oneTimeProductsRevenue: Metric$outboundSchema,\n  newSubscriptions: Metric$outboundSchema,\n  newSubscriptionsRevenue: Metric$outboundSchema,\n  renewedSubscriptions: Metric$outboundSchema,\n  renewedSubscriptionsRevenue: Metric$outboundSchema,\n  activeSubscriptions: Metric$outboundSchema,\n  monthlyRecurringRevenue: Metric$outboundSchema,\n  checkouts: Metric$outboundSchema,\n  succeededCheckouts: Metric$outboundSchema,\n  checkoutsConversion: Metric$outboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    cumulativeRevenue: \"cumulative_revenue\",\n    averageOrderValue: \"average_order_value\",\n    oneTimeProducts: \"one_time_products\",\n    oneTimeProductsRevenue: \"one_time_products_revenue\",\n    newSubscriptions: \"new_subscriptions\",\n    newSubscriptionsRevenue: \"new_subscriptions_revenue\",\n    renewedSubscriptions: \"renewed_subscriptions\",\n    renewedSubscriptionsRevenue: \"renewed_subscriptions_revenue\",\n    activeSubscriptions: \"active_subscriptions\",\n    monthlyRecurringRevenue: \"monthly_recurring_revenue\",\n    succeededCheckouts: \"succeeded_checkouts\",\n    checkoutsConversion: \"checkouts_conversion\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace Metrics$ {\n  /** @deprecated use `Metrics$inboundSchema` instead. */\n  export const inboundSchema = Metrics$inboundSchema;\n  /** @deprecated use `Metrics$outboundSchema` instead. */\n  export const outboundSchema = Metrics$outboundSchema;\n  /** @deprecated use `Metrics$Outbound` instead. */\n  export type Outbound = Metrics$Outbound;\n}\n\nexport function metricsToJSON(metrics: Metrics): string {\n  return JSON.stringify(Metrics$outboundSchema.parse(metrics));\n}\n\nexport function metricsFromJSON(\n  jsonString: string,\n): SafeParseResult<Metrics, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => Metrics$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'Metrics' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 24638, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 24644, "column": 0}, "map": {"version":3,"file":"metricstotals.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/metricstotals.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport type MetricsTotalsOrders = number | number;\n\nexport type MetricsTotalsRevenue = number | number;\n\nexport type MetricsTotalsCumulativeRevenue = number | number;\n\nexport type MetricsTotalsAverageOrderValue = number | number;\n\nexport type MetricsTotalsOneTimeProducts = number | number;\n\nexport type MetricsTotalsOneTimeProductsRevenue = number | number;\n\nexport type MetricsTotalsNewSubscriptions = number | number;\n\nexport type MetricsTotalsNewSubscriptionsRevenue = number | number;\n\nexport type MetricsTotalsRenewedSubscriptions = number | number;\n\nexport type MetricsTotalsRenewedSubscriptionsRevenue = number | number;\n\nexport type MetricsTotalsActiveSubscriptions = number | number;\n\nexport type MetricsTotalsMonthlyRecurringRevenue = number | number;\n\nexport type MetricsTotalsCheckouts = number | number;\n\nexport type MetricsTotalsSucceededCheckouts = number | number;\n\nexport type MetricsTotalsCheckoutsConversion = number | number;\n\nexport type MetricsTotals = {\n  orders: number | number;\n  revenue: number | number;\n  cumulativeRevenue: number | number;\n  averageOrderValue: number | number;\n  oneTimeProducts: number | number;\n  oneTimeProductsRevenue: number | number;\n  newSubscriptions: number | number;\n  newSubscriptionsRevenue: number | number;\n  renewedSubscriptions: number | number;\n  renewedSubscriptionsRevenue: number | number;\n  activeSubscriptions: number | number;\n  monthlyRecurringRevenue: number | number;\n  checkouts: number | number;\n  succeededCheckouts: number | number;\n  checkoutsConversion: number | number;\n};\n\n/** @internal */\nexport const MetricsTotalsOrders$inboundSchema: z.ZodType<\n  MetricsTotalsOrders,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.number().int(), z.number()]);\n\n/** @internal */\nexport type MetricsTotalsOrders$Outbound = number | number;\n\n/** @internal */\nexport const MetricsTotalsOrders$outboundSchema: z.ZodType<\n  MetricsTotalsOrders$Outbound,\n  z.ZodTypeDef,\n  MetricsTotalsOrders\n> = z.union([z.number().int(), z.number()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace MetricsTotalsOrders$ {\n  /** @deprecated use `MetricsTotalsOrders$inboundSchema` instead. */\n  export const inboundSchema = MetricsTotalsOrders$inboundSchema;\n  /** @deprecated use `MetricsTotalsOrders$outboundSchema` instead. */\n  export const outboundSchema = MetricsTotalsOrders$outboundSchema;\n  /** @deprecated use `MetricsTotalsOrders$Outbound` instead. */\n  export type Outbound = MetricsTotalsOrders$Outbound;\n}\n\nexport function metricsTotalsOrdersToJSON(\n  metricsTotalsOrders: MetricsTotalsOrders,\n): string {\n  return JSON.stringify(\n    MetricsTotalsOrders$outboundSchema.parse(metricsTotalsOrders),\n  );\n}\n\nexport function metricsTotalsOrdersFromJSON(\n  jsonString: string,\n): SafeParseResult<MetricsTotalsOrders, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => MetricsTotalsOrders$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'MetricsTotalsOrders' from JSON`,\n  );\n}\n\n/** @internal */\nexport const MetricsTotalsRevenue$inboundSchema: z.ZodType<\n  MetricsTotalsRevenue,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.number().int(), z.number()]);\n\n/** @internal */\nexport type MetricsTotalsRevenue$Outbound = number | number;\n\n/** @internal */\nexport const MetricsTotalsRevenue$outboundSchema: z.ZodType<\n  MetricsTotalsRevenue$Outbound,\n  z.ZodTypeDef,\n  MetricsTotalsRevenue\n> = z.union([z.number().int(), z.number()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace MetricsTotalsRevenue$ {\n  /** @deprecated use `MetricsTotalsRevenue$inboundSchema` instead. */\n  export const inboundSchema = MetricsTotalsRevenue$inboundSchema;\n  /** @deprecated use `MetricsTotalsRevenue$outboundSchema` instead. */\n  export const outboundSchema = MetricsTotalsRevenue$outboundSchema;\n  /** @deprecated use `MetricsTotalsRevenue$Outbound` instead. */\n  export type Outbound = MetricsTotalsRevenue$Outbound;\n}\n\nexport function metricsTotalsRevenueToJSON(\n  metricsTotalsRevenue: MetricsTotalsRevenue,\n): string {\n  return JSON.stringify(\n    MetricsTotalsRevenue$outboundSchema.parse(metricsTotalsRevenue),\n  );\n}\n\nexport function metricsTotalsRevenueFromJSON(\n  jsonString: string,\n): SafeParseResult<MetricsTotalsRevenue, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => MetricsTotalsRevenue$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'MetricsTotalsRevenue' from JSON`,\n  );\n}\n\n/** @internal */\nexport const MetricsTotalsCumulativeRevenue$inboundSchema: z.ZodType<\n  MetricsTotalsCumulativeRevenue,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.number().int(), z.number()]);\n\n/** @internal */\nexport type MetricsTotalsCumulativeRevenue$Outbound = number | number;\n\n/** @internal */\nexport const MetricsTotalsCumulativeRevenue$outboundSchema: z.ZodType<\n  MetricsTotalsCumulativeRevenue$Outbound,\n  z.ZodTypeDef,\n  MetricsTotalsCumulativeRevenue\n> = z.union([z.number().int(), z.number()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace MetricsTotalsCumulativeRevenue$ {\n  /** @deprecated use `MetricsTotalsCumulativeRevenue$inboundSchema` instead. */\n  export const inboundSchema = MetricsTotalsCumulativeRevenue$inboundSchema;\n  /** @deprecated use `MetricsTotalsCumulativeRevenue$outboundSchema` instead. */\n  export const outboundSchema = MetricsTotalsCumulativeRevenue$outboundSchema;\n  /** @deprecated use `MetricsTotalsCumulativeRevenue$Outbound` instead. */\n  export type Outbound = MetricsTotalsCumulativeRevenue$Outbound;\n}\n\nexport function metricsTotalsCumulativeRevenueToJSON(\n  metricsTotalsCumulativeRevenue: MetricsTotalsCumulativeRevenue,\n): string {\n  return JSON.stringify(\n    MetricsTotalsCumulativeRevenue$outboundSchema.parse(\n      metricsTotalsCumulativeRevenue,\n    ),\n  );\n}\n\nexport function metricsTotalsCumulativeRevenueFromJSON(\n  jsonString: string,\n): SafeParseResult<MetricsTotalsCumulativeRevenue, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => MetricsTotalsCumulativeRevenue$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'MetricsTotalsCumulativeRevenue' from JSON`,\n  );\n}\n\n/** @internal */\nexport const MetricsTotalsAverageOrderValue$inboundSchema: z.ZodType<\n  MetricsTotalsAverageOrderValue,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.number().int(), z.number()]);\n\n/** @internal */\nexport type MetricsTotalsAverageOrderValue$Outbound = number | number;\n\n/** @internal */\nexport const MetricsTotalsAverageOrderValue$outboundSchema: z.ZodType<\n  MetricsTotalsAverageOrderValue$Outbound,\n  z.ZodTypeDef,\n  MetricsTotalsAverageOrderValue\n> = z.union([z.number().int(), z.number()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace MetricsTotalsAverageOrderValue$ {\n  /** @deprecated use `MetricsTotalsAverageOrderValue$inboundSchema` instead. */\n  export const inboundSchema = MetricsTotalsAverageOrderValue$inboundSchema;\n  /** @deprecated use `MetricsTotalsAverageOrderValue$outboundSchema` instead. */\n  export const outboundSchema = MetricsTotalsAverageOrderValue$outboundSchema;\n  /** @deprecated use `MetricsTotalsAverageOrderValue$Outbound` instead. */\n  export type Outbound = MetricsTotalsAverageOrderValue$Outbound;\n}\n\nexport function metricsTotalsAverageOrderValueToJSON(\n  metricsTotalsAverageOrderValue: MetricsTotalsAverageOrderValue,\n): string {\n  return JSON.stringify(\n    MetricsTotalsAverageOrderValue$outboundSchema.parse(\n      metricsTotalsAverageOrderValue,\n    ),\n  );\n}\n\nexport function metricsTotalsAverageOrderValueFromJSON(\n  jsonString: string,\n): SafeParseResult<MetricsTotalsAverageOrderValue, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => MetricsTotalsAverageOrderValue$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'MetricsTotalsAverageOrderValue' from JSON`,\n  );\n}\n\n/** @internal */\nexport const MetricsTotalsOneTimeProducts$inboundSchema: z.ZodType<\n  MetricsTotalsOneTimeProducts,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.number().int(), z.number()]);\n\n/** @internal */\nexport type MetricsTotalsOneTimeProducts$Outbound = number | number;\n\n/** @internal */\nexport const MetricsTotalsOneTimeProducts$outboundSchema: z.ZodType<\n  MetricsTotalsOneTimeProducts$Outbound,\n  z.ZodTypeDef,\n  MetricsTotalsOneTimeProducts\n> = z.union([z.number().int(), z.number()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace MetricsTotalsOneTimeProducts$ {\n  /** @deprecated use `MetricsTotalsOneTimeProducts$inboundSchema` instead. */\n  export const inboundSchema = MetricsTotalsOneTimeProducts$inboundSchema;\n  /** @deprecated use `MetricsTotalsOneTimeProducts$outboundSchema` instead. */\n  export const outboundSchema = MetricsTotalsOneTimeProducts$outboundSchema;\n  /** @deprecated use `MetricsTotalsOneTimeProducts$Outbound` instead. */\n  export type Outbound = MetricsTotalsOneTimeProducts$Outbound;\n}\n\nexport function metricsTotalsOneTimeProductsToJSON(\n  metricsTotalsOneTimeProducts: MetricsTotalsOneTimeProducts,\n): string {\n  return JSON.stringify(\n    MetricsTotalsOneTimeProducts$outboundSchema.parse(\n      metricsTotalsOneTimeProducts,\n    ),\n  );\n}\n\nexport function metricsTotalsOneTimeProductsFromJSON(\n  jsonString: string,\n): SafeParseResult<MetricsTotalsOneTimeProducts, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => MetricsTotalsOneTimeProducts$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'MetricsTotalsOneTimeProducts' from JSON`,\n  );\n}\n\n/** @internal */\nexport const MetricsTotalsOneTimeProductsRevenue$inboundSchema: z.ZodType<\n  MetricsTotalsOneTimeProductsRevenue,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.number().int(), z.number()]);\n\n/** @internal */\nexport type MetricsTotalsOneTimeProductsRevenue$Outbound = number | number;\n\n/** @internal */\nexport const MetricsTotalsOneTimeProductsRevenue$outboundSchema: z.ZodType<\n  MetricsTotalsOneTimeProductsRevenue$Outbound,\n  z.ZodTypeDef,\n  MetricsTotalsOneTimeProductsRevenue\n> = z.union([z.number().int(), z.number()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace MetricsTotalsOneTimeProductsRevenue$ {\n  /** @deprecated use `MetricsTotalsOneTimeProductsRevenue$inboundSchema` instead. */\n  export const inboundSchema =\n    MetricsTotalsOneTimeProductsRevenue$inboundSchema;\n  /** @deprecated use `MetricsTotalsOneTimeProductsRevenue$outboundSchema` instead. */\n  export const outboundSchema =\n    MetricsTotalsOneTimeProductsRevenue$outboundSchema;\n  /** @deprecated use `MetricsTotalsOneTimeProductsRevenue$Outbound` instead. */\n  export type Outbound = MetricsTotalsOneTimeProductsRevenue$Outbound;\n}\n\nexport function metricsTotalsOneTimeProductsRevenueToJSON(\n  metricsTotalsOneTimeProductsRevenue: MetricsTotalsOneTimeProductsRevenue,\n): string {\n  return JSON.stringify(\n    MetricsTotalsOneTimeProductsRevenue$outboundSchema.parse(\n      metricsTotalsOneTimeProductsRevenue,\n    ),\n  );\n}\n\nexport function metricsTotalsOneTimeProductsRevenueFromJSON(\n  jsonString: string,\n): SafeParseResult<MetricsTotalsOneTimeProductsRevenue, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) =>\n      MetricsTotalsOneTimeProductsRevenue$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'MetricsTotalsOneTimeProductsRevenue' from JSON`,\n  );\n}\n\n/** @internal */\nexport const MetricsTotalsNewSubscriptions$inboundSchema: z.ZodType<\n  MetricsTotalsNewSubscriptions,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.number().int(), z.number()]);\n\n/** @internal */\nexport type MetricsTotalsNewSubscriptions$Outbound = number | number;\n\n/** @internal */\nexport const MetricsTotalsNewSubscriptions$outboundSchema: z.ZodType<\n  MetricsTotalsNewSubscriptions$Outbound,\n  z.ZodTypeDef,\n  MetricsTotalsNewSubscriptions\n> = z.union([z.number().int(), z.number()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace MetricsTotalsNewSubscriptions$ {\n  /** @deprecated use `MetricsTotalsNewSubscriptions$inboundSchema` instead. */\n  export const inboundSchema = MetricsTotalsNewSubscriptions$inboundSchema;\n  /** @deprecated use `MetricsTotalsNewSubscriptions$outboundSchema` instead. */\n  export const outboundSchema = MetricsTotalsNewSubscriptions$outboundSchema;\n  /** @deprecated use `MetricsTotalsNewSubscriptions$Outbound` instead. */\n  export type Outbound = MetricsTotalsNewSubscriptions$Outbound;\n}\n\nexport function metricsTotalsNewSubscriptionsToJSON(\n  metricsTotalsNewSubscriptions: MetricsTotalsNewSubscriptions,\n): string {\n  return JSON.stringify(\n    MetricsTotalsNewSubscriptions$outboundSchema.parse(\n      metricsTotalsNewSubscriptions,\n    ),\n  );\n}\n\nexport function metricsTotalsNewSubscriptionsFromJSON(\n  jsonString: string,\n): SafeParseResult<MetricsTotalsNewSubscriptions, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => MetricsTotalsNewSubscriptions$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'MetricsTotalsNewSubscriptions' from JSON`,\n  );\n}\n\n/** @internal */\nexport const MetricsTotalsNewSubscriptionsRevenue$inboundSchema: z.ZodType<\n  MetricsTotalsNewSubscriptionsRevenue,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.number().int(), z.number()]);\n\n/** @internal */\nexport type MetricsTotalsNewSubscriptionsRevenue$Outbound = number | number;\n\n/** @internal */\nexport const MetricsTotalsNewSubscriptionsRevenue$outboundSchema: z.ZodType<\n  MetricsTotalsNewSubscriptionsRevenue$Outbound,\n  z.ZodTypeDef,\n  MetricsTotalsNewSubscriptionsRevenue\n> = z.union([z.number().int(), z.number()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace MetricsTotalsNewSubscriptionsRevenue$ {\n  /** @deprecated use `MetricsTotalsNewSubscriptionsRevenue$inboundSchema` instead. */\n  export const inboundSchema =\n    MetricsTotalsNewSubscriptionsRevenue$inboundSchema;\n  /** @deprecated use `MetricsTotalsNewSubscriptionsRevenue$outboundSchema` instead. */\n  export const outboundSchema =\n    MetricsTotalsNewSubscriptionsRevenue$outboundSchema;\n  /** @deprecated use `MetricsTotalsNewSubscriptionsRevenue$Outbound` instead. */\n  export type Outbound = MetricsTotalsNewSubscriptionsRevenue$Outbound;\n}\n\nexport function metricsTotalsNewSubscriptionsRevenueToJSON(\n  metricsTotalsNewSubscriptionsRevenue: MetricsTotalsNewSubscriptionsRevenue,\n): string {\n  return JSON.stringify(\n    MetricsTotalsNewSubscriptionsRevenue$outboundSchema.parse(\n      metricsTotalsNewSubscriptionsRevenue,\n    ),\n  );\n}\n\nexport function metricsTotalsNewSubscriptionsRevenueFromJSON(\n  jsonString: string,\n): SafeParseResult<MetricsTotalsNewSubscriptionsRevenue, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) =>\n      MetricsTotalsNewSubscriptionsRevenue$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'MetricsTotalsNewSubscriptionsRevenue' from JSON`,\n  );\n}\n\n/** @internal */\nexport const MetricsTotalsRenewedSubscriptions$inboundSchema: z.ZodType<\n  MetricsTotalsRenewedSubscriptions,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.number().int(), z.number()]);\n\n/** @internal */\nexport type MetricsTotalsRenewedSubscriptions$Outbound = number | number;\n\n/** @internal */\nexport const MetricsTotalsRenewedSubscriptions$outboundSchema: z.ZodType<\n  MetricsTotalsRenewedSubscriptions$Outbound,\n  z.ZodTypeDef,\n  MetricsTotalsRenewedSubscriptions\n> = z.union([z.number().int(), z.number()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace MetricsTotalsRenewedSubscriptions$ {\n  /** @deprecated use `MetricsTotalsRenewedSubscriptions$inboundSchema` instead. */\n  export const inboundSchema = MetricsTotalsRenewedSubscriptions$inboundSchema;\n  /** @deprecated use `MetricsTotalsRenewedSubscriptions$outboundSchema` instead. */\n  export const outboundSchema =\n    MetricsTotalsRenewedSubscriptions$outboundSchema;\n  /** @deprecated use `MetricsTotalsRenewedSubscriptions$Outbound` instead. */\n  export type Outbound = MetricsTotalsRenewedSubscriptions$Outbound;\n}\n\nexport function metricsTotalsRenewedSubscriptionsToJSON(\n  metricsTotalsRenewedSubscriptions: MetricsTotalsRenewedSubscriptions,\n): string {\n  return JSON.stringify(\n    MetricsTotalsRenewedSubscriptions$outboundSchema.parse(\n      metricsTotalsRenewedSubscriptions,\n    ),\n  );\n}\n\nexport function metricsTotalsRenewedSubscriptionsFromJSON(\n  jsonString: string,\n): SafeParseResult<MetricsTotalsRenewedSubscriptions, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => MetricsTotalsRenewedSubscriptions$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'MetricsTotalsRenewedSubscriptions' from JSON`,\n  );\n}\n\n/** @internal */\nexport const MetricsTotalsRenewedSubscriptionsRevenue$inboundSchema: z.ZodType<\n  MetricsTotalsRenewedSubscriptionsRevenue,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.number().int(), z.number()]);\n\n/** @internal */\nexport type MetricsTotalsRenewedSubscriptionsRevenue$Outbound = number | number;\n\n/** @internal */\nexport const MetricsTotalsRenewedSubscriptionsRevenue$outboundSchema: z.ZodType<\n  MetricsTotalsRenewedSubscriptionsRevenue$Outbound,\n  z.ZodTypeDef,\n  MetricsTotalsRenewedSubscriptionsRevenue\n> = z.union([z.number().int(), z.number()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace MetricsTotalsRenewedSubscriptionsRevenue$ {\n  /** @deprecated use `MetricsTotalsRenewedSubscriptionsRevenue$inboundSchema` instead. */\n  export const inboundSchema =\n    MetricsTotalsRenewedSubscriptionsRevenue$inboundSchema;\n  /** @deprecated use `MetricsTotalsRenewedSubscriptionsRevenue$outboundSchema` instead. */\n  export const outboundSchema =\n    MetricsTotalsRenewedSubscriptionsRevenue$outboundSchema;\n  /** @deprecated use `MetricsTotalsRenewedSubscriptionsRevenue$Outbound` instead. */\n  export type Outbound = MetricsTotalsRenewedSubscriptionsRevenue$Outbound;\n}\n\nexport function metricsTotalsRenewedSubscriptionsRevenueToJSON(\n  metricsTotalsRenewedSubscriptionsRevenue:\n    MetricsTotalsRenewedSubscriptionsRevenue,\n): string {\n  return JSON.stringify(\n    MetricsTotalsRenewedSubscriptionsRevenue$outboundSchema.parse(\n      metricsTotalsRenewedSubscriptionsRevenue,\n    ),\n  );\n}\n\nexport function metricsTotalsRenewedSubscriptionsRevenueFromJSON(\n  jsonString: string,\n): SafeParseResult<\n  MetricsTotalsRenewedSubscriptionsRevenue,\n  SDKValidationError\n> {\n  return safeParse(\n    jsonString,\n    (x) =>\n      MetricsTotalsRenewedSubscriptionsRevenue$inboundSchema.parse(\n        JSON.parse(x),\n      ),\n    `Failed to parse 'MetricsTotalsRenewedSubscriptionsRevenue' from JSON`,\n  );\n}\n\n/** @internal */\nexport const MetricsTotalsActiveSubscriptions$inboundSchema: z.ZodType<\n  MetricsTotalsActiveSubscriptions,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.number().int(), z.number()]);\n\n/** @internal */\nexport type MetricsTotalsActiveSubscriptions$Outbound = number | number;\n\n/** @internal */\nexport const MetricsTotalsActiveSubscriptions$outboundSchema: z.ZodType<\n  MetricsTotalsActiveSubscriptions$Outbound,\n  z.ZodTypeDef,\n  MetricsTotalsActiveSubscriptions\n> = z.union([z.number().int(), z.number()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace MetricsTotalsActiveSubscriptions$ {\n  /** @deprecated use `MetricsTotalsActiveSubscriptions$inboundSchema` instead. */\n  export const inboundSchema = MetricsTotalsActiveSubscriptions$inboundSchema;\n  /** @deprecated use `MetricsTotalsActiveSubscriptions$outboundSchema` instead. */\n  export const outboundSchema = MetricsTotalsActiveSubscriptions$outboundSchema;\n  /** @deprecated use `MetricsTotalsActiveSubscriptions$Outbound` instead. */\n  export type Outbound = MetricsTotalsActiveSubscriptions$Outbound;\n}\n\nexport function metricsTotalsActiveSubscriptionsToJSON(\n  metricsTotalsActiveSubscriptions: MetricsTotalsActiveSubscriptions,\n): string {\n  return JSON.stringify(\n    MetricsTotalsActiveSubscriptions$outboundSchema.parse(\n      metricsTotalsActiveSubscriptions,\n    ),\n  );\n}\n\nexport function metricsTotalsActiveSubscriptionsFromJSON(\n  jsonString: string,\n): SafeParseResult<MetricsTotalsActiveSubscriptions, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => MetricsTotalsActiveSubscriptions$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'MetricsTotalsActiveSubscriptions' from JSON`,\n  );\n}\n\n/** @internal */\nexport const MetricsTotalsMonthlyRecurringRevenue$inboundSchema: z.ZodType<\n  MetricsTotalsMonthlyRecurringRevenue,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.number().int(), z.number()]);\n\n/** @internal */\nexport type MetricsTotalsMonthlyRecurringRevenue$Outbound = number | number;\n\n/** @internal */\nexport const MetricsTotalsMonthlyRecurringRevenue$outboundSchema: z.ZodType<\n  MetricsTotalsMonthlyRecurringRevenue$Outbound,\n  z.ZodTypeDef,\n  MetricsTotalsMonthlyRecurringRevenue\n> = z.union([z.number().int(), z.number()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace MetricsTotalsMonthlyRecurringRevenue$ {\n  /** @deprecated use `MetricsTotalsMonthlyRecurringRevenue$inboundSchema` instead. */\n  export const inboundSchema =\n    MetricsTotalsMonthlyRecurringRevenue$inboundSchema;\n  /** @deprecated use `MetricsTotalsMonthlyRecurringRevenue$outboundSchema` instead. */\n  export const outboundSchema =\n    MetricsTotalsMonthlyRecurringRevenue$outboundSchema;\n  /** @deprecated use `MetricsTotalsMonthlyRecurringRevenue$Outbound` instead. */\n  export type Outbound = MetricsTotalsMonthlyRecurringRevenue$Outbound;\n}\n\nexport function metricsTotalsMonthlyRecurringRevenueToJSON(\n  metricsTotalsMonthlyRecurringRevenue: MetricsTotalsMonthlyRecurringRevenue,\n): string {\n  return JSON.stringify(\n    MetricsTotalsMonthlyRecurringRevenue$outboundSchema.parse(\n      metricsTotalsMonthlyRecurringRevenue,\n    ),\n  );\n}\n\nexport function metricsTotalsMonthlyRecurringRevenueFromJSON(\n  jsonString: string,\n): SafeParseResult<MetricsTotalsMonthlyRecurringRevenue, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) =>\n      MetricsTotalsMonthlyRecurringRevenue$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'MetricsTotalsMonthlyRecurringRevenue' from JSON`,\n  );\n}\n\n/** @internal */\nexport const MetricsTotalsCheckouts$inboundSchema: z.ZodType<\n  MetricsTotalsCheckouts,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.number().int(), z.number()]);\n\n/** @internal */\nexport type MetricsTotalsCheckouts$Outbound = number | number;\n\n/** @internal */\nexport const MetricsTotalsCheckouts$outboundSchema: z.ZodType<\n  MetricsTotalsCheckouts$Outbound,\n  z.ZodTypeDef,\n  MetricsTotalsCheckouts\n> = z.union([z.number().int(), z.number()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace MetricsTotalsCheckouts$ {\n  /** @deprecated use `MetricsTotalsCheckouts$inboundSchema` instead. */\n  export const inboundSchema = MetricsTotalsCheckouts$inboundSchema;\n  /** @deprecated use `MetricsTotalsCheckouts$outboundSchema` instead. */\n  export const outboundSchema = MetricsTotalsCheckouts$outboundSchema;\n  /** @deprecated use `MetricsTotalsCheckouts$Outbound` instead. */\n  export type Outbound = MetricsTotalsCheckouts$Outbound;\n}\n\nexport function metricsTotalsCheckoutsToJSON(\n  metricsTotalsCheckouts: MetricsTotalsCheckouts,\n): string {\n  return JSON.stringify(\n    MetricsTotalsCheckouts$outboundSchema.parse(metricsTotalsCheckouts),\n  );\n}\n\nexport function metricsTotalsCheckoutsFromJSON(\n  jsonString: string,\n): SafeParseResult<MetricsTotalsCheckouts, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => MetricsTotalsCheckouts$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'MetricsTotalsCheckouts' from JSON`,\n  );\n}\n\n/** @internal */\nexport const MetricsTotalsSucceededCheckouts$inboundSchema: z.ZodType<\n  MetricsTotalsSucceededCheckouts,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.number().int(), z.number()]);\n\n/** @internal */\nexport type MetricsTotalsSucceededCheckouts$Outbound = number | number;\n\n/** @internal */\nexport const MetricsTotalsSucceededCheckouts$outboundSchema: z.ZodType<\n  MetricsTotalsSucceededCheckouts$Outbound,\n  z.ZodTypeDef,\n  MetricsTotalsSucceededCheckouts\n> = z.union([z.number().int(), z.number()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace MetricsTotalsSucceededCheckouts$ {\n  /** @deprecated use `MetricsTotalsSucceededCheckouts$inboundSchema` instead. */\n  export const inboundSchema = MetricsTotalsSucceededCheckouts$inboundSchema;\n  /** @deprecated use `MetricsTotalsSucceededCheckouts$outboundSchema` instead. */\n  export const outboundSchema = MetricsTotalsSucceededCheckouts$outboundSchema;\n  /** @deprecated use `MetricsTotalsSucceededCheckouts$Outbound` instead. */\n  export type Outbound = MetricsTotalsSucceededCheckouts$Outbound;\n}\n\nexport function metricsTotalsSucceededCheckoutsToJSON(\n  metricsTotalsSucceededCheckouts: MetricsTotalsSucceededCheckouts,\n): string {\n  return JSON.stringify(\n    MetricsTotalsSucceededCheckouts$outboundSchema.parse(\n      metricsTotalsSucceededCheckouts,\n    ),\n  );\n}\n\nexport function metricsTotalsSucceededCheckoutsFromJSON(\n  jsonString: string,\n): SafeParseResult<MetricsTotalsSucceededCheckouts, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => MetricsTotalsSucceededCheckouts$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'MetricsTotalsSucceededCheckouts' from JSON`,\n  );\n}\n\n/** @internal */\nexport const MetricsTotalsCheckoutsConversion$inboundSchema: z.ZodType<\n  MetricsTotalsCheckoutsConversion,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.number().int(), z.number()]);\n\n/** @internal */\nexport type MetricsTotalsCheckoutsConversion$Outbound = number | number;\n\n/** @internal */\nexport const MetricsTotalsCheckoutsConversion$outboundSchema: z.ZodType<\n  MetricsTotalsCheckoutsConversion$Outbound,\n  z.ZodTypeDef,\n  MetricsTotalsCheckoutsConversion\n> = z.union([z.number().int(), z.number()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace MetricsTotalsCheckoutsConversion$ {\n  /** @deprecated use `MetricsTotalsCheckoutsConversion$inboundSchema` instead. */\n  export const inboundSchema = MetricsTotalsCheckoutsConversion$inboundSchema;\n  /** @deprecated use `MetricsTotalsCheckoutsConversion$outboundSchema` instead. */\n  export const outboundSchema = MetricsTotalsCheckoutsConversion$outboundSchema;\n  /** @deprecated use `MetricsTotalsCheckoutsConversion$Outbound` instead. */\n  export type Outbound = MetricsTotalsCheckoutsConversion$Outbound;\n}\n\nexport function metricsTotalsCheckoutsConversionToJSON(\n  metricsTotalsCheckoutsConversion: MetricsTotalsCheckoutsConversion,\n): string {\n  return JSON.stringify(\n    MetricsTotalsCheckoutsConversion$outboundSchema.parse(\n      metricsTotalsCheckoutsConversion,\n    ),\n  );\n}\n\nexport function metricsTotalsCheckoutsConversionFromJSON(\n  jsonString: string,\n): SafeParseResult<MetricsTotalsCheckoutsConversion, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => MetricsTotalsCheckoutsConversion$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'MetricsTotalsCheckoutsConversion' from JSON`,\n  );\n}\n\n/** @internal */\nexport const MetricsTotals$inboundSchema: z.ZodType<\n  MetricsTotals,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  orders: z.union([z.number().int(), z.number()]),\n  revenue: z.union([z.number().int(), z.number()]),\n  cumulative_revenue: z.union([z.number().int(), z.number()]),\n  average_order_value: z.union([z.number().int(), z.number()]),\n  one_time_products: z.union([z.number().int(), z.number()]),\n  one_time_products_revenue: z.union([z.number().int(), z.number()]),\n  new_subscriptions: z.union([z.number().int(), z.number()]),\n  new_subscriptions_revenue: z.union([z.number().int(), z.number()]),\n  renewed_subscriptions: z.union([z.number().int(), z.number()]),\n  renewed_subscriptions_revenue: z.union([z.number().int(), z.number()]),\n  active_subscriptions: z.union([z.number().int(), z.number()]),\n  monthly_recurring_revenue: z.union([z.number().int(), z.number()]),\n  checkouts: z.union([z.number().int(), z.number()]),\n  succeeded_checkouts: z.union([z.number().int(), z.number()]),\n  checkouts_conversion: z.union([z.number().int(), z.number()]),\n}).transform((v) => {\n  return remap$(v, {\n    \"cumulative_revenue\": \"cumulativeRevenue\",\n    \"average_order_value\": \"averageOrderValue\",\n    \"one_time_products\": \"oneTimeProducts\",\n    \"one_time_products_revenue\": \"oneTimeProductsRevenue\",\n    \"new_subscriptions\": \"newSubscriptions\",\n    \"new_subscriptions_revenue\": \"newSubscriptionsRevenue\",\n    \"renewed_subscriptions\": \"renewedSubscriptions\",\n    \"renewed_subscriptions_revenue\": \"renewedSubscriptionsRevenue\",\n    \"active_subscriptions\": \"activeSubscriptions\",\n    \"monthly_recurring_revenue\": \"monthlyRecurringRevenue\",\n    \"succeeded_checkouts\": \"succeededCheckouts\",\n    \"checkouts_conversion\": \"checkoutsConversion\",\n  });\n});\n\n/** @internal */\nexport type MetricsTotals$Outbound = {\n  orders: number | number;\n  revenue: number | number;\n  cumulative_revenue: number | number;\n  average_order_value: number | number;\n  one_time_products: number | number;\n  one_time_products_revenue: number | number;\n  new_subscriptions: number | number;\n  new_subscriptions_revenue: number | number;\n  renewed_subscriptions: number | number;\n  renewed_subscriptions_revenue: number | number;\n  active_subscriptions: number | number;\n  monthly_recurring_revenue: number | number;\n  checkouts: number | number;\n  succeeded_checkouts: number | number;\n  checkouts_conversion: number | number;\n};\n\n/** @internal */\nexport const MetricsTotals$outboundSchema: z.ZodType<\n  MetricsTotals$Outbound,\n  z.ZodTypeDef,\n  MetricsTotals\n> = z.object({\n  orders: z.union([z.number().int(), z.number()]),\n  revenue: z.union([z.number().int(), z.number()]),\n  cumulativeRevenue: z.union([z.number().int(), z.number()]),\n  averageOrderValue: z.union([z.number().int(), z.number()]),\n  oneTimeProducts: z.union([z.number().int(), z.number()]),\n  oneTimeProductsRevenue: z.union([z.number().int(), z.number()]),\n  newSubscriptions: z.union([z.number().int(), z.number()]),\n  newSubscriptionsRevenue: z.union([z.number().int(), z.number()]),\n  renewedSubscriptions: z.union([z.number().int(), z.number()]),\n  renewedSubscriptionsRevenue: z.union([z.number().int(), z.number()]),\n  activeSubscriptions: z.union([z.number().int(), z.number()]),\n  monthlyRecurringRevenue: z.union([z.number().int(), z.number()]),\n  checkouts: z.union([z.number().int(), z.number()]),\n  succeededCheckouts: z.union([z.number().int(), z.number()]),\n  checkoutsConversion: z.union([z.number().int(), z.number()]),\n}).transform((v) => {\n  return remap$(v, {\n    cumulativeRevenue: \"cumulative_revenue\",\n    averageOrderValue: \"average_order_value\",\n    oneTimeProducts: \"one_time_products\",\n    oneTimeProductsRevenue: \"one_time_products_revenue\",\n    newSubscriptions: \"new_subscriptions\",\n    newSubscriptionsRevenue: \"new_subscriptions_revenue\",\n    renewedSubscriptions: \"renewed_subscriptions\",\n    renewedSubscriptionsRevenue: \"renewed_subscriptions_revenue\",\n    activeSubscriptions: \"active_subscriptions\",\n    monthlyRecurringRevenue: \"monthly_recurring_revenue\",\n    succeededCheckouts: \"succeeded_checkouts\",\n    checkoutsConversion: \"checkouts_conversion\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace MetricsTotals$ {\n  /** @deprecated use `MetricsTotals$inboundSchema` instead. */\n  export const inboundSchema = MetricsTotals$inboundSchema;\n  /** @deprecated use `MetricsTotals$outboundSchema` instead. */\n  export const outboundSchema = MetricsTotals$outboundSchema;\n  /** @deprecated use `MetricsTotals$Outbound` instead. */\n  export type Outbound = MetricsTotals$Outbound;\n}\n\nexport function metricsTotalsToJSON(metricsTotals: MetricsTotals): string {\n  return JSON.stringify(MetricsTotals$outboundSchema.parse(metricsTotals));\n}\n\nexport function metricsTotalsFromJSON(\n  jsonString: string,\n): SafeParseResult<MetricsTotals, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => MetricsTotals$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'MetricsTotals' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 25185, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 25191, "column": 0}, "map": {"version":3,"file":"metricsresponse.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/metricsresponse.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  MetricPeriod,\n  MetricPeriod$inboundSchema,\n  MetricPeriod$Outbound,\n  MetricPeriod$outboundSchema,\n} from \"./metricperiod.js\";\nimport {\n  Metrics,\n  Metrics$inboundSchema,\n  Metrics$Outbound,\n  Metrics$outboundSchema,\n} from \"./metrics.js\";\nimport {\n  MetricsTotals,\n  MetricsTotals$inboundSchema,\n  MetricsTotals$Outbound,\n  MetricsTotals$outboundSchema,\n} from \"./metricstotals.js\";\n\n/**\n * Metrics response schema.\n */\nexport type MetricsResponse = {\n  /**\n   * List of data for each timestamp.\n   */\n  periods: Array<MetricPeriod>;\n  totals: MetricsTotals;\n  metrics: Metrics;\n};\n\n/** @internal */\nexport const MetricsResponse$inboundSchema: z.ZodType<\n  MetricsResponse,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  periods: z.array(MetricPeriod$inboundSchema),\n  totals: MetricsTotals$inboundSchema,\n  metrics: Metrics$inboundSchema,\n});\n\n/** @internal */\nexport type MetricsResponse$Outbound = {\n  periods: Array<MetricPeriod$Outbound>;\n  totals: MetricsTotals$Outbound;\n  metrics: Metrics$Outbound;\n};\n\n/** @internal */\nexport const MetricsResponse$outboundSchema: z.ZodType<\n  MetricsResponse$Outbound,\n  z.ZodTypeDef,\n  MetricsResponse\n> = z.object({\n  periods: z.array(MetricPeriod$outboundSchema),\n  totals: MetricsTotals$outboundSchema,\n  metrics: Metrics$outboundSchema,\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace MetricsResponse$ {\n  /** @deprecated use `MetricsResponse$inboundSchema` instead. */\n  export const inboundSchema = MetricsResponse$inboundSchema;\n  /** @deprecated use `MetricsResponse$outboundSchema` instead. */\n  export const outboundSchema = MetricsResponse$outboundSchema;\n  /** @deprecated use `MetricsResponse$Outbound` instead. */\n  export type Outbound = MetricsResponse$Outbound;\n}\n\nexport function metricsResponseToJSON(\n  metricsResponse: MetricsResponse,\n): string {\n  return JSON.stringify(MetricsResponse$outboundSchema.parse(metricsResponse));\n}\n\nexport function metricsResponseFromJSON(\n  jsonString: string,\n): SafeParseResult<MetricsResponse, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => MetricsResponse$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'MetricsResponse' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,0BAA0B,EAE1B,2BAA2B,GAC5B,MAAM,mBAAmB,CAAC;AAC3B,OAAO,EAEL,qBAAqB,EAErB,sBAAsB,GACvB,MAAM,cAAc,CAAC;AACtB,OAAO,EAEL,2BAA2B,EAE3B,4BAA4B,GAC7B,MAAM,oBAAoB,CAAC;;;;;;;AAerB,MAAM,6BAA6B,GAItC,CAAC,6IAAC,MAAM,CAAC;IACX,OAAO,EAAE,CAAC,6IAAC,KAAK,+LAAC,6BAA0B,CAAC;IAC5C,MAAM,iMAAE,8BAA2B;IACnC,OAAO,2LAAE,wBAAqB;CAC/B,CAAC,CAAC;AAUI,MAAM,8BAA8B,GAIvC,CAAC,6IAAC,MAAM,CAAC;IACX,OAAO,EAAE,CAAC,6IAAC,KAAK,+LAAC,8BAA2B,CAAC;IAC7C,MAAM,iMAAE,+BAA4B;IACpC,OAAO,2LAAE,yBAAsB;CAChC,CAAC,CAAC;AAMG,IAAW,gBAAgB,CAOhC;AAPD,CAAA,SAAiB,gBAAgB;IAC/B,6DAAA,EAA+D,CAClD,iBAAA,aAAa,GAAG,6BAA6B,CAAC;IAC3D,8DAAA,EAAgE,CACnD,iBAAA,cAAc,GAAG,8BAA8B,CAAC;AAG/D,CAAC,EAPgB,gBAAgB,IAAA,CAAhB,gBAAgB,GAAA,CAAA,CAAA,GAOhC;AAEK,SAAU,qBAAqB,CACnC,eAAgC;IAEhC,OAAO,IAAI,CAAC,SAAS,CAAC,8BAA8B,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,CAAC;AAC/E,CAAC;AAEK,SAAU,uBAAuB,CACrC,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,4BAA8B,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACzD,CAAA,2CAAA,CAA6C,CAC9C,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 25232, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 25238, "column": 0}, "map": {"version":3,"file":"metricsintervallimit.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/metricsintervallimit.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\n/**\n * Date interval limit to get metrics for a given interval.\n */\nexport type MetricsIntervalLimit = {\n  /**\n   * Maximum number of days for this interval.\n   */\n  maxDays: number;\n};\n\n/** @internal */\nexport const MetricsIntervalLimit$inboundSchema: z.ZodType<\n  MetricsIntervalLimit,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  max_days: z.number().int(),\n}).transform((v) => {\n  return remap$(v, {\n    \"max_days\": \"maxDays\",\n  });\n});\n\n/** @internal */\nexport type MetricsIntervalLimit$Outbound = {\n  max_days: number;\n};\n\n/** @internal */\nexport const MetricsIntervalLimit$outboundSchema: z.ZodType<\n  MetricsIntervalLimit$Outbound,\n  z.ZodTypeDef,\n  MetricsIntervalLimit\n> = z.object({\n  maxDays: z.number().int(),\n}).transform((v) => {\n  return remap$(v, {\n    maxDays: \"max_days\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace MetricsIntervalLimit$ {\n  /** @deprecated use `MetricsIntervalLimit$inboundSchema` instead. */\n  export const inboundSchema = MetricsIntervalLimit$inboundSchema;\n  /** @deprecated use `MetricsIntervalLimit$outboundSchema` instead. */\n  export const outboundSchema = MetricsIntervalLimit$outboundSchema;\n  /** @deprecated use `MetricsIntervalLimit$Outbound` instead. */\n  export type Outbound = MetricsIntervalLimit$Outbound;\n}\n\nexport function metricsIntervalLimitToJSON(\n  metricsIntervalLimit: MetricsIntervalLimit,\n): string {\n  return JSON.stringify(\n    MetricsIntervalLimit$outboundSchema.parse(metricsIntervalLimit),\n  );\n}\n\nexport function metricsIntervalLimitFromJSON(\n  jsonString: string,\n): SafeParseResult<MetricsIntervalLimit, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => MetricsIntervalLimit$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'MetricsIntervalLimit' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;;;;;AAe1C,MAAM,kCAAkC,GAI3C,CAAC,6IAAC,MAAM,CAAC;IACX,QAAQ,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;CAC3B,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,OAAO,uLAAA,AAAM,EAAC,CAAC,EAAE;QACf,UAAU,EAAE,SAAS;KACtB,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAQI,MAAM,mCAAmC,GAI5C,CAAC,6IAAC,MAAM,CAAC;IACX,OAAO,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;CAC1B,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,QAAO,sLAAA,AAAM,EAAC,CAAC,EAAE;QACf,OAAO,EAAE,UAAU;KACpB,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,qBAAqB,CAOrC;AAPD,CAAA,SAAiB,qBAAqB;IACpC,kEAAA,EAAoE,CACvD,sBAAA,aAAa,GAAG,kCAAkC,CAAC;IAChE,mEAAA,EAAqE,CACxD,sBAAA,cAAc,GAAG,mCAAmC,CAAC;AAGpE,CAAC,EAPgB,qBAAqB,IAAA,CAArB,qBAAqB,GAAA,CAAA,CAAA,GAOrC;AAEK,SAAU,0BAA0B,CACxC,oBAA0C;IAE1C,OAAO,IAAI,CAAC,SAAS,CACnB,mCAAmC,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAChE,CAAC;AACJ,CAAC;AAEK,SAAU,4BAA4B,CAC1C,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,iCAAmC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC9D,CAAA,gDAAA,CAAkD,CACnD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 25279, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 25285, "column": 0}, "map": {"version":3,"file":"metricsintervalslimits.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/metricsintervalslimits.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  MetricsIntervalLimit,\n  MetricsIntervalLimit$inboundSchema,\n  MetricsIntervalLimit$Outbound,\n  MetricsIntervalLimit$outboundSchema,\n} from \"./metricsintervallimit.js\";\n\n/**\n * Date interval limits to get metrics for each interval.\n */\nexport type MetricsIntervalsLimits = {\n  /**\n   * Date interval limit to get metrics for a given interval.\n   */\n  hour: MetricsIntervalLimit;\n  /**\n   * Date interval limit to get metrics for a given interval.\n   */\n  day: MetricsIntervalLimit;\n  /**\n   * Date interval limit to get metrics for a given interval.\n   */\n  week: MetricsIntervalLimit;\n  /**\n   * Date interval limit to get metrics for a given interval.\n   */\n  month: MetricsIntervalLimit;\n  /**\n   * Date interval limit to get metrics for a given interval.\n   */\n  year: MetricsIntervalLimit;\n};\n\n/** @internal */\nexport const MetricsIntervalsLimits$inboundSchema: z.ZodType<\n  MetricsIntervalsLimits,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  hour: MetricsIntervalLimit$inboundSchema,\n  day: MetricsIntervalLimit$inboundSchema,\n  week: MetricsIntervalLimit$inboundSchema,\n  month: MetricsIntervalLimit$inboundSchema,\n  year: MetricsIntervalLimit$inboundSchema,\n});\n\n/** @internal */\nexport type MetricsIntervalsLimits$Outbound = {\n  hour: MetricsIntervalLimit$Outbound;\n  day: MetricsIntervalLimit$Outbound;\n  week: MetricsIntervalLimit$Outbound;\n  month: MetricsIntervalLimit$Outbound;\n  year: MetricsIntervalLimit$Outbound;\n};\n\n/** @internal */\nexport const MetricsIntervalsLimits$outboundSchema: z.ZodType<\n  MetricsIntervalsLimits$Outbound,\n  z.ZodTypeDef,\n  MetricsIntervalsLimits\n> = z.object({\n  hour: MetricsIntervalLimit$outboundSchema,\n  day: MetricsIntervalLimit$outboundSchema,\n  week: MetricsIntervalLimit$outboundSchema,\n  month: MetricsIntervalLimit$outboundSchema,\n  year: MetricsIntervalLimit$outboundSchema,\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace MetricsIntervalsLimits$ {\n  /** @deprecated use `MetricsIntervalsLimits$inboundSchema` instead. */\n  export const inboundSchema = MetricsIntervalsLimits$inboundSchema;\n  /** @deprecated use `MetricsIntervalsLimits$outboundSchema` instead. */\n  export const outboundSchema = MetricsIntervalsLimits$outboundSchema;\n  /** @deprecated use `MetricsIntervalsLimits$Outbound` instead. */\n  export type Outbound = MetricsIntervalsLimits$Outbound;\n}\n\nexport function metricsIntervalsLimitsToJSON(\n  metricsIntervalsLimits: MetricsIntervalsLimits,\n): string {\n  return JSON.stringify(\n    MetricsIntervalsLimits$outboundSchema.parse(metricsIntervalsLimits),\n  );\n}\n\nexport function metricsIntervalsLimitsFromJSON(\n  jsonString: string,\n): SafeParseResult<MetricsIntervalsLimits, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => MetricsIntervalsLimits$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'MetricsIntervalsLimits' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,kCAAkC,EAElC,mCAAmC,GACpC,MAAM,2BAA2B,CAAC;;;;;AA6B5B,MAAM,oCAAoC,GAI7C,CAAC,6IAAC,MAAM,CAAC;IACX,IAAI,wMAAE,qCAAkC;IACxC,GAAG,wMAAE,qCAAkC;IACvC,IAAI,uMAAE,sCAAkC;IACxC,KAAK,wMAAE,qCAAkC;IACzC,IAAI,wMAAE,qCAAkC;CACzC,CAAC,CAAC;AAYI,MAAM,qCAAqC,GAI9C,CAAC,6IAAC,MAAM,CAAC;IACX,IAAI,wMAAE,sCAAmC;IACzC,GAAG,wMAAE,sCAAmC;IACxC,IAAI,wMAAE,sCAAmC;IACzC,KAAK,EAAE,4OAAmC;IAC1C,IAAI,wMAAE,sCAAmC;CAC1C,CAAC,CAAC;AAMG,IAAW,uBAAuB,CAOvC;AAPD,CAAA,SAAiB,uBAAuB;IACtC,oEAAA,EAAsE,CACzD,wBAAA,aAAa,GAAG,oCAAoC,CAAC;IAClE,qEAAA,EAAuE,CAC1D,wBAAA,cAAc,GAAG,qCAAqC,CAAC;AAGtE,CAAC,EAPgB,uBAAuB,IAAA,CAAvB,uBAAuB,GAAA,CAAA,CAAA,GAOvC;AAEK,SAAU,4BAA4B,CAC1C,sBAA8C;IAE9C,OAAO,IAAI,CAAC,SAAS,CACnB,qCAAqC,CAAC,KAAK,CAAC,sBAAsB,CAAC,CACpE,CAAC;AACJ,CAAC;AAEK,SAAU,8BAA8B,CAC5C,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,mCAAqC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAChE,CAAA,kDAAA,CAAoD,CACrD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 25326, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 25332, "column": 0}, "map": {"version":3,"file":"metricslimits.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/metricslimits.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { RFCDate } from \"../../types/rfcdate.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  MetricsIntervalsLimits,\n  MetricsIntervalsLimits$inboundSchema,\n  MetricsIntervalsLimits$Outbound,\n  MetricsIntervalsLimits$outboundSchema,\n} from \"./metricsintervalslimits.js\";\n\n/**\n * Date limits to get metrics.\n */\nexport type MetricsLimits = {\n  /**\n   * Minimum date to get metrics.\n   */\n  minDate: RFCDate;\n  /**\n   * Date interval limits to get metrics for each interval.\n   */\n  intervals: MetricsIntervalsLimits;\n};\n\n/** @internal */\nexport const MetricsLimits$inboundSchema: z.ZodType<\n  MetricsLimits,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  min_date: z.string().transform(v => new RFCDate(v)),\n  intervals: MetricsIntervalsLimits$inboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    \"min_date\": \"minDate\",\n  });\n});\n\n/** @internal */\nexport type MetricsLimits$Outbound = {\n  min_date: string;\n  intervals: MetricsIntervalsLimits$Outbound;\n};\n\n/** @internal */\nexport const MetricsLimits$outboundSchema: z.ZodType<\n  MetricsLimits$Outbound,\n  z.ZodTypeDef,\n  MetricsLimits\n> = z.object({\n  minDate: z.instanceof(RFCDate).transform(v => v.toString()),\n  intervals: MetricsIntervalsLimits$outboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    minDate: \"min_date\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace MetricsLimits$ {\n  /** @deprecated use `MetricsLimits$inboundSchema` instead. */\n  export const inboundSchema = MetricsLimits$inboundSchema;\n  /** @deprecated use `MetricsLimits$outboundSchema` instead. */\n  export const outboundSchema = MetricsLimits$outboundSchema;\n  /** @deprecated use `MetricsLimits$Outbound` instead. */\n  export type Outbound = MetricsLimits$Outbound;\n}\n\nexport function metricsLimitsToJSON(metricsLimits: MetricsLimits): string {\n  return JSON.stringify(MetricsLimits$outboundSchema.parse(metricsLimits));\n}\n\nexport function metricsLimitsFromJSON(\n  jsonString: string,\n): SafeParseResult<MetricsLimits, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => MetricsLimits$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'MetricsLimits' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAEjD,OAAO,EAAE,OAAO,EAAE,MAAM,wBAAwB,CAAC;AAEjD,OAAO,EAEL,oCAAoC,EAEpC,qCAAqC,GACtC,MAAM,6BAA6B,CAAC;;;;;;;AAiB9B,MAAM,2BAA2B,GAIpC,CAAC,6IAAC,MAAM,CAAC;IACX,QAAQ,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,6KAAI,WAAO,CAAC,CAAC,CAAC,CAAC;IACnD,SAAS,0MAAE,uCAAoC;CAChD,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,UAAU,EAAE,SAAS;KACtB,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AASI,MAAM,4BAA4B,GAIrC,CAAC,6IAAC,MAAM,CAAC;IACX,OAAO,EAAE,CAAC,6IAAC,UAAU,0KAAC,WAAO,CAAC,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;IAC3D,SAAS,0MAAE,wCAAqC;CACjD,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,QAAO,sLAAA,AAAM,EAAC,CAAC,EAAE;QACf,OAAO,EAAE,UAAU;KACpB,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,cAAc,CAO9B;AAPD,CAAA,SAAiB,cAAc;IAC7B,2DAAA,EAA6D,CAChD,eAAA,aAAa,GAAG,2BAA2B,CAAC;IACzD,4DAAA,EAA8D,CACjD,eAAA,cAAc,GAAG,4BAA4B,CAAC;AAG7D,CAAC,EAPgB,cAAc,IAAA,CAAd,cAAc,GAAA,CAAA,CAAA,GAO9B;AAEK,SAAU,mBAAmB,CAAC,aAA4B;IAC9D,OAAO,IAAI,CAAC,SAAS,CAAC,4BAA4B,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC;AAC3E,CAAC;AAEK,SAAU,qBAAqB,CACnC,UAAkB;IAElB,mLAAO,YAAS,AAAT,EACL,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,0BAA4B,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACvD,CAAA,yCAAA,CAA2C,CAC5C,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 25379, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 25385, "column": 0}, "map": {"version":3,"file":"authorizeorganization.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/authorizeorganization.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport type AuthorizeOrganization = {\n  id: string;\n  slug: string;\n  avatarUrl: string | null;\n};\n\n/** @internal */\nexport const AuthorizeOrganization$inboundSchema: z.ZodType<\n  AuthorizeOrganization,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  id: z.string(),\n  slug: z.string(),\n  avatar_url: z.nullable(z.string()),\n}).transform((v) => {\n  return remap$(v, {\n    \"avatar_url\": \"avatarUrl\",\n  });\n});\n\n/** @internal */\nexport type AuthorizeOrganization$Outbound = {\n  id: string;\n  slug: string;\n  avatar_url: string | null;\n};\n\n/** @internal */\nexport const AuthorizeOrganization$outboundSchema: z.ZodType<\n  AuthorizeOrganization$Outbound,\n  z.ZodTypeDef,\n  AuthorizeOrganization\n> = z.object({\n  id: z.string(),\n  slug: z.string(),\n  avatarUrl: z.nullable(z.string()),\n}).transform((v) => {\n  return remap$(v, {\n    avatarUrl: \"avatar_url\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace AuthorizeOrganization$ {\n  /** @deprecated use `AuthorizeOrganization$inboundSchema` instead. */\n  export const inboundSchema = AuthorizeOrganization$inboundSchema;\n  /** @deprecated use `AuthorizeOrganization$outboundSchema` instead. */\n  export const outboundSchema = AuthorizeOrganization$outboundSchema;\n  /** @deprecated use `AuthorizeOrganization$Outbound` instead. */\n  export type Outbound = AuthorizeOrganization$Outbound;\n}\n\nexport function authorizeOrganizationToJSON(\n  authorizeOrganization: AuthorizeOrganization,\n): string {\n  return JSON.stringify(\n    AuthorizeOrganization$outboundSchema.parse(authorizeOrganization),\n  );\n}\n\nexport function authorizeOrganizationFromJSON(\n  jsonString: string,\n): SafeParseResult<AuthorizeOrganization, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => AuthorizeOrganization$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'AuthorizeOrganization' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;;;;;AAW1C,MAAM,mCAAmC,GAI5C,CAAC,6IAAC,MAAM,CAAC;IACX,EAAE,EAAE,CAAC,6IAAC,MAAM,EAAE;IACd,IAAI,EAAE,CAAC,6IAAC,MAAM,EAAE;IAChB,UAAU,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;CACnC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAM,AAAN,EAAO,CAAC,EAAE;QACf,YAAY,EAAE,WAAW;KAC1B,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAUI,MAAM,oCAAoC,GAI7C,CAAC,6IAAC,MAAM,CAAC;IACX,EAAE,EAAE,CAAC,6IAAC,MAAM,EAAE;IACd,IAAI,EAAE,CAAC,6IAAC,MAAM,EAAE;IAChB,SAAS,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;CAClC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAM,AAAN,EAAO,CAAC,EAAE;QACf,SAAS,EAAE,YAAY;KACxB,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,sBAAsB,CAOtC;AAPD,CAAA,SAAiB,sBAAsB;IACrC,mEAAA,EAAqE,CACxD,uBAAA,aAAa,GAAG,mCAAmC,CAAC;IACjE,oEAAA,EAAsE,CACzD,uBAAA,cAAc,GAAG,oCAAoC,CAAC;AAGrE,CAAC,EAPgB,sBAAsB,IAAA,CAAtB,sBAAsB,GAAA,CAAA,CAAA,GAOtC;AAEK,SAAU,2BAA2B,CACzC,qBAA4C;IAE5C,OAAO,IAAI,CAAC,SAAS,CACnB,oCAAoC,CAAC,KAAK,CAAC,qBAAqB,CAAC,CAClE,CAAC;AACJ,CAAC;AAEK,SAAU,6BAA6B,CAC3C,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,kCAAoC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC/D,CAAA,iDAAA,CAAmD,CACpD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 25430, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 25436, "column": 0}, "map": {"version":3,"file":"oauth2clientpublic.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/oauth2clientpublic.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport type OAuth2ClientPublic = {\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  clientId: string;\n  clientName: string | null;\n  clientUri: string | null;\n  logoUri: string | null;\n  tosUri: string | null;\n  policyUri: string | null;\n};\n\n/** @internal */\nexport const OAuth2ClientPublic$inboundSchema: z.ZodType<\n  OAuth2ClientPublic,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  client_id: z.string(),\n  client_name: z.nullable(z.string()),\n  client_uri: z.nullable(z.string()),\n  logo_uri: z.nullable(z.string()),\n  tos_uri: z.nullable(z.string()),\n  policy_uri: z.nullable(z.string()),\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"client_id\": \"clientId\",\n    \"client_name\": \"clientName\",\n    \"client_uri\": \"clientUri\",\n    \"logo_uri\": \"logoUri\",\n    \"tos_uri\": \"tosUri\",\n    \"policy_uri\": \"policyUri\",\n  });\n});\n\n/** @internal */\nexport type OAuth2ClientPublic$Outbound = {\n  created_at: string;\n  modified_at: string | null;\n  client_id: string;\n  client_name: string | null;\n  client_uri: string | null;\n  logo_uri: string | null;\n  tos_uri: string | null;\n  policy_uri: string | null;\n};\n\n/** @internal */\nexport const OAuth2ClientPublic$outboundSchema: z.ZodType<\n  OAuth2ClientPublic$Outbound,\n  z.ZodTypeDef,\n  OAuth2ClientPublic\n> = z.object({\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  clientId: z.string(),\n  clientName: z.nullable(z.string()),\n  clientUri: z.nullable(z.string()),\n  logoUri: z.nullable(z.string()),\n  tosUri: z.nullable(z.string()),\n  policyUri: z.nullable(z.string()),\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    clientId: \"client_id\",\n    clientName: \"client_name\",\n    clientUri: \"client_uri\",\n    logoUri: \"logo_uri\",\n    tosUri: \"tos_uri\",\n    policyUri: \"policy_uri\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace OAuth2ClientPublic$ {\n  /** @deprecated use `OAuth2ClientPublic$inboundSchema` instead. */\n  export const inboundSchema = OAuth2ClientPublic$inboundSchema;\n  /** @deprecated use `OAuth2ClientPublic$outboundSchema` instead. */\n  export const outboundSchema = OAuth2ClientPublic$outboundSchema;\n  /** @deprecated use `OAuth2ClientPublic$Outbound` instead. */\n  export type Outbound = OAuth2ClientPublic$Outbound;\n}\n\nexport function oAuth2ClientPublicToJSON(\n  oAuth2ClientPublic: OAuth2ClientPublic,\n): string {\n  return JSON.stringify(\n    OAuth2ClientPublic$outboundSchema.parse(oAuth2ClientPublic),\n  );\n}\n\nexport function oAuth2ClientPublicFromJSON(\n  jsonString: string,\n): SafeParseResult<OAuth2ClientPublic, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => OAuth2ClientPublic$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'OAuth2ClientPublic' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 25509, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 25515, "column": 0}, "map": {"version":3,"file":"scope.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/scope.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { ClosedEnum } from \"../../types/enums.js\";\n\nexport const Scope = {\n  Openid: \"openid\",\n  Profile: \"profile\",\n  Email: \"email\",\n  UserRead: \"user:read\",\n  Admin: \"admin\",\n  WebDefault: \"web_default\",\n  OrganizationsRead: \"organizations:read\",\n  OrganizationsWrite: \"organizations:write\",\n  CustomFieldsRead: \"custom_fields:read\",\n  CustomFieldsWrite: \"custom_fields:write\",\n  DiscountsRead: \"discounts:read\",\n  DiscountsWrite: \"discounts:write\",\n  CheckoutLinksRead: \"checkout_links:read\",\n  CheckoutLinksWrite: \"checkout_links:write\",\n  CheckoutsRead: \"checkouts:read\",\n  CheckoutsWrite: \"checkouts:write\",\n  TransactionsRead: \"transactions:read\",\n  TransactionsWrite: \"transactions:write\",\n  PayoutsRead: \"payouts:read\",\n  PayoutsWrite: \"payouts:write\",\n  ProductsRead: \"products:read\",\n  ProductsWrite: \"products:write\",\n  BenefitsRead: \"benefits:read\",\n  BenefitsWrite: \"benefits:write\",\n  EventsRead: \"events:read\",\n  EventsWrite: \"events:write\",\n  MetersRead: \"meters:read\",\n  MetersWrite: \"meters:write\",\n  FilesRead: \"files:read\",\n  FilesWrite: \"files:write\",\n  SubscriptionsRead: \"subscriptions:read\",\n  SubscriptionsWrite: \"subscriptions:write\",\n  CustomersRead: \"customers:read\",\n  CustomersWrite: \"customers:write\",\n  CustomerMetersRead: \"customer_meters:read\",\n  CustomerSessionsWrite: \"customer_sessions:write\",\n  OrdersRead: \"orders:read\",\n  OrdersWrite: \"orders:write\",\n  RefundsRead: \"refunds:read\",\n  RefundsWrite: \"refunds:write\",\n  PaymentsRead: \"payments:read\",\n  MetricsRead: \"metrics:read\",\n  WebhooksRead: \"webhooks:read\",\n  WebhooksWrite: \"webhooks:write\",\n  ExternalOrganizationsRead: \"external_organizations:read\",\n  LicenseKeysRead: \"license_keys:read\",\n  LicenseKeysWrite: \"license_keys:write\",\n  RepositoriesRead: \"repositories:read\",\n  RepositoriesWrite: \"repositories:write\",\n  IssuesRead: \"issues:read\",\n  IssuesWrite: \"issues:write\",\n  CustomerPortalRead: \"customer_portal:read\",\n  CustomerPortalWrite: \"customer_portal:write\",\n  NotificationsRead: \"notifications:read\",\n  NotificationsWrite: \"notifications:write\",\n  NotificationRecipientsRead: \"notification_recipients:read\",\n  NotificationRecipientsWrite: \"notification_recipients:write\",\n} as const;\nexport type Scope = ClosedEnum<typeof Scope>;\n\n/** @internal */\nexport const Scope$inboundSchema: z.ZodNativeEnum<typeof Scope> = z.nativeEnum(\n  Scope,\n);\n\n/** @internal */\nexport const Scope$outboundSchema: z.ZodNativeEnum<typeof Scope> =\n  Scope$inboundSchema;\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace Scope$ {\n  /** @deprecated use `Scope$inboundSchema` instead. */\n  export const inboundSchema = Scope$inboundSchema;\n  /** @deprecated use `Scope$outboundSchema` instead. */\n  export const outboundSchema = Scope$outboundSchema;\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;AAGlB,MAAM,KAAK,GAAG;IACnB,MAAM,EAAE,QAAQ;IAChB,OAAO,EAAE,SAAS;IAClB,KAAK,EAAE,OAAO;IACd,QAAQ,EAAE,WAAW;IACrB,KAAK,EAAE,OAAO;IACd,UAAU,EAAE,aAAa;IACzB,iBAAiB,EAAE,oBAAoB;IACvC,kBAAkB,EAAE,qBAAqB;IACzC,gBAAgB,EAAE,oBAAoB;IACtC,iBAAiB,EAAE,qBAAqB;IACxC,aAAa,EAAE,gBAAgB;IAC/B,cAAc,EAAE,iBAAiB;IACjC,iBAAiB,EAAE,qBAAqB;IACxC,kBAAkB,EAAE,sBAAsB;IAC1C,aAAa,EAAE,gBAAgB;IAC/B,cAAc,EAAE,iBAAiB;IACjC,gBAAgB,EAAE,mBAAmB;IACrC,iBAAiB,EAAE,oBAAoB;IACvC,WAAW,EAAE,cAAc;IAC3B,YAAY,EAAE,eAAe;IAC7B,YAAY,EAAE,eAAe;IAC7B,aAAa,EAAE,gBAAgB;IAC/B,YAAY,EAAE,eAAe;IAC7B,aAAa,EAAE,gBAAgB;IAC/B,UAAU,EAAE,aAAa;IACzB,WAAW,EAAE,cAAc;IAC3B,UAAU,EAAE,aAAa;IACzB,WAAW,EAAE,cAAc;IAC3B,SAAS,EAAE,YAAY;IACvB,UAAU,EAAE,aAAa;IACzB,iBAAiB,EAAE,oBAAoB;IACvC,kBAAkB,EAAE,qBAAqB;IACzC,aAAa,EAAE,gBAAgB;IAC/B,cAAc,EAAE,iBAAiB;IACjC,kBAAkB,EAAE,sBAAsB;IAC1C,qBAAqB,EAAE,yBAAyB;IAChD,UAAU,EAAE,aAAa;IACzB,WAAW,EAAE,cAAc;IAC3B,WAAW,EAAE,cAAc;IAC3B,YAAY,EAAE,eAAe;IAC7B,YAAY,EAAE,eAAe;IAC7B,WAAW,EAAE,cAAc;IAC3B,YAAY,EAAE,eAAe;IAC7B,aAAa,EAAE,gBAAgB;IAC/B,yBAAyB,EAAE,6BAA6B;IACxD,eAAe,EAAE,mBAAmB;IACpC,gBAAgB,EAAE,oBAAoB;IACtC,gBAAgB,EAAE,mBAAmB;IACrC,iBAAiB,EAAE,oBAAoB;IACvC,UAAU,EAAE,aAAa;IACzB,WAAW,EAAE,cAAc;IAC3B,kBAAkB,EAAE,sBAAsB;IAC1C,mBAAmB,EAAE,uBAAuB;IAC5C,iBAAiB,EAAE,oBAAoB;IACvC,kBAAkB,EAAE,qBAAqB;IACzC,0BAA0B,EAAE,8BAA8B;IAC1D,2BAA2B,EAAE,+BAA+B;CACpD,CAAC;AAIJ,MAAM,mBAAmB,GAAkC,CAAC,6IAAC,UAAU,CAC5E,KAAK,CACN,CAAC;AAGK,MAAM,oBAAoB,GAC/B,mBAAmB,CAAC;AAMhB,IAAW,MAAM,CAKtB;AALD,CAAA,SAAiB,MAAM;IACrB,mDAAA,EAAqD,CACxC,OAAA,aAAa,GAAG,mBAAmB,CAAC;IACjD,oDAAA,EAAsD,CACzC,OAAA,cAAc,GAAG,oBAAoB,CAAC;AACrD,CAAC,EALgB,MAAM,IAAA,CAAN,MAAM,GAAA,CAAA,CAAA,GAKtB","ignoreList":[0]}},
    {"offset": {"line": 25592, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 25598, "column": 0}, "map": {"version":3,"file":"authorizeresponseorganization.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/authorizeresponseorganization.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  AuthorizeOrganization,\n  AuthorizeOrganization$inboundSchema,\n  AuthorizeOrganization$Outbound,\n  AuthorizeOrganization$outboundSchema,\n} from \"./authorizeorganization.js\";\nimport {\n  OAuth2ClientPublic,\n  OAuth2ClientPublic$inboundSchema,\n  OAuth2ClientPublic$Outbound,\n  OAuth2ClientPublic$outboundSchema,\n} from \"./oauth2clientpublic.js\";\nimport { Scope, Scope$inboundSchema, Scope$outboundSchema } from \"./scope.js\";\n\nexport type AuthorizeResponseOrganization = {\n  client: OAuth2ClientPublic;\n  subType?: \"organization\" | undefined;\n  sub: AuthorizeOrganization | null;\n  scopes: Array<Scope>;\n  organizations: Array<AuthorizeOrganization>;\n};\n\n/** @internal */\nexport const AuthorizeResponseOrganization$inboundSchema: z.ZodType<\n  AuthorizeResponseOrganization,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  client: OAuth2ClientPublic$inboundSchema,\n  sub_type: z.literal(\"organization\").optional(),\n  sub: z.nullable(AuthorizeOrganization$inboundSchema),\n  scopes: z.array(Scope$inboundSchema),\n  organizations: z.array(AuthorizeOrganization$inboundSchema),\n}).transform((v) => {\n  return remap$(v, {\n    \"sub_type\": \"subType\",\n  });\n});\n\n/** @internal */\nexport type AuthorizeResponseOrganization$Outbound = {\n  client: OAuth2ClientPublic$Outbound;\n  sub_type: \"organization\";\n  sub: AuthorizeOrganization$Outbound | null;\n  scopes: Array<string>;\n  organizations: Array<AuthorizeOrganization$Outbound>;\n};\n\n/** @internal */\nexport const AuthorizeResponseOrganization$outboundSchema: z.ZodType<\n  AuthorizeResponseOrganization$Outbound,\n  z.ZodTypeDef,\n  AuthorizeResponseOrganization\n> = z.object({\n  client: OAuth2ClientPublic$outboundSchema,\n  subType: z.literal(\"organization\").default(\"organization\" as const),\n  sub: z.nullable(AuthorizeOrganization$outboundSchema),\n  scopes: z.array(Scope$outboundSchema),\n  organizations: z.array(AuthorizeOrganization$outboundSchema),\n}).transform((v) => {\n  return remap$(v, {\n    subType: \"sub_type\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace AuthorizeResponseOrganization$ {\n  /** @deprecated use `AuthorizeResponseOrganization$inboundSchema` instead. */\n  export const inboundSchema = AuthorizeResponseOrganization$inboundSchema;\n  /** @deprecated use `AuthorizeResponseOrganization$outboundSchema` instead. */\n  export const outboundSchema = AuthorizeResponseOrganization$outboundSchema;\n  /** @deprecated use `AuthorizeResponseOrganization$Outbound` instead. */\n  export type Outbound = AuthorizeResponseOrganization$Outbound;\n}\n\nexport function authorizeResponseOrganizationToJSON(\n  authorizeResponseOrganization: AuthorizeResponseOrganization,\n): string {\n  return JSON.stringify(\n    AuthorizeResponseOrganization$outboundSchema.parse(\n      authorizeResponseOrganization,\n    ),\n  );\n}\n\nexport function authorizeResponseOrganizationFromJSON(\n  jsonString: string,\n): SafeParseResult<AuthorizeResponseOrganization, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => AuthorizeResponseOrganization$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'AuthorizeResponseOrganization' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,mCAAmC,EAEnC,oCAAoC,GACrC,MAAM,4BAA4B,CAAC;AACpC,OAAO,EAEL,gCAAgC,EAEhC,iCAAiC,GAClC,MAAM,yBAAyB,CAAC;AACjC,OAAO,EAAS,mBAAmB,EAAE,oBAAoB,EAAE,MAAM,YAAY,CAAC;;;;;;;;AAWvE,MAAM,2CAA2C,GAIpD,CAAC,6IAAC,MAAM,CAAC;IACX,MAAM,sMAAE,mCAAgC;IACxC,QAAQ,EAAE,CAAC,6IAAC,OAAO,CAAC,cAAc,CAAC,CAAC,QAAQ,EAAE;IAC9C,GAAG,EAAE,CAAC,6IAAC,QAAQ,uMAAC,uCAAmC,CAAC;IACpD,MAAM,EAAE,CAAC,6IAAC,KAAK,wLAAC,sBAAmB,CAAC;IACpC,aAAa,EAAE,CAAC,6IAAC,KAAK,wMAAC,sCAAmC,CAAC;CAC5D,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,QAAO,sLAAA,AAAM,EAAC,CAAC,EAAE;QACf,UAAU,EAAE,SAAS;KACtB,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAYI,MAAM,4CAA4C,GAIrD,CAAC,6IAAC,MAAM,CAAC;IACX,MAAM,sMAAE,oCAAiC;IACzC,OAAO,EAAE,CAAC,6IAAC,OAAO,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,cAAuB,CAAC;IACnE,GAAG,EAAE,CAAC,6IAAC,QAAQ,wMAAC,uCAAoC,CAAC;IACrD,MAAM,EAAE,CAAC,6IAAC,KAAK,wLAAC,uBAAoB,CAAC;IACrC,aAAa,EAAE,CAAC,6IAAC,KAAK,wMAAC,uCAAoC,CAAC;CAC7D,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,OAAO,EAAE,UAAU;KACpB,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,8BAA8B,CAO9C;AAPD,CAAA,SAAiB,8BAA8B;IAC7C,2EAAA,EAA6E,CAChE,+BAAA,aAAa,GAAG,2CAA2C,CAAC;IACzE,4EAAA,EAA8E,CACjE,+BAAA,cAAc,GAAG,4CAA4C,CAAC;AAG7E,CAAC,EAPgB,8BAA8B,IAAA,CAA9B,8BAA8B,GAAA,CAAA,CAAA,GAO9C;AAEK,SAAU,mCAAmC,CACjD,6BAA4D;IAE5D,OAAO,IAAI,CAAC,SAAS,CACnB,4CAA4C,CAAC,KAAK,CAChD,6BAA6B,CAC9B,CACF,CAAC;AACJ,CAAC;AAEK,SAAU,qCAAqC,CACnD,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,0CAA4C,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACvE,CAAA,yDAAA,CAA2D,CAC5D,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 25653, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 25659, "column": 0}, "map": {"version":3,"file":"authorizeuser.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/authorizeuser.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport type AuthorizeUser = {\n  id: string;\n  email: string;\n  avatarUrl: string | null;\n};\n\n/** @internal */\nexport const AuthorizeUser$inboundSchema: z.ZodType<\n  AuthorizeUser,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  id: z.string(),\n  email: z.string(),\n  avatar_url: z.nullable(z.string()),\n}).transform((v) => {\n  return remap$(v, {\n    \"avatar_url\": \"avatarUrl\",\n  });\n});\n\n/** @internal */\nexport type AuthorizeUser$Outbound = {\n  id: string;\n  email: string;\n  avatar_url: string | null;\n};\n\n/** @internal */\nexport const AuthorizeUser$outboundSchema: z.ZodType<\n  AuthorizeUser$Outbound,\n  z.ZodTypeDef,\n  AuthorizeUser\n> = z.object({\n  id: z.string(),\n  email: z.string(),\n  avatarUrl: z.nullable(z.string()),\n}).transform((v) => {\n  return remap$(v, {\n    avatarUrl: \"avatar_url\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace AuthorizeUser$ {\n  /** @deprecated use `AuthorizeUser$inboundSchema` instead. */\n  export const inboundSchema = AuthorizeUser$inboundSchema;\n  /** @deprecated use `AuthorizeUser$outboundSchema` instead. */\n  export const outboundSchema = AuthorizeUser$outboundSchema;\n  /** @deprecated use `AuthorizeUser$Outbound` instead. */\n  export type Outbound = AuthorizeUser$Outbound;\n}\n\nexport function authorizeUserToJSON(authorizeUser: AuthorizeUser): string {\n  return JSON.stringify(AuthorizeUser$outboundSchema.parse(authorizeUser));\n}\n\nexport function authorizeUserFromJSON(\n  jsonString: string,\n): SafeParseResult<AuthorizeUser, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => AuthorizeUser$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'AuthorizeUser' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;;;;;AAW1C,MAAM,2BAA2B,GAIpC,CAAC,6IAAC,MAAM,CAAC;IACX,EAAE,EAAE,CAAC,6IAAC,MAAM,EAAE;IACd,KAAK,EAAE,CAAC,6IAAC,MAAM,EAAE;IACjB,UAAU,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;CACnC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAM,AAAN,EAAO,CAAC,EAAE;QACf,YAAY,EAAE,WAAW;KAC1B,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAUI,MAAM,4BAA4B,GAIrC,CAAC,6IAAC,MAAM,CAAC;IACX,EAAE,EAAE,CAAC,6IAAC,MAAM,EAAE;IACd,KAAK,EAAE,CAAC,6IAAC,MAAM,EAAE;IACjB,SAAS,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;CAClC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAM,AAAN,EAAO,CAAC,EAAE;QACf,SAAS,EAAE,YAAY;KACxB,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,cAAc,CAO9B;AAPD,CAAA,SAAiB,cAAc;IAC7B,2DAAA,EAA6D,CAChD,eAAA,aAAa,GAAG,2BAA2B,CAAC;IACzD,4DAAA,EAA8D,CACjD,eAAA,cAAc,GAAG,4BAA4B,CAAC;AAG7D,CAAC,EAPgB,cAAc,IAAA,CAAd,cAAc,GAAA,CAAA,CAAA,GAO9B;AAEK,SAAU,mBAAmB,CAAC,aAA4B;IAC9D,OAAO,IAAI,CAAC,SAAS,CAAC,4BAA4B,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC;AAC3E,CAAC;AAEK,SAAU,qBAAqB,CACnC,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,0BAA4B,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACvD,CAAA,yCAAA,CAA2C,CAC5C,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 25704, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 25710, "column": 0}, "map": {"version":3,"file":"authorizeresponseuser.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/authorizeresponseuser.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  AuthorizeUser,\n  AuthorizeUser$inboundSchema,\n  AuthorizeUser$Outbound,\n  AuthorizeUser$outboundSchema,\n} from \"./authorizeuser.js\";\nimport {\n  OAuth2ClientPublic,\n  OAuth2ClientPublic$inboundSchema,\n  OAuth2ClientPublic$Outbound,\n  OAuth2ClientPublic$outboundSchema,\n} from \"./oauth2clientpublic.js\";\nimport { Scope, Scope$inboundSchema, Scope$outboundSchema } from \"./scope.js\";\n\nexport type AuthorizeResponseUser = {\n  client: OAuth2ClientPublic;\n  subType?: \"user\" | undefined;\n  sub: AuthorizeUser | null;\n  scopes: Array<Scope>;\n};\n\n/** @internal */\nexport const AuthorizeResponseUser$inboundSchema: z.ZodType<\n  AuthorizeResponseUser,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  client: OAuth2ClientPublic$inboundSchema,\n  sub_type: z.literal(\"user\").optional(),\n  sub: z.nullable(AuthorizeUser$inboundSchema),\n  scopes: z.array(Scope$inboundSchema),\n}).transform((v) => {\n  return remap$(v, {\n    \"sub_type\": \"subType\",\n  });\n});\n\n/** @internal */\nexport type AuthorizeResponseUser$Outbound = {\n  client: OAuth2ClientPublic$Outbound;\n  sub_type: \"user\";\n  sub: AuthorizeUser$Outbound | null;\n  scopes: Array<string>;\n};\n\n/** @internal */\nexport const AuthorizeResponseUser$outboundSchema: z.ZodType<\n  AuthorizeResponseUser$Outbound,\n  z.ZodTypeDef,\n  AuthorizeResponseUser\n> = z.object({\n  client: OAuth2ClientPublic$outboundSchema,\n  subType: z.literal(\"user\").default(\"user\" as const),\n  sub: z.nullable(AuthorizeUser$outboundSchema),\n  scopes: z.array(Scope$outboundSchema),\n}).transform((v) => {\n  return remap$(v, {\n    subType: \"sub_type\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace AuthorizeResponseUser$ {\n  /** @deprecated use `AuthorizeResponseUser$inboundSchema` instead. */\n  export const inboundSchema = AuthorizeResponseUser$inboundSchema;\n  /** @deprecated use `AuthorizeResponseUser$outboundSchema` instead. */\n  export const outboundSchema = AuthorizeResponseUser$outboundSchema;\n  /** @deprecated use `AuthorizeResponseUser$Outbound` instead. */\n  export type Outbound = AuthorizeResponseUser$Outbound;\n}\n\nexport function authorizeResponseUserToJSON(\n  authorizeResponseUser: AuthorizeResponseUser,\n): string {\n  return JSON.stringify(\n    AuthorizeResponseUser$outboundSchema.parse(authorizeResponseUser),\n  );\n}\n\nexport function authorizeResponseUserFromJSON(\n  jsonString: string,\n): SafeParseResult<AuthorizeResponseUser, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => AuthorizeResponseUser$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'AuthorizeResponseUser' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,2BAA2B,EAE3B,4BAA4B,GAC7B,MAAM,oBAAoB,CAAC;AAC5B,OAAO,EAEL,gCAAgC,EAEhC,iCAAiC,GAClC,MAAM,yBAAyB,CAAC;AACjC,OAAO,EAAS,mBAAmB,EAAE,oBAAoB,EAAE,MAAM,YAAY,CAAC;;;;;;;;AAUvE,MAAM,mCAAmC,GAI5C,CAAC,6IAAC,MAAM,CAAC;IACX,MAAM,sMAAE,mCAAgC;IACxC,QAAQ,EAAE,CAAC,6IAAC,OAAO,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE;IACtC,GAAG,EAAE,CAAC,6IAAC,QAAQ,gMAAC,8BAA2B,CAAC;IAC5C,MAAM,EAAE,CAAC,6IAAC,KAAK,wLAAC,sBAAmB,CAAC;CACrC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,QAAO,sLAAM,AAAN,EAAO,CAAC,EAAE;QACf,UAAU,EAAE,SAAS;KACtB,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAWI,MAAM,oCAAoC,GAI7C,CAAC,6IAAC,MAAM,CAAC;IACX,MAAM,sMAAE,oCAAiC;IACzC,OAAO,EAAE,CAAC,6IAAC,OAAO,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,MAAe,CAAC;IACnD,GAAG,EAAE,CAAC,6IAAC,QAAQ,gMAAC,+BAA4B,CAAC;IAC7C,MAAM,EAAE,CAAC,6IAAC,KAAK,wLAAC,uBAAoB,CAAC;CACtC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,OAAO,EAAE,UAAU;KACpB,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,sBAAsB,CAOtC;AAPD,CAAA,SAAiB,sBAAsB;IACrC,mEAAA,EAAqE,CACxD,uBAAA,aAAa,GAAG,mCAAmC,CAAC;IACjE,oEAAA,EAAsE,CACzD,uBAAA,cAAc,GAAG,oCAAoC,CAAC;AAGrE,CAAC,EAPgB,sBAAsB,IAAA,CAAtB,sBAAsB,GAAA,CAAA,CAAA,GAOtC;AAEK,SAAU,2BAA2B,CACzC,qBAA4C;IAE5C,OAAO,IAAI,CAAC,SAAS,CACnB,oCAAoC,CAAC,KAAK,CAAC,qBAAqB,CAAC,CAClE,CAAC;AACJ,CAAC;AAEK,SAAU,6BAA6B,CAC3C,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,kCAAoC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC/D,CAAA,iDAAA,CAAmD,CACpD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 25763, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 25769, "column": 0}, "map": {"version":3,"file":"introspecttokenrequest.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/introspecttokenrequest.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { ClosedEnum } from \"../../types/enums.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport const IntrospectTokenRequestTokenTypeHint = {\n  AccessToken: \"access_token\",\n  RefreshToken: \"refresh_token\",\n} as const;\nexport type IntrospectTokenRequestTokenTypeHint = ClosedEnum<\n  typeof IntrospectTokenRequestTokenTypeHint\n>;\n\nexport type IntrospectTokenRequest = {\n  token: string;\n  tokenTypeHint?: IntrospectTokenRequestTokenTypeHint | null | undefined;\n  clientId: string;\n  clientSecret: string;\n};\n\n/** @internal */\nexport const IntrospectTokenRequestTokenTypeHint$inboundSchema: z.ZodNativeEnum<\n  typeof IntrospectTokenRequestTokenTypeHint\n> = z.nativeEnum(IntrospectTokenRequestTokenTypeHint);\n\n/** @internal */\nexport const IntrospectTokenRequestTokenTypeHint$outboundSchema:\n  z.ZodNativeEnum<typeof IntrospectTokenRequestTokenTypeHint> =\n    IntrospectTokenRequestTokenTypeHint$inboundSchema;\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace IntrospectTokenRequestTokenTypeHint$ {\n  /** @deprecated use `IntrospectTokenRequestTokenTypeHint$inboundSchema` instead. */\n  export const inboundSchema =\n    IntrospectTokenRequestTokenTypeHint$inboundSchema;\n  /** @deprecated use `IntrospectTokenRequestTokenTypeHint$outboundSchema` instead. */\n  export const outboundSchema =\n    IntrospectTokenRequestTokenTypeHint$outboundSchema;\n}\n\n/** @internal */\nexport const IntrospectTokenRequest$inboundSchema: z.ZodType<\n  IntrospectTokenRequest,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  token: z.string(),\n  token_type_hint: z.nullable(IntrospectTokenRequestTokenTypeHint$inboundSchema)\n    .optional(),\n  client_id: z.string(),\n  client_secret: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    \"token_type_hint\": \"tokenTypeHint\",\n    \"client_id\": \"clientId\",\n    \"client_secret\": \"clientSecret\",\n  });\n});\n\n/** @internal */\nexport type IntrospectTokenRequest$Outbound = {\n  token: string;\n  token_type_hint?: string | null | undefined;\n  client_id: string;\n  client_secret: string;\n};\n\n/** @internal */\nexport const IntrospectTokenRequest$outboundSchema: z.ZodType<\n  IntrospectTokenRequest$Outbound,\n  z.ZodTypeDef,\n  IntrospectTokenRequest\n> = z.object({\n  token: z.string(),\n  tokenTypeHint: z.nullable(IntrospectTokenRequestTokenTypeHint$outboundSchema)\n    .optional(),\n  clientId: z.string(),\n  clientSecret: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    tokenTypeHint: \"token_type_hint\",\n    clientId: \"client_id\",\n    clientSecret: \"client_secret\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace IntrospectTokenRequest$ {\n  /** @deprecated use `IntrospectTokenRequest$inboundSchema` instead. */\n  export const inboundSchema = IntrospectTokenRequest$inboundSchema;\n  /** @deprecated use `IntrospectTokenRequest$outboundSchema` instead. */\n  export const outboundSchema = IntrospectTokenRequest$outboundSchema;\n  /** @deprecated use `IntrospectTokenRequest$Outbound` instead. */\n  export type Outbound = IntrospectTokenRequest$Outbound;\n}\n\nexport function introspectTokenRequestToJSON(\n  introspectTokenRequest: IntrospectTokenRequest,\n): string {\n  return JSON.stringify(\n    IntrospectTokenRequest$outboundSchema.parse(introspectTokenRequest),\n  );\n}\n\nexport function introspectTokenRequestFromJSON(\n  jsonString: string,\n): SafeParseResult<IntrospectTokenRequest, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => IntrospectTokenRequest$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'IntrospectTokenRequest' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;;;;;AAK1C,MAAM,mCAAmC,GAAG;IACjD,WAAW,EAAE,cAAc;IAC3B,YAAY,EAAE,eAAe;CACrB,CAAC;AAaJ,MAAM,iDAAiD,GAE1D,CAAC,6IAAC,UAAU,CAAC,mCAAmC,CAAC,CAAC;AAG/C,MAAM,kDAAkD,GAE3D,iDAAiD,CAAC;AAMhD,IAAW,oCAAoC,CAOpD;AAPD,CAAA,SAAiB,oCAAoC;IACnD,iFAAA,EAAmF,CACtE,qCAAA,aAAa,GACxB,iDAAiD,CAAC;IACpD,kFAAA,EAAoF,CACvE,qCAAA,cAAc,GACzB,kDAAkD,CAAC;AACvD,CAAC,EAPgB,oCAAoC,IAAA,CAApC,oCAAoC,GAAA,CAAA,CAAA,GAOpD;AAGM,MAAM,oCAAoC,GAI7C,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,MAAM,EAAE;IACjB,eAAe,EAAE,CAAC,6IAAC,QAAQ,CAAC,iDAAiD,CAAC,CAC3E,QAAQ,EAAE;IACb,SAAS,EAAE,CAAC,6IAAC,MAAM,EAAE;IACrB,aAAa,EAAE,CAAC,6IAAC,MAAM,EAAE;CAC1B,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,iBAAiB,EAAE,eAAe;QAClC,WAAW,EAAE,UAAU;QACvB,eAAe,EAAE,cAAc;KAChC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAWI,MAAM,qCAAqC,GAI9C,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,MAAM,EAAE;IACjB,aAAa,EAAE,CAAC,6IAAC,QAAQ,CAAC,kDAAkD,CAAC,CAC1E,QAAQ,EAAE;IACb,QAAQ,EAAE,CAAC,6IAAC,MAAM,EAAE;IACpB,YAAY,EAAE,CAAC,6IAAC,MAAM,EAAE;CACzB,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,aAAa,EAAE,iBAAiB;QAChC,QAAQ,EAAE,WAAW;QACrB,YAAY,EAAE,eAAe;KAC9B,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,uBAAuB,CAOvC;AAPD,CAAA,SAAiB,uBAAuB;IACtC,oEAAA,EAAsE,CACzD,wBAAA,aAAa,GAAG,oCAAoC,CAAC;IAClE,qEAAA,EAAuE,CAC1D,wBAAA,cAAc,GAAG,qCAAqC,CAAC;AAGtE,CAAC,EAPgB,uBAAuB,IAAA,CAAvB,uBAAuB,GAAA,CAAA,CAAA,GAOvC;AAEK,SAAU,4BAA4B,CAC1C,sBAA8C;IAE9C,OAAO,IAAI,CAAC,SAAS,CACnB,qCAAqC,CAAC,KAAK,CAAC,sBAAsB,CAAC,CACpE,CAAC;AACJ,CAAC;AAEK,SAAU,8BAA8B,CAC5C,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,mCAAqC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAChE,CAAA,kDAAA,CAAoD,CACrD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 25835, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 25841, "column": 0}, "map": {"version":3,"file":"subtype.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/subtype.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { ClosedEnum } from \"../../types/enums.js\";\n\nexport const SubType = {\n  User: \"user\",\n  Organization: \"organization\",\n} as const;\nexport type SubType = ClosedEnum<typeof SubType>;\n\n/** @internal */\nexport const SubType$inboundSchema: z.ZodNativeEnum<typeof SubType> = z\n  .nativeEnum(SubType);\n\n/** @internal */\nexport const SubType$outboundSchema: z.ZodNativeEnum<typeof SubType> =\n  SubType$inboundSchema;\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace SubType$ {\n  /** @deprecated use `SubType$inboundSchema` instead. */\n  export const inboundSchema = SubType$inboundSchema;\n  /** @deprecated use `SubType$outboundSchema` instead. */\n  export const outboundSchema = SubType$outboundSchema;\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;AAGlB,MAAM,OAAO,GAAG;IACrB,IAAI,EAAE,MAAM;IACZ,YAAY,EAAE,cAAc;CACpB,CAAC;AAIJ,MAAM,qBAAqB,GAAoC,CAAC,6IACpE,UAAU,CAAC,OAAO,CAAC,CAAC;AAGhB,MAAM,sBAAsB,GACjC,qBAAqB,CAAC;AAMlB,IAAW,QAAQ,CAKxB;AALD,CAAA,SAAiB,QAAQ;IACvB,qDAAA,EAAuD,CAC1C,SAAA,aAAa,GAAG,qBAAqB,CAAC;IACnD,sDAAA,EAAwD,CAC3C,SAAA,cAAc,GAAG,sBAAsB,CAAC;AACvD,CAAC,EALgB,QAAQ,IAAA,CAAR,QAAQ,GAAA,CAAA,CAAA,GAKxB","ignoreList":[0]}},
    {"offset": {"line": 25863, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 25869, "column": 0}, "map": {"version":3,"file":"introspecttokenresponse.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/introspecttokenresponse.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { ClosedEnum } from \"../../types/enums.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  SubType,\n  SubType$inboundSchema,\n  SubType$outboundSchema,\n} from \"./subtype.js\";\n\nexport const TokenType = {\n  AccessToken: \"access_token\",\n  RefreshToken: \"refresh_token\",\n} as const;\nexport type TokenType = ClosedEnum<typeof TokenType>;\n\nexport type IntrospectTokenResponse = {\n  active: boolean;\n  clientId: string;\n  tokenType: TokenType;\n  scope: string;\n  subType: SubType;\n  sub: string;\n  aud: string;\n  iss: string;\n  exp: number;\n  iat: number;\n};\n\n/** @internal */\nexport const TokenType$inboundSchema: z.ZodNativeEnum<typeof TokenType> = z\n  .nativeEnum(TokenType);\n\n/** @internal */\nexport const TokenType$outboundSchema: z.ZodNativeEnum<typeof TokenType> =\n  TokenType$inboundSchema;\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace TokenType$ {\n  /** @deprecated use `TokenType$inboundSchema` instead. */\n  export const inboundSchema = TokenType$inboundSchema;\n  /** @deprecated use `TokenType$outboundSchema` instead. */\n  export const outboundSchema = TokenType$outboundSchema;\n}\n\n/** @internal */\nexport const IntrospectTokenResponse$inboundSchema: z.ZodType<\n  IntrospectTokenResponse,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  active: z.boolean(),\n  client_id: z.string(),\n  token_type: TokenType$inboundSchema,\n  scope: z.string(),\n  sub_type: SubType$inboundSchema,\n  sub: z.string(),\n  aud: z.string(),\n  iss: z.string(),\n  exp: z.number().int(),\n  iat: z.number().int(),\n}).transform((v) => {\n  return remap$(v, {\n    \"client_id\": \"clientId\",\n    \"token_type\": \"tokenType\",\n    \"sub_type\": \"subType\",\n  });\n});\n\n/** @internal */\nexport type IntrospectTokenResponse$Outbound = {\n  active: boolean;\n  client_id: string;\n  token_type: string;\n  scope: string;\n  sub_type: string;\n  sub: string;\n  aud: string;\n  iss: string;\n  exp: number;\n  iat: number;\n};\n\n/** @internal */\nexport const IntrospectTokenResponse$outboundSchema: z.ZodType<\n  IntrospectTokenResponse$Outbound,\n  z.ZodTypeDef,\n  IntrospectTokenResponse\n> = z.object({\n  active: z.boolean(),\n  clientId: z.string(),\n  tokenType: TokenType$outboundSchema,\n  scope: z.string(),\n  subType: SubType$outboundSchema,\n  sub: z.string(),\n  aud: z.string(),\n  iss: z.string(),\n  exp: z.number().int(),\n  iat: z.number().int(),\n}).transform((v) => {\n  return remap$(v, {\n    clientId: \"client_id\",\n    tokenType: \"token_type\",\n    subType: \"sub_type\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace IntrospectTokenResponse$ {\n  /** @deprecated use `IntrospectTokenResponse$inboundSchema` instead. */\n  export const inboundSchema = IntrospectTokenResponse$inboundSchema;\n  /** @deprecated use `IntrospectTokenResponse$outboundSchema` instead. */\n  export const outboundSchema = IntrospectTokenResponse$outboundSchema;\n  /** @deprecated use `IntrospectTokenResponse$Outbound` instead. */\n  export type Outbound = IntrospectTokenResponse$Outbound;\n}\n\nexport function introspectTokenResponseToJSON(\n  introspectTokenResponse: IntrospectTokenResponse,\n): string {\n  return JSON.stringify(\n    IntrospectTokenResponse$outboundSchema.parse(introspectTokenResponse),\n  );\n}\n\nexport function introspectTokenResponseFromJSON(\n  jsonString: string,\n): SafeParseResult<IntrospectTokenResponse, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => IntrospectTokenResponse$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'IntrospectTokenResponse' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 25949, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 25955, "column": 0}, "map": {"version":3,"file":"revoketokenrequest.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/revoketokenrequest.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { ClosedEnum } from \"../../types/enums.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport const TokenTypeHint = {\n  AccessToken: \"access_token\",\n  RefreshToken: \"refresh_token\",\n} as const;\nexport type TokenTypeHint = ClosedEnum<typeof TokenTypeHint>;\n\nexport type RevokeTokenRequest = {\n  token: string;\n  tokenTypeHint?: TokenTypeHint | null | undefined;\n  clientId: string;\n  clientSecret: string;\n};\n\n/** @internal */\nexport const TokenTypeHint$inboundSchema: z.ZodNativeEnum<\n  typeof TokenTypeHint\n> = z.nativeEnum(TokenTypeHint);\n\n/** @internal */\nexport const TokenTypeHint$outboundSchema: z.ZodNativeEnum<\n  typeof TokenTypeHint\n> = TokenTypeHint$inboundSchema;\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace TokenTypeHint$ {\n  /** @deprecated use `TokenTypeHint$inboundSchema` instead. */\n  export const inboundSchema = TokenTypeHint$inboundSchema;\n  /** @deprecated use `TokenTypeHint$outboundSchema` instead. */\n  export const outboundSchema = TokenTypeHint$outboundSchema;\n}\n\n/** @internal */\nexport const RevokeTokenRequest$inboundSchema: z.ZodType<\n  RevokeTokenRequest,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  token: z.string(),\n  token_type_hint: z.nullable(TokenTypeHint$inboundSchema).optional(),\n  client_id: z.string(),\n  client_secret: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    \"token_type_hint\": \"tokenTypeHint\",\n    \"client_id\": \"clientId\",\n    \"client_secret\": \"clientSecret\",\n  });\n});\n\n/** @internal */\nexport type RevokeTokenRequest$Outbound = {\n  token: string;\n  token_type_hint?: string | null | undefined;\n  client_id: string;\n  client_secret: string;\n};\n\n/** @internal */\nexport const RevokeTokenRequest$outboundSchema: z.ZodType<\n  RevokeTokenRequest$Outbound,\n  z.ZodTypeDef,\n  RevokeTokenRequest\n> = z.object({\n  token: z.string(),\n  tokenTypeHint: z.nullable(TokenTypeHint$outboundSchema).optional(),\n  clientId: z.string(),\n  clientSecret: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    tokenTypeHint: \"token_type_hint\",\n    clientId: \"client_id\",\n    clientSecret: \"client_secret\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace RevokeTokenRequest$ {\n  /** @deprecated use `RevokeTokenRequest$inboundSchema` instead. */\n  export const inboundSchema = RevokeTokenRequest$inboundSchema;\n  /** @deprecated use `RevokeTokenRequest$outboundSchema` instead. */\n  export const outboundSchema = RevokeTokenRequest$outboundSchema;\n  /** @deprecated use `RevokeTokenRequest$Outbound` instead. */\n  export type Outbound = RevokeTokenRequest$Outbound;\n}\n\nexport function revokeTokenRequestToJSON(\n  revokeTokenRequest: RevokeTokenRequest,\n): string {\n  return JSON.stringify(\n    RevokeTokenRequest$outboundSchema.parse(revokeTokenRequest),\n  );\n}\n\nexport function revokeTokenRequestFromJSON(\n  jsonString: string,\n): SafeParseResult<RevokeTokenRequest, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => RevokeTokenRequest$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'RevokeTokenRequest' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;;;;;AAK1C,MAAM,aAAa,GAAG;IAC3B,WAAW,EAAE,cAAc;IAC3B,YAAY,EAAE,eAAe;CACrB,CAAC;AAWJ,MAAM,2BAA2B,GAEpC,CAAC,6IAAC,UAAU,CAAC,aAAa,CAAC,CAAC;AAGzB,MAAM,4BAA4B,GAErC,2BAA2B,CAAC;AAM1B,IAAW,cAAc,CAK9B;AALD,CAAA,SAAiB,cAAc;IAC7B,2DAAA,EAA6D,CAChD,eAAA,aAAa,GAAG,2BAA2B,CAAC;IACzD,4DAAA,EAA8D,CACjD,eAAA,cAAc,GAAG,4BAA4B,CAAC;AAC7D,CAAC,EALgB,cAAc,IAAA,CAAd,cAAc,GAAA,CAAA,CAAA,GAK9B;AAGM,MAAM,gCAAgC,GAIzC,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,MAAM,EAAE;IACjB,eAAe,EAAE,CAAC,6IAAC,QAAQ,CAAC,2BAA2B,CAAC,CAAC,QAAQ,EAAE;IACnE,SAAS,EAAE,CAAC,6IAAC,MAAM,EAAE;IACrB,aAAa,EAAE,CAAC,6IAAC,MAAM,EAAE;CAC1B,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,iBAAiB,EAAE,eAAe;QAClC,WAAW,EAAE,UAAU;QACvB,eAAe,EAAE,cAAc;KAChC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAWI,MAAM,iCAAiC,GAI1C,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,MAAM,EAAE;IACjB,aAAa,EAAE,CAAC,6IAAC,QAAQ,CAAC,4BAA4B,CAAC,CAAC,QAAQ,EAAE;IAClE,QAAQ,EAAE,CAAC,6IAAC,MAAM,EAAE;IACpB,YAAY,EAAE,CAAC,6IAAC,MAAM,EAAE;CACzB,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,aAAa,EAAE,iBAAiB;QAChC,QAAQ,EAAE,WAAW;QACrB,YAAY,EAAE,eAAe;KAC9B,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,mBAAmB,CAOnC;AAPD,CAAA,SAAiB,mBAAmB;IAClC,gEAAA,EAAkE,CACrD,oBAAA,aAAa,GAAG,gCAAgC,CAAC;IAC9D,iEAAA,EAAmE,CACtD,oBAAA,cAAc,GAAG,iCAAiC,CAAC;AAGlE,CAAC,EAPgB,mBAAmB,IAAA,CAAnB,mBAAmB,GAAA,CAAA,CAAA,GAOnC;AAEK,SAAU,wBAAwB,CACtC,kBAAsC;IAEtC,OAAO,IAAI,CAAC,SAAS,CACnB,iCAAiC,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAC5D,CAAC;AACJ,CAAC;AAEK,SAAU,0BAA0B,CACxC,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,+BAAiC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC5D,CAAA,8CAAA,CAAgD,CACjD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 26021, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 26027, "column": 0}, "map": {"version":3,"file":"revoketokenresponse.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/revoketokenresponse.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport type RevokeTokenResponse = {};\n\n/** @internal */\nexport const RevokeTokenResponse$inboundSchema: z.ZodType<\n  RevokeTokenResponse,\n  z.ZodTypeDef,\n  unknown\n> = z.object({});\n\n/** @internal */\nexport type RevokeTokenResponse$Outbound = {};\n\n/** @internal */\nexport const RevokeTokenResponse$outboundSchema: z.ZodType<\n  RevokeTokenResponse$Outbound,\n  z.ZodTypeDef,\n  RevokeTokenResponse\n> = z.object({});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace RevokeTokenResponse$ {\n  /** @deprecated use `RevokeTokenResponse$inboundSchema` instead. */\n  export const inboundSchema = RevokeTokenResponse$inboundSchema;\n  /** @deprecated use `RevokeTokenResponse$outboundSchema` instead. */\n  export const outboundSchema = RevokeTokenResponse$outboundSchema;\n  /** @deprecated use `RevokeTokenResponse$Outbound` instead. */\n  export type Outbound = RevokeTokenResponse$Outbound;\n}\n\nexport function revokeTokenResponseToJSON(\n  revokeTokenResponse: RevokeTokenResponse,\n): string {\n  return JSON.stringify(\n    RevokeTokenResponse$outboundSchema.parse(revokeTokenResponse),\n  );\n}\n\nexport function revokeTokenResponseFromJSON(\n  jsonString: string,\n): SafeParseResult<RevokeTokenResponse, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => RevokeTokenResponse$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'RevokeTokenResponse' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;AAGH,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AADjD,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;;AAQlB,MAAM,iCAAiC,GAI1C,CAAC,6IAAC,MAAM,CAAC,CAAA,CAAE,CAAC,CAAC;AAMV,MAAM,kCAAkC,GAI3C,CAAC,6IAAC,MAAM,CAAC,CAAA,CAAE,CAAC,CAAC;AAMX,IAAW,oBAAoB,CAOpC;AAPD,CAAA,SAAiB,oBAAoB;IACnC,iEAAA,EAAmE,CACtD,qBAAA,aAAa,GAAG,iCAAiC,CAAC;IAC/D,kEAAA,EAAoE,CACvD,qBAAA,cAAc,GAAG,kCAAkC,CAAC;AAGnE,CAAC,EAPgB,oBAAoB,IAAA,CAApB,oBAAoB,GAAA,CAAA,CAAA,GAOpC;AAEK,SAAU,yBAAyB,CACvC,mBAAwC;IAExC,OAAO,IAAI,CAAC,SAAS,CACnB,kCAAkC,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAC9D,CAAC;AACJ,CAAC;AAEK,SAAU,2BAA2B,CACzC,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,gCAAkC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC7D,CAAA,+CAAA,CAAiD,CAClD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 26054, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 26060, "column": 0}, "map": {"version":3,"file":"tokenresponse.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/tokenresponse.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport type TokenResponse = {\n  accessToken: string;\n  tokenType?: \"Bearer\" | undefined;\n  expiresIn: number;\n  refreshToken: string | null;\n  scope: string;\n  idToken: string;\n};\n\n/** @internal */\nexport const TokenResponse$inboundSchema: z.ZodType<\n  TokenResponse,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  access_token: z.string(),\n  token_type: z.literal(\"Bearer\").optional(),\n  expires_in: z.number().int(),\n  refresh_token: z.nullable(z.string()),\n  scope: z.string(),\n  id_token: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    \"access_token\": \"accessToken\",\n    \"token_type\": \"tokenType\",\n    \"expires_in\": \"expiresIn\",\n    \"refresh_token\": \"refreshToken\",\n    \"id_token\": \"idToken\",\n  });\n});\n\n/** @internal */\nexport type TokenResponse$Outbound = {\n  access_token: string;\n  token_type: \"Bearer\";\n  expires_in: number;\n  refresh_token: string | null;\n  scope: string;\n  id_token: string;\n};\n\n/** @internal */\nexport const TokenResponse$outboundSchema: z.ZodType<\n  TokenResponse$Outbound,\n  z.ZodTypeDef,\n  TokenResponse\n> = z.object({\n  accessToken: z.string(),\n  tokenType: z.literal(\"Bearer\").default(\"Bearer\" as const),\n  expiresIn: z.number().int(),\n  refreshToken: z.nullable(z.string()),\n  scope: z.string(),\n  idToken: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    accessToken: \"access_token\",\n    tokenType: \"token_type\",\n    expiresIn: \"expires_in\",\n    refreshToken: \"refresh_token\",\n    idToken: \"id_token\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace TokenResponse$ {\n  /** @deprecated use `TokenResponse$inboundSchema` instead. */\n  export const inboundSchema = TokenResponse$inboundSchema;\n  /** @deprecated use `TokenResponse$outboundSchema` instead. */\n  export const outboundSchema = TokenResponse$outboundSchema;\n  /** @deprecated use `TokenResponse$Outbound` instead. */\n  export type Outbound = TokenResponse$Outbound;\n}\n\nexport function tokenResponseToJSON(tokenResponse: TokenResponse): string {\n  return JSON.stringify(TokenResponse$outboundSchema.parse(tokenResponse));\n}\n\nexport function tokenResponseFromJSON(\n  jsonString: string,\n): SafeParseResult<TokenResponse, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => TokenResponse$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'TokenResponse' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;;;;;AAc1C,MAAM,2BAA2B,GAIpC,CAAC,6IAAC,MAAM,CAAC;IACX,YAAY,EAAE,CAAC,6IAAC,MAAM,EAAE;IACxB,UAAU,EAAE,CAAC,6IAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE;IAC1C,UAAU,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAC5B,aAAa,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;IACrC,KAAK,EAAE,CAAC,6IAAC,MAAM,EAAE;IACjB,QAAQ,EAAE,CAAC,6IAAC,MAAM,EAAE;CACrB,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,cAAc,EAAE,aAAa;QAC7B,YAAY,EAAE,WAAW;QACzB,YAAY,EAAE,WAAW;QACzB,eAAe,EAAE,cAAc;QAC/B,UAAU,EAAE,SAAS;KACtB,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAaI,MAAM,4BAA4B,GAIrC,CAAC,6IAAC,MAAM,CAAC;IACX,WAAW,EAAE,CAAC,6IAAC,MAAM,EAAE;IACvB,SAAS,EAAE,CAAC,6IAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,QAAiB,CAAC;IACzD,SAAS,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAC3B,YAAY,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;IACpC,KAAK,EAAE,CAAC,6IAAC,MAAM,EAAE;IACjB,OAAO,EAAE,CAAC,6IAAC,MAAM,EAAE;CACpB,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAM,AAAN,EAAO,CAAC,EAAE;QACf,WAAW,EAAE,cAAc;QAC3B,SAAS,EAAE,YAAY;QACvB,SAAS,EAAE,YAAY;QACvB,YAAY,EAAE,eAAe;QAC7B,OAAO,EAAE,UAAU;KACpB,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,cAAc,CAO9B;AAPD,CAAA,SAAiB,cAAc;IAC7B,2DAAA,EAA6D,CAChD,eAAA,aAAa,GAAG,2BAA2B,CAAC;IACzD,4DAAA,EAA8D,CACjD,eAAA,cAAc,GAAG,4BAA4B,CAAC;AAG7D,CAAC,EAPgB,cAAc,IAAA,CAAd,cAAc,GAAA,CAAA,CAAA,GAO9B;AAEK,SAAU,mBAAmB,CAAC,aAA4B;IAC9D,OAAO,IAAI,CAAC,SAAS,CAAC,4BAA4B,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC;AAC3E,CAAC;AAEK,SAAU,qBAAqB,CACnC,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,0BAA4B,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACvD,CAAA,yCAAA,CAA2C,CAC5C,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 26119, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 26125, "column": 0}, "map": {"version":3,"file":"authorizationcodetokenrequest.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/authorizationcodetokenrequest.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport type AuthorizationCodeTokenRequest = {\n  grantType?: \"authorization_code\" | undefined;\n  clientId: string;\n  clientSecret: string;\n  code: string;\n  redirectUri: string;\n};\n\n/** @internal */\nexport const AuthorizationCodeTokenRequest$inboundSchema: z.ZodType<\n  AuthorizationCodeTokenRequest,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  grant_type: z.literal(\"authorization_code\").optional(),\n  client_id: z.string(),\n  client_secret: z.string(),\n  code: z.string(),\n  redirect_uri: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    \"grant_type\": \"grantType\",\n    \"client_id\": \"clientId\",\n    \"client_secret\": \"clientSecret\",\n    \"redirect_uri\": \"redirectUri\",\n  });\n});\n\n/** @internal */\nexport type AuthorizationCodeTokenRequest$Outbound = {\n  grant_type: \"authorization_code\";\n  client_id: string;\n  client_secret: string;\n  code: string;\n  redirect_uri: string;\n};\n\n/** @internal */\nexport const AuthorizationCodeTokenRequest$outboundSchema: z.ZodType<\n  AuthorizationCodeTokenRequest$Outbound,\n  z.ZodTypeDef,\n  AuthorizationCodeTokenRequest\n> = z.object({\n  grantType: z.literal(\"authorization_code\").default(\n    \"authorization_code\" as const,\n  ),\n  clientId: z.string(),\n  clientSecret: z.string(),\n  code: z.string(),\n  redirectUri: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    grantType: \"grant_type\",\n    clientId: \"client_id\",\n    clientSecret: \"client_secret\",\n    redirectUri: \"redirect_uri\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace AuthorizationCodeTokenRequest$ {\n  /** @deprecated use `AuthorizationCodeTokenRequest$inboundSchema` instead. */\n  export const inboundSchema = AuthorizationCodeTokenRequest$inboundSchema;\n  /** @deprecated use `AuthorizationCodeTokenRequest$outboundSchema` instead. */\n  export const outboundSchema = AuthorizationCodeTokenRequest$outboundSchema;\n  /** @deprecated use `AuthorizationCodeTokenRequest$Outbound` instead. */\n  export type Outbound = AuthorizationCodeTokenRequest$Outbound;\n}\n\nexport function authorizationCodeTokenRequestToJSON(\n  authorizationCodeTokenRequest: AuthorizationCodeTokenRequest,\n): string {\n  return JSON.stringify(\n    AuthorizationCodeTokenRequest$outboundSchema.parse(\n      authorizationCodeTokenRequest,\n    ),\n  );\n}\n\nexport function authorizationCodeTokenRequestFromJSON(\n  jsonString: string,\n): SafeParseResult<AuthorizationCodeTokenRequest, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => AuthorizationCodeTokenRequest$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'AuthorizationCodeTokenRequest' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;;;;;AAa1C,MAAM,2CAA2C,GAIpD,CAAC,6IAAC,MAAM,CAAC;IACX,UAAU,EAAE,CAAC,6IAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC,QAAQ,EAAE;IACtD,SAAS,EAAE,CAAC,6IAAC,MAAM,EAAE;IACrB,aAAa,EAAE,CAAC,6IAAC,MAAM,EAAE;IACzB,IAAI,EAAE,CAAC,6IAAC,MAAM,EAAE;IAChB,YAAY,EAAE,CAAC,6IAAC,MAAM,EAAE;CACzB,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,YAAY,EAAE,WAAW;QACzB,WAAW,EAAE,UAAU;QACvB,eAAe,EAAE,cAAc;QAC/B,cAAc,EAAE,aAAa;KAC9B,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAYI,MAAM,4CAA4C,GAIrD,CAAC,6IAAC,MAAM,CAAC;IACX,SAAS,EAAE,CAAC,6IAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC,OAAO,CAChD,oBAA6B,CAC9B;IACD,QAAQ,EAAE,CAAC,6IAAC,MAAM,EAAE;IACpB,YAAY,EAAE,CAAC,6IAAC,MAAM,EAAE;IACxB,IAAI,EAAE,CAAC,6IAAC,MAAM,EAAE;IAChB,WAAW,EAAE,CAAC,6IAAC,MAAM,EAAE;CACxB,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,QAAO,sLAAA,AAAM,EAAC,CAAC,EAAE;QACf,SAAS,EAAE,YAAY;QACvB,QAAQ,EAAE,WAAW;QACrB,YAAY,EAAE,eAAe;QAC7B,WAAW,EAAE,cAAc;KAC5B,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,8BAA8B,CAO9C;AAPD,CAAA,SAAiB,8BAA8B;IAC7C,2EAAA,EAA6E,CAChE,+BAAA,aAAa,GAAG,2CAA2C,CAAC;IACzE,4EAAA,EAA8E,CACjE,+BAAA,cAAc,GAAG,4CAA4C,CAAC;AAG7E,CAAC,EAPgB,8BAA8B,IAAA,CAA9B,8BAA8B,GAAA,CAAA,CAAA,GAO9C;AAEK,SAAU,mCAAmC,CACjD,6BAA4D;IAE5D,OAAO,IAAI,CAAC,SAAS,CACnB,4CAA4C,CAAC,KAAK,CAChD,6BAA6B,CAC9B,CACF,CAAC;AACJ,CAAC;AAEK,SAAU,qCAAqC,CACnD,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,0CAA4C,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACvE,CAAA,yDAAA,CAA2D,CAC5D,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 26180, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 26186, "column": 0}, "map": {"version":3,"file":"refreshtokenrequest.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/refreshtokenrequest.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport type RefreshTokenRequest = {\n  grantType?: \"refresh_token\" | undefined;\n  clientId: string;\n  clientSecret: string;\n  refreshToken: string;\n};\n\n/** @internal */\nexport const RefreshTokenRequest$inboundSchema: z.ZodType<\n  RefreshTokenRequest,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  grant_type: z.literal(\"refresh_token\").optional(),\n  client_id: z.string(),\n  client_secret: z.string(),\n  refresh_token: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    \"grant_type\": \"grantType\",\n    \"client_id\": \"clientId\",\n    \"client_secret\": \"clientSecret\",\n    \"refresh_token\": \"refreshToken\",\n  });\n});\n\n/** @internal */\nexport type RefreshTokenRequest$Outbound = {\n  grant_type: \"refresh_token\";\n  client_id: string;\n  client_secret: string;\n  refresh_token: string;\n};\n\n/** @internal */\nexport const RefreshTokenRequest$outboundSchema: z.ZodType<\n  RefreshTokenRequest$Outbound,\n  z.ZodTypeDef,\n  RefreshTokenRequest\n> = z.object({\n  grantType: z.literal(\"refresh_token\").default(\"refresh_token\" as const),\n  clientId: z.string(),\n  clientSecret: z.string(),\n  refreshToken: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    grantType: \"grant_type\",\n    clientId: \"client_id\",\n    clientSecret: \"client_secret\",\n    refreshToken: \"refresh_token\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace RefreshTokenRequest$ {\n  /** @deprecated use `RefreshTokenRequest$inboundSchema` instead. */\n  export const inboundSchema = RefreshTokenRequest$inboundSchema;\n  /** @deprecated use `RefreshTokenRequest$outboundSchema` instead. */\n  export const outboundSchema = RefreshTokenRequest$outboundSchema;\n  /** @deprecated use `RefreshTokenRequest$Outbound` instead. */\n  export type Outbound = RefreshTokenRequest$Outbound;\n}\n\nexport function refreshTokenRequestToJSON(\n  refreshTokenRequest: RefreshTokenRequest,\n): string {\n  return JSON.stringify(\n    RefreshTokenRequest$outboundSchema.parse(refreshTokenRequest),\n  );\n}\n\nexport function refreshTokenRequestFromJSON(\n  jsonString: string,\n): SafeParseResult<RefreshTokenRequest, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => RefreshTokenRequest$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'RefreshTokenRequest' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;;;;;AAY1C,MAAM,iCAAiC,GAI1C,CAAC,6IAAC,MAAM,CAAC;IACX,UAAU,EAAE,CAAC,6IAAC,OAAO,CAAC,eAAe,CAAC,CAAC,QAAQ,EAAE;IACjD,SAAS,EAAE,CAAC,6IAAC,MAAM,EAAE;IACrB,aAAa,EAAE,CAAC,6IAAC,MAAM,EAAE;IACzB,aAAa,EAAE,CAAC,6IAAC,MAAM,EAAE;CAC1B,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,YAAY,EAAE,WAAW;QACzB,WAAW,EAAE,UAAU;QACvB,eAAe,EAAE,cAAc;QAC/B,eAAe,EAAE,cAAc;KAChC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAWI,MAAM,kCAAkC,GAI3C,CAAC,6IAAC,MAAM,CAAC;IACX,SAAS,EAAE,CAAC,6IAAC,OAAO,CAAC,eAAe,CAAC,CAAC,OAAO,CAAC,eAAwB,CAAC;IACvE,QAAQ,EAAE,CAAC,6IAAC,MAAM,EAAE;IACpB,YAAY,EAAE,CAAC,6IAAC,MAAM,EAAE;IACxB,YAAY,EAAE,CAAC,6IAAC,MAAM,EAAE;CACzB,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,QAAO,sLAAA,AAAM,EAAC,CAAC,EAAE;QACf,SAAS,EAAE,YAAY;QACvB,QAAQ,EAAE,WAAW;QACrB,YAAY,EAAE,eAAe;QAC7B,YAAY,EAAE,eAAe;KAC9B,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,oBAAoB,CAOpC;AAPD,CAAA,SAAiB,oBAAoB;IACnC,iEAAA,EAAmE,CACtD,qBAAA,aAAa,GAAG,iCAAiC,CAAC;IAC/D,kEAAA,EAAoE,CACvD,qBAAA,cAAc,GAAG,kCAAkC,CAAC;AAGnE,CAAC,EAPgB,oBAAoB,IAAA,CAApB,oBAAoB,GAAA,CAAA,CAAA,GAOpC;AAEK,SAAU,yBAAyB,CACvC,mBAAwC;IAExC,OAAO,IAAI,CAAC,SAAS,CACnB,kCAAkC,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAC9D,CAAC;AACJ,CAAC;AAEK,SAAU,2BAA2B,CACzC,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,gCAAkC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC7D,CAAA,+CAAA,CAAiD,CAClD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 26239, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 26245, "column": 0}, "map": {"version":3,"file":"userinfoorganization.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/userinfoorganization.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport type UserInfoOrganization = {\n  sub: string;\n  name?: string | null | undefined;\n};\n\n/** @internal */\nexport const UserInfoOrganization$inboundSchema: z.ZodType<\n  UserInfoOrganization,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  sub: z.string(),\n  name: z.nullable(z.string()).optional(),\n});\n\n/** @internal */\nexport type UserInfoOrganization$Outbound = {\n  sub: string;\n  name?: string | null | undefined;\n};\n\n/** @internal */\nexport const UserInfoOrganization$outboundSchema: z.ZodType<\n  UserInfoOrganization$Outbound,\n  z.ZodTypeDef,\n  UserInfoOrganization\n> = z.object({\n  sub: z.string(),\n  name: z.nullable(z.string()).optional(),\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace UserInfoOrganization$ {\n  /** @deprecated use `UserInfoOrganization$inboundSchema` instead. */\n  export const inboundSchema = UserInfoOrganization$inboundSchema;\n  /** @deprecated use `UserInfoOrganization$outboundSchema` instead. */\n  export const outboundSchema = UserInfoOrganization$outboundSchema;\n  /** @deprecated use `UserInfoOrganization$Outbound` instead. */\n  export type Outbound = UserInfoOrganization$Outbound;\n}\n\nexport function userInfoOrganizationToJSON(\n  userInfoOrganization: UserInfoOrganization,\n): string {\n  return JSON.stringify(\n    UserInfoOrganization$outboundSchema.parse(userInfoOrganization),\n  );\n}\n\nexport function userInfoOrganizationFromJSON(\n  jsonString: string,\n): SafeParseResult<UserInfoOrganization, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => UserInfoOrganization$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'UserInfoOrganization' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;AAGH,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AADjD,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;;AAWlB,MAAM,kCAAkC,GAI3C,CAAC,6IAAC,MAAM,CAAC;IACX,GAAG,EAAE,CAAC,6IAAC,MAAM,EAAE;IACf,IAAI,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;CACxC,CAAC,CAAC;AASI,MAAM,mCAAmC,GAI5C,CAAC,6IAAC,MAAM,CAAC;IACX,GAAG,EAAE,CAAC,6IAAC,MAAM,EAAE;IACf,IAAI,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;CACxC,CAAC,CAAC;AAMG,IAAW,qBAAqB,CAOrC;AAPD,CAAA,SAAiB,qBAAqB;IACpC,kEAAA,EAAoE,CACvD,sBAAA,aAAa,GAAG,kCAAkC,CAAC;IAChE,mEAAA,EAAqE,CACxD,sBAAA,cAAc,GAAG,mCAAmC,CAAC;AAGpE,CAAC,EAPgB,qBAAqB,IAAA,CAArB,qBAAqB,GAAA,CAAA,CAAA,GAOrC;AAEK,SAAU,0BAA0B,CACxC,oBAA0C;IAE1C,OAAO,IAAI,CAAC,SAAS,CACnB,mCAAmC,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAChE,CAAC;AACJ,CAAC;AAEK,SAAU,4BAA4B,CAC1C,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,iCAAmC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC9D,CAAA,gDAAA,CAAkD,CACnD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 26278, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 26284, "column": 0}, "map": {"version":3,"file":"userinfouser.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/userinfouser.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport type UserInfoUser = {\n  sub: string;\n  name?: string | null | undefined;\n  email?: string | null | undefined;\n  emailVerified?: boolean | null | undefined;\n};\n\n/** @internal */\nexport const UserInfoUser$inboundSchema: z.ZodType<\n  UserInfoUser,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  sub: z.string(),\n  name: z.nullable(z.string()).optional(),\n  email: z.nullable(z.string()).optional(),\n  email_verified: z.nullable(z.boolean()).optional(),\n}).transform((v) => {\n  return remap$(v, {\n    \"email_verified\": \"emailVerified\",\n  });\n});\n\n/** @internal */\nexport type UserInfoUser$Outbound = {\n  sub: string;\n  name?: string | null | undefined;\n  email?: string | null | undefined;\n  email_verified?: boolean | null | undefined;\n};\n\n/** @internal */\nexport const UserInfoUser$outboundSchema: z.ZodType<\n  UserInfoUser$Outbound,\n  z.ZodTypeDef,\n  UserInfoUser\n> = z.object({\n  sub: z.string(),\n  name: z.nullable(z.string()).optional(),\n  email: z.nullable(z.string()).optional(),\n  emailVerified: z.nullable(z.boolean()).optional(),\n}).transform((v) => {\n  return remap$(v, {\n    emailVerified: \"email_verified\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace UserInfoUser$ {\n  /** @deprecated use `UserInfoUser$inboundSchema` instead. */\n  export const inboundSchema = UserInfoUser$inboundSchema;\n  /** @deprecated use `UserInfoUser$outboundSchema` instead. */\n  export const outboundSchema = UserInfoUser$outboundSchema;\n  /** @deprecated use `UserInfoUser$Outbound` instead. */\n  export type Outbound = UserInfoUser$Outbound;\n}\n\nexport function userInfoUserToJSON(userInfoUser: UserInfoUser): string {\n  return JSON.stringify(UserInfoUser$outboundSchema.parse(userInfoUser));\n}\n\nexport function userInfoUserFromJSON(\n  jsonString: string,\n): SafeParseResult<UserInfoUser, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => UserInfoUser$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'UserInfoUser' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;;;;;AAY1C,MAAM,0BAA0B,GAInC,CAAC,6IAAC,MAAM,CAAC;IACX,GAAG,EAAE,CAAC,6IAAC,MAAM,EAAE;IACf,IAAI,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;IACvC,KAAK,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;IACxC,cAAc,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,OAAO,EAAE,CAAC,CAAC,QAAQ,EAAE;CACnD,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,QAAO,sLAAA,AAAM,EAAC,CAAC,EAAE;QACf,gBAAgB,EAAE,eAAe;KAClC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAWI,MAAM,2BAA2B,GAIpC,CAAC,6IAAC,MAAM,CAAC;IACX,GAAG,EAAE,CAAC,6IAAC,MAAM,EAAE;IACf,IAAI,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;IACvC,KAAK,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;IACxC,aAAa,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,OAAO,EAAE,CAAC,CAAC,QAAQ,EAAE;CAClD,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAM,AAAN,EAAO,CAAC,EAAE;QACf,aAAa,EAAE,gBAAgB;KAChC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,aAAa,CAO7B;AAPD,CAAA,SAAiB,aAAa;IAC5B,0DAAA,EAA4D,CAC/C,cAAA,aAAa,GAAG,0BAA0B,CAAC;IACxD,2DAAA,EAA6D,CAChD,cAAA,cAAc,GAAG,2BAA2B,CAAC;AAG5D,CAAC,EAPgB,aAAa,IAAA,CAAb,aAAa,GAAA,CAAA,CAAA,GAO7B;AAEK,SAAU,kBAAkB,CAAC,YAA0B;IAC3D,OAAO,IAAI,CAAC,SAAS,CAAC,2BAA2B,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC;AACzE,CAAC;AAEK,SAAU,oBAAoB,CAClC,UAAkB;IAElB,OAAO,wLAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,yBAA2B,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACtD,CAAA,wCAAA,CAA0C,CAC3C,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 26331, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 26337, "column": 0}, "map": {"version":3,"file":"oauth2clientconfiguration.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/oauth2clientconfiguration.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { ClosedEnum } from \"../../types/enums.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport const OAuth2ClientConfigurationTokenEndpointAuthMethod = {\n  ClientSecretBasic: \"client_secret_basic\",\n  ClientSecretPost: \"client_secret_post\",\n  None: \"none\",\n} as const;\nexport type OAuth2ClientConfigurationTokenEndpointAuthMethod = ClosedEnum<\n  typeof OAuth2ClientConfigurationTokenEndpointAuthMethod\n>;\n\nexport const OAuth2ClientConfigurationGrantTypes = {\n  AuthorizationCode: \"authorization_code\",\n  RefreshToken: \"refresh_token\",\n} as const;\nexport type OAuth2ClientConfigurationGrantTypes = ClosedEnum<\n  typeof OAuth2ClientConfigurationGrantTypes\n>;\n\nexport type OAuth2ClientConfiguration = {\n  redirectUris: Array<string>;\n  tokenEndpointAuthMethod?:\n    | OAuth2ClientConfigurationTokenEndpointAuthMethod\n    | undefined;\n  grantTypes?: Array<OAuth2ClientConfigurationGrantTypes> | undefined;\n  responseTypes?: Array<string> | undefined;\n  scope?: string | undefined;\n  clientName: string;\n  clientUri?: string | null | undefined;\n  logoUri?: string | null | undefined;\n  tosUri?: string | null | undefined;\n  policyUri?: string | null | undefined;\n};\n\n/** @internal */\nexport const OAuth2ClientConfigurationTokenEndpointAuthMethod$inboundSchema:\n  z.ZodNativeEnum<typeof OAuth2ClientConfigurationTokenEndpointAuthMethod> = z\n    .nativeEnum(OAuth2ClientConfigurationTokenEndpointAuthMethod);\n\n/** @internal */\nexport const OAuth2ClientConfigurationTokenEndpointAuthMethod$outboundSchema:\n  z.ZodNativeEnum<typeof OAuth2ClientConfigurationTokenEndpointAuthMethod> =\n    OAuth2ClientConfigurationTokenEndpointAuthMethod$inboundSchema;\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace OAuth2ClientConfigurationTokenEndpointAuthMethod$ {\n  /** @deprecated use `OAuth2ClientConfigurationTokenEndpointAuthMethod$inboundSchema` instead. */\n  export const inboundSchema =\n    OAuth2ClientConfigurationTokenEndpointAuthMethod$inboundSchema;\n  /** @deprecated use `OAuth2ClientConfigurationTokenEndpointAuthMethod$outboundSchema` instead. */\n  export const outboundSchema =\n    OAuth2ClientConfigurationTokenEndpointAuthMethod$outboundSchema;\n}\n\n/** @internal */\nexport const OAuth2ClientConfigurationGrantTypes$inboundSchema: z.ZodNativeEnum<\n  typeof OAuth2ClientConfigurationGrantTypes\n> = z.nativeEnum(OAuth2ClientConfigurationGrantTypes);\n\n/** @internal */\nexport const OAuth2ClientConfigurationGrantTypes$outboundSchema:\n  z.ZodNativeEnum<typeof OAuth2ClientConfigurationGrantTypes> =\n    OAuth2ClientConfigurationGrantTypes$inboundSchema;\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace OAuth2ClientConfigurationGrantTypes$ {\n  /** @deprecated use `OAuth2ClientConfigurationGrantTypes$inboundSchema` instead. */\n  export const inboundSchema =\n    OAuth2ClientConfigurationGrantTypes$inboundSchema;\n  /** @deprecated use `OAuth2ClientConfigurationGrantTypes$outboundSchema` instead. */\n  export const outboundSchema =\n    OAuth2ClientConfigurationGrantTypes$outboundSchema;\n}\n\n/** @internal */\nexport const OAuth2ClientConfiguration$inboundSchema: z.ZodType<\n  OAuth2ClientConfiguration,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  redirect_uris: z.array(z.string()),\n  token_endpoint_auth_method:\n    OAuth2ClientConfigurationTokenEndpointAuthMethod$inboundSchema.default(\n      \"client_secret_post\",\n    ),\n  grant_types: z.array(OAuth2ClientConfigurationGrantTypes$inboundSchema)\n    .optional(),\n  response_types: z.array(z.string()).optional(),\n  scope: z.string().default(\n    \"openid profile email user:read organizations:read organizations:write custom_fields:read custom_fields:write discounts:read discounts:write checkout_links:read checkout_links:write checkouts:read checkouts:write transactions:read transactions:write payouts:read payouts:write products:read products:write benefits:read benefits:write events:read events:write meters:read meters:write files:read files:write subscriptions:read subscriptions:write customers:read customers:write customer_meters:read customer_sessions:write orders:read orders:write refunds:read refunds:write payments:read metrics:read webhooks:read webhooks:write external_organizations:read license_keys:read license_keys:write repositories:read repositories:write issues:read issues:write customer_portal:read customer_portal:write notifications:read notifications:write notification_recipients:read notification_recipients:write\",\n  ),\n  client_name: z.string(),\n  client_uri: z.nullable(z.string()).optional(),\n  logo_uri: z.nullable(z.string()).optional(),\n  tos_uri: z.nullable(z.string()).optional(),\n  policy_uri: z.nullable(z.string()).optional(),\n}).transform((v) => {\n  return remap$(v, {\n    \"redirect_uris\": \"redirectUris\",\n    \"token_endpoint_auth_method\": \"tokenEndpointAuthMethod\",\n    \"grant_types\": \"grantTypes\",\n    \"response_types\": \"responseTypes\",\n    \"client_name\": \"clientName\",\n    \"client_uri\": \"clientUri\",\n    \"logo_uri\": \"logoUri\",\n    \"tos_uri\": \"tosUri\",\n    \"policy_uri\": \"policyUri\",\n  });\n});\n\n/** @internal */\nexport type OAuth2ClientConfiguration$Outbound = {\n  redirect_uris: Array<string>;\n  token_endpoint_auth_method: string;\n  grant_types?: Array<string> | undefined;\n  response_types?: Array<string> | undefined;\n  scope: string;\n  client_name: string;\n  client_uri?: string | null | undefined;\n  logo_uri?: string | null | undefined;\n  tos_uri?: string | null | undefined;\n  policy_uri?: string | null | undefined;\n};\n\n/** @internal */\nexport const OAuth2ClientConfiguration$outboundSchema: z.ZodType<\n  OAuth2ClientConfiguration$Outbound,\n  z.ZodTypeDef,\n  OAuth2ClientConfiguration\n> = z.object({\n  redirectUris: z.array(z.string()),\n  tokenEndpointAuthMethod:\n    OAuth2ClientConfigurationTokenEndpointAuthMethod$outboundSchema.default(\n      \"client_secret_post\",\n    ),\n  grantTypes: z.array(OAuth2ClientConfigurationGrantTypes$outboundSchema)\n    .optional(),\n  responseTypes: z.array(z.string()).optional(),\n  scope: z.string().default(\n    \"openid profile email user:read organizations:read organizations:write custom_fields:read custom_fields:write discounts:read discounts:write checkout_links:read checkout_links:write checkouts:read checkouts:write transactions:read transactions:write payouts:read payouts:write products:read products:write benefits:read benefits:write events:read events:write meters:read meters:write files:read files:write subscriptions:read subscriptions:write customers:read customers:write customer_meters:read customer_sessions:write orders:read orders:write refunds:read refunds:write payments:read metrics:read webhooks:read webhooks:write external_organizations:read license_keys:read license_keys:write repositories:read repositories:write issues:read issues:write customer_portal:read customer_portal:write notifications:read notifications:write notification_recipients:read notification_recipients:write\",\n  ),\n  clientName: z.string(),\n  clientUri: z.nullable(z.string()).optional(),\n  logoUri: z.nullable(z.string()).optional(),\n  tosUri: z.nullable(z.string()).optional(),\n  policyUri: z.nullable(z.string()).optional(),\n}).transform((v) => {\n  return remap$(v, {\n    redirectUris: \"redirect_uris\",\n    tokenEndpointAuthMethod: \"token_endpoint_auth_method\",\n    grantTypes: \"grant_types\",\n    responseTypes: \"response_types\",\n    clientName: \"client_name\",\n    clientUri: \"client_uri\",\n    logoUri: \"logo_uri\",\n    tosUri: \"tos_uri\",\n    policyUri: \"policy_uri\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace OAuth2ClientConfiguration$ {\n  /** @deprecated use `OAuth2ClientConfiguration$inboundSchema` instead. */\n  export const inboundSchema = OAuth2ClientConfiguration$inboundSchema;\n  /** @deprecated use `OAuth2ClientConfiguration$outboundSchema` instead. */\n  export const outboundSchema = OAuth2ClientConfiguration$outboundSchema;\n  /** @deprecated use `OAuth2ClientConfiguration$Outbound` instead. */\n  export type Outbound = OAuth2ClientConfiguration$Outbound;\n}\n\nexport function oAuth2ClientConfigurationToJSON(\n  oAuth2ClientConfiguration: OAuth2ClientConfiguration,\n): string {\n  return JSON.stringify(\n    OAuth2ClientConfiguration$outboundSchema.parse(oAuth2ClientConfiguration),\n  );\n}\n\nexport function oAuth2ClientConfigurationFromJSON(\n  jsonString: string,\n): SafeParseResult<OAuth2ClientConfiguration, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => OAuth2ClientConfiguration$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'OAuth2ClientConfiguration' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 26443, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 26449, "column": 0}, "map": {"version":3,"file":"oauth2client.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/oauth2client.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { ClosedEnum } from \"../../types/enums.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport const TokenEndpointAuthMethod = {\n  ClientSecretBasic: \"client_secret_basic\",\n  ClientSecretPost: \"client_secret_post\",\n  None: \"none\",\n} as const;\nexport type TokenEndpointAuthMethod = ClosedEnum<\n  typeof TokenEndpointAuthMethod\n>;\n\nexport const GrantTypes = {\n  AuthorizationCode: \"authorization_code\",\n  RefreshToken: \"refresh_token\",\n} as const;\nexport type GrantTypes = ClosedEnum<typeof GrantTypes>;\n\nexport type OAuth2Client = {\n  redirectUris: Array<string>;\n  tokenEndpointAuthMethod?: TokenEndpointAuthMethod | undefined;\n  grantTypes?: Array<GrantTypes> | undefined;\n  responseTypes?: Array<string> | undefined;\n  scope?: string | undefined;\n  clientName: string;\n  clientUri?: string | null | undefined;\n  logoUri?: string | null | undefined;\n  tosUri?: string | null | undefined;\n  policyUri?: string | null | undefined;\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  clientId: string;\n  clientSecret: string;\n  clientIdIssuedAt: number;\n  clientSecretExpiresAt: number;\n};\n\n/** @internal */\nexport const TokenEndpointAuthMethod$inboundSchema: z.ZodNativeEnum<\n  typeof TokenEndpointAuthMethod\n> = z.nativeEnum(TokenEndpointAuthMethod);\n\n/** @internal */\nexport const TokenEndpointAuthMethod$outboundSchema: z.ZodNativeEnum<\n  typeof TokenEndpointAuthMethod\n> = TokenEndpointAuthMethod$inboundSchema;\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace TokenEndpointAuthMethod$ {\n  /** @deprecated use `TokenEndpointAuthMethod$inboundSchema` instead. */\n  export const inboundSchema = TokenEndpointAuthMethod$inboundSchema;\n  /** @deprecated use `TokenEndpointAuthMethod$outboundSchema` instead. */\n  export const outboundSchema = TokenEndpointAuthMethod$outboundSchema;\n}\n\n/** @internal */\nexport const GrantTypes$inboundSchema: z.ZodNativeEnum<typeof GrantTypes> = z\n  .nativeEnum(GrantTypes);\n\n/** @internal */\nexport const GrantTypes$outboundSchema: z.ZodNativeEnum<typeof GrantTypes> =\n  GrantTypes$inboundSchema;\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace GrantTypes$ {\n  /** @deprecated use `GrantTypes$inboundSchema` instead. */\n  export const inboundSchema = GrantTypes$inboundSchema;\n  /** @deprecated use `GrantTypes$outboundSchema` instead. */\n  export const outboundSchema = GrantTypes$outboundSchema;\n}\n\n/** @internal */\nexport const OAuth2Client$inboundSchema: z.ZodType<\n  OAuth2Client,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  redirect_uris: z.array(z.string()),\n  token_endpoint_auth_method: TokenEndpointAuthMethod$inboundSchema.default(\n    \"client_secret_post\",\n  ),\n  grant_types: z.array(GrantTypes$inboundSchema).optional(),\n  response_types: z.array(z.string()).optional(),\n  scope: z.string().default(\n    \"openid profile email user:read organizations:read organizations:write custom_fields:read custom_fields:write discounts:read discounts:write checkout_links:read checkout_links:write checkouts:read checkouts:write transactions:read transactions:write payouts:read payouts:write products:read products:write benefits:read benefits:write events:read events:write meters:read meters:write files:read files:write subscriptions:read subscriptions:write customers:read customers:write customer_meters:read customer_sessions:write orders:read orders:write refunds:read refunds:write payments:read metrics:read webhooks:read webhooks:write external_organizations:read license_keys:read license_keys:write repositories:read repositories:write issues:read issues:write customer_portal:read customer_portal:write notifications:read notifications:write notification_recipients:read notification_recipients:write\",\n  ),\n  client_name: z.string(),\n  client_uri: z.nullable(z.string()).optional(),\n  logo_uri: z.nullable(z.string()).optional(),\n  tos_uri: z.nullable(z.string()).optional(),\n  policy_uri: z.nullable(z.string()).optional(),\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  client_id: z.string(),\n  client_secret: z.string(),\n  client_id_issued_at: z.number().int(),\n  client_secret_expires_at: z.number().int(),\n}).transform((v) => {\n  return remap$(v, {\n    \"redirect_uris\": \"redirectUris\",\n    \"token_endpoint_auth_method\": \"tokenEndpointAuthMethod\",\n    \"grant_types\": \"grantTypes\",\n    \"response_types\": \"responseTypes\",\n    \"client_name\": \"clientName\",\n    \"client_uri\": \"clientUri\",\n    \"logo_uri\": \"logoUri\",\n    \"tos_uri\": \"tosUri\",\n    \"policy_uri\": \"policyUri\",\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"client_id\": \"clientId\",\n    \"client_secret\": \"clientSecret\",\n    \"client_id_issued_at\": \"clientIdIssuedAt\",\n    \"client_secret_expires_at\": \"clientSecretExpiresAt\",\n  });\n});\n\n/** @internal */\nexport type OAuth2Client$Outbound = {\n  redirect_uris: Array<string>;\n  token_endpoint_auth_method: string;\n  grant_types?: Array<string> | undefined;\n  response_types?: Array<string> | undefined;\n  scope: string;\n  client_name: string;\n  client_uri?: string | null | undefined;\n  logo_uri?: string | null | undefined;\n  tos_uri?: string | null | undefined;\n  policy_uri?: string | null | undefined;\n  created_at: string;\n  modified_at: string | null;\n  client_id: string;\n  client_secret: string;\n  client_id_issued_at: number;\n  client_secret_expires_at: number;\n};\n\n/** @internal */\nexport const OAuth2Client$outboundSchema: z.ZodType<\n  OAuth2Client$Outbound,\n  z.ZodTypeDef,\n  OAuth2Client\n> = z.object({\n  redirectUris: z.array(z.string()),\n  tokenEndpointAuthMethod: TokenEndpointAuthMethod$outboundSchema.default(\n    \"client_secret_post\",\n  ),\n  grantTypes: z.array(GrantTypes$outboundSchema).optional(),\n  responseTypes: z.array(z.string()).optional(),\n  scope: z.string().default(\n    \"openid profile email user:read organizations:read organizations:write custom_fields:read custom_fields:write discounts:read discounts:write checkout_links:read checkout_links:write checkouts:read checkouts:write transactions:read transactions:write payouts:read payouts:write products:read products:write benefits:read benefits:write events:read events:write meters:read meters:write files:read files:write subscriptions:read subscriptions:write customers:read customers:write customer_meters:read customer_sessions:write orders:read orders:write refunds:read refunds:write payments:read metrics:read webhooks:read webhooks:write external_organizations:read license_keys:read license_keys:write repositories:read repositories:write issues:read issues:write customer_portal:read customer_portal:write notifications:read notifications:write notification_recipients:read notification_recipients:write\",\n  ),\n  clientName: z.string(),\n  clientUri: z.nullable(z.string()).optional(),\n  logoUri: z.nullable(z.string()).optional(),\n  tosUri: z.nullable(z.string()).optional(),\n  policyUri: z.nullable(z.string()).optional(),\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  clientId: z.string(),\n  clientSecret: z.string(),\n  clientIdIssuedAt: z.number().int(),\n  clientSecretExpiresAt: z.number().int(),\n}).transform((v) => {\n  return remap$(v, {\n    redirectUris: \"redirect_uris\",\n    tokenEndpointAuthMethod: \"token_endpoint_auth_method\",\n    grantTypes: \"grant_types\",\n    responseTypes: \"response_types\",\n    clientName: \"client_name\",\n    clientUri: \"client_uri\",\n    logoUri: \"logo_uri\",\n    tosUri: \"tos_uri\",\n    policyUri: \"policy_uri\",\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    clientId: \"client_id\",\n    clientSecret: \"client_secret\",\n    clientIdIssuedAt: \"client_id_issued_at\",\n    clientSecretExpiresAt: \"client_secret_expires_at\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace OAuth2Client$ {\n  /** @deprecated use `OAuth2Client$inboundSchema` instead. */\n  export const inboundSchema = OAuth2Client$inboundSchema;\n  /** @deprecated use `OAuth2Client$outboundSchema` instead. */\n  export const outboundSchema = OAuth2Client$outboundSchema;\n  /** @deprecated use `OAuth2Client$Outbound` instead. */\n  export type Outbound = OAuth2Client$Outbound;\n}\n\nexport function oAuth2ClientToJSON(oAuth2Client: OAuth2Client): string {\n  return JSON.stringify(OAuth2Client$outboundSchema.parse(oAuth2Client));\n}\n\nexport function oAuth2ClientFromJSON(\n  jsonString: string,\n): SafeParseResult<OAuth2Client, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => OAuth2Client$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'OAuth2Client' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 26583, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 26589, "column": 0}, "map": {"version":3,"file":"listresourceoauth2client.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/listresourceoauth2client.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  OAuth2Client,\n  OAuth2Client$inboundSchema,\n  OAuth2Client$Outbound,\n  OAuth2Client$outboundSchema,\n} from \"./oauth2client.js\";\nimport {\n  Pagination,\n  Pagination$inboundSchema,\n  Pagination$Outbound,\n  Pagination$outboundSchema,\n} from \"./pagination.js\";\n\nexport type ListResourceOAuth2Client = {\n  items: Array<OAuth2Client>;\n  pagination: Pagination;\n};\n\n/** @internal */\nexport const ListResourceOAuth2Client$inboundSchema: z.ZodType<\n  ListResourceOAuth2Client,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  items: z.array(OAuth2Client$inboundSchema),\n  pagination: Pagination$inboundSchema,\n});\n\n/** @internal */\nexport type ListResourceOAuth2Client$Outbound = {\n  items: Array<OAuth2Client$Outbound>;\n  pagination: Pagination$Outbound;\n};\n\n/** @internal */\nexport const ListResourceOAuth2Client$outboundSchema: z.ZodType<\n  ListResourceOAuth2Client$Outbound,\n  z.ZodTypeDef,\n  ListResourceOAuth2Client\n> = z.object({\n  items: z.array(OAuth2Client$outboundSchema),\n  pagination: Pagination$outboundSchema,\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace ListResourceOAuth2Client$ {\n  /** @deprecated use `ListResourceOAuth2Client$inboundSchema` instead. */\n  export const inboundSchema = ListResourceOAuth2Client$inboundSchema;\n  /** @deprecated use `ListResourceOAuth2Client$outboundSchema` instead. */\n  export const outboundSchema = ListResourceOAuth2Client$outboundSchema;\n  /** @deprecated use `ListResourceOAuth2Client$Outbound` instead. */\n  export type Outbound = ListResourceOAuth2Client$Outbound;\n}\n\nexport function listResourceOAuth2ClientToJSON(\n  listResourceOAuth2Client: ListResourceOAuth2Client,\n): string {\n  return JSON.stringify(\n    ListResourceOAuth2Client$outboundSchema.parse(listResourceOAuth2Client),\n  );\n}\n\nexport function listResourceOAuth2ClientFromJSON(\n  jsonString: string,\n): SafeParseResult<ListResourceOAuth2Client, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => ListResourceOAuth2Client$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'ListResourceOAuth2Client' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;AAGH,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,0BAA0B,EAE1B,2BAA2B,GAC5B,MAAM,mBAAmB,CAAC;AAC3B,OAAO,EAEL,wBAAwB,EAExB,yBAAyB,GAC1B,MAAM,iBAAiB,CAAC;AAfzB,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;;;;AAuBlB,MAAM,sCAAsC,GAI/C,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,KAAK,+LAAC,6BAA0B,CAAC;IAC1C,UAAU,8LAAE,2BAAwB;CACrC,CAAC,CAAC;AASI,MAAM,uCAAuC,GAIhD,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,KAAK,+LAAC,8BAA2B,CAAC;IAC3C,UAAU,8LAAE,4BAAyB;CACtC,CAAC,CAAC;AAMG,IAAW,yBAAyB,CAOzC;AAPD,CAAA,SAAiB,yBAAyB;IACxC,sEAAA,EAAwE,CAC3D,0BAAA,aAAa,GAAG,sCAAsC,CAAC;IACpE,uEAAA,EAAyE,CAC5D,0BAAA,cAAc,GAAG,uCAAuC,CAAC;AAGxE,CAAC,EAPgB,yBAAyB,IAAA,CAAzB,yBAAyB,GAAA,CAAA,CAAA,GAOzC;AAEK,SAAU,8BAA8B,CAC5C,wBAAkD;IAElD,OAAO,IAAI,CAAC,SAAS,CACnB,uCAAuC,CAAC,KAAK,CAAC,wBAAwB,CAAC,CACxE,CAAC;AACJ,CAAC;AAEK,SAAU,gCAAgC,CAC9C,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,qCAAuC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAClE,CAAA,oDAAA,CAAsD,CACvD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 26626, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 26632, "column": 0}, "map": {"version":3,"file":"oauth2clientconfigurationupdate.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/oauth2clientconfigurationupdate.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { ClosedEnum } from \"../../types/enums.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport const OAuth2ClientConfigurationUpdateTokenEndpointAuthMethod = {\n  ClientSecretBasic: \"client_secret_basic\",\n  ClientSecretPost: \"client_secret_post\",\n  None: \"none\",\n} as const;\nexport type OAuth2ClientConfigurationUpdateTokenEndpointAuthMethod = ClosedEnum<\n  typeof OAuth2ClientConfigurationUpdateTokenEndpointAuthMethod\n>;\n\nexport const OAuth2ClientConfigurationUpdateGrantTypes = {\n  AuthorizationCode: \"authorization_code\",\n  RefreshToken: \"refresh_token\",\n} as const;\nexport type OAuth2ClientConfigurationUpdateGrantTypes = ClosedEnum<\n  typeof OAuth2ClientConfigurationUpdateGrantTypes\n>;\n\nexport type OAuth2ClientConfigurationUpdate = {\n  redirectUris: Array<string>;\n  tokenEndpointAuthMethod?:\n    | OAuth2ClientConfigurationUpdateTokenEndpointAuthMethod\n    | undefined;\n  grantTypes?: Array<OAuth2ClientConfigurationUpdateGrantTypes> | undefined;\n  responseTypes?: Array<string> | undefined;\n  scope?: string | undefined;\n  clientName: string;\n  clientUri?: string | null | undefined;\n  logoUri?: string | null | undefined;\n  tosUri?: string | null | undefined;\n  policyUri?: string | null | undefined;\n  clientId: string;\n};\n\n/** @internal */\nexport const OAuth2ClientConfigurationUpdateTokenEndpointAuthMethod$inboundSchema:\n  z.ZodNativeEnum<\n    typeof OAuth2ClientConfigurationUpdateTokenEndpointAuthMethod\n  > = z.nativeEnum(OAuth2ClientConfigurationUpdateTokenEndpointAuthMethod);\n\n/** @internal */\nexport const OAuth2ClientConfigurationUpdateTokenEndpointAuthMethod$outboundSchema:\n  z.ZodNativeEnum<\n    typeof OAuth2ClientConfigurationUpdateTokenEndpointAuthMethod\n  > = OAuth2ClientConfigurationUpdateTokenEndpointAuthMethod$inboundSchema;\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace OAuth2ClientConfigurationUpdateTokenEndpointAuthMethod$ {\n  /** @deprecated use `OAuth2ClientConfigurationUpdateTokenEndpointAuthMethod$inboundSchema` instead. */\n  export const inboundSchema =\n    OAuth2ClientConfigurationUpdateTokenEndpointAuthMethod$inboundSchema;\n  /** @deprecated use `OAuth2ClientConfigurationUpdateTokenEndpointAuthMethod$outboundSchema` instead. */\n  export const outboundSchema =\n    OAuth2ClientConfigurationUpdateTokenEndpointAuthMethod$outboundSchema;\n}\n\n/** @internal */\nexport const OAuth2ClientConfigurationUpdateGrantTypes$inboundSchema:\n  z.ZodNativeEnum<typeof OAuth2ClientConfigurationUpdateGrantTypes> = z\n    .nativeEnum(OAuth2ClientConfigurationUpdateGrantTypes);\n\n/** @internal */\nexport const OAuth2ClientConfigurationUpdateGrantTypes$outboundSchema:\n  z.ZodNativeEnum<typeof OAuth2ClientConfigurationUpdateGrantTypes> =\n    OAuth2ClientConfigurationUpdateGrantTypes$inboundSchema;\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace OAuth2ClientConfigurationUpdateGrantTypes$ {\n  /** @deprecated use `OAuth2ClientConfigurationUpdateGrantTypes$inboundSchema` instead. */\n  export const inboundSchema =\n    OAuth2ClientConfigurationUpdateGrantTypes$inboundSchema;\n  /** @deprecated use `OAuth2ClientConfigurationUpdateGrantTypes$outboundSchema` instead. */\n  export const outboundSchema =\n    OAuth2ClientConfigurationUpdateGrantTypes$outboundSchema;\n}\n\n/** @internal */\nexport const OAuth2ClientConfigurationUpdate$inboundSchema: z.ZodType<\n  OAuth2ClientConfigurationUpdate,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  redirect_uris: z.array(z.string()),\n  token_endpoint_auth_method:\n    OAuth2ClientConfigurationUpdateTokenEndpointAuthMethod$inboundSchema\n      .default(\"client_secret_post\"),\n  grant_types: z.array(OAuth2ClientConfigurationUpdateGrantTypes$inboundSchema)\n    .optional(),\n  response_types: z.array(z.string()).optional(),\n  scope: z.string().default(\n    \"openid profile email user:read organizations:read organizations:write custom_fields:read custom_fields:write discounts:read discounts:write checkout_links:read checkout_links:write checkouts:read checkouts:write transactions:read transactions:write payouts:read payouts:write products:read products:write benefits:read benefits:write events:read events:write meters:read meters:write files:read files:write subscriptions:read subscriptions:write customers:read customers:write customer_meters:read customer_sessions:write orders:read orders:write refunds:read refunds:write payments:read metrics:read webhooks:read webhooks:write external_organizations:read license_keys:read license_keys:write repositories:read repositories:write issues:read issues:write customer_portal:read customer_portal:write notifications:read notifications:write notification_recipients:read notification_recipients:write\",\n  ),\n  client_name: z.string(),\n  client_uri: z.nullable(z.string()).optional(),\n  logo_uri: z.nullable(z.string()).optional(),\n  tos_uri: z.nullable(z.string()).optional(),\n  policy_uri: z.nullable(z.string()).optional(),\n  client_id: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    \"redirect_uris\": \"redirectUris\",\n    \"token_endpoint_auth_method\": \"tokenEndpointAuthMethod\",\n    \"grant_types\": \"grantTypes\",\n    \"response_types\": \"responseTypes\",\n    \"client_name\": \"clientName\",\n    \"client_uri\": \"clientUri\",\n    \"logo_uri\": \"logoUri\",\n    \"tos_uri\": \"tosUri\",\n    \"policy_uri\": \"policyUri\",\n    \"client_id\": \"clientId\",\n  });\n});\n\n/** @internal */\nexport type OAuth2ClientConfigurationUpdate$Outbound = {\n  redirect_uris: Array<string>;\n  token_endpoint_auth_method: string;\n  grant_types?: Array<string> | undefined;\n  response_types?: Array<string> | undefined;\n  scope: string;\n  client_name: string;\n  client_uri?: string | null | undefined;\n  logo_uri?: string | null | undefined;\n  tos_uri?: string | null | undefined;\n  policy_uri?: string | null | undefined;\n  client_id: string;\n};\n\n/** @internal */\nexport const OAuth2ClientConfigurationUpdate$outboundSchema: z.ZodType<\n  OAuth2ClientConfigurationUpdate$Outbound,\n  z.ZodTypeDef,\n  OAuth2ClientConfigurationUpdate\n> = z.object({\n  redirectUris: z.array(z.string()),\n  tokenEndpointAuthMethod:\n    OAuth2ClientConfigurationUpdateTokenEndpointAuthMethod$outboundSchema\n      .default(\"client_secret_post\"),\n  grantTypes: z.array(OAuth2ClientConfigurationUpdateGrantTypes$outboundSchema)\n    .optional(),\n  responseTypes: z.array(z.string()).optional(),\n  scope: z.string().default(\n    \"openid profile email user:read organizations:read organizations:write custom_fields:read custom_fields:write discounts:read discounts:write checkout_links:read checkout_links:write checkouts:read checkouts:write transactions:read transactions:write payouts:read payouts:write products:read products:write benefits:read benefits:write events:read events:write meters:read meters:write files:read files:write subscriptions:read subscriptions:write customers:read customers:write customer_meters:read customer_sessions:write orders:read orders:write refunds:read refunds:write payments:read metrics:read webhooks:read webhooks:write external_organizations:read license_keys:read license_keys:write repositories:read repositories:write issues:read issues:write customer_portal:read customer_portal:write notifications:read notifications:write notification_recipients:read notification_recipients:write\",\n  ),\n  clientName: z.string(),\n  clientUri: z.nullable(z.string()).optional(),\n  logoUri: z.nullable(z.string()).optional(),\n  tosUri: z.nullable(z.string()).optional(),\n  policyUri: z.nullable(z.string()).optional(),\n  clientId: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    redirectUris: \"redirect_uris\",\n    tokenEndpointAuthMethod: \"token_endpoint_auth_method\",\n    grantTypes: \"grant_types\",\n    responseTypes: \"response_types\",\n    clientName: \"client_name\",\n    clientUri: \"client_uri\",\n    logoUri: \"logo_uri\",\n    tosUri: \"tos_uri\",\n    policyUri: \"policy_uri\",\n    clientId: \"client_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace OAuth2ClientConfigurationUpdate$ {\n  /** @deprecated use `OAuth2ClientConfigurationUpdate$inboundSchema` instead. */\n  export const inboundSchema = OAuth2ClientConfigurationUpdate$inboundSchema;\n  /** @deprecated use `OAuth2ClientConfigurationUpdate$outboundSchema` instead. */\n  export const outboundSchema = OAuth2ClientConfigurationUpdate$outboundSchema;\n  /** @deprecated use `OAuth2ClientConfigurationUpdate$Outbound` instead. */\n  export type Outbound = OAuth2ClientConfigurationUpdate$Outbound;\n}\n\nexport function oAuth2ClientConfigurationUpdateToJSON(\n  oAuth2ClientConfigurationUpdate: OAuth2ClientConfigurationUpdate,\n): string {\n  return JSON.stringify(\n    OAuth2ClientConfigurationUpdate$outboundSchema.parse(\n      oAuth2ClientConfigurationUpdate,\n    ),\n  );\n}\n\nexport function oAuth2ClientConfigurationUpdateFromJSON(\n  jsonString: string,\n): SafeParseResult<OAuth2ClientConfigurationUpdate, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => OAuth2ClientConfigurationUpdate$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'OAuth2ClientConfigurationUpdate' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 26742, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 26748, "column": 0}, "map": {"version":3,"file":"ordercustomer.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/ordercustomer.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  Address,\n  Address$inboundSchema,\n  Address$Outbound,\n  Address$outboundSchema,\n} from \"./address.js\";\nimport {\n  TaxIDFormat,\n  TaxIDFormat$inboundSchema,\n  TaxIDFormat$outboundSchema,\n} from \"./taxidformat.js\";\n\nexport type OrderCustomerMetadata = string | number | number | boolean;\n\nexport type OrderCustomerTaxId = string | TaxIDFormat;\n\nexport type OrderCustomer = {\n  /**\n   * The ID of the customer.\n   */\n  id: string;\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  metadata: { [k: string]: string | number | number | boolean };\n  /**\n   * The ID of the customer in your system. This must be unique within the organization. Once set, it can't be updated.\n   */\n  externalId: string | null;\n  /**\n   * The email address of the customer. This must be unique within the organization.\n   */\n  email: string;\n  /**\n   * Whether the customer email address is verified. The address is automatically verified when the customer accesses the customer portal using their email address.\n   */\n  emailVerified: boolean;\n  /**\n   * The name of the customer.\n   */\n  name: string | null;\n  billingAddress: Address | null;\n  taxId: Array<string | TaxIDFormat | null> | null;\n  /**\n   * The ID of the organization owning the customer.\n   */\n  organizationId: string;\n  /**\n   * Timestamp for when the customer was soft deleted.\n   */\n  deletedAt: Date | null;\n  avatarUrl: string;\n};\n\n/** @internal */\nexport const OrderCustomerMetadata$inboundSchema: z.ZodType<\n  OrderCustomerMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type OrderCustomerMetadata$Outbound = string | number | number | boolean;\n\n/** @internal */\nexport const OrderCustomerMetadata$outboundSchema: z.ZodType<\n  OrderCustomerMetadata$Outbound,\n  z.ZodTypeDef,\n  OrderCustomerMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace OrderCustomerMetadata$ {\n  /** @deprecated use `OrderCustomerMetadata$inboundSchema` instead. */\n  export const inboundSchema = OrderCustomerMetadata$inboundSchema;\n  /** @deprecated use `OrderCustomerMetadata$outboundSchema` instead. */\n  export const outboundSchema = OrderCustomerMetadata$outboundSchema;\n  /** @deprecated use `OrderCustomerMetadata$Outbound` instead. */\n  export type Outbound = OrderCustomerMetadata$Outbound;\n}\n\nexport function orderCustomerMetadataToJSON(\n  orderCustomerMetadata: OrderCustomerMetadata,\n): string {\n  return JSON.stringify(\n    OrderCustomerMetadata$outboundSchema.parse(orderCustomerMetadata),\n  );\n}\n\nexport function orderCustomerMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<OrderCustomerMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => OrderCustomerMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'OrderCustomerMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const OrderCustomerTaxId$inboundSchema: z.ZodType<\n  OrderCustomerTaxId,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), TaxIDFormat$inboundSchema]);\n\n/** @internal */\nexport type OrderCustomerTaxId$Outbound = string | string;\n\n/** @internal */\nexport const OrderCustomerTaxId$outboundSchema: z.ZodType<\n  OrderCustomerTaxId$Outbound,\n  z.ZodTypeDef,\n  OrderCustomerTaxId\n> = z.union([z.string(), TaxIDFormat$outboundSchema]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace OrderCustomerTaxId$ {\n  /** @deprecated use `OrderCustomerTaxId$inboundSchema` instead. */\n  export const inboundSchema = OrderCustomerTaxId$inboundSchema;\n  /** @deprecated use `OrderCustomerTaxId$outboundSchema` instead. */\n  export const outboundSchema = OrderCustomerTaxId$outboundSchema;\n  /** @deprecated use `OrderCustomerTaxId$Outbound` instead. */\n  export type Outbound = OrderCustomerTaxId$Outbound;\n}\n\nexport function orderCustomerTaxIdToJSON(\n  orderCustomerTaxId: OrderCustomerTaxId,\n): string {\n  return JSON.stringify(\n    OrderCustomerTaxId$outboundSchema.parse(orderCustomerTaxId),\n  );\n}\n\nexport function orderCustomerTaxIdFromJSON(\n  jsonString: string,\n): SafeParseResult<OrderCustomerTaxId, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => OrderCustomerTaxId$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'OrderCustomerTaxId' from JSON`,\n  );\n}\n\n/** @internal */\nexport const OrderCustomer$inboundSchema: z.ZodType<\n  OrderCustomer,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  id: z.string(),\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  external_id: z.nullable(z.string()),\n  email: z.string(),\n  email_verified: z.boolean(),\n  name: z.nullable(z.string()),\n  billing_address: z.nullable(Address$inboundSchema),\n  tax_id: z.nullable(\n    z.array(z.nullable(z.union([z.string(), TaxIDFormat$inboundSchema]))),\n  ),\n  organization_id: z.string(),\n  deleted_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  avatar_url: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"external_id\": \"externalId\",\n    \"email_verified\": \"emailVerified\",\n    \"billing_address\": \"billingAddress\",\n    \"tax_id\": \"taxId\",\n    \"organization_id\": \"organizationId\",\n    \"deleted_at\": \"deletedAt\",\n    \"avatar_url\": \"avatarUrl\",\n  });\n});\n\n/** @internal */\nexport type OrderCustomer$Outbound = {\n  id: string;\n  created_at: string;\n  modified_at: string | null;\n  metadata: { [k: string]: string | number | number | boolean };\n  external_id: string | null;\n  email: string;\n  email_verified: boolean;\n  name: string | null;\n  billing_address: Address$Outbound | null;\n  tax_id: Array<string | string | null> | null;\n  organization_id: string;\n  deleted_at: string | null;\n  avatar_url: string;\n};\n\n/** @internal */\nexport const OrderCustomer$outboundSchema: z.ZodType<\n  OrderCustomer$Outbound,\n  z.ZodTypeDef,\n  OrderCustomer\n> = z.object({\n  id: z.string(),\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  externalId: z.nullable(z.string()),\n  email: z.string(),\n  emailVerified: z.boolean(),\n  name: z.nullable(z.string()),\n  billingAddress: z.nullable(Address$outboundSchema),\n  taxId: z.nullable(\n    z.array(z.nullable(z.union([z.string(), TaxIDFormat$outboundSchema]))),\n  ),\n  organizationId: z.string(),\n  deletedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  avatarUrl: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    externalId: \"external_id\",\n    emailVerified: \"email_verified\",\n    billingAddress: \"billing_address\",\n    taxId: \"tax_id\",\n    organizationId: \"organization_id\",\n    deletedAt: \"deleted_at\",\n    avatarUrl: \"avatar_url\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace OrderCustomer$ {\n  /** @deprecated use `OrderCustomer$inboundSchema` instead. */\n  export const inboundSchema = OrderCustomer$inboundSchema;\n  /** @deprecated use `OrderCustomer$outboundSchema` instead. */\n  export const outboundSchema = OrderCustomer$outboundSchema;\n  /** @deprecated use `OrderCustomer$Outbound` instead. */\n  export type Outbound = OrderCustomer$Outbound;\n}\n\nexport function orderCustomerToJSON(orderCustomer: OrderCustomer): string {\n  return JSON.stringify(OrderCustomer$outboundSchema.parse(orderCustomer));\n}\n\nexport function orderCustomerFromJSON(\n  jsonString: string,\n): SafeParseResult<OrderCustomer, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => OrderCustomer$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'OrderCustomer' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 26907, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 26913, "column": 0}, "map": {"version":3,"file":"orderproduct.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/orderproduct.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  SubscriptionRecurringInterval,\n  SubscriptionRecurringInterval$inboundSchema,\n  SubscriptionRecurringInterval$outboundSchema,\n} from \"./subscriptionrecurringinterval.js\";\n\nexport type OrderProductMetadata = string | number | number | boolean;\n\nexport type OrderProduct = {\n  metadata: { [k: string]: string | number | number | boolean };\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  /**\n   * The ID of the product.\n   */\n  id: string;\n  /**\n   * The name of the product.\n   */\n  name: string;\n  /**\n   * The description of the product.\n   */\n  description: string | null;\n  /**\n   * The recurring interval of the product. If `None`, the product is a one-time purchase.\n   */\n  recurringInterval: SubscriptionRecurringInterval | null;\n  /**\n   * Whether the product is a subscription.\n   */\n  isRecurring: boolean;\n  /**\n   * Whether the product is archived and no longer available.\n   */\n  isArchived: boolean;\n  /**\n   * The ID of the organization owning the product.\n   */\n  organizationId: string;\n};\n\n/** @internal */\nexport const OrderProductMetadata$inboundSchema: z.ZodType<\n  OrderProductMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type OrderProductMetadata$Outbound = string | number | number | boolean;\n\n/** @internal */\nexport const OrderProductMetadata$outboundSchema: z.ZodType<\n  OrderProductMetadata$Outbound,\n  z.ZodTypeDef,\n  OrderProductMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace OrderProductMetadata$ {\n  /** @deprecated use `OrderProductMetadata$inboundSchema` instead. */\n  export const inboundSchema = OrderProductMetadata$inboundSchema;\n  /** @deprecated use `OrderProductMetadata$outboundSchema` instead. */\n  export const outboundSchema = OrderProductMetadata$outboundSchema;\n  /** @deprecated use `OrderProductMetadata$Outbound` instead. */\n  export type Outbound = OrderProductMetadata$Outbound;\n}\n\nexport function orderProductMetadataToJSON(\n  orderProductMetadata: OrderProductMetadata,\n): string {\n  return JSON.stringify(\n    OrderProductMetadata$outboundSchema.parse(orderProductMetadata),\n  );\n}\n\nexport function orderProductMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<OrderProductMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => OrderProductMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'OrderProductMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const OrderProduct$inboundSchema: z.ZodType<\n  OrderProduct,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  id: z.string(),\n  name: z.string(),\n  description: z.nullable(z.string()),\n  recurring_interval: z.nullable(SubscriptionRecurringInterval$inboundSchema),\n  is_recurring: z.boolean(),\n  is_archived: z.boolean(),\n  organization_id: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"recurring_interval\": \"recurringInterval\",\n    \"is_recurring\": \"isRecurring\",\n    \"is_archived\": \"isArchived\",\n    \"organization_id\": \"organizationId\",\n  });\n});\n\n/** @internal */\nexport type OrderProduct$Outbound = {\n  metadata: { [k: string]: string | number | number | boolean };\n  created_at: string;\n  modified_at: string | null;\n  id: string;\n  name: string;\n  description: string | null;\n  recurring_interval: string | null;\n  is_recurring: boolean;\n  is_archived: boolean;\n  organization_id: string;\n};\n\n/** @internal */\nexport const OrderProduct$outboundSchema: z.ZodType<\n  OrderProduct$Outbound,\n  z.ZodTypeDef,\n  OrderProduct\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  id: z.string(),\n  name: z.string(),\n  description: z.nullable(z.string()),\n  recurringInterval: z.nullable(SubscriptionRecurringInterval$outboundSchema),\n  isRecurring: z.boolean(),\n  isArchived: z.boolean(),\n  organizationId: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    recurringInterval: \"recurring_interval\",\n    isRecurring: \"is_recurring\",\n    isArchived: \"is_archived\",\n    organizationId: \"organization_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace OrderProduct$ {\n  /** @deprecated use `OrderProduct$inboundSchema` instead. */\n  export const inboundSchema = OrderProduct$inboundSchema;\n  /** @deprecated use `OrderProduct$outboundSchema` instead. */\n  export const outboundSchema = OrderProduct$outboundSchema;\n  /** @deprecated use `OrderProduct$Outbound` instead. */\n  export type Outbound = OrderProduct$Outbound;\n}\n\nexport function orderProductToJSON(orderProduct: OrderProduct): string {\n  return JSON.stringify(OrderProduct$outboundSchema.parse(orderProduct));\n}\n\nexport function orderProductFromJSON(\n  jsonString: string,\n): SafeParseResult<OrderProduct, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => OrderProduct$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'OrderProduct' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 27026, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 27032, "column": 0}, "map": {"version":3,"file":"ordersubscription.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/ordersubscription.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  CustomerCancellationReason,\n  CustomerCancellationReason$inboundSchema,\n  CustomerCancellationReason$outboundSchema,\n} from \"./customercancellationreason.js\";\nimport {\n  SubscriptionRecurringInterval,\n  SubscriptionRecurringInterval$inboundSchema,\n  SubscriptionRecurringInterval$outboundSchema,\n} from \"./subscriptionrecurringinterval.js\";\nimport {\n  SubscriptionStatus,\n  SubscriptionStatus$inboundSchema,\n  SubscriptionStatus$outboundSchema,\n} from \"./subscriptionstatus.js\";\n\nexport type OrderSubscriptionMetadata = string | number | number | boolean;\n\nexport type OrderSubscription = {\n  metadata: { [k: string]: string | number | number | boolean };\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  /**\n   * The ID of the object.\n   */\n  id: string;\n  /**\n   * The amount of the subscription.\n   */\n  amount: number;\n  /**\n   * The currency of the subscription.\n   */\n  currency: string;\n  recurringInterval: SubscriptionRecurringInterval;\n  status: SubscriptionStatus;\n  /**\n   * The start timestamp of the current billing period.\n   */\n  currentPeriodStart: Date;\n  /**\n   * The end timestamp of the current billing period.\n   */\n  currentPeriodEnd: Date | null;\n  /**\n   * Whether the subscription will be canceled at the end of the current period.\n   */\n  cancelAtPeriodEnd: boolean;\n  /**\n   * The timestamp when the subscription was canceled. The subscription might still be active if `cancel_at_period_end` is `true`.\n   */\n  canceledAt: Date | null;\n  /**\n   * The timestamp when the subscription started.\n   */\n  startedAt: Date | null;\n  /**\n   * The timestamp when the subscription will end.\n   */\n  endsAt: Date | null;\n  /**\n   * The timestamp when the subscription ended.\n   */\n  endedAt: Date | null;\n  /**\n   * The ID of the subscribed customer.\n   */\n  customerId: string;\n  /**\n   * The ID of the subscribed product.\n   */\n  productId: string;\n  /**\n   * The ID of the applied discount, if any.\n   */\n  discountId: string | null;\n  checkoutId: string | null;\n  customerCancellationReason: CustomerCancellationReason | null;\n  customerCancellationComment: string | null;\n};\n\n/** @internal */\nexport const OrderSubscriptionMetadata$inboundSchema: z.ZodType<\n  OrderSubscriptionMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type OrderSubscriptionMetadata$Outbound =\n  | string\n  | number\n  | number\n  | boolean;\n\n/** @internal */\nexport const OrderSubscriptionMetadata$outboundSchema: z.ZodType<\n  OrderSubscriptionMetadata$Outbound,\n  z.ZodTypeDef,\n  OrderSubscriptionMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace OrderSubscriptionMetadata$ {\n  /** @deprecated use `OrderSubscriptionMetadata$inboundSchema` instead. */\n  export const inboundSchema = OrderSubscriptionMetadata$inboundSchema;\n  /** @deprecated use `OrderSubscriptionMetadata$outboundSchema` instead. */\n  export const outboundSchema = OrderSubscriptionMetadata$outboundSchema;\n  /** @deprecated use `OrderSubscriptionMetadata$Outbound` instead. */\n  export type Outbound = OrderSubscriptionMetadata$Outbound;\n}\n\nexport function orderSubscriptionMetadataToJSON(\n  orderSubscriptionMetadata: OrderSubscriptionMetadata,\n): string {\n  return JSON.stringify(\n    OrderSubscriptionMetadata$outboundSchema.parse(orderSubscriptionMetadata),\n  );\n}\n\nexport function orderSubscriptionMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<OrderSubscriptionMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => OrderSubscriptionMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'OrderSubscriptionMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const OrderSubscription$inboundSchema: z.ZodType<\n  OrderSubscription,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  id: z.string(),\n  amount: z.number().int(),\n  currency: z.string(),\n  recurring_interval: SubscriptionRecurringInterval$inboundSchema,\n  status: SubscriptionStatus$inboundSchema,\n  current_period_start: z.string().datetime({ offset: true }).transform(v =>\n    new Date(v)\n  ),\n  current_period_end: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  cancel_at_period_end: z.boolean(),\n  canceled_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  started_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  ends_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  ended_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  customer_id: z.string(),\n  product_id: z.string(),\n  discount_id: z.nullable(z.string()),\n  checkout_id: z.nullable(z.string()),\n  customer_cancellation_reason: z.nullable(\n    CustomerCancellationReason$inboundSchema,\n  ),\n  customer_cancellation_comment: z.nullable(z.string()),\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"recurring_interval\": \"recurringInterval\",\n    \"current_period_start\": \"currentPeriodStart\",\n    \"current_period_end\": \"currentPeriodEnd\",\n    \"cancel_at_period_end\": \"cancelAtPeriodEnd\",\n    \"canceled_at\": \"canceledAt\",\n    \"started_at\": \"startedAt\",\n    \"ends_at\": \"endsAt\",\n    \"ended_at\": \"endedAt\",\n    \"customer_id\": \"customerId\",\n    \"product_id\": \"productId\",\n    \"discount_id\": \"discountId\",\n    \"checkout_id\": \"checkoutId\",\n    \"customer_cancellation_reason\": \"customerCancellationReason\",\n    \"customer_cancellation_comment\": \"customerCancellationComment\",\n  });\n});\n\n/** @internal */\nexport type OrderSubscription$Outbound = {\n  metadata: { [k: string]: string | number | number | boolean };\n  created_at: string;\n  modified_at: string | null;\n  id: string;\n  amount: number;\n  currency: string;\n  recurring_interval: string;\n  status: string;\n  current_period_start: string;\n  current_period_end: string | null;\n  cancel_at_period_end: boolean;\n  canceled_at: string | null;\n  started_at: string | null;\n  ends_at: string | null;\n  ended_at: string | null;\n  customer_id: string;\n  product_id: string;\n  discount_id: string | null;\n  checkout_id: string | null;\n  customer_cancellation_reason: string | null;\n  customer_cancellation_comment: string | null;\n};\n\n/** @internal */\nexport const OrderSubscription$outboundSchema: z.ZodType<\n  OrderSubscription$Outbound,\n  z.ZodTypeDef,\n  OrderSubscription\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  id: z.string(),\n  amount: z.number().int(),\n  currency: z.string(),\n  recurringInterval: SubscriptionRecurringInterval$outboundSchema,\n  status: SubscriptionStatus$outboundSchema,\n  currentPeriodStart: z.date().transform(v => v.toISOString()),\n  currentPeriodEnd: z.nullable(z.date().transform(v => v.toISOString())),\n  cancelAtPeriodEnd: z.boolean(),\n  canceledAt: z.nullable(z.date().transform(v => v.toISOString())),\n  startedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  endsAt: z.nullable(z.date().transform(v => v.toISOString())),\n  endedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  customerId: z.string(),\n  productId: z.string(),\n  discountId: z.nullable(z.string()),\n  checkoutId: z.nullable(z.string()),\n  customerCancellationReason: z.nullable(\n    CustomerCancellationReason$outboundSchema,\n  ),\n  customerCancellationComment: z.nullable(z.string()),\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    recurringInterval: \"recurring_interval\",\n    currentPeriodStart: \"current_period_start\",\n    currentPeriodEnd: \"current_period_end\",\n    cancelAtPeriodEnd: \"cancel_at_period_end\",\n    canceledAt: \"canceled_at\",\n    startedAt: \"started_at\",\n    endsAt: \"ends_at\",\n    endedAt: \"ended_at\",\n    customerId: \"customer_id\",\n    productId: \"product_id\",\n    discountId: \"discount_id\",\n    checkoutId: \"checkout_id\",\n    customerCancellationReason: \"customer_cancellation_reason\",\n    customerCancellationComment: \"customer_cancellation_comment\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace OrderSubscription$ {\n  /** @deprecated use `OrderSubscription$inboundSchema` instead. */\n  export const inboundSchema = OrderSubscription$inboundSchema;\n  /** @deprecated use `OrderSubscription$outboundSchema` instead. */\n  export const outboundSchema = OrderSubscription$outboundSchema;\n  /** @deprecated use `OrderSubscription$Outbound` instead. */\n  export type Outbound = OrderSubscription$Outbound;\n}\n\nexport function orderSubscriptionToJSON(\n  orderSubscription: OrderSubscription,\n): string {\n  return JSON.stringify(\n    OrderSubscription$outboundSchema.parse(orderSubscription),\n  );\n}\n\nexport function orderSubscriptionFromJSON(\n  jsonString: string,\n): SafeParseResult<OrderSubscription, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => OrderSubscription$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'OrderSubscription' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 27203, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 27209, "column": 0}, "map": {"version":3,"file":"order.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/order.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  Address,\n  Address$inboundSchema,\n  Address$Outbound,\n  Address$outboundSchema,\n} from \"./address.js\";\nimport {\n  DiscountFixedOnceForeverDurationBase,\n  DiscountFixedOnceForeverDurationBase$inboundSchema,\n  DiscountFixedOnceForeverDurationBase$Outbound,\n  DiscountFixedOnceForeverDurationBase$outboundSchema,\n} from \"./discountfixedonceforeverdurationbase.js\";\nimport {\n  DiscountFixedRepeatDurationBase,\n  DiscountFixedRepeatDurationBase$inboundSchema,\n  DiscountFixedRepeatDurationBase$Outbound,\n  DiscountFixedRepeatDurationBase$outboundSchema,\n} from \"./discountfixedrepeatdurationbase.js\";\nimport {\n  DiscountPercentageOnceForeverDurationBase,\n  DiscountPercentageOnceForeverDurationBase$inboundSchema,\n  DiscountPercentageOnceForeverDurationBase$Outbound,\n  DiscountPercentageOnceForeverDurationBase$outboundSchema,\n} from \"./discountpercentageonceforeverdurationbase.js\";\nimport {\n  DiscountPercentageRepeatDurationBase,\n  DiscountPercentageRepeatDurationBase$inboundSchema,\n  DiscountPercentageRepeatDurationBase$Outbound,\n  DiscountPercentageRepeatDurationBase$outboundSchema,\n} from \"./discountpercentagerepeatdurationbase.js\";\nimport {\n  OrderBillingReason,\n  OrderBillingReason$inboundSchema,\n  OrderBillingReason$outboundSchema,\n} from \"./orderbillingreason.js\";\nimport {\n  OrderCustomer,\n  OrderCustomer$inboundSchema,\n  OrderCustomer$Outbound,\n  OrderCustomer$outboundSchema,\n} from \"./ordercustomer.js\";\nimport {\n  OrderItemSchema,\n  OrderItemSchema$inboundSchema,\n  OrderItemSchema$Outbound,\n  OrderItemSchema$outboundSchema,\n} from \"./orderitemschema.js\";\nimport {\n  OrderProduct,\n  OrderProduct$inboundSchema,\n  OrderProduct$Outbound,\n  OrderProduct$outboundSchema,\n} from \"./orderproduct.js\";\nimport {\n  OrderStatus,\n  OrderStatus$inboundSchema,\n  OrderStatus$outboundSchema,\n} from \"./orderstatus.js\";\nimport {\n  OrderSubscription,\n  OrderSubscription$inboundSchema,\n  OrderSubscription$Outbound,\n  OrderSubscription$outboundSchema,\n} from \"./ordersubscription.js\";\n\nexport type OrderMetadata = string | number | number | boolean;\n\nexport type OrderCustomFieldData = string | number | boolean | Date;\n\nexport type OrderDiscount =\n  | DiscountPercentageOnceForeverDurationBase\n  | DiscountFixedOnceForeverDurationBase\n  | DiscountPercentageRepeatDurationBase\n  | DiscountFixedRepeatDurationBase;\n\nexport type Order = {\n  /**\n   * The ID of the object.\n   */\n  id: string;\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  status: OrderStatus;\n  /**\n   * Whether the order has been paid for.\n   */\n  paid: boolean;\n  /**\n   * Amount in cents, before discounts and taxes.\n   */\n  subtotalAmount: number;\n  /**\n   * Discount amount in cents.\n   */\n  discountAmount: number;\n  /**\n   * Amount in cents, after discounts but before taxes.\n   */\n  netAmount: number;\n  /**\n   * Amount in cents, after discounts but before taxes.\n   *\n   * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.\n   */\n  amount: number;\n  /**\n   * Sales tax amount in cents.\n   */\n  taxAmount: number;\n  /**\n   * Amount in cents, after discounts and taxes.\n   */\n  totalAmount: number;\n  /**\n   * Amount refunded in cents.\n   */\n  refundedAmount: number;\n  /**\n   * Sales tax refunded in cents.\n   */\n  refundedTaxAmount: number;\n  currency: string;\n  billingReason: OrderBillingReason;\n  /**\n   * The name of the customer that should appear on the invoice.\n   */\n  billingName: string | null;\n  billingAddress: Address | null;\n  /**\n   * Whether an invoice has been generated for this order.\n   */\n  isInvoiceGenerated: boolean;\n  customerId: string;\n  productId: string;\n  discountId: string | null;\n  subscriptionId: string | null;\n  checkoutId: string | null;\n  metadata: { [k: string]: string | number | number | boolean };\n  /**\n   * Key-value object storing custom field values.\n   */\n  customFieldData?:\n    | { [k: string]: string | number | boolean | Date | null }\n    | undefined;\n  customer: OrderCustomer;\n  /**\n   * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.\n   */\n  userId: string;\n  product: OrderProduct;\n  discount:\n    | DiscountPercentageOnceForeverDurationBase\n    | DiscountFixedOnceForeverDurationBase\n    | DiscountPercentageRepeatDurationBase\n    | DiscountFixedRepeatDurationBase\n    | null;\n  subscription: OrderSubscription | null;\n  /**\n   * Line items composing the order.\n   */\n  items: Array<OrderItemSchema>;\n};\n\n/** @internal */\nexport const OrderMetadata$inboundSchema: z.ZodType<\n  OrderMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type OrderMetadata$Outbound = string | number | number | boolean;\n\n/** @internal */\nexport const OrderMetadata$outboundSchema: z.ZodType<\n  OrderMetadata$Outbound,\n  z.ZodTypeDef,\n  OrderMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace OrderMetadata$ {\n  /** @deprecated use `OrderMetadata$inboundSchema` instead. */\n  export const inboundSchema = OrderMetadata$inboundSchema;\n  /** @deprecated use `OrderMetadata$outboundSchema` instead. */\n  export const outboundSchema = OrderMetadata$outboundSchema;\n  /** @deprecated use `OrderMetadata$Outbound` instead. */\n  export type Outbound = OrderMetadata$Outbound;\n}\n\nexport function orderMetadataToJSON(orderMetadata: OrderMetadata): string {\n  return JSON.stringify(OrderMetadata$outboundSchema.parse(orderMetadata));\n}\n\nexport function orderMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<OrderMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => OrderMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'OrderMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const OrderCustomFieldData$inboundSchema: z.ZodType<\n  OrderCustomFieldData,\n  z.ZodTypeDef,\n  unknown\n> = z.union([\n  z.string(),\n  z.number().int(),\n  z.boolean(),\n  z.string().datetime({ offset: true }).transform(v => new Date(v)),\n]);\n\n/** @internal */\nexport type OrderCustomFieldData$Outbound = string | number | boolean | string;\n\n/** @internal */\nexport const OrderCustomFieldData$outboundSchema: z.ZodType<\n  OrderCustomFieldData$Outbound,\n  z.ZodTypeDef,\n  OrderCustomFieldData\n> = z.union([\n  z.string(),\n  z.number().int(),\n  z.boolean(),\n  z.date().transform(v => v.toISOString()),\n]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace OrderCustomFieldData$ {\n  /** @deprecated use `OrderCustomFieldData$inboundSchema` instead. */\n  export const inboundSchema = OrderCustomFieldData$inboundSchema;\n  /** @deprecated use `OrderCustomFieldData$outboundSchema` instead. */\n  export const outboundSchema = OrderCustomFieldData$outboundSchema;\n  /** @deprecated use `OrderCustomFieldData$Outbound` instead. */\n  export type Outbound = OrderCustomFieldData$Outbound;\n}\n\nexport function orderCustomFieldDataToJSON(\n  orderCustomFieldData: OrderCustomFieldData,\n): string {\n  return JSON.stringify(\n    OrderCustomFieldData$outboundSchema.parse(orderCustomFieldData),\n  );\n}\n\nexport function orderCustomFieldDataFromJSON(\n  jsonString: string,\n): SafeParseResult<OrderCustomFieldData, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => OrderCustomFieldData$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'OrderCustomFieldData' from JSON`,\n  );\n}\n\n/** @internal */\nexport const OrderDiscount$inboundSchema: z.ZodType<\n  OrderDiscount,\n  z.ZodTypeDef,\n  unknown\n> = z.union([\n  DiscountPercentageOnceForeverDurationBase$inboundSchema,\n  DiscountFixedOnceForeverDurationBase$inboundSchema,\n  DiscountPercentageRepeatDurationBase$inboundSchema,\n  DiscountFixedRepeatDurationBase$inboundSchema,\n]);\n\n/** @internal */\nexport type OrderDiscount$Outbound =\n  | DiscountPercentageOnceForeverDurationBase$Outbound\n  | DiscountFixedOnceForeverDurationBase$Outbound\n  | DiscountPercentageRepeatDurationBase$Outbound\n  | DiscountFixedRepeatDurationBase$Outbound;\n\n/** @internal */\nexport const OrderDiscount$outboundSchema: z.ZodType<\n  OrderDiscount$Outbound,\n  z.ZodTypeDef,\n  OrderDiscount\n> = z.union([\n  DiscountPercentageOnceForeverDurationBase$outboundSchema,\n  DiscountFixedOnceForeverDurationBase$outboundSchema,\n  DiscountPercentageRepeatDurationBase$outboundSchema,\n  DiscountFixedRepeatDurationBase$outboundSchema,\n]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace OrderDiscount$ {\n  /** @deprecated use `OrderDiscount$inboundSchema` instead. */\n  export const inboundSchema = OrderDiscount$inboundSchema;\n  /** @deprecated use `OrderDiscount$outboundSchema` instead. */\n  export const outboundSchema = OrderDiscount$outboundSchema;\n  /** @deprecated use `OrderDiscount$Outbound` instead. */\n  export type Outbound = OrderDiscount$Outbound;\n}\n\nexport function orderDiscountToJSON(orderDiscount: OrderDiscount): string {\n  return JSON.stringify(OrderDiscount$outboundSchema.parse(orderDiscount));\n}\n\nexport function orderDiscountFromJSON(\n  jsonString: string,\n): SafeParseResult<OrderDiscount, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => OrderDiscount$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'OrderDiscount' from JSON`,\n  );\n}\n\n/** @internal */\nexport const Order$inboundSchema: z.ZodType<Order, z.ZodTypeDef, unknown> = z\n  .object({\n    id: z.string(),\n    created_at: z.string().datetime({ offset: true }).transform(v =>\n      new Date(v)\n    ),\n    modified_at: z.nullable(\n      z.string().datetime({ offset: true }).transform(v => new Date(v)),\n    ),\n    status: OrderStatus$inboundSchema,\n    paid: z.boolean(),\n    subtotal_amount: z.number().int(),\n    discount_amount: z.number().int(),\n    net_amount: z.number().int(),\n    amount: z.number().int(),\n    tax_amount: z.number().int(),\n    total_amount: z.number().int(),\n    refunded_amount: z.number().int(),\n    refunded_tax_amount: z.number().int(),\n    currency: z.string(),\n    billing_reason: OrderBillingReason$inboundSchema,\n    billing_name: z.nullable(z.string()),\n    billing_address: z.nullable(Address$inboundSchema),\n    is_invoice_generated: z.boolean(),\n    customer_id: z.string(),\n    product_id: z.string(),\n    discount_id: z.nullable(z.string()),\n    subscription_id: z.nullable(z.string()),\n    checkout_id: z.nullable(z.string()),\n    metadata: z.record(\n      z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n    ),\n    custom_field_data: z.record(\n      z.nullable(\n        z.union([\n          z.string(),\n          z.number().int(),\n          z.boolean(),\n          z.string().datetime({ offset: true }).transform(v => new Date(v)),\n        ]),\n      ),\n    ).optional(),\n    customer: OrderCustomer$inboundSchema,\n    user_id: z.string(),\n    product: OrderProduct$inboundSchema,\n    discount: z.nullable(\n      z.union([\n        DiscountPercentageOnceForeverDurationBase$inboundSchema,\n        DiscountFixedOnceForeverDurationBase$inboundSchema,\n        DiscountPercentageRepeatDurationBase$inboundSchema,\n        DiscountFixedRepeatDurationBase$inboundSchema,\n      ]),\n    ),\n    subscription: z.nullable(OrderSubscription$inboundSchema),\n    items: z.array(OrderItemSchema$inboundSchema),\n  }).transform((v) => {\n    return remap$(v, {\n      \"created_at\": \"createdAt\",\n      \"modified_at\": \"modifiedAt\",\n      \"subtotal_amount\": \"subtotalAmount\",\n      \"discount_amount\": \"discountAmount\",\n      \"net_amount\": \"netAmount\",\n      \"tax_amount\": \"taxAmount\",\n      \"total_amount\": \"totalAmount\",\n      \"refunded_amount\": \"refundedAmount\",\n      \"refunded_tax_amount\": \"refundedTaxAmount\",\n      \"billing_reason\": \"billingReason\",\n      \"billing_name\": \"billingName\",\n      \"billing_address\": \"billingAddress\",\n      \"is_invoice_generated\": \"isInvoiceGenerated\",\n      \"customer_id\": \"customerId\",\n      \"product_id\": \"productId\",\n      \"discount_id\": \"discountId\",\n      \"subscription_id\": \"subscriptionId\",\n      \"checkout_id\": \"checkoutId\",\n      \"custom_field_data\": \"customFieldData\",\n      \"user_id\": \"userId\",\n    });\n  });\n\n/** @internal */\nexport type Order$Outbound = {\n  id: string;\n  created_at: string;\n  modified_at: string | null;\n  status: string;\n  paid: boolean;\n  subtotal_amount: number;\n  discount_amount: number;\n  net_amount: number;\n  amount: number;\n  tax_amount: number;\n  total_amount: number;\n  refunded_amount: number;\n  refunded_tax_amount: number;\n  currency: string;\n  billing_reason: string;\n  billing_name: string | null;\n  billing_address: Address$Outbound | null;\n  is_invoice_generated: boolean;\n  customer_id: string;\n  product_id: string;\n  discount_id: string | null;\n  subscription_id: string | null;\n  checkout_id: string | null;\n  metadata: { [k: string]: string | number | number | boolean };\n  custom_field_data?:\n    | { [k: string]: string | number | boolean | string | null }\n    | undefined;\n  customer: OrderCustomer$Outbound;\n  user_id: string;\n  product: OrderProduct$Outbound;\n  discount:\n    | DiscountPercentageOnceForeverDurationBase$Outbound\n    | DiscountFixedOnceForeverDurationBase$Outbound\n    | DiscountPercentageRepeatDurationBase$Outbound\n    | DiscountFixedRepeatDurationBase$Outbound\n    | null;\n  subscription: OrderSubscription$Outbound | null;\n  items: Array<OrderItemSchema$Outbound>;\n};\n\n/** @internal */\nexport const Order$outboundSchema: z.ZodType<\n  Order$Outbound,\n  z.ZodTypeDef,\n  Order\n> = z.object({\n  id: z.string(),\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  status: OrderStatus$outboundSchema,\n  paid: z.boolean(),\n  subtotalAmount: z.number().int(),\n  discountAmount: z.number().int(),\n  netAmount: z.number().int(),\n  amount: z.number().int(),\n  taxAmount: z.number().int(),\n  totalAmount: z.number().int(),\n  refundedAmount: z.number().int(),\n  refundedTaxAmount: z.number().int(),\n  currency: z.string(),\n  billingReason: OrderBillingReason$outboundSchema,\n  billingName: z.nullable(z.string()),\n  billingAddress: z.nullable(Address$outboundSchema),\n  isInvoiceGenerated: z.boolean(),\n  customerId: z.string(),\n  productId: z.string(),\n  discountId: z.nullable(z.string()),\n  subscriptionId: z.nullable(z.string()),\n  checkoutId: z.nullable(z.string()),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  customFieldData: z.record(\n    z.nullable(\n      z.union([\n        z.string(),\n        z.number().int(),\n        z.boolean(),\n        z.date().transform(v => v.toISOString()),\n      ]),\n    ),\n  ).optional(),\n  customer: OrderCustomer$outboundSchema,\n  userId: z.string(),\n  product: OrderProduct$outboundSchema,\n  discount: z.nullable(\n    z.union([\n      DiscountPercentageOnceForeverDurationBase$outboundSchema,\n      DiscountFixedOnceForeverDurationBase$outboundSchema,\n      DiscountPercentageRepeatDurationBase$outboundSchema,\n      DiscountFixedRepeatDurationBase$outboundSchema,\n    ]),\n  ),\n  subscription: z.nullable(OrderSubscription$outboundSchema),\n  items: z.array(OrderItemSchema$outboundSchema),\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    subtotalAmount: \"subtotal_amount\",\n    discountAmount: \"discount_amount\",\n    netAmount: \"net_amount\",\n    taxAmount: \"tax_amount\",\n    totalAmount: \"total_amount\",\n    refundedAmount: \"refunded_amount\",\n    refundedTaxAmount: \"refunded_tax_amount\",\n    billingReason: \"billing_reason\",\n    billingName: \"billing_name\",\n    billingAddress: \"billing_address\",\n    isInvoiceGenerated: \"is_invoice_generated\",\n    customerId: \"customer_id\",\n    productId: \"product_id\",\n    discountId: \"discount_id\",\n    subscriptionId: \"subscription_id\",\n    checkoutId: \"checkout_id\",\n    customFieldData: \"custom_field_data\",\n    userId: \"user_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace Order$ {\n  /** @deprecated use `Order$inboundSchema` instead. */\n  export const inboundSchema = Order$inboundSchema;\n  /** @deprecated use `Order$outboundSchema` instead. */\n  export const outboundSchema = Order$outboundSchema;\n  /** @deprecated use `Order$Outbound` instead. */\n  export type Outbound = Order$Outbound;\n}\n\nexport function orderToJSON(order: Order): string {\n  return JSON.stringify(Order$outboundSchema.parse(order));\n}\n\nexport function orderFromJSON(\n  jsonString: string,\n): SafeParseResult<Order, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => Order$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'Order' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;;;;;;;;;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,qBAAqB,EAErB,sBAAsB,GACvB,MAAM,cAAc,CAAC;AACtB,OAAO,EAEL,kDAAkD,EAElD,mDAAmD,GACpD,MAAM,2CAA2C,CAAC;AACnD,OAAO,EAEL,6CAA6C,EAE7C,8CAA8C,GAC/C,MAAM,sCAAsC,CAAC;AAC9C,OAAO,EAEL,uDAAuD,EAEvD,wDAAwD,GACzD,MAAM,gDAAgD,CAAC;AACxD,OAAO,EAEL,kDAAkD,EAElD,mDAAmD,GACpD,MAAM,2CAA2C,CAAC;AACnD,OAAO,EAEL,gCAAgC,EAChC,iCAAiC,GAClC,MAAM,yBAAyB,CAAC;AACjC,OAAO,EAEL,2BAA2B,EAE3B,4BAA4B,GAC7B,MAAM,oBAAoB,CAAC;AAC5B,OAAO,EAEL,6BAA6B,EAE7B,8BAA8B,GAC/B,MAAM,sBAAsB,CAAC;AAC9B,OAAO,EAEL,0BAA0B,EAE1B,2BAA2B,GAC5B,MAAM,mBAAmB,CAAC;AAC3B,OAAO,EAEL,yBAAyB,EACzB,0BAA0B,GAC3B,MAAM,kBAAkB,CAAC;AAC1B,OAAO,EAEL,+BAA+B,EAE/B,gCAAgC,GACjC,MAAM,wBAAwB,CAAC;;;;;;;;;;;;;;;;AA2GzB,MAAM,2BAA2B,GAIpC,CAAC,6IAAC,KAAK,CAAC;IAAC,CAAC,6IAAC,MAAM,EAAE;IAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAAE,CAAC,6IAAC,MAAM,EAAE;IAAE,CAAC,6IAAC,OAAO,EAAE;CAAC,CAAC,CAAC;AAM9D,MAAM,4BAA4B,GAIrC,CAAC,6IAAC,KAAK,CAAC;IAAC,CAAC,6IAAC,MAAM,EAAE;IAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAAE,CAAC,6IAAC,MAAM,EAAE;IAAE,CAAC,6IAAC,OAAO,EAAE;CAAC,CAAC,CAAC;AAM/D,IAAW,cAAc,CAO9B;AAPD,CAAA,SAAiB,cAAc;IAC7B,2DAAA,EAA6D,CAChD,eAAA,aAAa,GAAG,2BAA2B,CAAC;IACzD,4DAAA,EAA8D,CACjD,eAAA,cAAc,GAAG,4BAA4B,CAAC;AAG7D,CAAC,EAPgB,cAAc,IAAA,CAAd,cAAc,GAAA,CAAA,CAAA,GAO9B;AAEK,SAAU,mBAAmB,CAAC,aAA4B;IAC9D,OAAO,IAAI,CAAC,SAAS,CAAC,4BAA4B,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC;AAC3E,CAAC;AAEK,SAAU,qBAAqB,CACnC,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,0BAA4B,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACvD,CAAA,yCAAA,CAA2C,CAC5C,CAAC;AACJ,CAAC;AAGM,MAAM,kCAAkC,GAI3C,CAAC,6IAAC,KAAK,CAAC;IACV,CAAC,6IAAC,MAAM,EAAE;IACV,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAChB,CAAC,6IAAC,OAAO,EAAE;IACX,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,CAAC;QAAE,MAAM,EAAE,IAAI;IAAA,CAAE,CAAC,CAAC,SAAS,EAAC,CAAC,CAAC,EAAG,AAAD,IAAK,IAAI,CAAC,CAAC,CAAC,CAAC;CAClE,CAAC,CAAC;AAMI,MAAM,mCAAmC,GAI5C,CAAC,6IAAC,KAAK,CAAC;IACV,CAAC,6IAAC,MAAM,EAAE;IACV,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAChB,CAAC,6IAAC,OAAO,EAAE;IACX,CAAC,6IAAC,IAAI,EAAE,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,WAAW,EAAE,CAAC;CACzC,CAAC,CAAC;AAMG,IAAW,qBAAqB,CAOrC;AAPD,CAAA,SAAiB,qBAAqB;IACpC,kEAAA,EAAoE,CACvD,sBAAA,aAAa,GAAG,kCAAkC,CAAC;IAChE,mEAAA,EAAqE,CACxD,sBAAA,cAAc,GAAG,mCAAmC,CAAC;AAGpE,CAAC,EAPgB,qBAAqB,IAAA,CAArB,qBAAqB,GAAA,CAAA,CAAA,GAOrC;AAEK,SAAU,0BAA0B,CACxC,oBAA0C;IAE1C,OAAO,IAAI,CAAC,SAAS,CACnB,mCAAmC,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAChE,CAAC;AACJ,CAAC;AAEK,SAAU,4BAA4B,CAC1C,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,iCAAmC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC9D,CAAA,gDAAA,CAAkD,CACnD,CAAC;AACJ,CAAC;AAGM,MAAM,2BAA2B,GAIpC,CAAC,6IAAC,KAAK,CAAC;+NACV,0DAAuD;0NACvD,qDAAkD;0NAClD,qDAAkD;qNAClD,gDAA6C;CAC9C,CAAC,CAAC;AAUI,MAAM,4BAA4B,GAIrC,CAAC,6IAAC,KAAK,CAAC;8NACV,4DAAwD;0NACxD,sDAAmD;0NACnD,sDAAmD;qNACnD,iDAA8C;CAC/C,CAAC,CAAC;AAMG,IAAW,cAAc,CAO9B;AAPD,CAAA,SAAiB,cAAc;IAC7B,2DAAA,EAA6D,CAChD,eAAA,aAAa,GAAG,2BAA2B,CAAC;IACzD,4DAAA,EAA8D,CACjD,eAAA,cAAc,GAAG,4BAA4B,CAAC;AAG7D,CAAC,EAPgB,cAAc,IAAA,CAAd,cAAc,GAAA,CAAA,CAAA,GAO9B;AAEK,SAAU,mBAAmB,CAAC,aAA4B;IAC9D,OAAO,IAAI,CAAC,SAAS,CAAC,4BAA4B,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC;AAC3E,CAAC;AAEK,SAAU,qBAAqB,CACnC,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,0BAA4B,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACvD,CAAA,yCAAA,CAA2C,CAC5C,CAAC;AACJ,CAAC;AAGM,MAAM,mBAAmB,GAA4C,CAAC,6IAC1E,MAAM,CAAC;IACN,EAAE,EAAE,CAAC,6IAAC,MAAM,EAAE;IACd,UAAU,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,CAAC;QAAE,MAAM,EAAE,IAAI;IAAA,CAAE,CAAC,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAC9D,IAAI,IAAI,CAAC,CAAC,CAAC,CACZ;IACD,WAAW,EAAE,CAAC,6IAAC,QAAQ,CACrB,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,CAAC;QAAE,MAAM,EAAE,IAAI;IAAA,CAAE,CAAC,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAClE;IACD,MAAM,+LAAE,4BAAyB;IACjC,IAAI,EAAE,CAAC,6IAAC,OAAO,EAAE;IACjB,eAAe,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IACjC,eAAe,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IACjC,UAAU,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAC5B,MAAM,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IACxB,UAAU,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAC5B,YAAY,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAC9B,eAAe,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IACjC,mBAAmB,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IACrC,QAAQ,EAAE,CAAC,6IAAC,MAAM,EAAE;IACpB,cAAc,sMAAE,mCAAgC;IAChD,YAAY,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;IACpC,eAAe,EAAE,CAAC,6IAAC,QAAQ,0LAAC,wBAAqB,CAAC;IAClD,oBAAoB,EAAE,CAAC,6IAAC,OAAO,EAAE;IACjC,WAAW,EAAE,CAAC,6IAAC,MAAM,EAAE;IACvB,UAAU,EAAE,CAAC,6IAAC,MAAM,EAAE;IACtB,WAAW,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;IACnC,eAAe,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;IACvC,WAAW,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;IACnC,QAAQ,EAAE,CAAC,6IAAC,MAAM,CAChB,CAAC,6IAAC,KAAK,CAAC;QAAC,CAAC,6IAAC,MAAM,EAAE;QAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;QAAE,CAAC,6IAAC,MAAM,EAAE;QAAE,CAAC,6IAAC,OAAO,EAAE;KAAC,CAAC,CACjE;IACD,iBAAiB,EAAE,CAAC,6IAAC,MAAM,CACzB,CAAC,6IAAC,QAAQ,CACR,CAAC,6IAAC,KAAK,CAAC;QACN,CAAC,6IAAC,MAAM,EAAE;QACV,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;QAChB,CAAC,6IAAC,OAAO,EAAE;QACX,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,CAAC;YAAE,MAAM,EAAE,IAAI;QAAA,CAAE,CAAC,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;KAClE,CAAC,CACH,CACF,CAAC,QAAQ,EAAE;IACZ,QAAQ,EAAE,6NAA2B;IACrC,OAAO,EAAE,CAAC,6IAAC,MAAM,EAAE;IACnB,OAAO,gMAAE,6BAA0B;IACnC,QAAQ,EAAE,CAAC,6IAAC,QAAQ,CAClB,CAAC,6IAAC,KAAK,CAAC;mOACN,0DAAuD;8NACvD,qDAAkD;6NAClD,sDAAkD;QAClD,iQAA6C;KAC9C,CAAC,CACH;IACD,YAAY,EAAE,CAAC,6IAAC,QAAQ,oMAAC,kCAA+B,CAAC;IACzD,KAAK,EAAE,CAAC,6IAAC,KAAK,kMAAC,gCAA6B,CAAC;CAC9C,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAM,AAAN,EAAO,CAAC,EAAE;QACf,YAAY,EAAE,WAAW;QACzB,aAAa,EAAE,YAAY;QAC3B,iBAAiB,EAAE,gBAAgB;QACnC,iBAAiB,EAAE,gBAAgB;QACnC,YAAY,EAAE,WAAW;QACzB,YAAY,EAAE,WAAW;QACzB,cAAc,EAAE,aAAa;QAC7B,iBAAiB,EAAE,gBAAgB;QACnC,qBAAqB,EAAE,mBAAmB;QAC1C,gBAAgB,EAAE,eAAe;QACjC,cAAc,EAAE,aAAa;QAC7B,iBAAiB,EAAE,gBAAgB;QACnC,sBAAsB,EAAE,oBAAoB;QAC5C,aAAa,EAAE,YAAY;QAC3B,YAAY,EAAE,WAAW;QACzB,aAAa,EAAE,YAAY;QAC3B,iBAAiB,EAAE,gBAAgB;QACnC,aAAa,EAAE,YAAY;QAC3B,mBAAmB,EAAE,iBAAiB;QACtC,SAAS,EAAE,QAAQ;KACpB,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AA6CE,MAAM,oBAAoB,GAI7B,CAAC,6IAAC,MAAM,CAAC;IACX,EAAE,EAAE,CAAC,6IAAC,MAAM,EAAE;IACd,SAAS,EAAE,CAAC,6IAAC,IAAI,EAAE,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,WAAW,EAAE,CAAC;IACnD,UAAU,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,IAAI,EAAE,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;IAChE,MAAM,+LAAE,6BAA0B;IAClC,IAAI,EAAE,CAAC,6IAAC,OAAO,EAAE;IACjB,cAAc,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAChC,cAAc,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAChC,SAAS,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAC3B,MAAM,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IACxB,SAAS,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAC3B,WAAW,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAC7B,cAAc,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAChC,iBAAiB,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IACnC,QAAQ,EAAE,CAAC,6IAAC,MAAM,EAAE;IACpB,aAAa,EAAE,wOAAiC;IAChD,WAAW,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;IACnC,cAAc,EAAE,CAAC,6IAAC,QAAQ,0LAAC,yBAAsB,CAAC;IAClD,kBAAkB,EAAE,CAAC,6IAAC,OAAO,EAAE;IAC/B,UAAU,EAAE,CAAC,6IAAC,MAAM,EAAE;IACtB,SAAS,EAAE,CAAC,6IAAC,MAAM,EAAE;IACrB,UAAU,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;IAClC,cAAc,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;IACtC,UAAU,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;IAClC,QAAQ,EAAE,CAAC,6IAAC,MAAM,CAChB,CAAC,6IAAC,KAAK,CAAC;QAAC,CAAC,6IAAC,MAAM,EAAE;QAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;QAAE,CAAC,6IAAC,MAAM,EAAE;QAAE,CAAC,6IAAC,OAAO,EAAE;KAAC,CAAC,CACjE;IACD,eAAe,EAAE,CAAC,6IAAC,MAAM,CACvB,CAAC,6IAAC,QAAQ,CACR,CAAC,6IAAC,KAAK,CAAC;QACN,CAAC,6IAAC,MAAM,EAAE;QACV,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;QAChB,CAAC,6IAAC,OAAO,EAAE;QACX,CAAC,6IAAC,IAAI,EAAE,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,WAAW,EAAE,CAAC;KACzC,CAAC,CACH,CACF,CAAC,QAAQ,EAAE;IACZ,QAAQ,EAAE,8NAA4B;IACtC,MAAM,EAAE,CAAC,6IAAC,MAAM,EAAE;IAClB,OAAO,gMAAE,8BAA2B;IACpC,QAAQ,EAAE,CAAC,6IAAC,QAAQ,CAClB,CAAC,6IAAC,KAAK,CAAC;mOACN,2DAAwD;8NACxD,sDAAmD;8NACnD,sDAAmD;wNACnD,kDAA8C;KAC/C,CAAC,CACH;IACD,YAAY,EAAE,CAAC,6IAAC,QAAQ,oMAAC,mCAAgC,CAAC;IAC1D,KAAK,EAAE,CAAC,6IAAC,KAAK,kMAAC,iCAA8B,CAAC;CAC/C,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,OAAO,uLAAA,AAAM,EAAC,CAAC,EAAE;QACf,SAAS,EAAE,YAAY;QACvB,UAAU,EAAE,aAAa;QACzB,cAAc,EAAE,iBAAiB;QACjC,cAAc,EAAE,iBAAiB;QACjC,SAAS,EAAE,YAAY;QACvB,SAAS,EAAE,YAAY;QACvB,WAAW,EAAE,cAAc;QAC3B,cAAc,EAAE,iBAAiB;QACjC,iBAAiB,EAAE,qBAAqB;QACxC,aAAa,EAAE,gBAAgB;QAC/B,WAAW,EAAE,cAAc;QAC3B,cAAc,EAAE,iBAAiB;QACjC,kBAAkB,EAAE,sBAAsB;QAC1C,UAAU,EAAE,aAAa;QACzB,SAAS,EAAE,YAAY;QACvB,UAAU,EAAE,aAAa;QACzB,cAAc,EAAE,iBAAiB;QACjC,UAAU,EAAE,aAAa;QACzB,eAAe,EAAE,mBAAmB;QACpC,MAAM,EAAE,SAAS;KAClB,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,MAAM,CAOtB;AAPD,CAAA,SAAiB,MAAM;IACrB,mDAAA,EAAqD,CACxC,OAAA,aAAa,GAAG,mBAAmB,CAAC;IACjD,oDAAA,EAAsD,CACzC,OAAA,cAAc,GAAG,oBAAoB,CAAC;AAGrD,CAAC,EAPgB,MAAM,IAAA,CAAN,MAAM,GAAA,CAAA,CAAA,GAOtB;AAEK,SAAU,WAAW,CAAC,KAAY;IACtC,OAAO,IAAI,CAAC,SAAS,CAAC,oBAAoB,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;AAC3D,CAAC;AAEK,SAAU,aAAa,CAC3B,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,kBAAoB,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC/C,CAAA,iCAAA,CAAmC,CACpC,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 27492, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 27498, "column": 0}, "map": {"version":3,"file":"orderinvoice.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/orderinvoice.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\n/**\n * Order's invoice data.\n */\nexport type OrderInvoice = {\n  /**\n   * The URL to the invoice.\n   */\n  url: string;\n};\n\n/** @internal */\nexport const OrderInvoice$inboundSchema: z.ZodType<\n  OrderInvoice,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  url: z.string(),\n});\n\n/** @internal */\nexport type OrderInvoice$Outbound = {\n  url: string;\n};\n\n/** @internal */\nexport const OrderInvoice$outboundSchema: z.ZodType<\n  OrderInvoice$Outbound,\n  z.ZodTypeDef,\n  OrderInvoice\n> = z.object({\n  url: z.string(),\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace OrderInvoice$ {\n  /** @deprecated use `OrderInvoice$inboundSchema` instead. */\n  export const inboundSchema = OrderInvoice$inboundSchema;\n  /** @deprecated use `OrderInvoice$outboundSchema` instead. */\n  export const outboundSchema = OrderInvoice$outboundSchema;\n  /** @deprecated use `OrderInvoice$Outbound` instead. */\n  export type Outbound = OrderInvoice$Outbound;\n}\n\nexport function orderInvoiceToJSON(orderInvoice: OrderInvoice): string {\n  return JSON.stringify(OrderInvoice$outboundSchema.parse(orderInvoice));\n}\n\nexport function orderInvoiceFromJSON(\n  jsonString: string,\n): SafeParseResult<OrderInvoice, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => OrderInvoice$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'OrderInvoice' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;AAGH,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AADjD,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;;AAgBlB,MAAM,0BAA0B,GAInC,CAAC,6IAAC,MAAM,CAAC;IACX,GAAG,EAAE,CAAC,6IAAC,MAAM,EAAE;CAChB,CAAC,CAAC;AAQI,MAAM,2BAA2B,GAIpC,CAAC,6IAAC,MAAM,CAAC;IACX,GAAG,EAAE,CAAC,6IAAC,MAAM,EAAE;CAChB,CAAC,CAAC;AAMG,IAAW,aAAa,CAO7B;AAPD,CAAA,SAAiB,aAAa;IAC5B,0DAAA,EAA4D,CAC/C,cAAA,aAAa,GAAG,0BAA0B,CAAC;IACxD,2DAAA,EAA6D,CAChD,cAAA,cAAc,GAAG,2BAA2B,CAAC;AAG5D,CAAC,EAPgB,aAAa,IAAA,CAAb,aAAa,GAAA,CAAA,CAAA,GAO7B;AAEK,SAAU,kBAAkB,CAAC,YAA0B;IAC3D,OAAO,IAAI,CAAC,SAAS,CAAC,2BAA2B,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC;AACzE,CAAC;AAEK,SAAU,oBAAoB,CAClC,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,yBAA2B,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACtD,CAAA,wCAAA,CAA0C,CAC3C,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 27529, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 27535, "column": 0}, "map": {"version":3,"file":"listresourceorder.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/listresourceorder.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  Order,\n  Order$inboundSchema,\n  Order$Outbound,\n  Order$outboundSchema,\n} from \"./order.js\";\nimport {\n  Pagination,\n  Pagination$inboundSchema,\n  Pagination$Outbound,\n  Pagination$outboundSchema,\n} from \"./pagination.js\";\n\nexport type ListResourceOrder = {\n  items: Array<Order>;\n  pagination: Pagination;\n};\n\n/** @internal */\nexport const ListResourceOrder$inboundSchema: z.ZodType<\n  ListResourceOrder,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  items: z.array(Order$inboundSchema),\n  pagination: Pagination$inboundSchema,\n});\n\n/** @internal */\nexport type ListResourceOrder$Outbound = {\n  items: Array<Order$Outbound>;\n  pagination: Pagination$Outbound;\n};\n\n/** @internal */\nexport const ListResourceOrder$outboundSchema: z.ZodType<\n  ListResourceOrder$Outbound,\n  z.ZodTypeDef,\n  ListResourceOrder\n> = z.object({\n  items: z.array(Order$outboundSchema),\n  pagination: Pagination$outboundSchema,\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace ListResourceOrder$ {\n  /** @deprecated use `ListResourceOrder$inboundSchema` instead. */\n  export const inboundSchema = ListResourceOrder$inboundSchema;\n  /** @deprecated use `ListResourceOrder$outboundSchema` instead. */\n  export const outboundSchema = ListResourceOrder$outboundSchema;\n  /** @deprecated use `ListResourceOrder$Outbound` instead. */\n  export type Outbound = ListResourceOrder$Outbound;\n}\n\nexport function listResourceOrderToJSON(\n  listResourceOrder: ListResourceOrder,\n): string {\n  return JSON.stringify(\n    ListResourceOrder$outboundSchema.parse(listResourceOrder),\n  );\n}\n\nexport function listResourceOrderFromJSON(\n  jsonString: string,\n): SafeParseResult<ListResourceOrder, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => ListResourceOrder$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'ListResourceOrder' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;AAGH,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,mBAAmB,EAEnB,oBAAoB,GACrB,MAAM,YAAY,CAAC;AACpB,OAAO,EAEL,wBAAwB,EAExB,yBAAyB,GAC1B,MAAM,iBAAiB,CAAC;AAfzB,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;;;;AAuBlB,MAAM,+BAA+B,GAIxC,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,KAAK,wLAAC,sBAAmB,CAAC;IACnC,UAAU,8LAAE,2BAAwB;CACrC,CAAC,CAAC;AASI,MAAM,gCAAgC,GAIzC,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,KAAK,wLAAC,uBAAoB,CAAC;IACpC,UAAU,8LAAE,4BAAyB;CACtC,CAAC,CAAC;AAMG,IAAW,kBAAkB,CAOlC;AAPD,CAAA,SAAiB,kBAAkB;IACjC,+DAAA,EAAiE,CACpD,mBAAA,aAAa,GAAG,+BAA+B,CAAC;IAC7D,gEAAA,EAAkE,CACrD,mBAAA,cAAc,GAAG,gCAAgC,CAAC;AAGjE,CAAC,EAPgB,kBAAkB,IAAA,CAAlB,kBAAkB,GAAA,CAAA,CAAA,GAOlC;AAEK,SAAU,uBAAuB,CACrC,iBAAoC;IAEpC,OAAO,IAAI,CAAC,SAAS,CACnB,gCAAgC,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAC1D,CAAC;AACJ,CAAC;AAEK,SAAU,yBAAyB,CACvC,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,8BAAgC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC3D,CAAA,6CAAA,CAA+C,CAChD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 27572, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 27578, "column": 0}, "map": {"version":3,"file":"ordersortproperty.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/ordersortproperty.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { ClosedEnum } from \"../../types/enums.js\";\n\nexport const OrderSortProperty = {\n  CreatedAt: \"created_at\",\n  MinusCreatedAt: \"-created_at\",\n  Amount: \"amount\",\n  MinusAmount: \"-amount\",\n  NetAmount: \"net_amount\",\n  MinusNetAmount: \"-net_amount\",\n  Customer: \"customer\",\n  MinusCustomer: \"-customer\",\n  Product: \"product\",\n  MinusProduct: \"-product\",\n  Discount: \"discount\",\n  MinusDiscount: \"-discount\",\n  Subscription: \"subscription\",\n  MinusSubscription: \"-subscription\",\n} as const;\nexport type OrderSortProperty = ClosedEnum<typeof OrderSortProperty>;\n\n/** @internal */\nexport const OrderSortProperty$inboundSchema: z.ZodNativeEnum<\n  typeof OrderSortProperty\n> = z.nativeEnum(OrderSortProperty);\n\n/** @internal */\nexport const OrderSortProperty$outboundSchema: z.ZodNativeEnum<\n  typeof OrderSortProperty\n> = OrderSortProperty$inboundSchema;\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace OrderSortProperty$ {\n  /** @deprecated use `OrderSortProperty$inboundSchema` instead. */\n  export const inboundSchema = OrderSortProperty$inboundSchema;\n  /** @deprecated use `OrderSortProperty$outboundSchema` instead. */\n  export const outboundSchema = OrderSortProperty$outboundSchema;\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;AAGlB,MAAM,iBAAiB,GAAG;IAC/B,SAAS,EAAE,YAAY;IACvB,cAAc,EAAE,aAAa;IAC7B,MAAM,EAAE,QAAQ;IAChB,WAAW,EAAE,SAAS;IACtB,SAAS,EAAE,YAAY;IACvB,cAAc,EAAE,aAAa;IAC7B,QAAQ,EAAE,UAAU;IACpB,aAAa,EAAE,WAAW;IAC1B,OAAO,EAAE,SAAS;IAClB,YAAY,EAAE,UAAU;IACxB,QAAQ,EAAE,UAAU;IACpB,aAAa,EAAE,WAAW;IAC1B,YAAY,EAAE,cAAc;IAC5B,iBAAiB,EAAE,eAAe;CAC1B,CAAC;AAIJ,MAAM,+BAA+B,GAExC,CAAC,6IAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC;AAG7B,MAAM,gCAAgC,GAEzC,+BAA+B,CAAC;AAM9B,IAAW,kBAAkB,CAKlC;AALD,CAAA,SAAiB,kBAAkB;IACjC,+DAAA,EAAiE,CACpD,mBAAA,aAAa,GAAG,+BAA+B,CAAC;IAC7D,gEAAA,EAAkE,CACrD,mBAAA,cAAc,GAAG,gCAAgC,CAAC;AACjE,CAAC,EALgB,kBAAkB,IAAA,CAAlB,kBAAkB,GAAA,CAAA,CAAA,GAKlC","ignoreList":[0]}},
    {"offset": {"line": 27612, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 27618, "column": 0}, "map": {"version":3,"file":"orderupdate.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/orderupdate.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  Address,\n  Address$inboundSchema,\n  Address$Outbound,\n  Address$outboundSchema,\n} from \"./address.js\";\n\n/**\n * Schema to update an order.\n */\nexport type OrderUpdate = {\n  /**\n   * The name of the customer that should appear on the invoice. Can't be updated after the invoice is generated.\n   */\n  billingName: string | null;\n  /**\n   * The address of the customer that should appear on the invoice. Can't be updated after the invoice is generated.\n   */\n  billingAddress: Address | null;\n};\n\n/** @internal */\nexport const OrderUpdate$inboundSchema: z.ZodType<\n  OrderUpdate,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  billing_name: z.nullable(z.string()),\n  billing_address: z.nullable(Address$inboundSchema),\n}).transform((v) => {\n  return remap$(v, {\n    \"billing_name\": \"billingName\",\n    \"billing_address\": \"billingAddress\",\n  });\n});\n\n/** @internal */\nexport type OrderUpdate$Outbound = {\n  billing_name: string | null;\n  billing_address: Address$Outbound | null;\n};\n\n/** @internal */\nexport const OrderUpdate$outboundSchema: z.ZodType<\n  OrderUpdate$Outbound,\n  z.ZodTypeDef,\n  OrderUpdate\n> = z.object({\n  billingName: z.nullable(z.string()),\n  billingAddress: z.nullable(Address$outboundSchema),\n}).transform((v) => {\n  return remap$(v, {\n    billingName: \"billing_name\",\n    billingAddress: \"billing_address\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace OrderUpdate$ {\n  /** @deprecated use `OrderUpdate$inboundSchema` instead. */\n  export const inboundSchema = OrderUpdate$inboundSchema;\n  /** @deprecated use `OrderUpdate$outboundSchema` instead. */\n  export const outboundSchema = OrderUpdate$outboundSchema;\n  /** @deprecated use `OrderUpdate$Outbound` instead. */\n  export type Outbound = OrderUpdate$Outbound;\n}\n\nexport function orderUpdateToJSON(orderUpdate: OrderUpdate): string {\n  return JSON.stringify(OrderUpdate$outboundSchema.parse(orderUpdate));\n}\n\nexport function orderUpdateFromJSON(\n  jsonString: string,\n): SafeParseResult<OrderUpdate, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => OrderUpdate$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'OrderUpdate' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,qBAAqB,EAErB,sBAAsB,GACvB,MAAM,cAAc,CAAC;;;;;;AAiBf,MAAM,yBAAyB,GAIlC,CAAC,6IAAC,MAAM,CAAC;IACX,YAAY,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;IACpC,eAAe,EAAE,CAAC,6IAAC,QAAQ,CAAC,iNAAqB,CAAC;CACnD,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,cAAc,EAAE,aAAa;QAC7B,iBAAiB,EAAE,gBAAgB;KACpC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AASI,MAAM,0BAA0B,GAInC,CAAC,6IAAC,MAAM,CAAC;IACX,WAAW,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;IACnC,cAAc,EAAE,CAAC,6IAAC,QAAQ,0LAAC,yBAAsB,CAAC;CACnD,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAM,AAAN,EAAO,CAAC,EAAE;QACf,WAAW,EAAE,cAAc;QAC3B,cAAc,EAAE,iBAAiB;KAClC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,YAAY,CAO5B;AAPD,CAAA,SAAiB,YAAY;IAC3B,yDAAA,EAA2D,CAC9C,aAAA,aAAa,GAAG,yBAAyB,CAAC;IACvD,0DAAA,EAA4D,CAC/C,aAAA,cAAc,GAAG,0BAA0B,CAAC;AAG3D,CAAC,EAPgB,YAAY,IAAA,CAAZ,YAAY,GAAA,CAAA,CAAA,GAO5B;AAEK,SAAU,iBAAiB,CAAC,WAAwB;IACxD,OAAO,IAAI,CAAC,SAAS,CAAC,0BAA0B,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC;AACvE,CAAC;AAEK,SAAU,mBAAmB,CACjC,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,wBAA0B,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACrD,CAAA,uCAAA,CAAyC,CAC1C,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 27665, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 27671, "column": 0}, "map": {"version":3,"file":"organizationdetails.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/organizationdetails.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { ClosedEnum } from \"../../types/enums.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport const SwitchingFrom = {\n  Paddle: \"paddle\",\n  LemonSqueezy: \"lemon_squeezy\",\n  Gumroad: \"gumroad\",\n  Stripe: \"stripe\",\n  Other: \"other\",\n} as const;\nexport type SwitchingFrom = ClosedEnum<typeof SwitchingFrom>;\n\nexport type OrganizationDetails = {\n  /**\n   * Brief information about you and your business.\n   */\n  about: string;\n  /**\n   * Description of digital products being sold.\n   */\n  productDescription: string;\n  /**\n   * How the organization will integrate and use Polar.\n   */\n  intendedUse: string;\n  /**\n   * Main customer acquisition channels.\n   */\n  customerAcquisition: Array<string>;\n  /**\n   * Estimated revenue in the next 12 months\n   */\n  futureAnnualRevenue: number;\n  /**\n   * Switching from another platform?\n   */\n  switching?: boolean | undefined;\n  /**\n   * Which platform the organization is migrating from.\n   */\n  switchingFrom?: SwitchingFrom | null | undefined;\n  /**\n   * Revenue from last year if applicable.\n   */\n  previousAnnualRevenue?: number | undefined;\n};\n\n/** @internal */\nexport const SwitchingFrom$inboundSchema: z.ZodNativeEnum<\n  typeof SwitchingFrom\n> = z.nativeEnum(SwitchingFrom);\n\n/** @internal */\nexport const SwitchingFrom$outboundSchema: z.ZodNativeEnum<\n  typeof SwitchingFrom\n> = SwitchingFrom$inboundSchema;\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace SwitchingFrom$ {\n  /** @deprecated use `SwitchingFrom$inboundSchema` instead. */\n  export const inboundSchema = SwitchingFrom$inboundSchema;\n  /** @deprecated use `SwitchingFrom$outboundSchema` instead. */\n  export const outboundSchema = SwitchingFrom$outboundSchema;\n}\n\n/** @internal */\nexport const OrganizationDetails$inboundSchema: z.ZodType<\n  OrganizationDetails,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  about: z.string(),\n  product_description: z.string(),\n  intended_use: z.string(),\n  customer_acquisition: z.array(z.string()),\n  future_annual_revenue: z.number().int(),\n  switching: z.boolean().default(true),\n  switching_from: z.nullable(SwitchingFrom$inboundSchema).optional(),\n  previous_annual_revenue: z.number().int().default(0),\n}).transform((v) => {\n  return remap$(v, {\n    \"product_description\": \"productDescription\",\n    \"intended_use\": \"intendedUse\",\n    \"customer_acquisition\": \"customerAcquisition\",\n    \"future_annual_revenue\": \"futureAnnualRevenue\",\n    \"switching_from\": \"switchingFrom\",\n    \"previous_annual_revenue\": \"previousAnnualRevenue\",\n  });\n});\n\n/** @internal */\nexport type OrganizationDetails$Outbound = {\n  about: string;\n  product_description: string;\n  intended_use: string;\n  customer_acquisition: Array<string>;\n  future_annual_revenue: number;\n  switching: boolean;\n  switching_from?: string | null | undefined;\n  previous_annual_revenue: number;\n};\n\n/** @internal */\nexport const OrganizationDetails$outboundSchema: z.ZodType<\n  OrganizationDetails$Outbound,\n  z.ZodTypeDef,\n  OrganizationDetails\n> = z.object({\n  about: z.string(),\n  productDescription: z.string(),\n  intendedUse: z.string(),\n  customerAcquisition: z.array(z.string()),\n  futureAnnualRevenue: z.number().int(),\n  switching: z.boolean().default(true),\n  switchingFrom: z.nullable(SwitchingFrom$outboundSchema).optional(),\n  previousAnnualRevenue: z.number().int().default(0),\n}).transform((v) => {\n  return remap$(v, {\n    productDescription: \"product_description\",\n    intendedUse: \"intended_use\",\n    customerAcquisition: \"customer_acquisition\",\n    futureAnnualRevenue: \"future_annual_revenue\",\n    switchingFrom: \"switching_from\",\n    previousAnnualRevenue: \"previous_annual_revenue\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace OrganizationDetails$ {\n  /** @deprecated use `OrganizationDetails$inboundSchema` instead. */\n  export const inboundSchema = OrganizationDetails$inboundSchema;\n  /** @deprecated use `OrganizationDetails$outboundSchema` instead. */\n  export const outboundSchema = OrganizationDetails$outboundSchema;\n  /** @deprecated use `OrganizationDetails$Outbound` instead. */\n  export type Outbound = OrganizationDetails$Outbound;\n}\n\nexport function organizationDetailsToJSON(\n  organizationDetails: OrganizationDetails,\n): string {\n  return JSON.stringify(\n    OrganizationDetails$outboundSchema.parse(organizationDetails),\n  );\n}\n\nexport function organizationDetailsFromJSON(\n  jsonString: string,\n): SafeParseResult<OrganizationDetails, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => OrganizationDetails$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'OrganizationDetails' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 27754, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 27760, "column": 0}, "map": {"version":3,"file":"organizationcreate.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/organizationcreate.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  OrganizationDetails,\n  OrganizationDetails$inboundSchema,\n  OrganizationDetails$Outbound,\n  OrganizationDetails$outboundSchema,\n} from \"./organizationdetails.js\";\nimport {\n  OrganizationFeatureSettings,\n  OrganizationFeatureSettings$inboundSchema,\n  OrganizationFeatureSettings$Outbound,\n  OrganizationFeatureSettings$outboundSchema,\n} from \"./organizationfeaturesettings.js\";\nimport {\n  OrganizationSocialLink,\n  OrganizationSocialLink$inboundSchema,\n  OrganizationSocialLink$Outbound,\n  OrganizationSocialLink$outboundSchema,\n} from \"./organizationsociallink.js\";\nimport {\n  OrganizationSubscriptionSettings,\n  OrganizationSubscriptionSettings$inboundSchema,\n  OrganizationSubscriptionSettings$Outbound,\n  OrganizationSubscriptionSettings$outboundSchema,\n} from \"./organizationsubscriptionsettings.js\";\n\nexport type OrganizationCreate = {\n  name: string;\n  slug: string;\n  avatarUrl?: string | null | undefined;\n  /**\n   * Public support email.\n   */\n  email?: string | null | undefined;\n  /**\n   * Official website of the organization.\n   */\n  website?: string | null | undefined;\n  /**\n   * Link to social profiles.\n   */\n  socials?: Array<OrganizationSocialLink> | null | undefined;\n  /**\n   * Additional, private, business details Polar needs about active organizations for compliance (KYC).\n   */\n  details?: OrganizationDetails | null | undefined;\n  featureSettings?: OrganizationFeatureSettings | null | undefined;\n  subscriptionSettings?: OrganizationSubscriptionSettings | null | undefined;\n};\n\n/** @internal */\nexport const OrganizationCreate$inboundSchema: z.ZodType<\n  OrganizationCreate,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  name: z.string(),\n  slug: z.string(),\n  avatar_url: z.nullable(z.string()).optional(),\n  email: z.nullable(z.string()).optional(),\n  website: z.nullable(z.string()).optional(),\n  socials: z.nullable(z.array(OrganizationSocialLink$inboundSchema)).optional(),\n  details: z.nullable(OrganizationDetails$inboundSchema).optional(),\n  feature_settings: z.nullable(OrganizationFeatureSettings$inboundSchema)\n    .optional(),\n  subscription_settings: z.nullable(\n    OrganizationSubscriptionSettings$inboundSchema,\n  ).optional(),\n}).transform((v) => {\n  return remap$(v, {\n    \"avatar_url\": \"avatarUrl\",\n    \"feature_settings\": \"featureSettings\",\n    \"subscription_settings\": \"subscriptionSettings\",\n  });\n});\n\n/** @internal */\nexport type OrganizationCreate$Outbound = {\n  name: string;\n  slug: string;\n  avatar_url?: string | null | undefined;\n  email?: string | null | undefined;\n  website?: string | null | undefined;\n  socials?: Array<OrganizationSocialLink$Outbound> | null | undefined;\n  details?: OrganizationDetails$Outbound | null | undefined;\n  feature_settings?: OrganizationFeatureSettings$Outbound | null | undefined;\n  subscription_settings?:\n    | OrganizationSubscriptionSettings$Outbound\n    | null\n    | undefined;\n};\n\n/** @internal */\nexport const OrganizationCreate$outboundSchema: z.ZodType<\n  OrganizationCreate$Outbound,\n  z.ZodTypeDef,\n  OrganizationCreate\n> = z.object({\n  name: z.string(),\n  slug: z.string(),\n  avatarUrl: z.nullable(z.string()).optional(),\n  email: z.nullable(z.string()).optional(),\n  website: z.nullable(z.string()).optional(),\n  socials: z.nullable(z.array(OrganizationSocialLink$outboundSchema))\n    .optional(),\n  details: z.nullable(OrganizationDetails$outboundSchema).optional(),\n  featureSettings: z.nullable(OrganizationFeatureSettings$outboundSchema)\n    .optional(),\n  subscriptionSettings: z.nullable(\n    OrganizationSubscriptionSettings$outboundSchema,\n  ).optional(),\n}).transform((v) => {\n  return remap$(v, {\n    avatarUrl: \"avatar_url\",\n    featureSettings: \"feature_settings\",\n    subscriptionSettings: \"subscription_settings\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace OrganizationCreate$ {\n  /** @deprecated use `OrganizationCreate$inboundSchema` instead. */\n  export const inboundSchema = OrganizationCreate$inboundSchema;\n  /** @deprecated use `OrganizationCreate$outboundSchema` instead. */\n  export const outboundSchema = OrganizationCreate$outboundSchema;\n  /** @deprecated use `OrganizationCreate$Outbound` instead. */\n  export type Outbound = OrganizationCreate$Outbound;\n}\n\nexport function organizationCreateToJSON(\n  organizationCreate: OrganizationCreate,\n): string {\n  return JSON.stringify(\n    OrganizationCreate$outboundSchema.parse(organizationCreate),\n  );\n}\n\nexport function organizationCreateFromJSON(\n  jsonString: string,\n): SafeParseResult<OrganizationCreate, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => OrganizationCreate$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'OrganizationCreate' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 27829, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 27835, "column": 0}, "map": {"version":3,"file":"listresourceorganization.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/listresourceorganization.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  Organization,\n  Organization$inboundSchema,\n  Organization$Outbound,\n  Organization$outboundSchema,\n} from \"./organization.js\";\nimport {\n  Pagination,\n  Pagination$inboundSchema,\n  Pagination$Outbound,\n  Pagination$outboundSchema,\n} from \"./pagination.js\";\n\nexport type ListResourceOrganization = {\n  items: Array<Organization>;\n  pagination: Pagination;\n};\n\n/** @internal */\nexport const ListResourceOrganization$inboundSchema: z.ZodType<\n  ListResourceOrganization,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  items: z.array(Organization$inboundSchema),\n  pagination: Pagination$inboundSchema,\n});\n\n/** @internal */\nexport type ListResourceOrganization$Outbound = {\n  items: Array<Organization$Outbound>;\n  pagination: Pagination$Outbound;\n};\n\n/** @internal */\nexport const ListResourceOrganization$outboundSchema: z.ZodType<\n  ListResourceOrganization$Outbound,\n  z.ZodTypeDef,\n  ListResourceOrganization\n> = z.object({\n  items: z.array(Organization$outboundSchema),\n  pagination: Pagination$outboundSchema,\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace ListResourceOrganization$ {\n  /** @deprecated use `ListResourceOrganization$inboundSchema` instead. */\n  export const inboundSchema = ListResourceOrganization$inboundSchema;\n  /** @deprecated use `ListResourceOrganization$outboundSchema` instead. */\n  export const outboundSchema = ListResourceOrganization$outboundSchema;\n  /** @deprecated use `ListResourceOrganization$Outbound` instead. */\n  export type Outbound = ListResourceOrganization$Outbound;\n}\n\nexport function listResourceOrganizationToJSON(\n  listResourceOrganization: ListResourceOrganization,\n): string {\n  return JSON.stringify(\n    ListResourceOrganization$outboundSchema.parse(listResourceOrganization),\n  );\n}\n\nexport function listResourceOrganizationFromJSON(\n  jsonString: string,\n): SafeParseResult<ListResourceOrganization, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => ListResourceOrganization$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'ListResourceOrganization' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;AAGH,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,0BAA0B,EAE1B,2BAA2B,GAC5B,MAAM,mBAAmB,CAAC;AAC3B,OAAO,EAEL,wBAAwB,EAExB,yBAAyB,GAC1B,MAAM,iBAAiB,CAAC;AAfzB,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;;;;AAuBlB,MAAM,sCAAsC,GAI/C,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,KAAK,+LAAC,6BAA0B,CAAC;IAC1C,UAAU,8LAAE,2BAAwB;CACrC,CAAC,CAAC;AASI,MAAM,uCAAuC,GAIhD,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,KAAK,+LAAC,8BAA2B,CAAC;IAC3C,UAAU,8LAAE,4BAAyB;CACtC,CAAC,CAAC;AAMG,IAAW,yBAAyB,CAOzC;AAPD,CAAA,SAAiB,yBAAyB;IACxC,sEAAA,EAAwE,CAC3D,0BAAA,aAAa,GAAG,sCAAsC,CAAC;IACpE,uEAAA,EAAyE,CAC5D,0BAAA,cAAc,GAAG,uCAAuC,CAAC;AAGxE,CAAC,EAPgB,yBAAyB,IAAA,CAAzB,yBAAyB,GAAA,CAAA,CAAA,GAOzC;AAEK,SAAU,8BAA8B,CAC5C,wBAAkD;IAElD,OAAO,IAAI,CAAC,SAAS,CACnB,uCAAuC,CAAC,KAAK,CAAC,wBAAwB,CAAC,CACxE,CAAC;AACJ,CAAC;AAEK,SAAU,gCAAgC,CAC9C,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,qCAAuC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAClE,CAAA,oDAAA,CAAsD,CACvD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 27872, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 27878, "column": 0}, "map": {"version":3,"file":"organizationsortproperty.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/organizationsortproperty.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { ClosedEnum } from \"../../types/enums.js\";\n\nexport const OrganizationSortProperty = {\n  CreatedAt: \"created_at\",\n  MinusCreatedAt: \"-created_at\",\n  Slug: \"slug\",\n  MinusSlug: \"-slug\",\n  Name: \"name\",\n  MinusName: \"-name\",\n} as const;\nexport type OrganizationSortProperty = ClosedEnum<\n  typeof OrganizationSortProperty\n>;\n\n/** @internal */\nexport const OrganizationSortProperty$inboundSchema: z.ZodNativeEnum<\n  typeof OrganizationSortProperty\n> = z.nativeEnum(OrganizationSortProperty);\n\n/** @internal */\nexport const OrganizationSortProperty$outboundSchema: z.ZodNativeEnum<\n  typeof OrganizationSortProperty\n> = OrganizationSortProperty$inboundSchema;\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace OrganizationSortProperty$ {\n  /** @deprecated use `OrganizationSortProperty$inboundSchema` instead. */\n  export const inboundSchema = OrganizationSortProperty$inboundSchema;\n  /** @deprecated use `OrganizationSortProperty$outboundSchema` instead. */\n  export const outboundSchema = OrganizationSortProperty$outboundSchema;\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;AAGlB,MAAM,wBAAwB,GAAG;IACtC,SAAS,EAAE,YAAY;IACvB,cAAc,EAAE,aAAa;IAC7B,IAAI,EAAE,MAAM;IACZ,SAAS,EAAE,OAAO;IAClB,IAAI,EAAE,MAAM;IACZ,SAAS,EAAE,OAAO;CACV,CAAC;AAMJ,MAAM,sCAAsC,GAE/C,CAAC,6IAAC,UAAU,CAAC,wBAAwB,CAAC,CAAC;AAGpC,MAAM,uCAAuC,GAEhD,sCAAsC,CAAC;AAMrC,IAAW,yBAAyB,CAKzC;AALD,CAAA,SAAiB,yBAAyB;IACxC,sEAAA,EAAwE,CAC3D,0BAAA,aAAa,GAAG,sCAAsC,CAAC;IACpE,uEAAA,EAAyE,CAC5D,0BAAA,cAAc,GAAG,uCAAuC,CAAC;AACxE,CAAC,EALgB,yBAAyB,IAAA,CAAzB,yBAAyB,GAAA,CAAA,CAAA,GAKzC","ignoreList":[0]}},
    {"offset": {"line": 27904, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 27910, "column": 0}, "map": {"version":3,"file":"organizationupdate.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/organizationupdate.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  OrganizationDetails,\n  OrganizationDetails$inboundSchema,\n  OrganizationDetails$Outbound,\n  OrganizationDetails$outboundSchema,\n} from \"./organizationdetails.js\";\nimport {\n  OrganizationFeatureSettings,\n  OrganizationFeatureSettings$inboundSchema,\n  OrganizationFeatureSettings$Outbound,\n  OrganizationFeatureSettings$outboundSchema,\n} from \"./organizationfeaturesettings.js\";\nimport {\n  OrganizationSocialLink,\n  OrganizationSocialLink$inboundSchema,\n  OrganizationSocialLink$Outbound,\n  OrganizationSocialLink$outboundSchema,\n} from \"./organizationsociallink.js\";\nimport {\n  OrganizationSubscriptionSettings,\n  OrganizationSubscriptionSettings$inboundSchema,\n  OrganizationSubscriptionSettings$Outbound,\n  OrganizationSubscriptionSettings$outboundSchema,\n} from \"./organizationsubscriptionsettings.js\";\n\nexport type OrganizationUpdate = {\n  name?: string | null | undefined;\n  avatarUrl?: string | null | undefined;\n  /**\n   * Public support email.\n   */\n  email?: string | null | undefined;\n  /**\n   * Official website of the organization.\n   */\n  website?: string | null | undefined;\n  /**\n   * Links to social profiles.\n   */\n  socials?: Array<OrganizationSocialLink> | null | undefined;\n  /**\n   * Additional, private, business details Polar needs about active organizations for compliance (KYC).\n   */\n  details?: OrganizationDetails | null | undefined;\n  featureSettings?: OrganizationFeatureSettings | null | undefined;\n  subscriptionSettings?: OrganizationSubscriptionSettings | null | undefined;\n};\n\n/** @internal */\nexport const OrganizationUpdate$inboundSchema: z.ZodType<\n  OrganizationUpdate,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  name: z.nullable(z.string()).optional(),\n  avatar_url: z.nullable(z.string()).optional(),\n  email: z.nullable(z.string()).optional(),\n  website: z.nullable(z.string()).optional(),\n  socials: z.nullable(z.array(OrganizationSocialLink$inboundSchema)).optional(),\n  details: z.nullable(OrganizationDetails$inboundSchema).optional(),\n  feature_settings: z.nullable(OrganizationFeatureSettings$inboundSchema)\n    .optional(),\n  subscription_settings: z.nullable(\n    OrganizationSubscriptionSettings$inboundSchema,\n  ).optional(),\n}).transform((v) => {\n  return remap$(v, {\n    \"avatar_url\": \"avatarUrl\",\n    \"feature_settings\": \"featureSettings\",\n    \"subscription_settings\": \"subscriptionSettings\",\n  });\n});\n\n/** @internal */\nexport type OrganizationUpdate$Outbound = {\n  name?: string | null | undefined;\n  avatar_url?: string | null | undefined;\n  email?: string | null | undefined;\n  website?: string | null | undefined;\n  socials?: Array<OrganizationSocialLink$Outbound> | null | undefined;\n  details?: OrganizationDetails$Outbound | null | undefined;\n  feature_settings?: OrganizationFeatureSettings$Outbound | null | undefined;\n  subscription_settings?:\n    | OrganizationSubscriptionSettings$Outbound\n    | null\n    | undefined;\n};\n\n/** @internal */\nexport const OrganizationUpdate$outboundSchema: z.ZodType<\n  OrganizationUpdate$Outbound,\n  z.ZodTypeDef,\n  OrganizationUpdate\n> = z.object({\n  name: z.nullable(z.string()).optional(),\n  avatarUrl: z.nullable(z.string()).optional(),\n  email: z.nullable(z.string()).optional(),\n  website: z.nullable(z.string()).optional(),\n  socials: z.nullable(z.array(OrganizationSocialLink$outboundSchema))\n    .optional(),\n  details: z.nullable(OrganizationDetails$outboundSchema).optional(),\n  featureSettings: z.nullable(OrganizationFeatureSettings$outboundSchema)\n    .optional(),\n  subscriptionSettings: z.nullable(\n    OrganizationSubscriptionSettings$outboundSchema,\n  ).optional(),\n}).transform((v) => {\n  return remap$(v, {\n    avatarUrl: \"avatar_url\",\n    featureSettings: \"feature_settings\",\n    subscriptionSettings: \"subscription_settings\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace OrganizationUpdate$ {\n  /** @deprecated use `OrganizationUpdate$inboundSchema` instead. */\n  export const inboundSchema = OrganizationUpdate$inboundSchema;\n  /** @deprecated use `OrganizationUpdate$outboundSchema` instead. */\n  export const outboundSchema = OrganizationUpdate$outboundSchema;\n  /** @deprecated use `OrganizationUpdate$Outbound` instead. */\n  export type Outbound = OrganizationUpdate$Outbound;\n}\n\nexport function organizationUpdateToJSON(\n  organizationUpdate: OrganizationUpdate,\n): string {\n  return JSON.stringify(\n    OrganizationUpdate$outboundSchema.parse(organizationUpdate),\n  );\n}\n\nexport function organizationUpdateFromJSON(\n  jsonString: string,\n): SafeParseResult<OrganizationUpdate, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => OrganizationUpdate$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'OrganizationUpdate' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 27977, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 27983, "column": 0}, "map": {"version":3,"file":"cardpaymentmetadata.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/cardpaymentmetadata.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\n/**\n * Additional metadata for a card payment method.\n */\nexport type CardPaymentMetadata = {\n  /**\n   * The brand of the card used for the payment.\n   */\n  brand: string;\n  /**\n   * The last 4 digits of the card number.\n   */\n  last4: string;\n};\n\n/** @internal */\nexport const CardPaymentMetadata$inboundSchema: z.ZodType<\n  CardPaymentMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  brand: z.string(),\n  last4: z.string(),\n});\n\n/** @internal */\nexport type CardPaymentMetadata$Outbound = {\n  brand: string;\n  last4: string;\n};\n\n/** @internal */\nexport const CardPaymentMetadata$outboundSchema: z.ZodType<\n  CardPaymentMetadata$Outbound,\n  z.ZodTypeDef,\n  CardPaymentMetadata\n> = z.object({\n  brand: z.string(),\n  last4: z.string(),\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CardPaymentMetadata$ {\n  /** @deprecated use `CardPaymentMetadata$inboundSchema` instead. */\n  export const inboundSchema = CardPaymentMetadata$inboundSchema;\n  /** @deprecated use `CardPaymentMetadata$outboundSchema` instead. */\n  export const outboundSchema = CardPaymentMetadata$outboundSchema;\n  /** @deprecated use `CardPaymentMetadata$Outbound` instead. */\n  export type Outbound = CardPaymentMetadata$Outbound;\n}\n\nexport function cardPaymentMetadataToJSON(\n  cardPaymentMetadata: CardPaymentMetadata,\n): string {\n  return JSON.stringify(\n    CardPaymentMetadata$outboundSchema.parse(cardPaymentMetadata),\n  );\n}\n\nexport function cardPaymentMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<CardPaymentMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CardPaymentMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CardPaymentMetadata' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;AAGH,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AADjD,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;;AAoBlB,MAAM,iCAAiC,GAI1C,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,MAAM,EAAE;IACjB,KAAK,EAAE,CAAC,6IAAC,MAAM,EAAE;CAClB,CAAC,CAAC;AASI,MAAM,kCAAkC,GAI3C,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,MAAM,EAAE;IACjB,KAAK,EAAE,CAAC,6IAAC,MAAM,EAAE;CAClB,CAAC,CAAC;AAMG,IAAW,oBAAoB,CAOpC;AAPD,CAAA,SAAiB,oBAAoB;IACnC,iEAAA,EAAmE,CACtD,qBAAA,aAAa,GAAG,iCAAiC,CAAC;IAC/D,kEAAA,EAAoE,CACvD,qBAAA,cAAc,GAAG,kCAAkC,CAAC;AAGnE,CAAC,EAPgB,oBAAoB,IAAA,CAApB,oBAAoB,GAAA,CAAA,CAAA,GAOpC;AAEK,SAAU,yBAAyB,CACvC,mBAAwC;IAExC,OAAO,IAAI,CAAC,SAAS,CACnB,kCAAkC,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAC9D,CAAC;AACJ,CAAC;AAEK,SAAU,2BAA2B,CACzC,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,gCAAkC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC7D,CAAA,+CAAA,CAAiD,CAClD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 28016, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 28022, "column": 0}, "map": {"version":3,"file":"paymentstatus.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/paymentstatus.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { ClosedEnum } from \"../../types/enums.js\";\n\nexport const PaymentStatus = {\n  Pending: \"pending\",\n  Succeeded: \"succeeded\",\n  Failed: \"failed\",\n} as const;\nexport type PaymentStatus = ClosedEnum<typeof PaymentStatus>;\n\n/** @internal */\nexport const PaymentStatus$inboundSchema: z.ZodNativeEnum<\n  typeof PaymentStatus\n> = z.nativeEnum(PaymentStatus);\n\n/** @internal */\nexport const PaymentStatus$outboundSchema: z.ZodNativeEnum<\n  typeof PaymentStatus\n> = PaymentStatus$inboundSchema;\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace PaymentStatus$ {\n  /** @deprecated use `PaymentStatus$inboundSchema` instead. */\n  export const inboundSchema = PaymentStatus$inboundSchema;\n  /** @deprecated use `PaymentStatus$outboundSchema` instead. */\n  export const outboundSchema = PaymentStatus$outboundSchema;\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;AAGlB,MAAM,aAAa,GAAG;IAC3B,OAAO,EAAE,SAAS;IAClB,SAAS,EAAE,WAAW;IACtB,MAAM,EAAE,QAAQ;CACR,CAAC;AAIJ,MAAM,2BAA2B,GAEpC,CAAC,6IAAC,UAAU,CAAC,aAAa,CAAC,CAAC;AAGzB,MAAM,4BAA4B,GAErC,2BAA2B,CAAC;AAM1B,IAAW,cAAc,CAK9B;AALD,CAAA,SAAiB,cAAc;IAC7B,2DAAA,EAA6D,CAChD,eAAA,aAAa,GAAG,2BAA2B,CAAC;IACzD,4DAAA,EAA8D,CACjD,eAAA,cAAc,GAAG,4BAA4B,CAAC;AAC7D,CAAC,EALgB,cAAc,IAAA,CAAd,cAAc,GAAA,CAAA,CAAA,GAK9B","ignoreList":[0]}},
    {"offset": {"line": 28045, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 28051, "column": 0}, "map": {"version":3,"file":"cardpayment.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/cardpayment.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  CardPaymentMetadata,\n  CardPaymentMetadata$inboundSchema,\n  CardPaymentMetadata$Outbound,\n  CardPaymentMetadata$outboundSchema,\n} from \"./cardpaymentmetadata.js\";\nimport {\n  PaymentProcessor,\n  PaymentProcessor$inboundSchema,\n  PaymentProcessor$outboundSchema,\n} from \"./paymentprocessor.js\";\nimport {\n  PaymentStatus,\n  PaymentStatus$inboundSchema,\n  PaymentStatus$outboundSchema,\n} from \"./paymentstatus.js\";\n\n/**\n * Schema of a payment with a card payment method.\n */\nexport type CardPayment = {\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  /**\n   * The ID of the object.\n   */\n  id: string;\n  processor: PaymentProcessor;\n  status: PaymentStatus;\n  /**\n   * The payment amount in cents.\n   */\n  amount: number;\n  /**\n   * The payment currency. Currently, only `usd` is supported.\n   */\n  currency: string;\n  /**\n   * The payment method used.\n   */\n  method?: \"card\" | undefined;\n  /**\n   * Error code, if the payment was declined.\n   */\n  declineReason: string | null;\n  /**\n   * Human-reasable error message, if the payment was declined.\n   */\n  declineMessage: string | null;\n  /**\n   * The ID of the organization that owns the payment.\n   */\n  organizationId: string;\n  /**\n   * The ID of the checkout session associated with this payment.\n   */\n  checkoutId: string | null;\n  /**\n   * The ID of the order associated with this payment.\n   */\n  orderId: string | null;\n  /**\n   * Additional metadata for a card payment method.\n   */\n  methodMetadata: CardPaymentMetadata;\n};\n\n/** @internal */\nexport const CardPayment$inboundSchema: z.ZodType<\n  CardPayment,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  id: z.string(),\n  processor: PaymentProcessor$inboundSchema,\n  status: PaymentStatus$inboundSchema,\n  amount: z.number().int(),\n  currency: z.string(),\n  method: z.literal(\"card\").optional(),\n  decline_reason: z.nullable(z.string()),\n  decline_message: z.nullable(z.string()),\n  organization_id: z.string(),\n  checkout_id: z.nullable(z.string()),\n  order_id: z.nullable(z.string()),\n  method_metadata: CardPaymentMetadata$inboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"decline_reason\": \"declineReason\",\n    \"decline_message\": \"declineMessage\",\n    \"organization_id\": \"organizationId\",\n    \"checkout_id\": \"checkoutId\",\n    \"order_id\": \"orderId\",\n    \"method_metadata\": \"methodMetadata\",\n  });\n});\n\n/** @internal */\nexport type CardPayment$Outbound = {\n  created_at: string;\n  modified_at: string | null;\n  id: string;\n  processor: string;\n  status: string;\n  amount: number;\n  currency: string;\n  method: \"card\";\n  decline_reason: string | null;\n  decline_message: string | null;\n  organization_id: string;\n  checkout_id: string | null;\n  order_id: string | null;\n  method_metadata: CardPaymentMetadata$Outbound;\n};\n\n/** @internal */\nexport const CardPayment$outboundSchema: z.ZodType<\n  CardPayment$Outbound,\n  z.ZodTypeDef,\n  CardPayment\n> = z.object({\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  id: z.string(),\n  processor: PaymentProcessor$outboundSchema,\n  status: PaymentStatus$outboundSchema,\n  amount: z.number().int(),\n  currency: z.string(),\n  method: z.literal(\"card\").default(\"card\" as const),\n  declineReason: z.nullable(z.string()),\n  declineMessage: z.nullable(z.string()),\n  organizationId: z.string(),\n  checkoutId: z.nullable(z.string()),\n  orderId: z.nullable(z.string()),\n  methodMetadata: CardPaymentMetadata$outboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    declineReason: \"decline_reason\",\n    declineMessage: \"decline_message\",\n    organizationId: \"organization_id\",\n    checkoutId: \"checkout_id\",\n    orderId: \"order_id\",\n    methodMetadata: \"method_metadata\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CardPayment$ {\n  /** @deprecated use `CardPayment$inboundSchema` instead. */\n  export const inboundSchema = CardPayment$inboundSchema;\n  /** @deprecated use `CardPayment$outboundSchema` instead. */\n  export const outboundSchema = CardPayment$outboundSchema;\n  /** @deprecated use `CardPayment$Outbound` instead. */\n  export type Outbound = CardPayment$Outbound;\n}\n\nexport function cardPaymentToJSON(cardPayment: CardPayment): string {\n  return JSON.stringify(CardPayment$outboundSchema.parse(cardPayment));\n}\n\nexport function cardPaymentFromJSON(\n  jsonString: string,\n): SafeParseResult<CardPayment, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CardPayment$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CardPayment' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 28142, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 28148, "column": 0}, "map": {"version":3,"file":"genericpayment.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/genericpayment.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  PaymentProcessor,\n  PaymentProcessor$inboundSchema,\n  PaymentProcessor$outboundSchema,\n} from \"./paymentprocessor.js\";\nimport {\n  PaymentStatus,\n  PaymentStatus$inboundSchema,\n  PaymentStatus$outboundSchema,\n} from \"./paymentstatus.js\";\n\n/**\n * Schema of a payment with a generic payment method.\n */\nexport type GenericPayment = {\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  /**\n   * The ID of the object.\n   */\n  id: string;\n  processor: PaymentProcessor;\n  status: PaymentStatus;\n  /**\n   * The payment amount in cents.\n   */\n  amount: number;\n  /**\n   * The payment currency. Currently, only `usd` is supported.\n   */\n  currency: string;\n  /**\n   * The payment method used.\n   */\n  method: string;\n  /**\n   * Error code, if the payment was declined.\n   */\n  declineReason: string | null;\n  /**\n   * Human-reasable error message, if the payment was declined.\n   */\n  declineMessage: string | null;\n  /**\n   * The ID of the organization that owns the payment.\n   */\n  organizationId: string;\n  /**\n   * The ID of the checkout session associated with this payment.\n   */\n  checkoutId: string | null;\n  /**\n   * The ID of the order associated with this payment.\n   */\n  orderId: string | null;\n};\n\n/** @internal */\nexport const GenericPayment$inboundSchema: z.ZodType<\n  GenericPayment,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  id: z.string(),\n  processor: PaymentProcessor$inboundSchema,\n  status: PaymentStatus$inboundSchema,\n  amount: z.number().int(),\n  currency: z.string(),\n  method: z.string(),\n  decline_reason: z.nullable(z.string()),\n  decline_message: z.nullable(z.string()),\n  organization_id: z.string(),\n  checkout_id: z.nullable(z.string()),\n  order_id: z.nullable(z.string()),\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"decline_reason\": \"declineReason\",\n    \"decline_message\": \"declineMessage\",\n    \"organization_id\": \"organizationId\",\n    \"checkout_id\": \"checkoutId\",\n    \"order_id\": \"orderId\",\n  });\n});\n\n/** @internal */\nexport type GenericPayment$Outbound = {\n  created_at: string;\n  modified_at: string | null;\n  id: string;\n  processor: string;\n  status: string;\n  amount: number;\n  currency: string;\n  method: string;\n  decline_reason: string | null;\n  decline_message: string | null;\n  organization_id: string;\n  checkout_id: string | null;\n  order_id: string | null;\n};\n\n/** @internal */\nexport const GenericPayment$outboundSchema: z.ZodType<\n  GenericPayment$Outbound,\n  z.ZodTypeDef,\n  GenericPayment\n> = z.object({\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  id: z.string(),\n  processor: PaymentProcessor$outboundSchema,\n  status: PaymentStatus$outboundSchema,\n  amount: z.number().int(),\n  currency: z.string(),\n  method: z.string(),\n  declineReason: z.nullable(z.string()),\n  declineMessage: z.nullable(z.string()),\n  organizationId: z.string(),\n  checkoutId: z.nullable(z.string()),\n  orderId: z.nullable(z.string()),\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    declineReason: \"decline_reason\",\n    declineMessage: \"decline_message\",\n    organizationId: \"organization_id\",\n    checkoutId: \"checkout_id\",\n    orderId: \"order_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace GenericPayment$ {\n  /** @deprecated use `GenericPayment$inboundSchema` instead. */\n  export const inboundSchema = GenericPayment$inboundSchema;\n  /** @deprecated use `GenericPayment$outboundSchema` instead. */\n  export const outboundSchema = GenericPayment$outboundSchema;\n  /** @deprecated use `GenericPayment$Outbound` instead. */\n  export type Outbound = GenericPayment$Outbound;\n}\n\nexport function genericPaymentToJSON(genericPayment: GenericPayment): string {\n  return JSON.stringify(GenericPayment$outboundSchema.parse(genericPayment));\n}\n\nexport function genericPaymentFromJSON(\n  jsonString: string,\n): SafeParseResult<GenericPayment, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => GenericPayment$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'GenericPayment' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 28233, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 28239, "column": 0}, "map": {"version":3,"file":"payment.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/payment.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  CardPayment,\n  CardPayment$inboundSchema,\n  CardPayment$Outbound,\n  CardPayment$outboundSchema,\n} from \"./cardpayment.js\";\nimport {\n  GenericPayment,\n  GenericPayment$inboundSchema,\n  GenericPayment$Outbound,\n  GenericPayment$outboundSchema,\n} from \"./genericpayment.js\";\n\nexport type Payment = GenericPayment | CardPayment;\n\n/** @internal */\nexport const Payment$inboundSchema: z.ZodType<Payment, z.ZodTypeDef, unknown> =\n  z.union([GenericPayment$inboundSchema, CardPayment$inboundSchema]);\n\n/** @internal */\nexport type Payment$Outbound = GenericPayment$Outbound | CardPayment$Outbound;\n\n/** @internal */\nexport const Payment$outboundSchema: z.ZodType<\n  Payment$Outbound,\n  z.ZodTypeDef,\n  Payment\n> = z.union([GenericPayment$outboundSchema, CardPayment$outboundSchema]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace Payment$ {\n  /** @deprecated use `Payment$inboundSchema` instead. */\n  export const inboundSchema = Payment$inboundSchema;\n  /** @deprecated use `Payment$outboundSchema` instead. */\n  export const outboundSchema = Payment$outboundSchema;\n  /** @deprecated use `Payment$Outbound` instead. */\n  export type Outbound = Payment$Outbound;\n}\n\nexport function paymentToJSON(payment: Payment): string {\n  return JSON.stringify(Payment$outboundSchema.parse(payment));\n}\n\nexport function paymentFromJSON(\n  jsonString: string,\n): SafeParseResult<Payment, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => Payment$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'Payment' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;AAGH,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,yBAAyB,EAEzB,0BAA0B,GAC3B,MAAM,kBAAkB,CAAC;AAC1B,OAAO,EAEL,4BAA4B,EAE5B,6BAA6B,GAC9B,MAAM,qBAAqB,CAAC;AAf7B,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;;;;AAoBlB,MAAM,qBAAqB,GAChC,CAAC,6IAAC,KAAK,CAAC;oMAAC,+BAA4B;iMAAE,4BAAyB;CAAC,CAAC,CAAC;AAM9D,MAAM,sBAAsB,GAI/B,CAAC,6IAAC,KAAK,CAAC;IAAC,gOAA6B;iMAAE,6BAA0B;CAAC,CAAC,CAAC;AAMnE,IAAW,QAAQ,CAOxB;AAPD,CAAA,SAAiB,QAAQ;IACvB,qDAAA,EAAuD,CAC1C,SAAA,aAAa,GAAG,qBAAqB,CAAC;IACnD,sDAAA,EAAwD,CAC3C,SAAA,cAAc,GAAG,sBAAsB,CAAC;AAGvD,CAAC,EAPgB,QAAQ,IAAA,CAAR,QAAQ,GAAA,CAAA,CAAA,GAOxB;AAEK,SAAU,aAAa,CAAC,OAAgB;IAC5C,OAAO,IAAI,CAAC,SAAS,CAAC,sBAAsB,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;AAC/D,CAAC;AAEK,SAAU,eAAe,CAC7B,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,oBAAsB,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACjD,CAAA,mCAAA,CAAqC,CACtC,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 28276, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 28282, "column": 0}, "map": {"version":3,"file":"listresource.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/listresource.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  Pagination,\n  Pagination$inboundSchema,\n  Pagination$Outbound,\n  Pagination$outboundSchema,\n} from \"./pagination.js\";\nimport {\n  Payment,\n  Payment$inboundSchema,\n  Payment$Outbound,\n  Payment$outboundSchema,\n} from \"./payment.js\";\n\nexport type ListResource = {\n  items: Array<Payment>;\n  pagination: Pagination;\n};\n\n/** @internal */\nexport const ListResource$inboundSchema: z.ZodType<\n  ListResource,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  items: z.array(Payment$inboundSchema),\n  pagination: Pagination$inboundSchema,\n});\n\n/** @internal */\nexport type ListResource$Outbound = {\n  items: Array<Payment$Outbound>;\n  pagination: Pagination$Outbound;\n};\n\n/** @internal */\nexport const ListResource$outboundSchema: z.ZodType<\n  ListResource$Outbound,\n  z.ZodTypeDef,\n  ListResource\n> = z.object({\n  items: z.array(Payment$outboundSchema),\n  pagination: Pagination$outboundSchema,\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace ListResource$ {\n  /** @deprecated use `ListResource$inboundSchema` instead. */\n  export const inboundSchema = ListResource$inboundSchema;\n  /** @deprecated use `ListResource$outboundSchema` instead. */\n  export const outboundSchema = ListResource$outboundSchema;\n  /** @deprecated use `ListResource$Outbound` instead. */\n  export type Outbound = ListResource$Outbound;\n}\n\nexport function listResourceToJSON(listResource: ListResource): string {\n  return JSON.stringify(ListResource$outboundSchema.parse(listResource));\n}\n\nexport function listResourceFromJSON(\n  jsonString: string,\n): SafeParseResult<ListResource, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => ListResource$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'ListResource' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;AAGH,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,wBAAwB,EAExB,yBAAyB,GAC1B,MAAM,iBAAiB,CAAC;AACzB,OAAO,EAEL,qBAAqB,EAErB,sBAAsB,GACvB,MAAM,cAAc,CAAC;AAftB,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;;;;AAuBlB,MAAM,0BAA0B,GAInC,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,KAAK,0LAAC,wBAAqB,CAAC;IACrC,UAAU,8LAAE,2BAAwB;CACrC,CAAC,CAAC;AASI,MAAM,2BAA2B,GAIpC,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,KAAK,0LAAC,yBAAsB,CAAC;IACtC,UAAU,8LAAE,4BAAyB;CACtC,CAAC,CAAC;AAMG,IAAW,aAAa,CAO7B;AAPD,CAAA,SAAiB,aAAa;IAC5B,0DAAA,EAA4D,CAC/C,cAAA,aAAa,GAAG,0BAA0B,CAAC;IACxD,2DAAA,EAA6D,CAChD,cAAA,cAAc,GAAG,2BAA2B,CAAC;AAG5D,CAAC,EAPgB,aAAa,IAAA,CAAb,aAAa,GAAA,CAAA,CAAA,GAO7B;AAEK,SAAU,kBAAkB,CAAC,YAA0B;IAC3D,OAAO,IAAI,CAAC,SAAS,CAAC,2BAA2B,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC;AACzE,CAAC;AAEK,SAAU,oBAAoB,CAClC,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,yBAA2B,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACtD,CAAA,wCAAA,CAA0C,CAC3C,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 28319, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 28325, "column": 0}, "map": {"version":3,"file":"paymentsortproperty.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/paymentsortproperty.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { ClosedEnum } from \"../../types/enums.js\";\n\nexport const PaymentSortProperty = {\n  CreatedAt: \"created_at\",\n  MinusCreatedAt: \"-created_at\",\n  Status: \"status\",\n  MinusStatus: \"-status\",\n  Amount: \"amount\",\n  MinusAmount: \"-amount\",\n  Method: \"method\",\n  MinusMethod: \"-method\",\n} as const;\nexport type PaymentSortProperty = ClosedEnum<typeof PaymentSortProperty>;\n\n/** @internal */\nexport const PaymentSortProperty$inboundSchema: z.ZodNativeEnum<\n  typeof PaymentSortProperty\n> = z.nativeEnum(PaymentSortProperty);\n\n/** @internal */\nexport const PaymentSortProperty$outboundSchema: z.ZodNativeEnum<\n  typeof PaymentSortProperty\n> = PaymentSortProperty$inboundSchema;\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace PaymentSortProperty$ {\n  /** @deprecated use `PaymentSortProperty$inboundSchema` instead. */\n  export const inboundSchema = PaymentSortProperty$inboundSchema;\n  /** @deprecated use `PaymentSortProperty$outboundSchema` instead. */\n  export const outboundSchema = PaymentSortProperty$outboundSchema;\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;AAGlB,MAAM,mBAAmB,GAAG;IACjC,SAAS,EAAE,YAAY;IACvB,cAAc,EAAE,aAAa;IAC7B,MAAM,EAAE,QAAQ;IAChB,WAAW,EAAE,SAAS;IACtB,MAAM,EAAE,QAAQ;IAChB,WAAW,EAAE,SAAS;IACtB,MAAM,EAAE,QAAQ;IAChB,WAAW,EAAE,SAAS;CACd,CAAC;AAIJ,MAAM,iCAAiC,GAE1C,CAAC,6IAAC,UAAU,CAAC,mBAAmB,CAAC,CAAC;AAG/B,MAAM,kCAAkC,GAE3C,iCAAiC,CAAC;AAMhC,IAAW,oBAAoB,CAKpC;AALD,CAAA,SAAiB,oBAAoB;IACnC,iEAAA,EAAmE,CACtD,qBAAA,aAAa,GAAG,iCAAiC,CAAC;IAC/D,kEAAA,EAAoE,CACvD,qBAAA,cAAc,GAAG,kCAAkC,CAAC;AACnE,CAAC,EALgB,oBAAoB,IAAA,CAApB,oBAAoB,GAAA,CAAA,CAAA,GAKpC","ignoreList":[0]}},
    {"offset": {"line": 28353, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 28359, "column": 0}, "map": {"version":3,"file":"product.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/product.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  AttachedCustomField,\n  AttachedCustomField$inboundSchema,\n  AttachedCustomField$Outbound,\n  AttachedCustomField$outboundSchema,\n} from \"./attachedcustomfield.js\";\nimport {\n  Benefit,\n  Benefit$inboundSchema,\n  Benefit$Outbound,\n  Benefit$outboundSchema,\n} from \"./benefit.js\";\nimport {\n  LegacyRecurringProductPrice,\n  LegacyRecurringProductPrice$inboundSchema,\n  LegacyRecurringProductPrice$Outbound,\n  LegacyRecurringProductPrice$outboundSchema,\n} from \"./legacyrecurringproductprice.js\";\nimport {\n  ProductMediaFileRead,\n  ProductMediaFileRead$inboundSchema,\n  ProductMediaFileRead$Outbound,\n  ProductMediaFileRead$outboundSchema,\n} from \"./productmediafileread.js\";\nimport {\n  ProductPrice,\n  ProductPrice$inboundSchema,\n  ProductPrice$Outbound,\n  ProductPrice$outboundSchema,\n} from \"./productprice.js\";\nimport {\n  SubscriptionRecurringInterval,\n  SubscriptionRecurringInterval$inboundSchema,\n  SubscriptionRecurringInterval$outboundSchema,\n} from \"./subscriptionrecurringinterval.js\";\n\nexport type ProductMetadata = string | number | number | boolean;\n\nexport type Prices = LegacyRecurringProductPrice | ProductPrice;\n\n/**\n * A product.\n */\nexport type Product = {\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  /**\n   * The ID of the product.\n   */\n  id: string;\n  /**\n   * The name of the product.\n   */\n  name: string;\n  /**\n   * The description of the product.\n   */\n  description: string | null;\n  /**\n   * The recurring interval of the product. If `None`, the product is a one-time purchase.\n   */\n  recurringInterval: SubscriptionRecurringInterval | null;\n  /**\n   * Whether the product is a subscription.\n   */\n  isRecurring: boolean;\n  /**\n   * Whether the product is archived and no longer available.\n   */\n  isArchived: boolean;\n  /**\n   * The ID of the organization owning the product.\n   */\n  organizationId: string;\n  metadata: { [k: string]: string | number | number | boolean };\n  /**\n   * List of prices for this product.\n   */\n  prices: Array<LegacyRecurringProductPrice | ProductPrice>;\n  /**\n   * List of benefits granted by the product.\n   */\n  benefits: Array<Benefit>;\n  /**\n   * List of medias associated to the product.\n   */\n  medias: Array<ProductMediaFileRead>;\n  /**\n   * List of custom fields attached to the product.\n   */\n  attachedCustomFields: Array<AttachedCustomField>;\n};\n\n/** @internal */\nexport const ProductMetadata$inboundSchema: z.ZodType<\n  ProductMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type ProductMetadata$Outbound = string | number | number | boolean;\n\n/** @internal */\nexport const ProductMetadata$outboundSchema: z.ZodType<\n  ProductMetadata$Outbound,\n  z.ZodTypeDef,\n  ProductMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace ProductMetadata$ {\n  /** @deprecated use `ProductMetadata$inboundSchema` instead. */\n  export const inboundSchema = ProductMetadata$inboundSchema;\n  /** @deprecated use `ProductMetadata$outboundSchema` instead. */\n  export const outboundSchema = ProductMetadata$outboundSchema;\n  /** @deprecated use `ProductMetadata$Outbound` instead. */\n  export type Outbound = ProductMetadata$Outbound;\n}\n\nexport function productMetadataToJSON(\n  productMetadata: ProductMetadata,\n): string {\n  return JSON.stringify(ProductMetadata$outboundSchema.parse(productMetadata));\n}\n\nexport function productMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<ProductMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => ProductMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'ProductMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const Prices$inboundSchema: z.ZodType<Prices, z.ZodTypeDef, unknown> = z\n  .union([\n    LegacyRecurringProductPrice$inboundSchema,\n    ProductPrice$inboundSchema,\n  ]);\n\n/** @internal */\nexport type Prices$Outbound =\n  | LegacyRecurringProductPrice$Outbound\n  | ProductPrice$Outbound;\n\n/** @internal */\nexport const Prices$outboundSchema: z.ZodType<\n  Prices$Outbound,\n  z.ZodTypeDef,\n  Prices\n> = z.union([\n  LegacyRecurringProductPrice$outboundSchema,\n  ProductPrice$outboundSchema,\n]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace Prices$ {\n  /** @deprecated use `Prices$inboundSchema` instead. */\n  export const inboundSchema = Prices$inboundSchema;\n  /** @deprecated use `Prices$outboundSchema` instead. */\n  export const outboundSchema = Prices$outboundSchema;\n  /** @deprecated use `Prices$Outbound` instead. */\n  export type Outbound = Prices$Outbound;\n}\n\nexport function pricesToJSON(prices: Prices): string {\n  return JSON.stringify(Prices$outboundSchema.parse(prices));\n}\n\nexport function pricesFromJSON(\n  jsonString: string,\n): SafeParseResult<Prices, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => Prices$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'Prices' from JSON`,\n  );\n}\n\n/** @internal */\nexport const Product$inboundSchema: z.ZodType<Product, z.ZodTypeDef, unknown> =\n  z.object({\n    created_at: z.string().datetime({ offset: true }).transform(v =>\n      new Date(v)\n    ),\n    modified_at: z.nullable(\n      z.string().datetime({ offset: true }).transform(v => new Date(v)),\n    ),\n    id: z.string(),\n    name: z.string(),\n    description: z.nullable(z.string()),\n    recurring_interval: z.nullable(SubscriptionRecurringInterval$inboundSchema),\n    is_recurring: z.boolean(),\n    is_archived: z.boolean(),\n    organization_id: z.string(),\n    metadata: z.record(\n      z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n    ),\n    prices: z.array(\n      z.union([\n        LegacyRecurringProductPrice$inboundSchema,\n        ProductPrice$inboundSchema,\n      ]),\n    ),\n    benefits: z.array(Benefit$inboundSchema),\n    medias: z.array(ProductMediaFileRead$inboundSchema),\n    attached_custom_fields: z.array(AttachedCustomField$inboundSchema),\n  }).transform((v) => {\n    return remap$(v, {\n      \"created_at\": \"createdAt\",\n      \"modified_at\": \"modifiedAt\",\n      \"recurring_interval\": \"recurringInterval\",\n      \"is_recurring\": \"isRecurring\",\n      \"is_archived\": \"isArchived\",\n      \"organization_id\": \"organizationId\",\n      \"attached_custom_fields\": \"attachedCustomFields\",\n    });\n  });\n\n/** @internal */\nexport type Product$Outbound = {\n  created_at: string;\n  modified_at: string | null;\n  id: string;\n  name: string;\n  description: string | null;\n  recurring_interval: string | null;\n  is_recurring: boolean;\n  is_archived: boolean;\n  organization_id: string;\n  metadata: { [k: string]: string | number | number | boolean };\n  prices: Array<LegacyRecurringProductPrice$Outbound | ProductPrice$Outbound>;\n  benefits: Array<Benefit$Outbound>;\n  medias: Array<ProductMediaFileRead$Outbound>;\n  attached_custom_fields: Array<AttachedCustomField$Outbound>;\n};\n\n/** @internal */\nexport const Product$outboundSchema: z.ZodType<\n  Product$Outbound,\n  z.ZodTypeDef,\n  Product\n> = z.object({\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  id: z.string(),\n  name: z.string(),\n  description: z.nullable(z.string()),\n  recurringInterval: z.nullable(SubscriptionRecurringInterval$outboundSchema),\n  isRecurring: z.boolean(),\n  isArchived: z.boolean(),\n  organizationId: z.string(),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  prices: z.array(\n    z.union([\n      LegacyRecurringProductPrice$outboundSchema,\n      ProductPrice$outboundSchema,\n    ]),\n  ),\n  benefits: z.array(Benefit$outboundSchema),\n  medias: z.array(ProductMediaFileRead$outboundSchema),\n  attachedCustomFields: z.array(AttachedCustomField$outboundSchema),\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    recurringInterval: \"recurring_interval\",\n    isRecurring: \"is_recurring\",\n    isArchived: \"is_archived\",\n    organizationId: \"organization_id\",\n    attachedCustomFields: \"attached_custom_fields\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace Product$ {\n  /** @deprecated use `Product$inboundSchema` instead. */\n  export const inboundSchema = Product$inboundSchema;\n  /** @deprecated use `Product$outboundSchema` instead. */\n  export const outboundSchema = Product$outboundSchema;\n  /** @deprecated use `Product$Outbound` instead. */\n  export type Outbound = Product$Outbound;\n}\n\nexport function productToJSON(product: Product): string {\n  return JSON.stringify(Product$outboundSchema.parse(product));\n}\n\nexport function productFromJSON(\n  jsonString: string,\n): SafeParseResult<Product, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => Product$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'Product' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;;;;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,iCAAiC,EAEjC,kCAAkC,GACnC,MAAM,0BAA0B,CAAC;AAClC,OAAO,EAEL,qBAAqB,EAErB,sBAAsB,GACvB,MAAM,cAAc,CAAC;AACtB,OAAO,EAEL,yCAAyC,EAEzC,0CAA0C,GAC3C,MAAM,kCAAkC,CAAC;AAC1C,OAAO,EAEL,kCAAkC,EAElC,mCAAmC,GACpC,MAAM,2BAA2B,CAAC;AACnC,OAAO,EAEL,0BAA0B,EAE1B,2BAA2B,GAC5B,MAAM,mBAAmB,CAAC;AAC3B,OAAO,EAEL,2CAA2C,EAC3C,4CAA4C,GAC7C,MAAM,oCAAoC,CAAC;;;;;;;;;;;AAkErC,MAAM,6BAA6B,GAItC,CAAC,6IAAC,KAAK,CAAC;IAAC,CAAC,6IAAC,MAAM,EAAE;IAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAAE,CAAC,6IAAC,MAAM,EAAE;IAAE,CAAC,6IAAC,OAAO,EAAE;CAAC,CAAC,CAAC;AAM9D,MAAM,8BAA8B,GAIvC,CAAC,6IAAC,KAAK,CAAC;IAAC,CAAC,6IAAC,MAAM,EAAE;IAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAAE,CAAC,6IAAC,MAAM,EAAE;IAAE,CAAC,6IAAC,OAAO,EAAE;CAAC,CAAC,CAAC;AAM/D,IAAW,gBAAgB,CAOhC;AAPD,CAAA,SAAiB,gBAAgB;IAC/B,6DAAA,EAA+D,CAClD,iBAAA,aAAa,GAAG,6BAA6B,CAAC;IAC3D,8DAAA,EAAgE,CACnD,iBAAA,cAAc,GAAG,8BAA8B,CAAC;AAG/D,CAAC,EAPgB,gBAAgB,IAAA,CAAhB,gBAAgB,GAAA,CAAA,CAAA,GAOhC;AAEK,SAAU,qBAAqB,CACnC,eAAgC;IAEhC,OAAO,IAAI,CAAC,SAAS,CAAC,8BAA8B,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,CAAC;AAC/E,CAAC;AAEK,SAAU,uBAAuB,CACrC,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,4BAA8B,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACzD,CAAA,2CAAA,CAA6C,CAC9C,CAAC;AACJ,CAAC;AAGM,MAAM,oBAAoB,GAA6C,CAAC,6IAC5E,KAAK,CAAC;iNACL,4CAAyC;kMACzC,6BAA0B;CAC3B,CAAC,CAAC;AAQE,MAAM,qBAAqB,GAI9B,CAAC,6IAAC,KAAK,CAAC;iNACV,6CAA0C;kMAC1C,8BAA2B;CAC5B,CAAC,CAAC;AAMG,IAAW,OAAO,CAOvB;AAPD,CAAA,SAAiB,OAAO;IACtB,oDAAA,EAAsD,CACzC,QAAA,aAAa,GAAG,oBAAoB,CAAC;IAClD,qDAAA,EAAuD,CAC1C,QAAA,cAAc,GAAG,qBAAqB,CAAC;AAGtD,CAAC,EAPgB,OAAO,IAAA,CAAP,OAAO,GAAA,CAAA,CAAA,GAOvB;AAEK,SAAU,YAAY,CAAC,MAAc;IACzC,OAAO,IAAI,CAAC,SAAS,CAAC,qBAAqB,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;AAC7D,CAAC;AAEK,SAAU,cAAc,CAC5B,UAAkB;IAElB,OAAO,wLAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,mBAAqB,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAChD,CAAA,kCAAA,CAAoC,CACrC,CAAC;AACJ,CAAC;AAGM,MAAM,qBAAqB,GAChC,CAAC,6IAAC,MAAM,CAAC;IACP,UAAU,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,CAAC;QAAE,MAAM,EAAE,IAAI;IAAA,CAAE,CAAC,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAC9D,IAAI,IAAI,CAAC,CAAC,CAAC,CACZ;IACD,WAAW,EAAE,CAAC,6IAAC,QAAQ,CACrB,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,CAAC;QAAE,MAAM,EAAE,IAAI;IAAA,CAAE,CAAC,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAClE;IACD,EAAE,EAAE,CAAC,6IAAC,MAAM,EAAE;IACd,IAAI,EAAE,CAAC,6IAAC,MAAM,EAAE;IAChB,WAAW,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;IACnC,kBAAkB,EAAE,CAAC,6IAAC,QAAQ,CAAC,6PAA2C,CAAC;IAC3E,YAAY,EAAE,CAAC,6IAAC,OAAO,EAAE;IACzB,WAAW,EAAE,CAAC,6IAAC,OAAO,EAAE;IACxB,eAAe,EAAE,CAAC,6IAAC,MAAM,EAAE;IAC3B,QAAQ,EAAE,CAAC,6IAAC,MAAM,CAChB,CAAC,6IAAC,KAAK,CAAC;QAAC,CAAC,6IAAC,MAAM,EAAE;QAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;QAAE,CAAC,6IAAC,MAAM,EAAE;QAAE,CAAC,6IAAC,OAAO,EAAE;KAAC,CAAC,CACjE;IACD,MAAM,EAAE,CAAC,6IAAC,KAAK,CACb,CAAC,6IAAC,KAAK,CAAC;qNACN,4CAAyC;sMACzC,6BAA0B;KAC3B,CAAC,CACH;IACD,QAAQ,EAAE,CAAC,6IAAC,KAAK,0LAAC,wBAAqB,CAAC;IACxC,MAAM,EAAE,CAAC,6IAAC,KAAK,sMAAC,sCAAkC,CAAC;IACnD,sBAAsB,EAAE,CAAC,6IAAC,KAAK,sMAAC,oCAAiC,CAAC;CACnE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAM,AAAN,EAAO,CAAC,EAAE;QACf,YAAY,EAAE,WAAW;QACzB,aAAa,EAAE,YAAY;QAC3B,oBAAoB,EAAE,mBAAmB;QACzC,cAAc,EAAE,aAAa;QAC7B,aAAa,EAAE,YAAY;QAC3B,iBAAiB,EAAE,gBAAgB;QACnC,wBAAwB,EAAE,sBAAsB;KACjD,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAqBE,MAAM,sBAAsB,GAI/B,CAAC,6IAAC,MAAM,CAAC;IACX,SAAS,EAAE,CAAC,6IAAC,IAAI,EAAE,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,WAAW,EAAE,CAAC;IACnD,UAAU,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,IAAI,EAAE,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;IAChE,EAAE,EAAE,CAAC,6IAAC,MAAM,EAAE;IACd,IAAI,EAAE,CAAC,6IAAC,MAAM,EAAE;IAChB,WAAW,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;IACnC,iBAAiB,EAAE,CAAC,6IAAC,QAAQ,gNAAC,+CAA4C,CAAC;IAC3E,WAAW,EAAE,CAAC,6IAAC,OAAO,EAAE;IACxB,UAAU,EAAE,CAAC,6IAAC,OAAO,EAAE;IACvB,cAAc,EAAE,CAAC,6IAAC,MAAM,EAAE;IAC1B,QAAQ,EAAE,CAAC,6IAAC,MAAM,CAChB,CAAC,6IAAC,KAAK,CAAC;QAAC,CAAC,6IAAC,MAAM,EAAE;QAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;QAAE,CAAC,6IAAC,MAAM,EAAE;QAAE,CAAC,6IAAC,OAAO,EAAE;KAAC,CAAC,CACjE;IACD,MAAM,EAAE,CAAC,6IAAC,KAAK,CACb,CAAC,6IAAC,KAAK,CAAC;qNACN,6CAA0C;sMAC1C,8BAA2B;KAC5B,CAAC,CACH;IACD,QAAQ,EAAE,CAAC,6IAAC,KAAK,0LAAC,yBAAsB,CAAC;IACzC,MAAM,EAAE,CAAC,6IAAC,KAAK,uMAAC,sCAAmC,CAAC;IACpD,oBAAoB,EAAE,CAAC,6IAAC,KAAK,qMAAC,sCAAkC,CAAC;CAClE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,SAAS,EAAE,YAAY;QACvB,UAAU,EAAE,aAAa;QACzB,iBAAiB,EAAE,oBAAoB;QACvC,WAAW,EAAE,cAAc;QAC3B,UAAU,EAAE,aAAa;QACzB,cAAc,EAAE,iBAAiB;QACjC,oBAAoB,EAAE,wBAAwB;KAC/C,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,QAAQ,CAOxB;AAPD,CAAA,SAAiB,QAAQ;IACvB,qDAAA,EAAuD,CAC1C,SAAA,aAAa,GAAG,qBAAqB,CAAC;IACnD,sDAAA,EAAwD,CAC3C,SAAA,cAAc,GAAG,sBAAsB,CAAC;AAGvD,CAAC,EAPgB,QAAQ,IAAA,CAAR,QAAQ,GAAA,CAAA,CAAA,GAOxB;AAEK,SAAU,aAAa,CAAC,OAAgB;IAC5C,OAAO,IAAI,CAAC,SAAS,CAAC,sBAAsB,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;AAC/D,CAAC;AAEK,SAAU,eAAe,CAC7B,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,oBAAsB,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACjD,CAAA,mCAAA,CAAqC,CACtC,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 28522, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 28528, "column": 0}, "map": {"version":3,"file":"attachedcustomfieldcreate.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/attachedcustomfieldcreate.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\n/**\n * Schema to attach a custom field to a resource.\n */\nexport type AttachedCustomFieldCreate = {\n  /**\n   * ID of the custom field to attach.\n   */\n  customFieldId: string;\n  /**\n   * Whether the value is required for this custom field.\n   */\n  required: boolean;\n};\n\n/** @internal */\nexport const AttachedCustomFieldCreate$inboundSchema: z.ZodType<\n  AttachedCustomFieldCreate,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  custom_field_id: z.string(),\n  required: z.boolean(),\n}).transform((v) => {\n  return remap$(v, {\n    \"custom_field_id\": \"customFieldId\",\n  });\n});\n\n/** @internal */\nexport type AttachedCustomFieldCreate$Outbound = {\n  custom_field_id: string;\n  required: boolean;\n};\n\n/** @internal */\nexport const AttachedCustomFieldCreate$outboundSchema: z.ZodType<\n  AttachedCustomFieldCreate$Outbound,\n  z.ZodTypeDef,\n  AttachedCustomFieldCreate\n> = z.object({\n  customFieldId: z.string(),\n  required: z.boolean(),\n}).transform((v) => {\n  return remap$(v, {\n    customFieldId: \"custom_field_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace AttachedCustomFieldCreate$ {\n  /** @deprecated use `AttachedCustomFieldCreate$inboundSchema` instead. */\n  export const inboundSchema = AttachedCustomFieldCreate$inboundSchema;\n  /** @deprecated use `AttachedCustomFieldCreate$outboundSchema` instead. */\n  export const outboundSchema = AttachedCustomFieldCreate$outboundSchema;\n  /** @deprecated use `AttachedCustomFieldCreate$Outbound` instead. */\n  export type Outbound = AttachedCustomFieldCreate$Outbound;\n}\n\nexport function attachedCustomFieldCreateToJSON(\n  attachedCustomFieldCreate: AttachedCustomFieldCreate,\n): string {\n  return JSON.stringify(\n    AttachedCustomFieldCreate$outboundSchema.parse(attachedCustomFieldCreate),\n  );\n}\n\nexport function attachedCustomFieldCreateFromJSON(\n  jsonString: string,\n): SafeParseResult<AttachedCustomFieldCreate, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => AttachedCustomFieldCreate$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'AttachedCustomFieldCreate' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;;;;;AAmB1C,MAAM,uCAAuC,GAIhD,CAAC,6IAAC,MAAM,CAAC;IACX,eAAe,EAAE,CAAC,6IAAC,MAAM,EAAE;IAC3B,QAAQ,EAAE,CAAC,6IAAC,OAAO,EAAE;CACtB,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,iBAAiB,EAAE,eAAe;KACnC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AASI,MAAM,wCAAwC,GAIjD,CAAC,6IAAC,MAAM,CAAC;IACX,aAAa,EAAE,CAAC,6IAAC,MAAM,EAAE;IACzB,QAAQ,EAAE,CAAC,6IAAC,OAAO,EAAE;CACtB,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,QAAO,sLAAA,AAAM,EAAC,CAAC,EAAE;QACf,aAAa,EAAE,iBAAiB;KACjC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,0BAA0B,CAO1C;AAPD,CAAA,SAAiB,0BAA0B;IACzC,uEAAA,EAAyE,CAC5D,2BAAA,aAAa,GAAG,uCAAuC,CAAC;IACrE,wEAAA,EAA0E,CAC7D,2BAAA,cAAc,GAAG,wCAAwC,CAAC;AAGzE,CAAC,EAPgB,0BAA0B,IAAA,CAA1B,0BAA0B,GAAA,CAAA,CAAA,GAO1C;AAEK,SAAU,+BAA+B,CAC7C,yBAAoD;IAEpD,OAAO,IAAI,CAAC,SAAS,CACnB,wCAAwC,CAAC,KAAK,CAAC,yBAAyB,CAAC,CAC1E,CAAC;AACJ,CAAC;AAEK,SAAU,iCAAiC,CAC/C,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,sCAAwC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACnE,CAAA,qDAAA,CAAuD,CACxD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 28571, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 28577, "column": 0}, "map": {"version":3,"file":"productpricecustomcreate.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/productpricecustomcreate.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\n/**\n * Schema to create a pay-what-you-want price.\n */\nexport type ProductPriceCustomCreate = {\n  amountType?: \"custom\" | undefined;\n  /**\n   * The currency. Currently, only `usd` is supported.\n   */\n  priceCurrency?: string | undefined;\n  /**\n   * The minimum amount the customer can pay.\n   */\n  minimumAmount?: number | null | undefined;\n  /**\n   * The maximum amount the customer can pay.\n   */\n  maximumAmount?: number | null | undefined;\n  /**\n   * The initial amount shown to the customer.\n   */\n  presetAmount?: number | null | undefined;\n};\n\n/** @internal */\nexport const ProductPriceCustomCreate$inboundSchema: z.ZodType<\n  ProductPriceCustomCreate,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  amount_type: z.literal(\"custom\").optional(),\n  price_currency: z.string().default(\"usd\"),\n  minimum_amount: z.nullable(z.number().int()).optional(),\n  maximum_amount: z.nullable(z.number().int()).optional(),\n  preset_amount: z.nullable(z.number().int()).optional(),\n}).transform((v) => {\n  return remap$(v, {\n    \"amount_type\": \"amountType\",\n    \"price_currency\": \"priceCurrency\",\n    \"minimum_amount\": \"minimumAmount\",\n    \"maximum_amount\": \"maximumAmount\",\n    \"preset_amount\": \"presetAmount\",\n  });\n});\n\n/** @internal */\nexport type ProductPriceCustomCreate$Outbound = {\n  amount_type: \"custom\";\n  price_currency: string;\n  minimum_amount?: number | null | undefined;\n  maximum_amount?: number | null | undefined;\n  preset_amount?: number | null | undefined;\n};\n\n/** @internal */\nexport const ProductPriceCustomCreate$outboundSchema: z.ZodType<\n  ProductPriceCustomCreate$Outbound,\n  z.ZodTypeDef,\n  ProductPriceCustomCreate\n> = z.object({\n  amountType: z.literal(\"custom\").default(\"custom\" as const),\n  priceCurrency: z.string().default(\"usd\"),\n  minimumAmount: z.nullable(z.number().int()).optional(),\n  maximumAmount: z.nullable(z.number().int()).optional(),\n  presetAmount: z.nullable(z.number().int()).optional(),\n}).transform((v) => {\n  return remap$(v, {\n    amountType: \"amount_type\",\n    priceCurrency: \"price_currency\",\n    minimumAmount: \"minimum_amount\",\n    maximumAmount: \"maximum_amount\",\n    presetAmount: \"preset_amount\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace ProductPriceCustomCreate$ {\n  /** @deprecated use `ProductPriceCustomCreate$inboundSchema` instead. */\n  export const inboundSchema = ProductPriceCustomCreate$inboundSchema;\n  /** @deprecated use `ProductPriceCustomCreate$outboundSchema` instead. */\n  export const outboundSchema = ProductPriceCustomCreate$outboundSchema;\n  /** @deprecated use `ProductPriceCustomCreate$Outbound` instead. */\n  export type Outbound = ProductPriceCustomCreate$Outbound;\n}\n\nexport function productPriceCustomCreateToJSON(\n  productPriceCustomCreate: ProductPriceCustomCreate,\n): string {\n  return JSON.stringify(\n    ProductPriceCustomCreate$outboundSchema.parse(productPriceCustomCreate),\n  );\n}\n\nexport function productPriceCustomCreateFromJSON(\n  jsonString: string,\n): SafeParseResult<ProductPriceCustomCreate, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => ProductPriceCustomCreate$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'ProductPriceCustomCreate' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 28634, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 28640, "column": 0}, "map": {"version":3,"file":"productpricefixedcreate.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/productpricefixedcreate.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\n/**\n * Schema to create a fixed price.\n */\nexport type ProductPriceFixedCreate = {\n  amountType?: \"fixed\" | undefined;\n  /**\n   * The price in cents.\n   */\n  priceAmount: number;\n  /**\n   * The currency. Currently, only `usd` is supported.\n   */\n  priceCurrency?: string | undefined;\n};\n\n/** @internal */\nexport const ProductPriceFixedCreate$inboundSchema: z.ZodType<\n  ProductPriceFixedCreate,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  amount_type: z.literal(\"fixed\").optional(),\n  price_amount: z.number().int(),\n  price_currency: z.string().default(\"usd\"),\n}).transform((v) => {\n  return remap$(v, {\n    \"amount_type\": \"amountType\",\n    \"price_amount\": \"priceAmount\",\n    \"price_currency\": \"priceCurrency\",\n  });\n});\n\n/** @internal */\nexport type ProductPriceFixedCreate$Outbound = {\n  amount_type: \"fixed\";\n  price_amount: number;\n  price_currency: string;\n};\n\n/** @internal */\nexport const ProductPriceFixedCreate$outboundSchema: z.ZodType<\n  ProductPriceFixedCreate$Outbound,\n  z.ZodTypeDef,\n  ProductPriceFixedCreate\n> = z.object({\n  amountType: z.literal(\"fixed\").default(\"fixed\" as const),\n  priceAmount: z.number().int(),\n  priceCurrency: z.string().default(\"usd\"),\n}).transform((v) => {\n  return remap$(v, {\n    amountType: \"amount_type\",\n    priceAmount: \"price_amount\",\n    priceCurrency: \"price_currency\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace ProductPriceFixedCreate$ {\n  /** @deprecated use `ProductPriceFixedCreate$inboundSchema` instead. */\n  export const inboundSchema = ProductPriceFixedCreate$inboundSchema;\n  /** @deprecated use `ProductPriceFixedCreate$outboundSchema` instead. */\n  export const outboundSchema = ProductPriceFixedCreate$outboundSchema;\n  /** @deprecated use `ProductPriceFixedCreate$Outbound` instead. */\n  export type Outbound = ProductPriceFixedCreate$Outbound;\n}\n\nexport function productPriceFixedCreateToJSON(\n  productPriceFixedCreate: ProductPriceFixedCreate,\n): string {\n  return JSON.stringify(\n    ProductPriceFixedCreate$outboundSchema.parse(productPriceFixedCreate),\n  );\n}\n\nexport function productPriceFixedCreateFromJSON(\n  jsonString: string,\n): SafeParseResult<ProductPriceFixedCreate, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => ProductPriceFixedCreate$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'ProductPriceFixedCreate' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;;;;;AAoB1C,MAAM,qCAAqC,GAI9C,CAAC,6IAAC,MAAM,CAAC;IACX,WAAW,EAAE,CAAC,6IAAC,OAAO,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE;IAC1C,YAAY,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAC9B,cAAc,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC;CAC1C,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,aAAa,EAAE,YAAY;QAC3B,cAAc,EAAE,aAAa;QAC7B,gBAAgB,EAAE,eAAe;KAClC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAUI,MAAM,sCAAsC,GAI/C,CAAC,6IAAC,MAAM,CAAC;IACX,UAAU,EAAE,CAAC,6IAAC,OAAO,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,OAAgB,CAAC;IACxD,WAAW,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAC7B,aAAa,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC;CACzC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,QAAO,sLAAA,AAAM,EAAC,CAAC,EAAE;QACf,UAAU,EAAE,aAAa;QACzB,WAAW,EAAE,cAAc;QAC3B,aAAa,EAAE,gBAAgB;KAChC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,wBAAwB,CAOxC;AAPD,CAAA,SAAiB,wBAAwB;IACvC,qEAAA,EAAuE,CAC1D,yBAAA,aAAa,GAAG,qCAAqC,CAAC;IACnE,sEAAA,EAAwE,CAC3D,yBAAA,cAAc,GAAG,sCAAsC,CAAC;AAGvE,CAAC,EAPgB,wBAAwB,IAAA,CAAxB,wBAAwB,GAAA,CAAA,CAAA,GAOxC;AAEK,SAAU,6BAA6B,CAC3C,uBAAgD;IAEhD,OAAO,IAAI,CAAC,SAAS,CACnB,sCAAsC,CAAC,KAAK,CAAC,uBAAuB,CAAC,CACtE,CAAC;AACJ,CAAC;AAEK,SAAU,+BAA+B,CAC7C,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,oCAAsC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACjE,CAAA,mDAAA,CAAqD,CACtD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 28689, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 28695, "column": 0}, "map": {"version":3,"file":"productpricefreecreate.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/productpricefreecreate.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\n/**\n * Schema to create a free price.\n */\nexport type ProductPriceFreeCreate = {\n  amountType?: \"free\" | undefined;\n};\n\n/** @internal */\nexport const ProductPriceFreeCreate$inboundSchema: z.ZodType<\n  ProductPriceFreeCreate,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  amount_type: z.literal(\"free\").optional(),\n}).transform((v) => {\n  return remap$(v, {\n    \"amount_type\": \"amountType\",\n  });\n});\n\n/** @internal */\nexport type ProductPriceFreeCreate$Outbound = {\n  amount_type: \"free\";\n};\n\n/** @internal */\nexport const ProductPriceFreeCreate$outboundSchema: z.ZodType<\n  ProductPriceFreeCreate$Outbound,\n  z.ZodTypeDef,\n  ProductPriceFreeCreate\n> = z.object({\n  amountType: z.literal(\"free\").default(\"free\" as const),\n}).transform((v) => {\n  return remap$(v, {\n    amountType: \"amount_type\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace ProductPriceFreeCreate$ {\n  /** @deprecated use `ProductPriceFreeCreate$inboundSchema` instead. */\n  export const inboundSchema = ProductPriceFreeCreate$inboundSchema;\n  /** @deprecated use `ProductPriceFreeCreate$outboundSchema` instead. */\n  export const outboundSchema = ProductPriceFreeCreate$outboundSchema;\n  /** @deprecated use `ProductPriceFreeCreate$Outbound` instead. */\n  export type Outbound = ProductPriceFreeCreate$Outbound;\n}\n\nexport function productPriceFreeCreateToJSON(\n  productPriceFreeCreate: ProductPriceFreeCreate,\n): string {\n  return JSON.stringify(\n    ProductPriceFreeCreate$outboundSchema.parse(productPriceFreeCreate),\n  );\n}\n\nexport function productPriceFreeCreateFromJSON(\n  jsonString: string,\n): SafeParseResult<ProductPriceFreeCreate, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => ProductPriceFreeCreate$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'ProductPriceFreeCreate' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;;;;;AAY1C,MAAM,oCAAoC,GAI7C,CAAC,6IAAC,MAAM,CAAC;IACX,WAAW,EAAE,CAAC,6IAAC,OAAO,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE;CAC1C,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,aAAa,EAAE,YAAY;KAC5B,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAQI,MAAM,qCAAqC,GAI9C,CAAC,6IAAC,MAAM,CAAC;IACX,UAAU,EAAE,CAAC,6IAAC,OAAO,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,MAAe,CAAC;CACvD,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,OAAO,uLAAA,AAAM,EAAC,CAAC,EAAE;QACf,UAAU,EAAE,aAAa;KAC1B,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,uBAAuB,CAOvC;AAPD,CAAA,SAAiB,uBAAuB;IACtC,oEAAA,EAAsE,CACzD,wBAAA,aAAa,GAAG,oCAAoC,CAAC;IAClE,qEAAA,EAAuE,CAC1D,wBAAA,cAAc,GAAG,qCAAqC,CAAC;AAGtE,CAAC,EAPgB,uBAAuB,IAAA,CAAvB,uBAAuB,GAAA,CAAA,CAAA,GAOvC;AAEK,SAAU,4BAA4B,CAC1C,sBAA8C;IAE9C,OAAO,IAAI,CAAC,SAAS,CACnB,qCAAqC,CAAC,KAAK,CAAC,sBAAsB,CAAC,CACpE,CAAC;AACJ,CAAC;AAEK,SAAU,8BAA8B,CAC5C,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,mCAAqC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAChE,CAAA,kDAAA,CAAoD,CACrD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 28736, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 28742, "column": 0}, "map": {"version":3,"file":"productpricemeteredunitcreate.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/productpricemeteredunitcreate.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\n/**\n * The price per unit in cents. Supports up to 12 decimal places.\n */\nexport type UnitAmount = number | string;\n\n/**\n * Schema to create a metered price with a fixed unit price.\n */\nexport type ProductPriceMeteredUnitCreate = {\n  amountType?: \"metered_unit\" | undefined;\n  /**\n   * The ID of the meter associated to the price.\n   */\n  meterId: string;\n  /**\n   * The currency. Currently, only `usd` is supported.\n   */\n  priceCurrency?: string | undefined;\n  /**\n   * The price per unit in cents. Supports up to 12 decimal places.\n   */\n  unitAmount: number | string;\n  /**\n   * Optional maximum amount in cents that can be charged, regardless of the number of units consumed.\n   */\n  capAmount?: number | null | undefined;\n};\n\n/** @internal */\nexport const UnitAmount$inboundSchema: z.ZodType<\n  UnitAmount,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.number(), z.string()]);\n\n/** @internal */\nexport type UnitAmount$Outbound = number | string;\n\n/** @internal */\nexport const UnitAmount$outboundSchema: z.ZodType<\n  UnitAmount$Outbound,\n  z.ZodTypeDef,\n  UnitAmount\n> = z.union([z.number(), z.string()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace UnitAmount$ {\n  /** @deprecated use `UnitAmount$inboundSchema` instead. */\n  export const inboundSchema = UnitAmount$inboundSchema;\n  /** @deprecated use `UnitAmount$outboundSchema` instead. */\n  export const outboundSchema = UnitAmount$outboundSchema;\n  /** @deprecated use `UnitAmount$Outbound` instead. */\n  export type Outbound = UnitAmount$Outbound;\n}\n\nexport function unitAmountToJSON(unitAmount: UnitAmount): string {\n  return JSON.stringify(UnitAmount$outboundSchema.parse(unitAmount));\n}\n\nexport function unitAmountFromJSON(\n  jsonString: string,\n): SafeParseResult<UnitAmount, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => UnitAmount$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'UnitAmount' from JSON`,\n  );\n}\n\n/** @internal */\nexport const ProductPriceMeteredUnitCreate$inboundSchema: z.ZodType<\n  ProductPriceMeteredUnitCreate,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  amount_type: z.literal(\"metered_unit\").optional(),\n  meter_id: z.string(),\n  price_currency: z.string().default(\"usd\"),\n  unit_amount: z.union([z.number(), z.string()]),\n  cap_amount: z.nullable(z.number().int()).optional(),\n}).transform((v) => {\n  return remap$(v, {\n    \"amount_type\": \"amountType\",\n    \"meter_id\": \"meterId\",\n    \"price_currency\": \"priceCurrency\",\n    \"unit_amount\": \"unitAmount\",\n    \"cap_amount\": \"capAmount\",\n  });\n});\n\n/** @internal */\nexport type ProductPriceMeteredUnitCreate$Outbound = {\n  amount_type: \"metered_unit\";\n  meter_id: string;\n  price_currency: string;\n  unit_amount: number | string;\n  cap_amount?: number | null | undefined;\n};\n\n/** @internal */\nexport const ProductPriceMeteredUnitCreate$outboundSchema: z.ZodType<\n  ProductPriceMeteredUnitCreate$Outbound,\n  z.ZodTypeDef,\n  ProductPriceMeteredUnitCreate\n> = z.object({\n  amountType: z.literal(\"metered_unit\").default(\"metered_unit\" as const),\n  meterId: z.string(),\n  priceCurrency: z.string().default(\"usd\"),\n  unitAmount: z.union([z.number(), z.string()]),\n  capAmount: z.nullable(z.number().int()).optional(),\n}).transform((v) => {\n  return remap$(v, {\n    amountType: \"amount_type\",\n    meterId: \"meter_id\",\n    priceCurrency: \"price_currency\",\n    unitAmount: \"unit_amount\",\n    capAmount: \"cap_amount\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace ProductPriceMeteredUnitCreate$ {\n  /** @deprecated use `ProductPriceMeteredUnitCreate$inboundSchema` instead. */\n  export const inboundSchema = ProductPriceMeteredUnitCreate$inboundSchema;\n  /** @deprecated use `ProductPriceMeteredUnitCreate$outboundSchema` instead. */\n  export const outboundSchema = ProductPriceMeteredUnitCreate$outboundSchema;\n  /** @deprecated use `ProductPriceMeteredUnitCreate$Outbound` instead. */\n  export type Outbound = ProductPriceMeteredUnitCreate$Outbound;\n}\n\nexport function productPriceMeteredUnitCreateToJSON(\n  productPriceMeteredUnitCreate: ProductPriceMeteredUnitCreate,\n): string {\n  return JSON.stringify(\n    ProductPriceMeteredUnitCreate$outboundSchema.parse(\n      productPriceMeteredUnitCreate,\n    ),\n  );\n}\n\nexport function productPriceMeteredUnitCreateFromJSON(\n  jsonString: string,\n): SafeParseResult<ProductPriceMeteredUnitCreate, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => ProductPriceMeteredUnitCreate$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'ProductPriceMeteredUnitCreate' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 28829, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 28835, "column": 0}, "map": {"version":3,"file":"productcreate.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/productcreate.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  AttachedCustomFieldCreate,\n  AttachedCustomFieldCreate$inboundSchema,\n  AttachedCustomFieldCreate$Outbound,\n  AttachedCustomFieldCreate$outboundSchema,\n} from \"./attachedcustomfieldcreate.js\";\nimport {\n  ProductPriceCustomCreate,\n  ProductPriceCustomCreate$inboundSchema,\n  ProductPriceCustomCreate$Outbound,\n  ProductPriceCustomCreate$outboundSchema,\n} from \"./productpricecustomcreate.js\";\nimport {\n  ProductPriceFixedCreate,\n  ProductPriceFixedCreate$inboundSchema,\n  ProductPriceFixedCreate$Outbound,\n  ProductPriceFixedCreate$outboundSchema,\n} from \"./productpricefixedcreate.js\";\nimport {\n  ProductPriceFreeCreate,\n  ProductPriceFreeCreate$inboundSchema,\n  ProductPriceFreeCreate$Outbound,\n  ProductPriceFreeCreate$outboundSchema,\n} from \"./productpricefreecreate.js\";\nimport {\n  ProductPriceMeteredUnitCreate,\n  ProductPriceMeteredUnitCreate$inboundSchema,\n  ProductPriceMeteredUnitCreate$Outbound,\n  ProductPriceMeteredUnitCreate$outboundSchema,\n} from \"./productpricemeteredunitcreate.js\";\nimport {\n  SubscriptionRecurringInterval,\n  SubscriptionRecurringInterval$inboundSchema,\n  SubscriptionRecurringInterval$outboundSchema,\n} from \"./subscriptionrecurringinterval.js\";\n\nexport type ProductCreateMetadata = string | number | number | boolean;\n\nexport type ProductCreatePrices =\n  | ProductPriceFreeCreate\n  | ProductPriceFixedCreate\n  | ProductPriceCustomCreate\n  | ProductPriceMeteredUnitCreate;\n\n/**\n * Schema to create a product.\n */\nexport type ProductCreate = {\n  /**\n   * Key-value object allowing you to store additional information.\n   *\n   * @remarks\n   *\n   * The key must be a string with a maximum length of **40 characters**.\n   * The value must be either:\n   *\n   * * A string with a maximum length of **500 characters**\n   * * An integer\n   * * A floating-point number\n   * * A boolean\n   *\n   * You can store up to **50 key-value pairs**.\n   */\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  /**\n   * The name of the product.\n   */\n  name: string;\n  /**\n   * The description of the product.\n   */\n  description?: string | null | undefined;\n  /**\n   * The recurring interval of the product. If `None`, the product is a one-time purchase.\n   */\n  recurringInterval: SubscriptionRecurringInterval | null;\n  /**\n   * List of available prices for this product. It should contain at most one static price (fixed, custom or free), and any number of metered prices. Metered prices are not supported on one-time purchase products.\n   */\n  prices: Array<\n    | ProductPriceFreeCreate\n    | ProductPriceFixedCreate\n    | ProductPriceCustomCreate\n    | ProductPriceMeteredUnitCreate\n  >;\n  /**\n   * List of file IDs. Each one must be on the same organization as the product, of type `product_media` and correctly uploaded.\n   */\n  medias?: Array<string> | null | undefined;\n  /**\n   * List of custom fields to attach.\n   */\n  attachedCustomFields?: Array<AttachedCustomFieldCreate> | undefined;\n  /**\n   * The ID of the organization owning the product. **Required unless you use an organization token.**\n   */\n  organizationId?: string | null | undefined;\n};\n\n/** @internal */\nexport const ProductCreateMetadata$inboundSchema: z.ZodType<\n  ProductCreateMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type ProductCreateMetadata$Outbound = string | number | number | boolean;\n\n/** @internal */\nexport const ProductCreateMetadata$outboundSchema: z.ZodType<\n  ProductCreateMetadata$Outbound,\n  z.ZodTypeDef,\n  ProductCreateMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace ProductCreateMetadata$ {\n  /** @deprecated use `ProductCreateMetadata$inboundSchema` instead. */\n  export const inboundSchema = ProductCreateMetadata$inboundSchema;\n  /** @deprecated use `ProductCreateMetadata$outboundSchema` instead. */\n  export const outboundSchema = ProductCreateMetadata$outboundSchema;\n  /** @deprecated use `ProductCreateMetadata$Outbound` instead. */\n  export type Outbound = ProductCreateMetadata$Outbound;\n}\n\nexport function productCreateMetadataToJSON(\n  productCreateMetadata: ProductCreateMetadata,\n): string {\n  return JSON.stringify(\n    ProductCreateMetadata$outboundSchema.parse(productCreateMetadata),\n  );\n}\n\nexport function productCreateMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<ProductCreateMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => ProductCreateMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'ProductCreateMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const ProductCreatePrices$inboundSchema: z.ZodType<\n  ProductCreatePrices,\n  z.ZodTypeDef,\n  unknown\n> = z.union([\n  ProductPriceFreeCreate$inboundSchema,\n  ProductPriceFixedCreate$inboundSchema,\n  ProductPriceCustomCreate$inboundSchema,\n  ProductPriceMeteredUnitCreate$inboundSchema,\n]);\n\n/** @internal */\nexport type ProductCreatePrices$Outbound =\n  | ProductPriceFreeCreate$Outbound\n  | ProductPriceFixedCreate$Outbound\n  | ProductPriceCustomCreate$Outbound\n  | ProductPriceMeteredUnitCreate$Outbound;\n\n/** @internal */\nexport const ProductCreatePrices$outboundSchema: z.ZodType<\n  ProductCreatePrices$Outbound,\n  z.ZodTypeDef,\n  ProductCreatePrices\n> = z.union([\n  ProductPriceFreeCreate$outboundSchema,\n  ProductPriceFixedCreate$outboundSchema,\n  ProductPriceCustomCreate$outboundSchema,\n  ProductPriceMeteredUnitCreate$outboundSchema,\n]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace ProductCreatePrices$ {\n  /** @deprecated use `ProductCreatePrices$inboundSchema` instead. */\n  export const inboundSchema = ProductCreatePrices$inboundSchema;\n  /** @deprecated use `ProductCreatePrices$outboundSchema` instead. */\n  export const outboundSchema = ProductCreatePrices$outboundSchema;\n  /** @deprecated use `ProductCreatePrices$Outbound` instead. */\n  export type Outbound = ProductCreatePrices$Outbound;\n}\n\nexport function productCreatePricesToJSON(\n  productCreatePrices: ProductCreatePrices,\n): string {\n  return JSON.stringify(\n    ProductCreatePrices$outboundSchema.parse(productCreatePrices),\n  );\n}\n\nexport function productCreatePricesFromJSON(\n  jsonString: string,\n): SafeParseResult<ProductCreatePrices, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => ProductCreatePrices$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'ProductCreatePrices' from JSON`,\n  );\n}\n\n/** @internal */\nexport const ProductCreate$inboundSchema: z.ZodType<\n  ProductCreate,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  name: z.string(),\n  description: z.nullable(z.string()).optional(),\n  recurring_interval: z.nullable(SubscriptionRecurringInterval$inboundSchema),\n  prices: z.array(\n    z.union([\n      ProductPriceFreeCreate$inboundSchema,\n      ProductPriceFixedCreate$inboundSchema,\n      ProductPriceCustomCreate$inboundSchema,\n      ProductPriceMeteredUnitCreate$inboundSchema,\n    ]),\n  ),\n  medias: z.nullable(z.array(z.string())).optional(),\n  attached_custom_fields: z.array(AttachedCustomFieldCreate$inboundSchema)\n    .optional(),\n  organization_id: z.nullable(z.string()).optional(),\n}).transform((v) => {\n  return remap$(v, {\n    \"recurring_interval\": \"recurringInterval\",\n    \"attached_custom_fields\": \"attachedCustomFields\",\n    \"organization_id\": \"organizationId\",\n  });\n});\n\n/** @internal */\nexport type ProductCreate$Outbound = {\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  name: string;\n  description?: string | null | undefined;\n  recurring_interval: string | null;\n  prices: Array<\n    | ProductPriceFreeCreate$Outbound\n    | ProductPriceFixedCreate$Outbound\n    | ProductPriceCustomCreate$Outbound\n    | ProductPriceMeteredUnitCreate$Outbound\n  >;\n  medias?: Array<string> | null | undefined;\n  attached_custom_fields?:\n    | Array<AttachedCustomFieldCreate$Outbound>\n    | undefined;\n  organization_id?: string | null | undefined;\n};\n\n/** @internal */\nexport const ProductCreate$outboundSchema: z.ZodType<\n  ProductCreate$Outbound,\n  z.ZodTypeDef,\n  ProductCreate\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  name: z.string(),\n  description: z.nullable(z.string()).optional(),\n  recurringInterval: z.nullable(SubscriptionRecurringInterval$outboundSchema),\n  prices: z.array(\n    z.union([\n      ProductPriceFreeCreate$outboundSchema,\n      ProductPriceFixedCreate$outboundSchema,\n      ProductPriceCustomCreate$outboundSchema,\n      ProductPriceMeteredUnitCreate$outboundSchema,\n    ]),\n  ),\n  medias: z.nullable(z.array(z.string())).optional(),\n  attachedCustomFields: z.array(AttachedCustomFieldCreate$outboundSchema)\n    .optional(),\n  organizationId: z.nullable(z.string()).optional(),\n}).transform((v) => {\n  return remap$(v, {\n    recurringInterval: \"recurring_interval\",\n    attachedCustomFields: \"attached_custom_fields\",\n    organizationId: \"organization_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace ProductCreate$ {\n  /** @deprecated use `ProductCreate$inboundSchema` instead. */\n  export const inboundSchema = ProductCreate$inboundSchema;\n  /** @deprecated use `ProductCreate$outboundSchema` instead. */\n  export const outboundSchema = ProductCreate$outboundSchema;\n  /** @deprecated use `ProductCreate$Outbound` instead. */\n  export type Outbound = ProductCreate$Outbound;\n}\n\nexport function productCreateToJSON(productCreate: ProductCreate): string {\n  return JSON.stringify(ProductCreate$outboundSchema.parse(productCreate));\n}\n\nexport function productCreateFromJSON(\n  jsonString: string,\n): SafeParseResult<ProductCreate, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => ProductCreate$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'ProductCreate' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 28982, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 28988, "column": 0}, "map": {"version":3,"file":"listresourceproduct.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/listresourceproduct.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  Pagination,\n  Pagination$inboundSchema,\n  Pagination$Outbound,\n  Pagination$outboundSchema,\n} from \"./pagination.js\";\nimport {\n  Product,\n  Product$inboundSchema,\n  Product$Outbound,\n  Product$outboundSchema,\n} from \"./product.js\";\n\nexport type ListResourceProduct = {\n  items: Array<Product>;\n  pagination: Pagination;\n};\n\n/** @internal */\nexport const ListResourceProduct$inboundSchema: z.ZodType<\n  ListResourceProduct,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  items: z.array(Product$inboundSchema),\n  pagination: Pagination$inboundSchema,\n});\n\n/** @internal */\nexport type ListResourceProduct$Outbound = {\n  items: Array<Product$Outbound>;\n  pagination: Pagination$Outbound;\n};\n\n/** @internal */\nexport const ListResourceProduct$outboundSchema: z.ZodType<\n  ListResourceProduct$Outbound,\n  z.ZodTypeDef,\n  ListResourceProduct\n> = z.object({\n  items: z.array(Product$outboundSchema),\n  pagination: Pagination$outboundSchema,\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace ListResourceProduct$ {\n  /** @deprecated use `ListResourceProduct$inboundSchema` instead. */\n  export const inboundSchema = ListResourceProduct$inboundSchema;\n  /** @deprecated use `ListResourceProduct$outboundSchema` instead. */\n  export const outboundSchema = ListResourceProduct$outboundSchema;\n  /** @deprecated use `ListResourceProduct$Outbound` instead. */\n  export type Outbound = ListResourceProduct$Outbound;\n}\n\nexport function listResourceProductToJSON(\n  listResourceProduct: ListResourceProduct,\n): string {\n  return JSON.stringify(\n    ListResourceProduct$outboundSchema.parse(listResourceProduct),\n  );\n}\n\nexport function listResourceProductFromJSON(\n  jsonString: string,\n): SafeParseResult<ListResourceProduct, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => ListResourceProduct$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'ListResourceProduct' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;AAGH,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,wBAAwB,EAExB,yBAAyB,GAC1B,MAAM,iBAAiB,CAAC;AACzB,OAAO,EAEL,qBAAqB,EAErB,sBAAsB,GACvB,MAAM,cAAc,CAAC;AAftB,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;;;;AAuBlB,MAAM,iCAAiC,GAI1C,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,KAAK,0LAAC,wBAAqB,CAAC;IACrC,UAAU,8LAAE,2BAAwB;CACrC,CAAC,CAAC;AASI,MAAM,kCAAkC,GAI3C,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,KAAK,0LAAC,yBAAsB,CAAC;IACtC,UAAU,8LAAE,4BAAyB;CACtC,CAAC,CAAC;AAMG,IAAW,oBAAoB,CAOpC;AAPD,CAAA,SAAiB,oBAAoB;IACnC,iEAAA,EAAmE,CACtD,qBAAA,aAAa,GAAG,iCAAiC,CAAC;IAC/D,kEAAA,EAAoE,CACvD,qBAAA,cAAc,GAAG,kCAAkC,CAAC;AAGnE,CAAC,EAPgB,oBAAoB,IAAA,CAApB,oBAAoB,GAAA,CAAA,CAAA,GAOpC;AAEK,SAAU,yBAAyB,CACvC,mBAAwC;IAExC,OAAO,IAAI,CAAC,SAAS,CACnB,kCAAkC,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAC9D,CAAC;AACJ,CAAC;AAEK,SAAU,2BAA2B,CACzC,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,gCAAkC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC7D,CAAA,+CAAA,CAAiD,CAClD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 29025, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 29031, "column": 0}, "map": {"version":3,"file":"productsortproperty.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/productsortproperty.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { ClosedEnum } from \"../../types/enums.js\";\n\nexport const ProductSortProperty = {\n  CreatedAt: \"created_at\",\n  MinusCreatedAt: \"-created_at\",\n  Name: \"name\",\n  MinusName: \"-name\",\n  PriceAmountType: \"price_amount_type\",\n  MinusPriceAmountType: \"-price_amount_type\",\n  PriceAmount: \"price_amount\",\n  MinusPriceAmount: \"-price_amount\",\n} as const;\nexport type ProductSortProperty = ClosedEnum<typeof ProductSortProperty>;\n\n/** @internal */\nexport const ProductSortProperty$inboundSchema: z.ZodNativeEnum<\n  typeof ProductSortProperty\n> = z.nativeEnum(ProductSortProperty);\n\n/** @internal */\nexport const ProductSortProperty$outboundSchema: z.ZodNativeEnum<\n  typeof ProductSortProperty\n> = ProductSortProperty$inboundSchema;\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace ProductSortProperty$ {\n  /** @deprecated use `ProductSortProperty$inboundSchema` instead. */\n  export const inboundSchema = ProductSortProperty$inboundSchema;\n  /** @deprecated use `ProductSortProperty$outboundSchema` instead. */\n  export const outboundSchema = ProductSortProperty$outboundSchema;\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;AAGlB,MAAM,mBAAmB,GAAG;IACjC,SAAS,EAAE,YAAY;IACvB,cAAc,EAAE,aAAa;IAC7B,IAAI,EAAE,MAAM;IACZ,SAAS,EAAE,OAAO;IAClB,eAAe,EAAE,mBAAmB;IACpC,oBAAoB,EAAE,oBAAoB;IAC1C,WAAW,EAAE,cAAc;IAC3B,gBAAgB,EAAE,eAAe;CACzB,CAAC;AAIJ,MAAM,iCAAiC,GAE1C,CAAC,6IAAC,UAAU,CAAC,mBAAmB,CAAC,CAAC;AAG/B,MAAM,kCAAkC,GAE3C,iCAAiC,CAAC;AAMhC,IAAW,oBAAoB,CAKpC;AALD,CAAA,SAAiB,oBAAoB;IACnC,iEAAA,EAAmE,CACtD,qBAAA,aAAa,GAAG,iCAAiC,CAAC;IAC/D,kEAAA,EAAoE,CACvD,qBAAA,cAAc,GAAG,kCAAkC,CAAC;AACnE,CAAC,EALgB,oBAAoB,IAAA,CAApB,oBAAoB,GAAA,CAAA,CAAA,GAKpC","ignoreList":[0]}},
    {"offset": {"line": 29059, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 29065, "column": 0}, "map": {"version":3,"file":"existingproductprice.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/existingproductprice.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\n/**\n * A price that already exists for this product.\n *\n * @remarks\n *\n * Useful when updating a product if you want to keep an existing price.\n */\nexport type ExistingProductPrice = {\n  id: string;\n};\n\n/** @internal */\nexport const ExistingProductPrice$inboundSchema: z.ZodType<\n  ExistingProductPrice,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  id: z.string(),\n});\n\n/** @internal */\nexport type ExistingProductPrice$Outbound = {\n  id: string;\n};\n\n/** @internal */\nexport const ExistingProductPrice$outboundSchema: z.ZodType<\n  ExistingProductPrice$Outbound,\n  z.ZodTypeDef,\n  ExistingProductPrice\n> = z.object({\n  id: z.string(),\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace ExistingProductPrice$ {\n  /** @deprecated use `ExistingProductPrice$inboundSchema` instead. */\n  export const inboundSchema = ExistingProductPrice$inboundSchema;\n  /** @deprecated use `ExistingProductPrice$outboundSchema` instead. */\n  export const outboundSchema = ExistingProductPrice$outboundSchema;\n  /** @deprecated use `ExistingProductPrice$Outbound` instead. */\n  export type Outbound = ExistingProductPrice$Outbound;\n}\n\nexport function existingProductPriceToJSON(\n  existingProductPrice: ExistingProductPrice,\n): string {\n  return JSON.stringify(\n    ExistingProductPrice$outboundSchema.parse(existingProductPrice),\n  );\n}\n\nexport function existingProductPriceFromJSON(\n  jsonString: string,\n): SafeParseResult<ExistingProductPrice, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => ExistingProductPrice$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'ExistingProductPrice' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;AAGH,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AADjD,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;;AAiBlB,MAAM,kCAAkC,GAI3C,CAAC,6IAAC,MAAM,CAAC;IACX,EAAE,EAAE,CAAC,6IAAC,MAAM,EAAE;CACf,CAAC,CAAC;AAQI,MAAM,mCAAmC,GAI5C,CAAC,6IAAC,MAAM,CAAC;IACX,EAAE,EAAE,CAAC,6IAAC,MAAM,EAAE;CACf,CAAC,CAAC;AAMG,IAAW,qBAAqB,CAOrC;AAPD,CAAA,SAAiB,qBAAqB;IACpC,kEAAA,EAAoE,CACvD,sBAAA,aAAa,GAAG,kCAAkC,CAAC;IAChE,mEAAA,EAAqE,CACxD,sBAAA,cAAc,GAAG,mCAAmC,CAAC;AAGpE,CAAC,EAPgB,qBAAqB,IAAA,CAArB,qBAAqB,GAAA,CAAA,CAAA,GAOrC;AAEK,SAAU,0BAA0B,CACxC,oBAA0C;IAE1C,OAAO,IAAI,CAAC,SAAS,CACnB,mCAAmC,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAChE,CAAC;AACJ,CAAC;AAEK,SAAU,4BAA4B,CAC1C,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,iCAAmC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC9D,CAAA,gDAAA,CAAkD,CACnD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 29096, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 29102, "column": 0}, "map": {"version":3,"file":"productupdate.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/productupdate.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  AttachedCustomFieldCreate,\n  AttachedCustomFieldCreate$inboundSchema,\n  AttachedCustomFieldCreate$Outbound,\n  AttachedCustomFieldCreate$outboundSchema,\n} from \"./attachedcustomfieldcreate.js\";\nimport {\n  ExistingProductPrice,\n  ExistingProductPrice$inboundSchema,\n  ExistingProductPrice$Outbound,\n  ExistingProductPrice$outboundSchema,\n} from \"./existingproductprice.js\";\nimport {\n  ProductPriceCustomCreate,\n  ProductPriceCustomCreate$inboundSchema,\n  ProductPriceCustomCreate$Outbound,\n  ProductPriceCustomCreate$outboundSchema,\n} from \"./productpricecustomcreate.js\";\nimport {\n  ProductPriceFixedCreate,\n  ProductPriceFixedCreate$inboundSchema,\n  ProductPriceFixedCreate$Outbound,\n  ProductPriceFixedCreate$outboundSchema,\n} from \"./productpricefixedcreate.js\";\nimport {\n  ProductPriceFreeCreate,\n  ProductPriceFreeCreate$inboundSchema,\n  ProductPriceFreeCreate$Outbound,\n  ProductPriceFreeCreate$outboundSchema,\n} from \"./productpricefreecreate.js\";\nimport {\n  ProductPriceMeteredUnitCreate,\n  ProductPriceMeteredUnitCreate$inboundSchema,\n  ProductPriceMeteredUnitCreate$Outbound,\n  ProductPriceMeteredUnitCreate$outboundSchema,\n} from \"./productpricemeteredunitcreate.js\";\nimport {\n  SubscriptionRecurringInterval,\n  SubscriptionRecurringInterval$inboundSchema,\n  SubscriptionRecurringInterval$outboundSchema,\n} from \"./subscriptionrecurringinterval.js\";\n\nexport type ProductUpdateMetadata = string | number | number | boolean;\n\nexport type ProductUpdatePrices =\n  | ExistingProductPrice\n  | ProductPriceFreeCreate\n  | ProductPriceFixedCreate\n  | ProductPriceCustomCreate\n  | ProductPriceMeteredUnitCreate;\n\n/**\n * Schema to update a product.\n */\nexport type ProductUpdate = {\n  /**\n   * Key-value object allowing you to store additional information.\n   *\n   * @remarks\n   *\n   * The key must be a string with a maximum length of **40 characters**.\n   * The value must be either:\n   *\n   * * A string with a maximum length of **500 characters**\n   * * An integer\n   * * A floating-point number\n   * * A boolean\n   *\n   * You can store up to **50 key-value pairs**.\n   */\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  name?: string | null | undefined;\n  /**\n   * The description of the product.\n   */\n  description?: string | null | undefined;\n  /**\n   * The recurring interval of the product. If `None`, the product is a one-time purchase. **Can only be set on legacy recurring products. Once set, it can't be changed.**\n   */\n  recurringInterval?: SubscriptionRecurringInterval | null | undefined;\n  /**\n   * Whether the product is archived. If `true`, the product won't be available for purchase anymore. Existing customers will still have access to their benefits, and subscriptions will continue normally.\n   */\n  isArchived?: boolean | null | undefined;\n  /**\n   * List of available prices for this product. If you want to keep existing prices, include them in the list as an `ExistingProductPrice` object.\n   */\n  prices?:\n    | Array<\n      | ExistingProductPrice\n      | ProductPriceFreeCreate\n      | ProductPriceFixedCreate\n      | ProductPriceCustomCreate\n      | ProductPriceMeteredUnitCreate\n    >\n    | null\n    | undefined;\n  /**\n   * List of file IDs. Each one must be on the same organization as the product, of type `product_media` and correctly uploaded.\n   */\n  medias?: Array<string> | null | undefined;\n  attachedCustomFields?: Array<AttachedCustomFieldCreate> | null | undefined;\n};\n\n/** @internal */\nexport const ProductUpdateMetadata$inboundSchema: z.ZodType<\n  ProductUpdateMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type ProductUpdateMetadata$Outbound = string | number | number | boolean;\n\n/** @internal */\nexport const ProductUpdateMetadata$outboundSchema: z.ZodType<\n  ProductUpdateMetadata$Outbound,\n  z.ZodTypeDef,\n  ProductUpdateMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace ProductUpdateMetadata$ {\n  /** @deprecated use `ProductUpdateMetadata$inboundSchema` instead. */\n  export const inboundSchema = ProductUpdateMetadata$inboundSchema;\n  /** @deprecated use `ProductUpdateMetadata$outboundSchema` instead. */\n  export const outboundSchema = ProductUpdateMetadata$outboundSchema;\n  /** @deprecated use `ProductUpdateMetadata$Outbound` instead. */\n  export type Outbound = ProductUpdateMetadata$Outbound;\n}\n\nexport function productUpdateMetadataToJSON(\n  productUpdateMetadata: ProductUpdateMetadata,\n): string {\n  return JSON.stringify(\n    ProductUpdateMetadata$outboundSchema.parse(productUpdateMetadata),\n  );\n}\n\nexport function productUpdateMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<ProductUpdateMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => ProductUpdateMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'ProductUpdateMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const ProductUpdatePrices$inboundSchema: z.ZodType<\n  ProductUpdatePrices,\n  z.ZodTypeDef,\n  unknown\n> = z.union([\n  ExistingProductPrice$inboundSchema,\n  ProductPriceFreeCreate$inboundSchema,\n  ProductPriceFixedCreate$inboundSchema,\n  ProductPriceCustomCreate$inboundSchema,\n  ProductPriceMeteredUnitCreate$inboundSchema,\n]);\n\n/** @internal */\nexport type ProductUpdatePrices$Outbound =\n  | ExistingProductPrice$Outbound\n  | ProductPriceFreeCreate$Outbound\n  | ProductPriceFixedCreate$Outbound\n  | ProductPriceCustomCreate$Outbound\n  | ProductPriceMeteredUnitCreate$Outbound;\n\n/** @internal */\nexport const ProductUpdatePrices$outboundSchema: z.ZodType<\n  ProductUpdatePrices$Outbound,\n  z.ZodTypeDef,\n  ProductUpdatePrices\n> = z.union([\n  ExistingProductPrice$outboundSchema,\n  ProductPriceFreeCreate$outboundSchema,\n  ProductPriceFixedCreate$outboundSchema,\n  ProductPriceCustomCreate$outboundSchema,\n  ProductPriceMeteredUnitCreate$outboundSchema,\n]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace ProductUpdatePrices$ {\n  /** @deprecated use `ProductUpdatePrices$inboundSchema` instead. */\n  export const inboundSchema = ProductUpdatePrices$inboundSchema;\n  /** @deprecated use `ProductUpdatePrices$outboundSchema` instead. */\n  export const outboundSchema = ProductUpdatePrices$outboundSchema;\n  /** @deprecated use `ProductUpdatePrices$Outbound` instead. */\n  export type Outbound = ProductUpdatePrices$Outbound;\n}\n\nexport function productUpdatePricesToJSON(\n  productUpdatePrices: ProductUpdatePrices,\n): string {\n  return JSON.stringify(\n    ProductUpdatePrices$outboundSchema.parse(productUpdatePrices),\n  );\n}\n\nexport function productUpdatePricesFromJSON(\n  jsonString: string,\n): SafeParseResult<ProductUpdatePrices, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => ProductUpdatePrices$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'ProductUpdatePrices' from JSON`,\n  );\n}\n\n/** @internal */\nexport const ProductUpdate$inboundSchema: z.ZodType<\n  ProductUpdate,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  name: z.nullable(z.string()).optional(),\n  description: z.nullable(z.string()).optional(),\n  recurring_interval: z.nullable(SubscriptionRecurringInterval$inboundSchema)\n    .optional(),\n  is_archived: z.nullable(z.boolean()).optional(),\n  prices: z.nullable(\n    z.array(\n      z.union([\n        ExistingProductPrice$inboundSchema,\n        ProductPriceFreeCreate$inboundSchema,\n        ProductPriceFixedCreate$inboundSchema,\n        ProductPriceCustomCreate$inboundSchema,\n        ProductPriceMeteredUnitCreate$inboundSchema,\n      ]),\n    ),\n  ).optional(),\n  medias: z.nullable(z.array(z.string())).optional(),\n  attached_custom_fields: z.nullable(\n    z.array(AttachedCustomFieldCreate$inboundSchema),\n  ).optional(),\n}).transform((v) => {\n  return remap$(v, {\n    \"recurring_interval\": \"recurringInterval\",\n    \"is_archived\": \"isArchived\",\n    \"attached_custom_fields\": \"attachedCustomFields\",\n  });\n});\n\n/** @internal */\nexport type ProductUpdate$Outbound = {\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  name?: string | null | undefined;\n  description?: string | null | undefined;\n  recurring_interval?: string | null | undefined;\n  is_archived?: boolean | null | undefined;\n  prices?:\n    | Array<\n      | ExistingProductPrice$Outbound\n      | ProductPriceFreeCreate$Outbound\n      | ProductPriceFixedCreate$Outbound\n      | ProductPriceCustomCreate$Outbound\n      | ProductPriceMeteredUnitCreate$Outbound\n    >\n    | null\n    | undefined;\n  medias?: Array<string> | null | undefined;\n  attached_custom_fields?:\n    | Array<AttachedCustomFieldCreate$Outbound>\n    | null\n    | undefined;\n};\n\n/** @internal */\nexport const ProductUpdate$outboundSchema: z.ZodType<\n  ProductUpdate$Outbound,\n  z.ZodTypeDef,\n  ProductUpdate\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  name: z.nullable(z.string()).optional(),\n  description: z.nullable(z.string()).optional(),\n  recurringInterval: z.nullable(SubscriptionRecurringInterval$outboundSchema)\n    .optional(),\n  isArchived: z.nullable(z.boolean()).optional(),\n  prices: z.nullable(\n    z.array(\n      z.union([\n        ExistingProductPrice$outboundSchema,\n        ProductPriceFreeCreate$outboundSchema,\n        ProductPriceFixedCreate$outboundSchema,\n        ProductPriceCustomCreate$outboundSchema,\n        ProductPriceMeteredUnitCreate$outboundSchema,\n      ]),\n    ),\n  ).optional(),\n  medias: z.nullable(z.array(z.string())).optional(),\n  attachedCustomFields: z.nullable(\n    z.array(AttachedCustomFieldCreate$outboundSchema),\n  ).optional(),\n}).transform((v) => {\n  return remap$(v, {\n    recurringInterval: \"recurring_interval\",\n    isArchived: \"is_archived\",\n    attachedCustomFields: \"attached_custom_fields\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace ProductUpdate$ {\n  /** @deprecated use `ProductUpdate$inboundSchema` instead. */\n  export const inboundSchema = ProductUpdate$inboundSchema;\n  /** @deprecated use `ProductUpdate$outboundSchema` instead. */\n  export const outboundSchema = ProductUpdate$outboundSchema;\n  /** @deprecated use `ProductUpdate$Outbound` instead. */\n  export type Outbound = ProductUpdate$Outbound;\n}\n\nexport function productUpdateToJSON(productUpdate: ProductUpdate): string {\n  return JSON.stringify(ProductUpdate$outboundSchema.parse(productUpdate));\n}\n\nexport function productUpdateFromJSON(\n  jsonString: string,\n): SafeParseResult<ProductUpdate, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => ProductUpdate$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'ProductUpdate' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 29255, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 29261, "column": 0}, "map": {"version":3,"file":"productbenefitsupdate.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/productbenefitsupdate.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\n/**\n * Schema to update the benefits granted by a product.\n */\nexport type ProductBenefitsUpdate = {\n  /**\n   * List of benefit IDs. Each one must be on the same organization as the product.\n   */\n  benefits: Array<string>;\n};\n\n/** @internal */\nexport const ProductBenefitsUpdate$inboundSchema: z.ZodType<\n  ProductBenefitsUpdate,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  benefits: z.array(z.string()),\n});\n\n/** @internal */\nexport type ProductBenefitsUpdate$Outbound = {\n  benefits: Array<string>;\n};\n\n/** @internal */\nexport const ProductBenefitsUpdate$outboundSchema: z.ZodType<\n  ProductBenefitsUpdate$Outbound,\n  z.ZodTypeDef,\n  ProductBenefitsUpdate\n> = z.object({\n  benefits: z.array(z.string()),\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace ProductBenefitsUpdate$ {\n  /** @deprecated use `ProductBenefitsUpdate$inboundSchema` instead. */\n  export const inboundSchema = ProductBenefitsUpdate$inboundSchema;\n  /** @deprecated use `ProductBenefitsUpdate$outboundSchema` instead. */\n  export const outboundSchema = ProductBenefitsUpdate$outboundSchema;\n  /** @deprecated use `ProductBenefitsUpdate$Outbound` instead. */\n  export type Outbound = ProductBenefitsUpdate$Outbound;\n}\n\nexport function productBenefitsUpdateToJSON(\n  productBenefitsUpdate: ProductBenefitsUpdate,\n): string {\n  return JSON.stringify(\n    ProductBenefitsUpdate$outboundSchema.parse(productBenefitsUpdate),\n  );\n}\n\nexport function productBenefitsUpdateFromJSON(\n  jsonString: string,\n): SafeParseResult<ProductBenefitsUpdate, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => ProductBenefitsUpdate$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'ProductBenefitsUpdate' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;AAGH,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AADjD,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;;AAgBlB,MAAM,mCAAmC,GAI5C,CAAC,6IAAC,MAAM,CAAC;IACX,QAAQ,EAAE,CAAC,6IAAC,KAAK,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;CAC9B,CAAC,CAAC;AAQI,MAAM,oCAAoC,GAI7C,CAAC,6IAAC,MAAM,CAAC;IACX,QAAQ,EAAE,CAAC,6IAAC,KAAK,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;CAC9B,CAAC,CAAC;AAMG,IAAW,sBAAsB,CAOtC;AAPD,CAAA,SAAiB,sBAAsB;IACrC,mEAAA,EAAqE,CACxD,uBAAA,aAAa,GAAG,mCAAmC,CAAC;IACjE,oEAAA,EAAsE,CACzD,uBAAA,cAAc,GAAG,oCAAoC,CAAC;AAGrE,CAAC,EAPgB,sBAAsB,IAAA,CAAtB,sBAAsB,GAAA,CAAA,CAAA,GAOtC;AAEK,SAAU,2BAA2B,CACzC,qBAA4C;IAE5C,OAAO,IAAI,CAAC,SAAS,CACnB,oCAAoC,CAAC,KAAK,CAAC,qBAAqB,CAAC,CAClE,CAAC;AACJ,CAAC;AAEK,SAAU,6BAA6B,CAC3C,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,kCAAoC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC/D,CAAA,iDAAA,CAAmD,CACpD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 29292, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 29298, "column": 0}, "map": {"version":3,"file":"refundreason.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/refundreason.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { ClosedEnum } from \"../../types/enums.js\";\n\nexport const RefundReason = {\n  Duplicate: \"duplicate\",\n  Fraudulent: \"fraudulent\",\n  CustomerRequest: \"customer_request\",\n  ServiceDisruption: \"service_disruption\",\n  SatisfactionGuarantee: \"satisfaction_guarantee\",\n  Other: \"other\",\n} as const;\nexport type RefundReason = ClosedEnum<typeof RefundReason>;\n\n/** @internal */\nexport const RefundReason$inboundSchema: z.ZodNativeEnum<typeof RefundReason> =\n  z.nativeEnum(RefundReason);\n\n/** @internal */\nexport const RefundReason$outboundSchema: z.ZodNativeEnum<typeof RefundReason> =\n  RefundReason$inboundSchema;\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace RefundReason$ {\n  /** @deprecated use `RefundReason$inboundSchema` instead. */\n  export const inboundSchema = RefundReason$inboundSchema;\n  /** @deprecated use `RefundReason$outboundSchema` instead. */\n  export const outboundSchema = RefundReason$outboundSchema;\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;AAGlB,MAAM,YAAY,GAAG;IAC1B,SAAS,EAAE,WAAW;IACtB,UAAU,EAAE,YAAY;IACxB,eAAe,EAAE,kBAAkB;IACnC,iBAAiB,EAAE,oBAAoB;IACvC,qBAAqB,EAAE,wBAAwB;IAC/C,KAAK,EAAE,OAAO;CACN,CAAC;AAIJ,MAAM,0BAA0B,GACrC,CAAC,6IAAC,UAAU,CAAC,YAAY,CAAC,CAAC;AAGtB,MAAM,2BAA2B,GACtC,0BAA0B,CAAC;AAMvB,IAAW,aAAa,CAK7B;AALD,CAAA,SAAiB,aAAa;IAC5B,0DAAA,EAA4D,CAC/C,cAAA,aAAa,GAAG,0BAA0B,CAAC;IACxD,2DAAA,EAA6D,CAChD,cAAA,cAAc,GAAG,2BAA2B,CAAC;AAC5D,CAAC,EALgB,aAAa,IAAA,CAAb,aAAa,GAAA,CAAA,CAAA,GAK7B","ignoreList":[0]}},
    {"offset": {"line": 29324, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 29330, "column": 0}, "map": {"version":3,"file":"refundstatus.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/refundstatus.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { ClosedEnum } from \"../../types/enums.js\";\n\nexport const RefundStatus = {\n  Pending: \"pending\",\n  Succeeded: \"succeeded\",\n  Failed: \"failed\",\n  Canceled: \"canceled\",\n} as const;\nexport type RefundStatus = ClosedEnum<typeof RefundStatus>;\n\n/** @internal */\nexport const RefundStatus$inboundSchema: z.ZodNativeEnum<typeof RefundStatus> =\n  z.nativeEnum(RefundStatus);\n\n/** @internal */\nexport const RefundStatus$outboundSchema: z.ZodNativeEnum<typeof RefundStatus> =\n  RefundStatus$inboundSchema;\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace RefundStatus$ {\n  /** @deprecated use `RefundStatus$inboundSchema` instead. */\n  export const inboundSchema = RefundStatus$inboundSchema;\n  /** @deprecated use `RefundStatus$outboundSchema` instead. */\n  export const outboundSchema = RefundStatus$outboundSchema;\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;AAGlB,MAAM,YAAY,GAAG;IAC1B,OAAO,EAAE,SAAS;IAClB,SAAS,EAAE,WAAW;IACtB,MAAM,EAAE,QAAQ;IAChB,QAAQ,EAAE,UAAU;CACZ,CAAC;AAIJ,MAAM,0BAA0B,GACrC,CAAC,6IAAC,UAAU,CAAC,YAAY,CAAC,CAAC;AAGtB,MAAM,2BAA2B,GACtC,0BAA0B,CAAC;AAMvB,IAAW,aAAa,CAK7B;AALD,CAAA,SAAiB,aAAa;IAC5B,0DAAA,EAA4D,CAC/C,cAAA,aAAa,GAAG,0BAA0B,CAAC;IACxD,2DAAA,EAA6D,CAChD,cAAA,cAAc,GAAG,2BAA2B,CAAC;AAC5D,CAAC,EALgB,aAAa,IAAA,CAAb,aAAa,GAAA,CAAA,CAAA,GAK7B","ignoreList":[0]}},
    {"offset": {"line": 29354, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 29360, "column": 0}, "map": {"version":3,"file":"refund.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/refund.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  RefundReason,\n  RefundReason$inboundSchema,\n  RefundReason$outboundSchema,\n} from \"./refundreason.js\";\nimport {\n  RefundStatus,\n  RefundStatus$inboundSchema,\n  RefundStatus$outboundSchema,\n} from \"./refundstatus.js\";\n\nexport type RefundMetadata = string | number | number | boolean;\n\nexport type Refund = {\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  /**\n   * The ID of the object.\n   */\n  id: string;\n  metadata: { [k: string]: string | number | number | boolean };\n  status: RefundStatus;\n  reason: RefundReason;\n  amount: number;\n  taxAmount: number;\n  currency: string;\n  organizationId: string;\n  orderId: string;\n  subscriptionId: string | null;\n  customerId: string;\n  revokeBenefits: boolean;\n};\n\n/** @internal */\nexport const RefundMetadata$inboundSchema: z.ZodType<\n  RefundMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type RefundMetadata$Outbound = string | number | number | boolean;\n\n/** @internal */\nexport const RefundMetadata$outboundSchema: z.ZodType<\n  RefundMetadata$Outbound,\n  z.ZodTypeDef,\n  RefundMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace RefundMetadata$ {\n  /** @deprecated use `RefundMetadata$inboundSchema` instead. */\n  export const inboundSchema = RefundMetadata$inboundSchema;\n  /** @deprecated use `RefundMetadata$outboundSchema` instead. */\n  export const outboundSchema = RefundMetadata$outboundSchema;\n  /** @deprecated use `RefundMetadata$Outbound` instead. */\n  export type Outbound = RefundMetadata$Outbound;\n}\n\nexport function refundMetadataToJSON(refundMetadata: RefundMetadata): string {\n  return JSON.stringify(RefundMetadata$outboundSchema.parse(refundMetadata));\n}\n\nexport function refundMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<RefundMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => RefundMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'RefundMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const Refund$inboundSchema: z.ZodType<Refund, z.ZodTypeDef, unknown> = z\n  .object({\n    created_at: z.string().datetime({ offset: true }).transform(v =>\n      new Date(v)\n    ),\n    modified_at: z.nullable(\n      z.string().datetime({ offset: true }).transform(v => new Date(v)),\n    ),\n    id: z.string(),\n    metadata: z.record(\n      z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n    ),\n    status: RefundStatus$inboundSchema,\n    reason: RefundReason$inboundSchema,\n    amount: z.number().int(),\n    tax_amount: z.number().int(),\n    currency: z.string(),\n    organization_id: z.string(),\n    order_id: z.string(),\n    subscription_id: z.nullable(z.string()),\n    customer_id: z.string(),\n    revoke_benefits: z.boolean(),\n  }).transform((v) => {\n    return remap$(v, {\n      \"created_at\": \"createdAt\",\n      \"modified_at\": \"modifiedAt\",\n      \"tax_amount\": \"taxAmount\",\n      \"organization_id\": \"organizationId\",\n      \"order_id\": \"orderId\",\n      \"subscription_id\": \"subscriptionId\",\n      \"customer_id\": \"customerId\",\n      \"revoke_benefits\": \"revokeBenefits\",\n    });\n  });\n\n/** @internal */\nexport type Refund$Outbound = {\n  created_at: string;\n  modified_at: string | null;\n  id: string;\n  metadata: { [k: string]: string | number | number | boolean };\n  status: string;\n  reason: string;\n  amount: number;\n  tax_amount: number;\n  currency: string;\n  organization_id: string;\n  order_id: string;\n  subscription_id: string | null;\n  customer_id: string;\n  revoke_benefits: boolean;\n};\n\n/** @internal */\nexport const Refund$outboundSchema: z.ZodType<\n  Refund$Outbound,\n  z.ZodTypeDef,\n  Refund\n> = z.object({\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  id: z.string(),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  status: RefundStatus$outboundSchema,\n  reason: RefundReason$outboundSchema,\n  amount: z.number().int(),\n  taxAmount: z.number().int(),\n  currency: z.string(),\n  organizationId: z.string(),\n  orderId: z.string(),\n  subscriptionId: z.nullable(z.string()),\n  customerId: z.string(),\n  revokeBenefits: z.boolean(),\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    taxAmount: \"tax_amount\",\n    organizationId: \"organization_id\",\n    orderId: \"order_id\",\n    subscriptionId: \"subscription_id\",\n    customerId: \"customer_id\",\n    revokeBenefits: \"revoke_benefits\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace Refund$ {\n  /** @deprecated use `Refund$inboundSchema` instead. */\n  export const inboundSchema = Refund$inboundSchema;\n  /** @deprecated use `Refund$outboundSchema` instead. */\n  export const outboundSchema = Refund$outboundSchema;\n  /** @deprecated use `Refund$Outbound` instead. */\n  export type Outbound = Refund$Outbound;\n}\n\nexport function refundToJSON(refund: Refund): string {\n  return JSON.stringify(Refund$outboundSchema.parse(refund));\n}\n\nexport function refundFromJSON(\n  jsonString: string,\n): SafeParseResult<Refund, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => Refund$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'Refund' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 29487, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 29493, "column": 0}, "map": {"version":3,"file":"refundcreate.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/refundcreate.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  RefundReason,\n  RefundReason$inboundSchema,\n  RefundReason$outboundSchema,\n} from \"./refundreason.js\";\n\nexport type RefundCreateMetadata = string | number | number | boolean;\n\nexport type RefundCreate = {\n  /**\n   * Key-value object allowing you to store additional information.\n   *\n   * @remarks\n   *\n   * The key must be a string with a maximum length of **40 characters**.\n   * The value must be either:\n   *\n   * * A string with a maximum length of **500 characters**\n   * * An integer\n   * * A floating-point number\n   * * A boolean\n   *\n   * You can store up to **50 key-value pairs**.\n   */\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  orderId: string;\n  reason: RefundReason;\n  /**\n   * Amount to refund in cents. Minimum is 1.\n   */\n  amount: number;\n  /**\n   * An internal comment about the refund.\n   */\n  comment?: string | null | undefined;\n  /**\n   * Should this refund trigger the associated customer benefits to be revoked?\n   *\n   * @remarks\n   *\n   * **Note:**\n   * Only allowed in case the `order` is a one-time purchase.\n   * Subscriptions automatically revoke customer benefits once the\n   * subscription itself is revoked, i.e fully canceled.\n   */\n  revokeBenefits?: boolean | undefined;\n};\n\n/** @internal */\nexport const RefundCreateMetadata$inboundSchema: z.ZodType<\n  RefundCreateMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type RefundCreateMetadata$Outbound = string | number | number | boolean;\n\n/** @internal */\nexport const RefundCreateMetadata$outboundSchema: z.ZodType<\n  RefundCreateMetadata$Outbound,\n  z.ZodTypeDef,\n  RefundCreateMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace RefundCreateMetadata$ {\n  /** @deprecated use `RefundCreateMetadata$inboundSchema` instead. */\n  export const inboundSchema = RefundCreateMetadata$inboundSchema;\n  /** @deprecated use `RefundCreateMetadata$outboundSchema` instead. */\n  export const outboundSchema = RefundCreateMetadata$outboundSchema;\n  /** @deprecated use `RefundCreateMetadata$Outbound` instead. */\n  export type Outbound = RefundCreateMetadata$Outbound;\n}\n\nexport function refundCreateMetadataToJSON(\n  refundCreateMetadata: RefundCreateMetadata,\n): string {\n  return JSON.stringify(\n    RefundCreateMetadata$outboundSchema.parse(refundCreateMetadata),\n  );\n}\n\nexport function refundCreateMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<RefundCreateMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => RefundCreateMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'RefundCreateMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const RefundCreate$inboundSchema: z.ZodType<\n  RefundCreate,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  order_id: z.string(),\n  reason: RefundReason$inboundSchema,\n  amount: z.number().int(),\n  comment: z.nullable(z.string()).optional(),\n  revoke_benefits: z.boolean().default(false),\n}).transform((v) => {\n  return remap$(v, {\n    \"order_id\": \"orderId\",\n    \"revoke_benefits\": \"revokeBenefits\",\n  });\n});\n\n/** @internal */\nexport type RefundCreate$Outbound = {\n  metadata?: { [k: string]: string | number | number | boolean } | undefined;\n  order_id: string;\n  reason: string;\n  amount: number;\n  comment?: string | null | undefined;\n  revoke_benefits: boolean;\n};\n\n/** @internal */\nexport const RefundCreate$outboundSchema: z.ZodType<\n  RefundCreate$Outbound,\n  z.ZodTypeDef,\n  RefundCreate\n> = z.object({\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ).optional(),\n  orderId: z.string(),\n  reason: RefundReason$outboundSchema,\n  amount: z.number().int(),\n  comment: z.nullable(z.string()).optional(),\n  revokeBenefits: z.boolean().default(false),\n}).transform((v) => {\n  return remap$(v, {\n    orderId: \"order_id\",\n    revokeBenefits: \"revoke_benefits\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace RefundCreate$ {\n  /** @deprecated use `RefundCreate$inboundSchema` instead. */\n  export const inboundSchema = RefundCreate$inboundSchema;\n  /** @deprecated use `RefundCreate$outboundSchema` instead. */\n  export const outboundSchema = RefundCreate$outboundSchema;\n  /** @deprecated use `RefundCreate$Outbound` instead. */\n  export type Outbound = RefundCreate$Outbound;\n}\n\nexport function refundCreateToJSON(refundCreate: RefundCreate): string {\n  return JSON.stringify(RefundCreate$outboundSchema.parse(refundCreate));\n}\n\nexport function refundCreateFromJSON(\n  jsonString: string,\n): SafeParseResult<RefundCreate, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => RefundCreate$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'RefundCreate' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 29586, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 29592, "column": 0}, "map": {"version":3,"file":"listresourcerefund.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/listresourcerefund.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  Pagination,\n  Pagination$inboundSchema,\n  Pagination$Outbound,\n  Pagination$outboundSchema,\n} from \"./pagination.js\";\nimport {\n  Refund,\n  Refund$inboundSchema,\n  Refund$Outbound,\n  Refund$outboundSchema,\n} from \"./refund.js\";\n\nexport type ListResourceRefund = {\n  items: Array<Refund>;\n  pagination: Pagination;\n};\n\n/** @internal */\nexport const ListResourceRefund$inboundSchema: z.ZodType<\n  ListResourceRefund,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  items: z.array(Refund$inboundSchema),\n  pagination: Pagination$inboundSchema,\n});\n\n/** @internal */\nexport type ListResourceRefund$Outbound = {\n  items: Array<Refund$Outbound>;\n  pagination: Pagination$Outbound;\n};\n\n/** @internal */\nexport const ListResourceRefund$outboundSchema: z.ZodType<\n  ListResourceRefund$Outbound,\n  z.ZodTypeDef,\n  ListResourceRefund\n> = z.object({\n  items: z.array(Refund$outboundSchema),\n  pagination: Pagination$outboundSchema,\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace ListResourceRefund$ {\n  /** @deprecated use `ListResourceRefund$inboundSchema` instead. */\n  export const inboundSchema = ListResourceRefund$inboundSchema;\n  /** @deprecated use `ListResourceRefund$outboundSchema` instead. */\n  export const outboundSchema = ListResourceRefund$outboundSchema;\n  /** @deprecated use `ListResourceRefund$Outbound` instead. */\n  export type Outbound = ListResourceRefund$Outbound;\n}\n\nexport function listResourceRefundToJSON(\n  listResourceRefund: ListResourceRefund,\n): string {\n  return JSON.stringify(\n    ListResourceRefund$outboundSchema.parse(listResourceRefund),\n  );\n}\n\nexport function listResourceRefundFromJSON(\n  jsonString: string,\n): SafeParseResult<ListResourceRefund, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => ListResourceRefund$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'ListResourceRefund' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;AAGH,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,wBAAwB,EAExB,yBAAyB,GAC1B,MAAM,iBAAiB,CAAC;AACzB,OAAO,EAEL,oBAAoB,EAEpB,qBAAqB,GACtB,MAAM,aAAa,CAAC;AAfrB,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;;;;AAuBlB,MAAM,gCAAgC,GAIzC,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,KAAK,yLAAC,uBAAoB,CAAC;IACpC,UAAU,8LAAE,2BAAwB;CACrC,CAAC,CAAC;AASI,MAAM,iCAAiC,GAI1C,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,KAAK,yLAAC,wBAAqB,CAAC;IACrC,UAAU,8LAAE,4BAAyB;CACtC,CAAC,CAAC;AAMG,IAAW,mBAAmB,CAOnC;AAPD,CAAA,SAAiB,mBAAmB;IAClC,gEAAA,EAAkE,CACrD,oBAAA,aAAa,GAAG,gCAAgC,CAAC;IAC9D,iEAAA,EAAmE,CACtD,oBAAA,cAAc,GAAG,iCAAiC,CAAC;AAGlE,CAAC,EAPgB,mBAAmB,IAAA,CAAnB,mBAAmB,GAAA,CAAA,CAAA,GAOnC;AAEK,SAAU,wBAAwB,CACtC,kBAAsC;IAEtC,OAAO,IAAI,CAAC,SAAS,CACnB,iCAAiC,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAC5D,CAAC;AACJ,CAAC;AAEK,SAAU,0BAA0B,CACxC,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,+BAAiC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC5D,CAAA,8CAAA,CAAgD,CACjD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 29629, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 29635, "column": 0}, "map": {"version":3,"file":"refundsortproperty.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/refundsortproperty.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { ClosedEnum } from \"../../types/enums.js\";\n\nexport const RefundSortProperty = {\n  CreatedAt: \"created_at\",\n  MinusCreatedAt: \"-created_at\",\n  Amount: \"amount\",\n  MinusAmount: \"-amount\",\n} as const;\nexport type RefundSortProperty = ClosedEnum<typeof RefundSortProperty>;\n\n/** @internal */\nexport const RefundSortProperty$inboundSchema: z.ZodNativeEnum<\n  typeof RefundSortProperty\n> = z.nativeEnum(RefundSortProperty);\n\n/** @internal */\nexport const RefundSortProperty$outboundSchema: z.ZodNativeEnum<\n  typeof RefundSortProperty\n> = RefundSortProperty$inboundSchema;\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace RefundSortProperty$ {\n  /** @deprecated use `RefundSortProperty$inboundSchema` instead. */\n  export const inboundSchema = RefundSortProperty$inboundSchema;\n  /** @deprecated use `RefundSortProperty$outboundSchema` instead. */\n  export const outboundSchema = RefundSortProperty$outboundSchema;\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;AAGlB,MAAM,kBAAkB,GAAG;IAChC,SAAS,EAAE,YAAY;IACvB,cAAc,EAAE,aAAa;IAC7B,MAAM,EAAE,QAAQ;IAChB,WAAW,EAAE,SAAS;CACd,CAAC;AAIJ,MAAM,gCAAgC,GAEzC,CAAC,6IAAC,UAAU,CAAC,kBAAkB,CAAC,CAAC;AAG9B,MAAM,iCAAiC,GAE1C,gCAAgC,CAAC;AAM/B,IAAW,mBAAmB,CAKnC;AALD,CAAA,SAAiB,mBAAmB;IAClC,gEAAA,EAAkE,CACrD,oBAAA,aAAa,GAAG,gCAAgC,CAAC;IAC9D,iEAAA,EAAmE,CACtD,oBAAA,cAAc,GAAG,iCAAiC,CAAC;AAClE,CAAC,EALgB,mBAAmB,IAAA,CAAnB,mBAAmB,GAAA,CAAA,CAAA,GAKnC","ignoreList":[0]}},
    {"offset": {"line": 29659, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 29665, "column": 0}, "map": {"version":3,"file":"subscriptioncustomer.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/subscriptioncustomer.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  Address,\n  Address$inboundSchema,\n  Address$Outbound,\n  Address$outboundSchema,\n} from \"./address.js\";\nimport {\n  TaxIDFormat,\n  TaxIDFormat$inboundSchema,\n  TaxIDFormat$outboundSchema,\n} from \"./taxidformat.js\";\n\nexport type SubscriptionCustomerMetadata = string | number | number | boolean;\n\nexport type TaxId = string | TaxIDFormat;\n\nexport type SubscriptionCustomer = {\n  /**\n   * The ID of the customer.\n   */\n  id: string;\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  metadata: { [k: string]: string | number | number | boolean };\n  /**\n   * The ID of the customer in your system. This must be unique within the organization. Once set, it can't be updated.\n   */\n  externalId: string | null;\n  /**\n   * The email address of the customer. This must be unique within the organization.\n   */\n  email: string;\n  /**\n   * Whether the customer email address is verified. The address is automatically verified when the customer accesses the customer portal using their email address.\n   */\n  emailVerified: boolean;\n  /**\n   * The name of the customer.\n   */\n  name: string | null;\n  billingAddress: Address | null;\n  taxId: Array<string | TaxIDFormat | null> | null;\n  /**\n   * The ID of the organization owning the customer.\n   */\n  organizationId: string;\n  /**\n   * Timestamp for when the customer was soft deleted.\n   */\n  deletedAt: Date | null;\n  avatarUrl: string;\n};\n\n/** @internal */\nexport const SubscriptionCustomerMetadata$inboundSchema: z.ZodType<\n  SubscriptionCustomerMetadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type SubscriptionCustomerMetadata$Outbound =\n  | string\n  | number\n  | number\n  | boolean;\n\n/** @internal */\nexport const SubscriptionCustomerMetadata$outboundSchema: z.ZodType<\n  SubscriptionCustomerMetadata$Outbound,\n  z.ZodTypeDef,\n  SubscriptionCustomerMetadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace SubscriptionCustomerMetadata$ {\n  /** @deprecated use `SubscriptionCustomerMetadata$inboundSchema` instead. */\n  export const inboundSchema = SubscriptionCustomerMetadata$inboundSchema;\n  /** @deprecated use `SubscriptionCustomerMetadata$outboundSchema` instead. */\n  export const outboundSchema = SubscriptionCustomerMetadata$outboundSchema;\n  /** @deprecated use `SubscriptionCustomerMetadata$Outbound` instead. */\n  export type Outbound = SubscriptionCustomerMetadata$Outbound;\n}\n\nexport function subscriptionCustomerMetadataToJSON(\n  subscriptionCustomerMetadata: SubscriptionCustomerMetadata,\n): string {\n  return JSON.stringify(\n    SubscriptionCustomerMetadata$outboundSchema.parse(\n      subscriptionCustomerMetadata,\n    ),\n  );\n}\n\nexport function subscriptionCustomerMetadataFromJSON(\n  jsonString: string,\n): SafeParseResult<SubscriptionCustomerMetadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => SubscriptionCustomerMetadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'SubscriptionCustomerMetadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const TaxId$inboundSchema: z.ZodType<TaxId, z.ZodTypeDef, unknown> = z\n  .union([z.string(), TaxIDFormat$inboundSchema]);\n\n/** @internal */\nexport type TaxId$Outbound = string | string;\n\n/** @internal */\nexport const TaxId$outboundSchema: z.ZodType<\n  TaxId$Outbound,\n  z.ZodTypeDef,\n  TaxId\n> = z.union([z.string(), TaxIDFormat$outboundSchema]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace TaxId$ {\n  /** @deprecated use `TaxId$inboundSchema` instead. */\n  export const inboundSchema = TaxId$inboundSchema;\n  /** @deprecated use `TaxId$outboundSchema` instead. */\n  export const outboundSchema = TaxId$outboundSchema;\n  /** @deprecated use `TaxId$Outbound` instead. */\n  export type Outbound = TaxId$Outbound;\n}\n\nexport function taxIdToJSON(taxId: TaxId): string {\n  return JSON.stringify(TaxId$outboundSchema.parse(taxId));\n}\n\nexport function taxIdFromJSON(\n  jsonString: string,\n): SafeParseResult<TaxId, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => TaxId$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'TaxId' from JSON`,\n  );\n}\n\n/** @internal */\nexport const SubscriptionCustomer$inboundSchema: z.ZodType<\n  SubscriptionCustomer,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  id: z.string(),\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  external_id: z.nullable(z.string()),\n  email: z.string(),\n  email_verified: z.boolean(),\n  name: z.nullable(z.string()),\n  billing_address: z.nullable(Address$inboundSchema),\n  tax_id: z.nullable(\n    z.array(z.nullable(z.union([z.string(), TaxIDFormat$inboundSchema]))),\n  ),\n  organization_id: z.string(),\n  deleted_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  avatar_url: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"external_id\": \"externalId\",\n    \"email_verified\": \"emailVerified\",\n    \"billing_address\": \"billingAddress\",\n    \"tax_id\": \"taxId\",\n    \"organization_id\": \"organizationId\",\n    \"deleted_at\": \"deletedAt\",\n    \"avatar_url\": \"avatarUrl\",\n  });\n});\n\n/** @internal */\nexport type SubscriptionCustomer$Outbound = {\n  id: string;\n  created_at: string;\n  modified_at: string | null;\n  metadata: { [k: string]: string | number | number | boolean };\n  external_id: string | null;\n  email: string;\n  email_verified: boolean;\n  name: string | null;\n  billing_address: Address$Outbound | null;\n  tax_id: Array<string | string | null> | null;\n  organization_id: string;\n  deleted_at: string | null;\n  avatar_url: string;\n};\n\n/** @internal */\nexport const SubscriptionCustomer$outboundSchema: z.ZodType<\n  SubscriptionCustomer$Outbound,\n  z.ZodTypeDef,\n  SubscriptionCustomer\n> = z.object({\n  id: z.string(),\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  externalId: z.nullable(z.string()),\n  email: z.string(),\n  emailVerified: z.boolean(),\n  name: z.nullable(z.string()),\n  billingAddress: z.nullable(Address$outboundSchema),\n  taxId: z.nullable(\n    z.array(z.nullable(z.union([z.string(), TaxIDFormat$outboundSchema]))),\n  ),\n  organizationId: z.string(),\n  deletedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  avatarUrl: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    externalId: \"external_id\",\n    emailVerified: \"email_verified\",\n    billingAddress: \"billing_address\",\n    taxId: \"tax_id\",\n    organizationId: \"organization_id\",\n    deletedAt: \"deleted_at\",\n    avatarUrl: \"avatar_url\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace SubscriptionCustomer$ {\n  /** @deprecated use `SubscriptionCustomer$inboundSchema` instead. */\n  export const inboundSchema = SubscriptionCustomer$inboundSchema;\n  /** @deprecated use `SubscriptionCustomer$outboundSchema` instead. */\n  export const outboundSchema = SubscriptionCustomer$outboundSchema;\n  /** @deprecated use `SubscriptionCustomer$Outbound` instead. */\n  export type Outbound = SubscriptionCustomer$Outbound;\n}\n\nexport function subscriptionCustomerToJSON(\n  subscriptionCustomer: SubscriptionCustomer,\n): string {\n  return JSON.stringify(\n    SubscriptionCustomer$outboundSchema.parse(subscriptionCustomer),\n  );\n}\n\nexport function subscriptionCustomerFromJSON(\n  jsonString: string,\n): SafeParseResult<SubscriptionCustomer, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => SubscriptionCustomer$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'SubscriptionCustomer' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;;;;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,qBAAqB,EAErB,sBAAsB,GACvB,MAAM,cAAc,CAAC;AACtB,OAAO,EAEL,yBAAyB,EACzB,0BAA0B,GAC3B,MAAM,kBAAkB,CAAC;;;;;;;AAkDnB,MAAM,0CAA0C,GAInD,CAAC,6IAAC,KAAK,CAAC;IAAC,CAAC,6IAAC,MAAM,EAAE;IAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAAE,CAAC,6IAAC,MAAM,EAAE;IAAE,CAAC,6IAAC,OAAO,EAAE;CAAC,CAAC,CAAC;AAU9D,MAAM,2CAA2C,GAIpD,CAAC,6IAAC,KAAK,CAAC;IAAC,CAAC,6IAAC,MAAM,EAAE;IAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAAE,CAAC,6IAAC,MAAM,EAAE;IAAE,CAAC,6IAAC,OAAO,EAAE;CAAC,CAAC,CAAC;AAM/D,IAAW,6BAA6B,CAO7C;AAPD,CAAA,SAAiB,6BAA6B;IAC5C,0EAAA,EAA4E,CAC/D,8BAAA,aAAa,GAAG,0CAA0C,CAAC;IACxE,2EAAA,EAA6E,CAChE,8BAAA,cAAc,GAAG,2CAA2C,CAAC;AAG5E,CAAC,EAPgB,6BAA6B,IAAA,CAA7B,6BAA6B,GAAA,CAAA,CAAA,GAO7C;AAEK,SAAU,kCAAkC,CAChD,4BAA0D;IAE1D,OAAO,IAAI,CAAC,SAAS,CACnB,2CAA2C,CAAC,KAAK,CAC/C,4BAA4B,CAC7B,CACF,CAAC;AACJ,CAAC;AAEK,SAAU,oCAAoC,CAClD,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,yCAA2C,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACtE,CAAA,wDAAA,CAA0D,CAC3D,CAAC;AACJ,CAAC;AAGM,MAAM,mBAAmB,GAA4C,CAAC,6IAC1E,KAAK,CAAC;IAAC,CAAC,6IAAC,MAAM,EAAE;iMAAE,4BAAyB;CAAC,CAAC,CAAC;AAM3C,MAAM,oBAAoB,GAI7B,CAAC,6IAAC,KAAK,CAAC;IAAC,CAAC,6IAAC,MAAM,EAAE;iMAAE,6BAA0B;CAAC,CAAC,CAAC;AAMhD,IAAW,MAAM,CAOtB;AAPD,CAAA,SAAiB,MAAM;IACrB,mDAAA,EAAqD,CACxC,OAAA,aAAa,GAAG,mBAAmB,CAAC;IACjD,oDAAA,EAAsD,CACzC,OAAA,cAAc,GAAG,oBAAoB,CAAC;AAGrD,CAAC,EAPgB,MAAM,IAAA,CAAN,MAAM,GAAA,CAAA,CAAA,GAOtB;AAEK,SAAU,WAAW,CAAC,KAAY;IACtC,OAAO,IAAI,CAAC,SAAS,CAAC,oBAAoB,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;AAC3D,CAAC;AAEK,SAAU,aAAa,CAC3B,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,kBAAoB,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC/C,CAAA,iCAAA,CAAmC,CACpC,CAAC;AACJ,CAAC;AAGM,MAAM,kCAAkC,GAI3C,CAAC,6IAAC,MAAM,CAAC;IACX,EAAE,EAAE,CAAC,6IAAC,MAAM,EAAE;IACd,UAAU,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,CAAC;QAAE,MAAM,EAAE,IAAI;IAAA,CAAE,CAAC,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;IAC7E,WAAW,EAAE,CAAC,6IAAC,QAAQ,CACrB,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,CAAC;QAAE,MAAM,EAAE,IAAI;IAAA,CAAE,CAAC,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAClE;IACD,QAAQ,EAAE,CAAC,6IAAC,MAAM,CAChB,CAAC,6IAAC,KAAK,CAAC;QAAC,CAAC,6IAAC,MAAM,EAAE;QAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;QAAE,CAAC,6IAAC,MAAM,EAAE;QAAE,CAAC,6IAAC,OAAO,EAAE;KAAC,CAAC,CACjE;IACD,WAAW,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;IACnC,KAAK,EAAE,CAAC,6IAAC,MAAM,EAAE;IACjB,cAAc,EAAE,CAAC,6IAAC,OAAO,EAAE;IAC3B,IAAI,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;IAC5B,eAAe,EAAE,CAAC,6IAAC,QAAQ,0LAAC,wBAAqB,CAAC;IAClD,MAAM,EAAE,CAAC,6IAAC,QAAQ,CAChB,CAAC,6IAAC,KAAK,CAAC,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,KAAK,CAAC;QAAC,CAAC,6IAAC,MAAM,EAAE;qMAAE,4BAAyB;KAAC,CAAC,CAAC,CAAC,CACtE;IACD,eAAe,EAAE,CAAC,6IAAC,MAAM,EAAE;IAC3B,UAAU,EAAE,CAAC,6IAAC,QAAQ,CACpB,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,CAAC;QAAE,MAAM,EAAE,IAAI;IAAA,CAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAClE;IACD,UAAU,EAAE,CAAC,6IAAC,MAAM,EAAE;CACvB,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,YAAY,EAAE,WAAW;QACzB,aAAa,EAAE,YAAY;QAC3B,aAAa,EAAE,YAAY;QAC3B,gBAAgB,EAAE,eAAe;QACjC,iBAAiB,EAAE,gBAAgB;QACnC,QAAQ,EAAE,OAAO;QACjB,iBAAiB,EAAE,gBAAgB;QACnC,YAAY,EAAE,WAAW;QACzB,YAAY,EAAE,WAAW;KAC1B,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAoBI,MAAM,mCAAmC,GAI5C,CAAC,6IAAC,MAAM,CAAC;IACX,EAAE,EAAE,CAAC,6IAAC,MAAM,EAAE;IACd,SAAS,EAAE,CAAC,6IAAC,IAAI,EAAE,CAAC,SAAS,EAAC,CAAC,CAAC,EAAG,AAAD,CAAE,CAAC,WAAW,EAAE,CAAC;IACnD,UAAU,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,IAAI,EAAE,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;IAChE,QAAQ,EAAE,CAAC,6IAAC,MAAM,CAChB,CAAC,6IAAC,KAAK,CAAC;QAAC,CAAC,6IAAC,MAAM,EAAE;QAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;QAAE,CAAC,6IAAC,MAAM,EAAE;QAAE,CAAC,6IAAC,OAAO,EAAE;KAAC,CAAC,CACjE;IACD,UAAU,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;IAClC,KAAK,EAAE,CAAC,6IAAC,MAAM,EAAE;IACjB,aAAa,EAAE,CAAC,6IAAC,OAAO,EAAE;IAC1B,IAAI,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;IAC5B,cAAc,EAAE,CAAC,6IAAC,QAAQ,0LAAC,yBAAsB,CAAC;IAClD,KAAK,EAAE,CAAC,6IAAC,QAAQ,CACf,CAAC,6IAAC,KAAK,CAAC,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,KAAK,CAAC;QAAC,CAAC,6IAAC,MAAM,EAAE;qMAAE,6BAA0B;KAAC,CAAC,CAAC,CAAC,CACvE;IACD,cAAc,EAAE,CAAC,6IAAC,MAAM,EAAE;IAC1B,SAAS,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,IAAI,EAAE,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;IAC/D,SAAS,EAAE,CAAC,6IAAC,MAAM,EAAE;CACtB,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,SAAS,EAAE,YAAY;QACvB,UAAU,EAAE,aAAa;QACzB,UAAU,EAAE,aAAa;QACzB,aAAa,EAAE,gBAAgB;QAC/B,cAAc,EAAE,iBAAiB;QACjC,KAAK,EAAE,QAAQ;QACf,cAAc,EAAE,iBAAiB;QACjC,SAAS,EAAE,YAAY;QACvB,SAAS,EAAE,YAAY;KACxB,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,qBAAqB,CAOrC;AAPD,CAAA,SAAiB,qBAAqB;IACpC,kEAAA,EAAoE,CACvD,sBAAA,aAAa,GAAG,kCAAkC,CAAC;IAChE,mEAAA,EAAqE,CACxD,sBAAA,cAAc,GAAG,mCAAmC,CAAC;AAGpE,CAAC,EAPgB,qBAAqB,IAAA,CAArB,qBAAqB,GAAA,CAAA,CAAA,GAOrC;AAEK,SAAU,0BAA0B,CACxC,oBAA0C;IAE1C,OAAO,IAAI,CAAC,SAAS,CACnB,mCAAmC,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAChE,CAAC;AACJ,CAAC;AAEK,SAAU,4BAA4B,CAC1C,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,iCAAmC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC9D,CAAA,gDAAA,CAAkD,CACnD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 29824, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 29830, "column": 0}, "map": {"version":3,"file":"subscriptionmeter.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/subscriptionmeter.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  Meter,\n  Meter$inboundSchema,\n  Meter$Outbound,\n  Meter$outboundSchema,\n} from \"./meter.js\";\n\n/**\n * Current consumption and spending for a subscription meter.\n */\nexport type SubscriptionMeter = {\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  /**\n   * The ID of the object.\n   */\n  id: string;\n  /**\n   * The number of consumed units so far in this billing period.\n   */\n  consumedUnits: number;\n  /**\n   * The number of credited units so far in this billing period.\n   */\n  creditedUnits: number;\n  /**\n   * The amount due in cents so far in this billing period.\n   */\n  amount: number;\n  /**\n   * The ID of the meter.\n   */\n  meterId: string;\n  meter: Meter;\n};\n\n/** @internal */\nexport const SubscriptionMeter$inboundSchema: z.ZodType<\n  SubscriptionMeter,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  id: z.string(),\n  consumed_units: z.number(),\n  credited_units: z.number().int(),\n  amount: z.number().int(),\n  meter_id: z.string(),\n  meter: Meter$inboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"consumed_units\": \"consumedUnits\",\n    \"credited_units\": \"creditedUnits\",\n    \"meter_id\": \"meterId\",\n  });\n});\n\n/** @internal */\nexport type SubscriptionMeter$Outbound = {\n  created_at: string;\n  modified_at: string | null;\n  id: string;\n  consumed_units: number;\n  credited_units: number;\n  amount: number;\n  meter_id: string;\n  meter: Meter$Outbound;\n};\n\n/** @internal */\nexport const SubscriptionMeter$outboundSchema: z.ZodType<\n  SubscriptionMeter$Outbound,\n  z.ZodTypeDef,\n  SubscriptionMeter\n> = z.object({\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  id: z.string(),\n  consumedUnits: z.number(),\n  creditedUnits: z.number().int(),\n  amount: z.number().int(),\n  meterId: z.string(),\n  meter: Meter$outboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    consumedUnits: \"consumed_units\",\n    creditedUnits: \"credited_units\",\n    meterId: \"meter_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace SubscriptionMeter$ {\n  /** @deprecated use `SubscriptionMeter$inboundSchema` instead. */\n  export const inboundSchema = SubscriptionMeter$inboundSchema;\n  /** @deprecated use `SubscriptionMeter$outboundSchema` instead. */\n  export const outboundSchema = SubscriptionMeter$outboundSchema;\n  /** @deprecated use `SubscriptionMeter$Outbound` instead. */\n  export type Outbound = SubscriptionMeter$Outbound;\n}\n\nexport function subscriptionMeterToJSON(\n  subscriptionMeter: SubscriptionMeter,\n): string {\n  return JSON.stringify(\n    SubscriptionMeter$outboundSchema.parse(subscriptionMeter),\n  );\n}\n\nexport function subscriptionMeterFromJSON(\n  jsonString: string,\n): SafeParseResult<SubscriptionMeter, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => SubscriptionMeter$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'SubscriptionMeter' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,mBAAmB,EAEnB,oBAAoB,GACrB,MAAM,YAAY,CAAC;;;;;;AAsCb,MAAM,+BAA+B,GAIxC,CAAC,6IAAC,MAAM,CAAC;IACX,UAAU,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,CAAC;QAAE,MAAM,EAAE,IAAI;IAAA,CAAE,CAAC,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;IAC7E,WAAW,EAAE,CAAC,6IAAC,QAAQ,CACrB,CAAC,6IAAC,MAAM,EAAE,CAAC,QAAQ,CAAC;QAAE,MAAM,EAAE,IAAI;IAAA,CAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAClE;IACD,EAAE,EAAE,CAAC,6IAAC,MAAM,EAAE;IACd,cAAc,EAAE,CAAC,6IAAC,MAAM,EAAE;IAC1B,cAAc,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAChC,MAAM,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IACxB,QAAQ,EAAE,CAAC,6IAAC,MAAM,EAAE;IACpB,KAAK,yLAAE,sBAAmB;CAC3B,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,YAAY,EAAE,WAAW;QACzB,aAAa,EAAE,YAAY;QAC3B,gBAAgB,EAAE,eAAe;QACjC,gBAAgB,EAAE,eAAe;QACjC,UAAU,EAAE,SAAS;KACtB,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAeI,MAAM,gCAAgC,GAIzC,CAAC,6IAAC,MAAM,CAAC;IACX,SAAS,EAAE,CAAC,6IAAC,IAAI,EAAE,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,WAAW,EAAE,CAAC;IACnD,UAAU,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,IAAI,EAAE,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;IAChE,EAAE,EAAE,CAAC,6IAAC,MAAM,EAAE;IACd,aAAa,EAAE,CAAC,6IAAC,MAAM,EAAE;IACzB,aAAa,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IAC/B,MAAM,EAAE,CAAC,6IAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IACxB,OAAO,EAAE,CAAC,6IAAC,MAAM,EAAE;IACnB,KAAK,yLAAE,uBAAoB;CAC5B,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,QAAO,sLAAA,AAAM,EAAC,CAAC,EAAE;QACf,SAAS,EAAE,YAAY;QACvB,UAAU,EAAE,aAAa;QACzB,aAAa,EAAE,gBAAgB;QAC/B,aAAa,EAAE,gBAAgB;QAC/B,OAAO,EAAE,UAAU;KACpB,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,kBAAkB,CAOlC;AAPD,CAAA,SAAiB,kBAAkB;IACjC,+DAAA,EAAiE,CACpD,mBAAA,aAAa,GAAG,+BAA+B,CAAC;IAC7D,gEAAA,EAAkE,CACrD,mBAAA,cAAc,GAAG,gCAAgC,CAAC;AAGjE,CAAC,EAPgB,kBAAkB,IAAA,CAAlB,kBAAkB,GAAA,CAAA,CAAA,GAOlC;AAEK,SAAU,uBAAuB,CACrC,iBAAoC;IAEpC,OAAO,IAAI,CAAC,SAAS,CACnB,gCAAgC,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAC1D,CAAC;AACJ,CAAC;AAEK,SAAU,yBAAyB,CACvC,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,8BAAgC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC3D,CAAA,6CAAA,CAA+C,CAChD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 29899, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 29905, "column": 0}, "map": {"version":3,"file":"subscription.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/subscription.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  CustomerCancellationReason,\n  CustomerCancellationReason$inboundSchema,\n  CustomerCancellationReason$outboundSchema,\n} from \"./customercancellationreason.js\";\nimport {\n  DiscountFixedOnceForeverDurationBase,\n  DiscountFixedOnceForeverDurationBase$inboundSchema,\n  DiscountFixedOnceForeverDurationBase$Outbound,\n  DiscountFixedOnceForeverDurationBase$outboundSchema,\n} from \"./discountfixedonceforeverdurationbase.js\";\nimport {\n  DiscountFixedRepeatDurationBase,\n  DiscountFixedRepeatDurationBase$inboundSchema,\n  DiscountFixedRepeatDurationBase$Outbound,\n  DiscountFixedRepeatDurationBase$outboundSchema,\n} from \"./discountfixedrepeatdurationbase.js\";\nimport {\n  DiscountPercentageOnceForeverDurationBase,\n  DiscountPercentageOnceForeverDurationBase$inboundSchema,\n  DiscountPercentageOnceForeverDurationBase$Outbound,\n  DiscountPercentageOnceForeverDurationBase$outboundSchema,\n} from \"./discountpercentageonceforeverdurationbase.js\";\nimport {\n  DiscountPercentageRepeatDurationBase,\n  DiscountPercentageRepeatDurationBase$inboundSchema,\n  DiscountPercentageRepeatDurationBase$Outbound,\n  DiscountPercentageRepeatDurationBase$outboundSchema,\n} from \"./discountpercentagerepeatdurationbase.js\";\nimport {\n  LegacyRecurringProductPrice,\n  LegacyRecurringProductPrice$inboundSchema,\n  LegacyRecurringProductPrice$Outbound,\n  LegacyRecurringProductPrice$outboundSchema,\n} from \"./legacyrecurringproductprice.js\";\nimport {\n  Product,\n  Product$inboundSchema,\n  Product$Outbound,\n  Product$outboundSchema,\n} from \"./product.js\";\nimport {\n  ProductPrice,\n  ProductPrice$inboundSchema,\n  ProductPrice$Outbound,\n  ProductPrice$outboundSchema,\n} from \"./productprice.js\";\nimport {\n  SubscriptionCustomer,\n  SubscriptionCustomer$inboundSchema,\n  SubscriptionCustomer$Outbound,\n  SubscriptionCustomer$outboundSchema,\n} from \"./subscriptioncustomer.js\";\nimport {\n  SubscriptionMeter,\n  SubscriptionMeter$inboundSchema,\n  SubscriptionMeter$Outbound,\n  SubscriptionMeter$outboundSchema,\n} from \"./subscriptionmeter.js\";\nimport {\n  SubscriptionRecurringInterval,\n  SubscriptionRecurringInterval$inboundSchema,\n  SubscriptionRecurringInterval$outboundSchema,\n} from \"./subscriptionrecurringinterval.js\";\nimport {\n  SubscriptionStatus,\n  SubscriptionStatus$inboundSchema,\n  SubscriptionStatus$outboundSchema,\n} from \"./subscriptionstatus.js\";\n\nexport type Metadata = string | number | number | boolean;\n\nexport type CustomFieldData = string | number | boolean | Date;\n\nexport type SubscriptionDiscount =\n  | DiscountPercentageOnceForeverDurationBase\n  | DiscountFixedOnceForeverDurationBase\n  | DiscountPercentageRepeatDurationBase\n  | DiscountFixedRepeatDurationBase;\n\nexport type SubscriptionPrices = LegacyRecurringProductPrice | ProductPrice;\n\nexport type Subscription = {\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  /**\n   * The ID of the object.\n   */\n  id: string;\n  /**\n   * The amount of the subscription.\n   */\n  amount: number;\n  /**\n   * The currency of the subscription.\n   */\n  currency: string;\n  recurringInterval: SubscriptionRecurringInterval;\n  status: SubscriptionStatus;\n  /**\n   * The start timestamp of the current billing period.\n   */\n  currentPeriodStart: Date;\n  /**\n   * The end timestamp of the current billing period.\n   */\n  currentPeriodEnd: Date | null;\n  /**\n   * Whether the subscription will be canceled at the end of the current period.\n   */\n  cancelAtPeriodEnd: boolean;\n  /**\n   * The timestamp when the subscription was canceled. The subscription might still be active if `cancel_at_period_end` is `true`.\n   */\n  canceledAt: Date | null;\n  /**\n   * The timestamp when the subscription started.\n   */\n  startedAt: Date | null;\n  /**\n   * The timestamp when the subscription will end.\n   */\n  endsAt: Date | null;\n  /**\n   * The timestamp when the subscription ended.\n   */\n  endedAt: Date | null;\n  /**\n   * The ID of the subscribed customer.\n   */\n  customerId: string;\n  /**\n   * The ID of the subscribed product.\n   */\n  productId: string;\n  /**\n   * The ID of the applied discount, if any.\n   */\n  discountId: string | null;\n  checkoutId: string | null;\n  customerCancellationReason: CustomerCancellationReason | null;\n  customerCancellationComment: string | null;\n  metadata: { [k: string]: string | number | number | boolean };\n  /**\n   * Key-value object storing custom field values.\n   */\n  customFieldData?:\n    | { [k: string]: string | number | boolean | Date | null }\n    | undefined;\n  customer: SubscriptionCustomer;\n  /**\n   * A product.\n   */\n  product: Product;\n  discount:\n    | DiscountPercentageOnceForeverDurationBase\n    | DiscountFixedOnceForeverDurationBase\n    | DiscountPercentageRepeatDurationBase\n    | DiscountFixedRepeatDurationBase\n    | null;\n  /**\n   * List of enabled prices for the subscription.\n   */\n  prices: Array<LegacyRecurringProductPrice | ProductPrice>;\n  /**\n   * List of meters associated with the subscription.\n   */\n  meters: Array<SubscriptionMeter>;\n};\n\n/** @internal */\nexport const Metadata$inboundSchema: z.ZodType<\n  Metadata,\n  z.ZodTypeDef,\n  unknown\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/** @internal */\nexport type Metadata$Outbound = string | number | number | boolean;\n\n/** @internal */\nexport const Metadata$outboundSchema: z.ZodType<\n  Metadata$Outbound,\n  z.ZodTypeDef,\n  Metadata\n> = z.union([z.string(), z.number().int(), z.number(), z.boolean()]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace Metadata$ {\n  /** @deprecated use `Metadata$inboundSchema` instead. */\n  export const inboundSchema = Metadata$inboundSchema;\n  /** @deprecated use `Metadata$outboundSchema` instead. */\n  export const outboundSchema = Metadata$outboundSchema;\n  /** @deprecated use `Metadata$Outbound` instead. */\n  export type Outbound = Metadata$Outbound;\n}\n\nexport function metadataToJSON(metadata: Metadata): string {\n  return JSON.stringify(Metadata$outboundSchema.parse(metadata));\n}\n\nexport function metadataFromJSON(\n  jsonString: string,\n): SafeParseResult<Metadata, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => Metadata$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'Metadata' from JSON`,\n  );\n}\n\n/** @internal */\nexport const CustomFieldData$inboundSchema: z.ZodType<\n  CustomFieldData,\n  z.ZodTypeDef,\n  unknown\n> = z.union([\n  z.string(),\n  z.number().int(),\n  z.boolean(),\n  z.string().datetime({ offset: true }).transform(v => new Date(v)),\n]);\n\n/** @internal */\nexport type CustomFieldData$Outbound = string | number | boolean | string;\n\n/** @internal */\nexport const CustomFieldData$outboundSchema: z.ZodType<\n  CustomFieldData$Outbound,\n  z.ZodTypeDef,\n  CustomFieldData\n> = z.union([\n  z.string(),\n  z.number().int(),\n  z.boolean(),\n  z.date().transform(v => v.toISOString()),\n]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace CustomFieldData$ {\n  /** @deprecated use `CustomFieldData$inboundSchema` instead. */\n  export const inboundSchema = CustomFieldData$inboundSchema;\n  /** @deprecated use `CustomFieldData$outboundSchema` instead. */\n  export const outboundSchema = CustomFieldData$outboundSchema;\n  /** @deprecated use `CustomFieldData$Outbound` instead. */\n  export type Outbound = CustomFieldData$Outbound;\n}\n\nexport function customFieldDataToJSON(\n  customFieldData: CustomFieldData,\n): string {\n  return JSON.stringify(CustomFieldData$outboundSchema.parse(customFieldData));\n}\n\nexport function customFieldDataFromJSON(\n  jsonString: string,\n): SafeParseResult<CustomFieldData, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => CustomFieldData$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'CustomFieldData' from JSON`,\n  );\n}\n\n/** @internal */\nexport const SubscriptionDiscount$inboundSchema: z.ZodType<\n  SubscriptionDiscount,\n  z.ZodTypeDef,\n  unknown\n> = z.union([\n  DiscountPercentageOnceForeverDurationBase$inboundSchema,\n  DiscountFixedOnceForeverDurationBase$inboundSchema,\n  DiscountPercentageRepeatDurationBase$inboundSchema,\n  DiscountFixedRepeatDurationBase$inboundSchema,\n]);\n\n/** @internal */\nexport type SubscriptionDiscount$Outbound =\n  | DiscountPercentageOnceForeverDurationBase$Outbound\n  | DiscountFixedOnceForeverDurationBase$Outbound\n  | DiscountPercentageRepeatDurationBase$Outbound\n  | DiscountFixedRepeatDurationBase$Outbound;\n\n/** @internal */\nexport const SubscriptionDiscount$outboundSchema: z.ZodType<\n  SubscriptionDiscount$Outbound,\n  z.ZodTypeDef,\n  SubscriptionDiscount\n> = z.union([\n  DiscountPercentageOnceForeverDurationBase$outboundSchema,\n  DiscountFixedOnceForeverDurationBase$outboundSchema,\n  DiscountPercentageRepeatDurationBase$outboundSchema,\n  DiscountFixedRepeatDurationBase$outboundSchema,\n]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace SubscriptionDiscount$ {\n  /** @deprecated use `SubscriptionDiscount$inboundSchema` instead. */\n  export const inboundSchema = SubscriptionDiscount$inboundSchema;\n  /** @deprecated use `SubscriptionDiscount$outboundSchema` instead. */\n  export const outboundSchema = SubscriptionDiscount$outboundSchema;\n  /** @deprecated use `SubscriptionDiscount$Outbound` instead. */\n  export type Outbound = SubscriptionDiscount$Outbound;\n}\n\nexport function subscriptionDiscountToJSON(\n  subscriptionDiscount: SubscriptionDiscount,\n): string {\n  return JSON.stringify(\n    SubscriptionDiscount$outboundSchema.parse(subscriptionDiscount),\n  );\n}\n\nexport function subscriptionDiscountFromJSON(\n  jsonString: string,\n): SafeParseResult<SubscriptionDiscount, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => SubscriptionDiscount$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'SubscriptionDiscount' from JSON`,\n  );\n}\n\n/** @internal */\nexport const SubscriptionPrices$inboundSchema: z.ZodType<\n  SubscriptionPrices,\n  z.ZodTypeDef,\n  unknown\n> = z.union([\n  LegacyRecurringProductPrice$inboundSchema,\n  ProductPrice$inboundSchema,\n]);\n\n/** @internal */\nexport type SubscriptionPrices$Outbound =\n  | LegacyRecurringProductPrice$Outbound\n  | ProductPrice$Outbound;\n\n/** @internal */\nexport const SubscriptionPrices$outboundSchema: z.ZodType<\n  SubscriptionPrices$Outbound,\n  z.ZodTypeDef,\n  SubscriptionPrices\n> = z.union([\n  LegacyRecurringProductPrice$outboundSchema,\n  ProductPrice$outboundSchema,\n]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace SubscriptionPrices$ {\n  /** @deprecated use `SubscriptionPrices$inboundSchema` instead. */\n  export const inboundSchema = SubscriptionPrices$inboundSchema;\n  /** @deprecated use `SubscriptionPrices$outboundSchema` instead. */\n  export const outboundSchema = SubscriptionPrices$outboundSchema;\n  /** @deprecated use `SubscriptionPrices$Outbound` instead. */\n  export type Outbound = SubscriptionPrices$Outbound;\n}\n\nexport function subscriptionPricesToJSON(\n  subscriptionPrices: SubscriptionPrices,\n): string {\n  return JSON.stringify(\n    SubscriptionPrices$outboundSchema.parse(subscriptionPrices),\n  );\n}\n\nexport function subscriptionPricesFromJSON(\n  jsonString: string,\n): SafeParseResult<SubscriptionPrices, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => SubscriptionPrices$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'SubscriptionPrices' from JSON`,\n  );\n}\n\n/** @internal */\nexport const Subscription$inboundSchema: z.ZodType<\n  Subscription,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  id: z.string(),\n  amount: z.number().int(),\n  currency: z.string(),\n  recurring_interval: SubscriptionRecurringInterval$inboundSchema,\n  status: SubscriptionStatus$inboundSchema,\n  current_period_start: z.string().datetime({ offset: true }).transform(v =>\n    new Date(v)\n  ),\n  current_period_end: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  cancel_at_period_end: z.boolean(),\n  canceled_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  started_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  ends_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  ended_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  customer_id: z.string(),\n  product_id: z.string(),\n  discount_id: z.nullable(z.string()),\n  checkout_id: z.nullable(z.string()),\n  customer_cancellation_reason: z.nullable(\n    CustomerCancellationReason$inboundSchema,\n  ),\n  customer_cancellation_comment: z.nullable(z.string()),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  custom_field_data: z.record(\n    z.nullable(\n      z.union([\n        z.string(),\n        z.number().int(),\n        z.boolean(),\n        z.string().datetime({ offset: true }).transform(v => new Date(v)),\n      ]),\n    ),\n  ).optional(),\n  customer: SubscriptionCustomer$inboundSchema,\n  product: Product$inboundSchema,\n  discount: z.nullable(\n    z.union([\n      DiscountPercentageOnceForeverDurationBase$inboundSchema,\n      DiscountFixedOnceForeverDurationBase$inboundSchema,\n      DiscountPercentageRepeatDurationBase$inboundSchema,\n      DiscountFixedRepeatDurationBase$inboundSchema,\n    ]),\n  ),\n  prices: z.array(\n    z.union([\n      LegacyRecurringProductPrice$inboundSchema,\n      ProductPrice$inboundSchema,\n    ]),\n  ),\n  meters: z.array(SubscriptionMeter$inboundSchema),\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"recurring_interval\": \"recurringInterval\",\n    \"current_period_start\": \"currentPeriodStart\",\n    \"current_period_end\": \"currentPeriodEnd\",\n    \"cancel_at_period_end\": \"cancelAtPeriodEnd\",\n    \"canceled_at\": \"canceledAt\",\n    \"started_at\": \"startedAt\",\n    \"ends_at\": \"endsAt\",\n    \"ended_at\": \"endedAt\",\n    \"customer_id\": \"customerId\",\n    \"product_id\": \"productId\",\n    \"discount_id\": \"discountId\",\n    \"checkout_id\": \"checkoutId\",\n    \"customer_cancellation_reason\": \"customerCancellationReason\",\n    \"customer_cancellation_comment\": \"customerCancellationComment\",\n    \"custom_field_data\": \"customFieldData\",\n  });\n});\n\n/** @internal */\nexport type Subscription$Outbound = {\n  created_at: string;\n  modified_at: string | null;\n  id: string;\n  amount: number;\n  currency: string;\n  recurring_interval: string;\n  status: string;\n  current_period_start: string;\n  current_period_end: string | null;\n  cancel_at_period_end: boolean;\n  canceled_at: string | null;\n  started_at: string | null;\n  ends_at: string | null;\n  ended_at: string | null;\n  customer_id: string;\n  product_id: string;\n  discount_id: string | null;\n  checkout_id: string | null;\n  customer_cancellation_reason: string | null;\n  customer_cancellation_comment: string | null;\n  metadata: { [k: string]: string | number | number | boolean };\n  custom_field_data?:\n    | { [k: string]: string | number | boolean | string | null }\n    | undefined;\n  customer: SubscriptionCustomer$Outbound;\n  product: Product$Outbound;\n  discount:\n    | DiscountPercentageOnceForeverDurationBase$Outbound\n    | DiscountFixedOnceForeverDurationBase$Outbound\n    | DiscountPercentageRepeatDurationBase$Outbound\n    | DiscountFixedRepeatDurationBase$Outbound\n    | null;\n  prices: Array<LegacyRecurringProductPrice$Outbound | ProductPrice$Outbound>;\n  meters: Array<SubscriptionMeter$Outbound>;\n};\n\n/** @internal */\nexport const Subscription$outboundSchema: z.ZodType<\n  Subscription$Outbound,\n  z.ZodTypeDef,\n  Subscription\n> = z.object({\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  id: z.string(),\n  amount: z.number().int(),\n  currency: z.string(),\n  recurringInterval: SubscriptionRecurringInterval$outboundSchema,\n  status: SubscriptionStatus$outboundSchema,\n  currentPeriodStart: z.date().transform(v => v.toISOString()),\n  currentPeriodEnd: z.nullable(z.date().transform(v => v.toISOString())),\n  cancelAtPeriodEnd: z.boolean(),\n  canceledAt: z.nullable(z.date().transform(v => v.toISOString())),\n  startedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  endsAt: z.nullable(z.date().transform(v => v.toISOString())),\n  endedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  customerId: z.string(),\n  productId: z.string(),\n  discountId: z.nullable(z.string()),\n  checkoutId: z.nullable(z.string()),\n  customerCancellationReason: z.nullable(\n    CustomerCancellationReason$outboundSchema,\n  ),\n  customerCancellationComment: z.nullable(z.string()),\n  metadata: z.record(\n    z.union([z.string(), z.number().int(), z.number(), z.boolean()]),\n  ),\n  customFieldData: z.record(\n    z.nullable(\n      z.union([\n        z.string(),\n        z.number().int(),\n        z.boolean(),\n        z.date().transform(v => v.toISOString()),\n      ]),\n    ),\n  ).optional(),\n  customer: SubscriptionCustomer$outboundSchema,\n  product: Product$outboundSchema,\n  discount: z.nullable(\n    z.union([\n      DiscountPercentageOnceForeverDurationBase$outboundSchema,\n      DiscountFixedOnceForeverDurationBase$outboundSchema,\n      DiscountPercentageRepeatDurationBase$outboundSchema,\n      DiscountFixedRepeatDurationBase$outboundSchema,\n    ]),\n  ),\n  prices: z.array(\n    z.union([\n      LegacyRecurringProductPrice$outboundSchema,\n      ProductPrice$outboundSchema,\n    ]),\n  ),\n  meters: z.array(SubscriptionMeter$outboundSchema),\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    recurringInterval: \"recurring_interval\",\n    currentPeriodStart: \"current_period_start\",\n    currentPeriodEnd: \"current_period_end\",\n    cancelAtPeriodEnd: \"cancel_at_period_end\",\n    canceledAt: \"canceled_at\",\n    startedAt: \"started_at\",\n    endsAt: \"ends_at\",\n    endedAt: \"ended_at\",\n    customerId: \"customer_id\",\n    productId: \"product_id\",\n    discountId: \"discount_id\",\n    checkoutId: \"checkout_id\",\n    customerCancellationReason: \"customer_cancellation_reason\",\n    customerCancellationComment: \"customer_cancellation_comment\",\n    customFieldData: \"custom_field_data\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace Subscription$ {\n  /** @deprecated use `Subscription$inboundSchema` instead. */\n  export const inboundSchema = Subscription$inboundSchema;\n  /** @deprecated use `Subscription$outboundSchema` instead. */\n  export const outboundSchema = Subscription$outboundSchema;\n  /** @deprecated use `Subscription$Outbound` instead. */\n  export type Outbound = Subscription$Outbound;\n}\n\nexport function subscriptionToJSON(subscription: Subscription): string {\n  return JSON.stringify(Subscription$outboundSchema.parse(subscription));\n}\n\nexport function subscriptionFromJSON(\n  jsonString: string,\n): SafeParseResult<Subscription, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => Subscription$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'Subscription' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 30218, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 30224, "column": 0}, "map": {"version":3,"file":"listresourcesubscription.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/listresourcesubscription.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  Pagination,\n  Pagination$inboundSchema,\n  Pagination$Outbound,\n  Pagination$outboundSchema,\n} from \"./pagination.js\";\nimport {\n  Subscription,\n  Subscription$inboundSchema,\n  Subscription$Outbound,\n  Subscription$outboundSchema,\n} from \"./subscription.js\";\n\nexport type ListResourceSubscription = {\n  items: Array<Subscription>;\n  pagination: Pagination;\n};\n\n/** @internal */\nexport const ListResourceSubscription$inboundSchema: z.ZodType<\n  ListResourceSubscription,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  items: z.array(Subscription$inboundSchema),\n  pagination: Pagination$inboundSchema,\n});\n\n/** @internal */\nexport type ListResourceSubscription$Outbound = {\n  items: Array<Subscription$Outbound>;\n  pagination: Pagination$Outbound;\n};\n\n/** @internal */\nexport const ListResourceSubscription$outboundSchema: z.ZodType<\n  ListResourceSubscription$Outbound,\n  z.ZodTypeDef,\n  ListResourceSubscription\n> = z.object({\n  items: z.array(Subscription$outboundSchema),\n  pagination: Pagination$outboundSchema,\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace ListResourceSubscription$ {\n  /** @deprecated use `ListResourceSubscription$inboundSchema` instead. */\n  export const inboundSchema = ListResourceSubscription$inboundSchema;\n  /** @deprecated use `ListResourceSubscription$outboundSchema` instead. */\n  export const outboundSchema = ListResourceSubscription$outboundSchema;\n  /** @deprecated use `ListResourceSubscription$Outbound` instead. */\n  export type Outbound = ListResourceSubscription$Outbound;\n}\n\nexport function listResourceSubscriptionToJSON(\n  listResourceSubscription: ListResourceSubscription,\n): string {\n  return JSON.stringify(\n    ListResourceSubscription$outboundSchema.parse(listResourceSubscription),\n  );\n}\n\nexport function listResourceSubscriptionFromJSON(\n  jsonString: string,\n): SafeParseResult<ListResourceSubscription, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => ListResourceSubscription$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'ListResourceSubscription' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;AAGH,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,wBAAwB,EAExB,yBAAyB,GAC1B,MAAM,iBAAiB,CAAC;AACzB,OAAO,EAEL,0BAA0B,EAE1B,2BAA2B,GAC5B,MAAM,mBAAmB,CAAC;AAf3B,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;;;;AAuBlB,MAAM,sCAAsC,GAI/C,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,KAAK,+LAAC,6BAA0B,CAAC;IAC1C,UAAU,8LAAE,2BAAwB;CACrC,CAAC,CAAC;AASI,MAAM,uCAAuC,GAIhD,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,KAAK,+LAAC,8BAA2B,CAAC;IAC3C,UAAU,8LAAE,4BAAyB;CACtC,CAAC,CAAC;AAMG,IAAW,yBAAyB,CAOzC;AAPD,CAAA,SAAiB,yBAAyB;IACxC,sEAAA,EAAwE,CAC3D,0BAAA,aAAa,GAAG,sCAAsC,CAAC;IACpE,uEAAA,EAAyE,CAC5D,0BAAA,cAAc,GAAG,uCAAuC,CAAC;AAGxE,CAAC,EAPgB,yBAAyB,IAAA,CAAzB,yBAAyB,GAAA,CAAA,CAAA,GAOzC;AAEK,SAAU,8BAA8B,CAC5C,wBAAkD;IAElD,OAAO,IAAI,CAAC,SAAS,CACnB,uCAAuC,CAAC,KAAK,CAAC,wBAAwB,CAAC,CACxE,CAAC;AACJ,CAAC;AAEK,SAAU,gCAAgC,CAC9C,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,qCAAuC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAClE,CAAA,oDAAA,CAAsD,CACvD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 30261, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 30267, "column": 0}, "map": {"version":3,"file":"subscriptionsortproperty.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/subscriptionsortproperty.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { ClosedEnum } from \"../../types/enums.js\";\n\nexport const SubscriptionSortProperty = {\n  Customer: \"customer\",\n  MinusCustomer: \"-customer\",\n  Status: \"status\",\n  MinusStatus: \"-status\",\n  StartedAt: \"started_at\",\n  MinusStartedAt: \"-started_at\",\n  CurrentPeriodEnd: \"current_period_end\",\n  MinusCurrentPeriodEnd: \"-current_period_end\",\n  Amount: \"amount\",\n  MinusAmount: \"-amount\",\n  Product: \"product\",\n  MinusProduct: \"-product\",\n  Discount: \"discount\",\n  MinusDiscount: \"-discount\",\n} as const;\nexport type SubscriptionSortProperty = ClosedEnum<\n  typeof SubscriptionSortProperty\n>;\n\n/** @internal */\nexport const SubscriptionSortProperty$inboundSchema: z.ZodNativeEnum<\n  typeof SubscriptionSortProperty\n> = z.nativeEnum(SubscriptionSortProperty);\n\n/** @internal */\nexport const SubscriptionSortProperty$outboundSchema: z.ZodNativeEnum<\n  typeof SubscriptionSortProperty\n> = SubscriptionSortProperty$inboundSchema;\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace SubscriptionSortProperty$ {\n  /** @deprecated use `SubscriptionSortProperty$inboundSchema` instead. */\n  export const inboundSchema = SubscriptionSortProperty$inboundSchema;\n  /** @deprecated use `SubscriptionSortProperty$outboundSchema` instead. */\n  export const outboundSchema = SubscriptionSortProperty$outboundSchema;\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;AAGlB,MAAM,wBAAwB,GAAG;IACtC,QAAQ,EAAE,UAAU;IACpB,aAAa,EAAE,WAAW;IAC1B,MAAM,EAAE,QAAQ;IAChB,WAAW,EAAE,SAAS;IACtB,SAAS,EAAE,YAAY;IACvB,cAAc,EAAE,aAAa;IAC7B,gBAAgB,EAAE,oBAAoB;IACtC,qBAAqB,EAAE,qBAAqB;IAC5C,MAAM,EAAE,QAAQ;IAChB,WAAW,EAAE,SAAS;IACtB,OAAO,EAAE,SAAS;IAClB,YAAY,EAAE,UAAU;IACxB,QAAQ,EAAE,UAAU;IACpB,aAAa,EAAE,WAAW;CAClB,CAAC;AAMJ,MAAM,sCAAsC,GAE/C,CAAC,6IAAC,UAAU,CAAC,wBAAwB,CAAC,CAAC;AAGpC,MAAM,uCAAuC,GAEhD,sCAAsC,CAAC;AAMrC,IAAW,yBAAyB,CAKzC;AALD,CAAA,SAAiB,yBAAyB;IACxC,sEAAA,EAAwE,CAC3D,0BAAA,aAAa,GAAG,sCAAsC,CAAC;IACpE,uEAAA,EAAyE,CAC5D,0BAAA,cAAc,GAAG,uCAAuC,CAAC;AACxE,CAAC,EALgB,yBAAyB,IAAA,CAAzB,yBAAyB,GAAA,CAAA,CAAA,GAKzC","ignoreList":[0]}},
    {"offset": {"line": 30301, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 30307, "column": 0}, "map": {"version":3,"file":"subscriptioncancel.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/subscriptioncancel.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  CustomerCancellationReason,\n  CustomerCancellationReason$inboundSchema,\n  CustomerCancellationReason$outboundSchema,\n} from \"./customercancellationreason.js\";\n\nexport type SubscriptionCancel = {\n  /**\n   * Customer reason for cancellation.\n   *\n   * @remarks\n   *\n   * Helpful to monitor reasons behind churn for future improvements.\n   *\n   * Only set this in case your own service is requesting the reason from the\n   * customer. Or you know based on direct conversations, i.e support, with\n   * the customer.\n   *\n   * * `too_expensive`: Too expensive for the customer.\n   * * `missing_features`: Customer is missing certain features.\n   * * `switched_service`: Customer switched to another service.\n   * * `unused`: Customer is not using it enough.\n   * * `customer_service`: Customer is not satisfied with the customer service.\n   * * `low_quality`: Customer is unhappy with the quality.\n   * * `too_complex`: Customer considers the service too complicated.\n   * * `other`: Other reason(s).\n   */\n  customerCancellationReason?: CustomerCancellationReason | null | undefined;\n  /**\n   * Customer feedback and why they decided to cancel.\n   *\n   * @remarks\n   *\n   * **IMPORTANT:**\n   * Do not use this to store internal notes! It's intended to be input\n   * from the customer and is therefore also available in their Polar\n   * purchases library.\n   *\n   * Only set this in case your own service is requesting the reason from the\n   * customer. Or you copy a message directly from a customer\n   * conversation, i.e support.\n   */\n  customerCancellationComment?: string | null | undefined;\n  /**\n   * Cancel an active subscription once the current period ends.\n   *\n   * @remarks\n   *\n   * Or uncancel a subscription currently set to be revoked at period end.\n   */\n  cancelAtPeriodEnd: boolean;\n};\n\n/** @internal */\nexport const SubscriptionCancel$inboundSchema: z.ZodType<\n  SubscriptionCancel,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  customer_cancellation_reason: z.nullable(\n    CustomerCancellationReason$inboundSchema,\n  ).optional(),\n  customer_cancellation_comment: z.nullable(z.string()).optional(),\n  cancel_at_period_end: z.boolean(),\n}).transform((v) => {\n  return remap$(v, {\n    \"customer_cancellation_reason\": \"customerCancellationReason\",\n    \"customer_cancellation_comment\": \"customerCancellationComment\",\n    \"cancel_at_period_end\": \"cancelAtPeriodEnd\",\n  });\n});\n\n/** @internal */\nexport type SubscriptionCancel$Outbound = {\n  customer_cancellation_reason?: string | null | undefined;\n  customer_cancellation_comment?: string | null | undefined;\n  cancel_at_period_end: boolean;\n};\n\n/** @internal */\nexport const SubscriptionCancel$outboundSchema: z.ZodType<\n  SubscriptionCancel$Outbound,\n  z.ZodTypeDef,\n  SubscriptionCancel\n> = z.object({\n  customerCancellationReason: z.nullable(\n    CustomerCancellationReason$outboundSchema,\n  ).optional(),\n  customerCancellationComment: z.nullable(z.string()).optional(),\n  cancelAtPeriodEnd: z.boolean(),\n}).transform((v) => {\n  return remap$(v, {\n    customerCancellationReason: \"customer_cancellation_reason\",\n    customerCancellationComment: \"customer_cancellation_comment\",\n    cancelAtPeriodEnd: \"cancel_at_period_end\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace SubscriptionCancel$ {\n  /** @deprecated use `SubscriptionCancel$inboundSchema` instead. */\n  export const inboundSchema = SubscriptionCancel$inboundSchema;\n  /** @deprecated use `SubscriptionCancel$outboundSchema` instead. */\n  export const outboundSchema = SubscriptionCancel$outboundSchema;\n  /** @deprecated use `SubscriptionCancel$Outbound` instead. */\n  export type Outbound = SubscriptionCancel$Outbound;\n}\n\nexport function subscriptionCancelToJSON(\n  subscriptionCancel: SubscriptionCancel,\n): string {\n  return JSON.stringify(\n    SubscriptionCancel$outboundSchema.parse(subscriptionCancel),\n  );\n}\n\nexport function subscriptionCancelFromJSON(\n  jsonString: string,\n): SafeParseResult<SubscriptionCancel, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => SubscriptionCancel$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'SubscriptionCancel' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,wCAAwC,EACxC,yCAAyC,GAC1C,MAAM,iCAAiC,CAAC;;;;;;AAkDlC,MAAM,gCAAgC,GAIzC,CAAC,6IAAC,MAAM,CAAC;IACX,4BAA4B,EAAE,CAAC,6IAAC,QAAQ,6MACtC,2CAAwC,CACzC,CAAC,QAAQ,EAAE;IACZ,6BAA6B,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;IAChE,oBAAoB,EAAE,CAAC,6IAAC,OAAO,EAAE;CAClC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,8BAA8B,EAAE,4BAA4B;QAC5D,+BAA+B,EAAE,6BAA6B;QAC9D,sBAAsB,EAAE,mBAAmB;KAC5C,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAUI,MAAM,iCAAiC,GAI1C,CAAC,6IAAC,MAAM,CAAC;IACX,0BAA0B,EAAE,CAAC,6IAAC,QAAQ,4MACpC,6CAAyC,CAC1C,CAAC,QAAQ,EAAE;IACZ,2BAA2B,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;IAC9D,iBAAiB,EAAE,CAAC,6IAAC,OAAO,EAAE;CAC/B,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,QAAO,sLAAA,AAAM,EAAC,CAAC,EAAE;QACf,0BAA0B,EAAE,8BAA8B;QAC1D,2BAA2B,EAAE,+BAA+B;QAC5D,iBAAiB,EAAE,sBAAsB;KAC1C,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,mBAAmB,CAOnC;AAPD,CAAA,SAAiB,mBAAmB;IAClC,gEAAA,EAAkE,CACrD,oBAAA,aAAa,GAAG,gCAAgC,CAAC;IAC9D,iEAAA,EAAmE,CACtD,oBAAA,cAAc,GAAG,iCAAiC,CAAC;AAGlE,CAAC,EAPgB,mBAAmB,IAAA,CAAnB,mBAAmB,GAAA,CAAA,CAAA,GAOnC;AAEK,SAAU,wBAAwB,CACtC,kBAAsC;IAEtC,OAAO,IAAI,CAAC,SAAS,CACnB,iCAAiC,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAC5D,CAAC;AACJ,CAAC;AAEK,SAAU,0BAA0B,CACxC,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,+BAAiC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC5D,CAAA,8CAAA,CAAgD,CACjD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 30358, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 30364, "column": 0}, "map": {"version":3,"file":"subscriptionrevoke.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/subscriptionrevoke.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  CustomerCancellationReason,\n  CustomerCancellationReason$inboundSchema,\n  CustomerCancellationReason$outboundSchema,\n} from \"./customercancellationreason.js\";\n\nexport type SubscriptionRevoke = {\n  /**\n   * Customer reason for cancellation.\n   *\n   * @remarks\n   *\n   * Helpful to monitor reasons behind churn for future improvements.\n   *\n   * Only set this in case your own service is requesting the reason from the\n   * customer. Or you know based on direct conversations, i.e support, with\n   * the customer.\n   *\n   * * `too_expensive`: Too expensive for the customer.\n   * * `missing_features`: Customer is missing certain features.\n   * * `switched_service`: Customer switched to another service.\n   * * `unused`: Customer is not using it enough.\n   * * `customer_service`: Customer is not satisfied with the customer service.\n   * * `low_quality`: Customer is unhappy with the quality.\n   * * `too_complex`: Customer considers the service too complicated.\n   * * `other`: Other reason(s).\n   */\n  customerCancellationReason?: CustomerCancellationReason | null | undefined;\n  /**\n   * Customer feedback and why they decided to cancel.\n   *\n   * @remarks\n   *\n   * **IMPORTANT:**\n   * Do not use this to store internal notes! It's intended to be input\n   * from the customer and is therefore also available in their Polar\n   * purchases library.\n   *\n   * Only set this in case your own service is requesting the reason from the\n   * customer. Or you copy a message directly from a customer\n   * conversation, i.e support.\n   */\n  customerCancellationComment?: string | null | undefined;\n  /**\n   * Cancel and revoke an active subscription immediately\n   */\n  revoke?: true | undefined;\n};\n\n/** @internal */\nexport const SubscriptionRevoke$inboundSchema: z.ZodType<\n  SubscriptionRevoke,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  customer_cancellation_reason: z.nullable(\n    CustomerCancellationReason$inboundSchema,\n  ).optional(),\n  customer_cancellation_comment: z.nullable(z.string()).optional(),\n  revoke: z.literal(true).optional(),\n}).transform((v) => {\n  return remap$(v, {\n    \"customer_cancellation_reason\": \"customerCancellationReason\",\n    \"customer_cancellation_comment\": \"customerCancellationComment\",\n  });\n});\n\n/** @internal */\nexport type SubscriptionRevoke$Outbound = {\n  customer_cancellation_reason?: string | null | undefined;\n  customer_cancellation_comment?: string | null | undefined;\n  revoke: true;\n};\n\n/** @internal */\nexport const SubscriptionRevoke$outboundSchema: z.ZodType<\n  SubscriptionRevoke$Outbound,\n  z.ZodTypeDef,\n  SubscriptionRevoke\n> = z.object({\n  customerCancellationReason: z.nullable(\n    CustomerCancellationReason$outboundSchema,\n  ).optional(),\n  customerCancellationComment: z.nullable(z.string()).optional(),\n  revoke: z.literal(true).default(true as const),\n}).transform((v) => {\n  return remap$(v, {\n    customerCancellationReason: \"customer_cancellation_reason\",\n    customerCancellationComment: \"customer_cancellation_comment\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace SubscriptionRevoke$ {\n  /** @deprecated use `SubscriptionRevoke$inboundSchema` instead. */\n  export const inboundSchema = SubscriptionRevoke$inboundSchema;\n  /** @deprecated use `SubscriptionRevoke$outboundSchema` instead. */\n  export const outboundSchema = SubscriptionRevoke$outboundSchema;\n  /** @deprecated use `SubscriptionRevoke$Outbound` instead. */\n  export type Outbound = SubscriptionRevoke$Outbound;\n}\n\nexport function subscriptionRevokeToJSON(\n  subscriptionRevoke: SubscriptionRevoke,\n): string {\n  return JSON.stringify(\n    SubscriptionRevoke$outboundSchema.parse(subscriptionRevoke),\n  );\n}\n\nexport function subscriptionRevokeFromJSON(\n  jsonString: string,\n): SafeParseResult<SubscriptionRevoke, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => SubscriptionRevoke$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'SubscriptionRevoke' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,wCAAwC,EACxC,yCAAyC,GAC1C,MAAM,iCAAiC,CAAC;;;;;;AA8ClC,MAAM,gCAAgC,GAIzC,CAAC,6IAAC,MAAM,CAAC;IACX,4BAA4B,EAAE,CAAC,6IAAC,QAAQ,6MACtC,2CAAwC,CACzC,CAAC,QAAQ,EAAE;IACZ,6BAA6B,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;IAChE,MAAM,EAAE,CAAC,6IAAC,OAAO,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE;CACnC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,8BAA8B,EAAE,4BAA4B;QAC5D,+BAA+B,EAAE,6BAA6B;KAC/D,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAUI,MAAM,iCAAiC,GAI1C,CAAC,6IAAC,MAAM,CAAC;IACX,0BAA0B,EAAE,CAAC,6IAAC,QAAQ,6MACpC,4CAAyC,CAC1C,CAAC,QAAQ,EAAE;IACZ,2BAA2B,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;IAC9D,MAAM,EAAE,CAAC,6IAAC,OAAO,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,IAAa,CAAC;CAC/C,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,0BAA0B,EAAE,8BAA8B;QAC1D,2BAA2B,EAAE,+BAA+B;KAC7D,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,mBAAmB,CAOnC;AAPD,CAAA,SAAiB,mBAAmB;IAClC,gEAAA,EAAkE,CACrD,oBAAA,aAAa,GAAG,gCAAgC,CAAC;IAC9D,iEAAA,EAAmE,CACtD,oBAAA,cAAc,GAAG,iCAAiC,CAAC;AAGlE,CAAC,EAPgB,mBAAmB,IAAA,CAAnB,mBAAmB,GAAA,CAAA,CAAA,GAOnC;AAEK,SAAU,wBAAwB,CACtC,kBAAsC;IAEtC,OAAO,IAAI,CAAC,SAAS,CACnB,iCAAiC,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAC5D,CAAC;AACJ,CAAC;AAEK,SAAU,0BAA0B,CACxC,UAAkB;IAElB,OAAO,wLAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,+BAAiC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC5D,CAAA,8CAAA,CAAgD,CACjD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 30413, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 30419, "column": 0}, "map": {"version":3,"file":"subscriptionupdatediscount.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/subscriptionupdatediscount.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\nexport type SubscriptionUpdateDiscount = {\n  /**\n   * Update the subscription to apply a new discount. If set to `null`, the discount will be removed. The change will be applied on the next billing cycle.\n   */\n  discountId: string | null;\n};\n\n/** @internal */\nexport const SubscriptionUpdateDiscount$inboundSchema: z.ZodType<\n  SubscriptionUpdateDiscount,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  discount_id: z.nullable(z.string()),\n}).transform((v) => {\n  return remap$(v, {\n    \"discount_id\": \"discountId\",\n  });\n});\n\n/** @internal */\nexport type SubscriptionUpdateDiscount$Outbound = {\n  discount_id: string | null;\n};\n\n/** @internal */\nexport const SubscriptionUpdateDiscount$outboundSchema: z.ZodType<\n  SubscriptionUpdateDiscount$Outbound,\n  z.ZodTypeDef,\n  SubscriptionUpdateDiscount\n> = z.object({\n  discountId: z.nullable(z.string()),\n}).transform((v) => {\n  return remap$(v, {\n    discountId: \"discount_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace SubscriptionUpdateDiscount$ {\n  /** @deprecated use `SubscriptionUpdateDiscount$inboundSchema` instead. */\n  export const inboundSchema = SubscriptionUpdateDiscount$inboundSchema;\n  /** @deprecated use `SubscriptionUpdateDiscount$outboundSchema` instead. */\n  export const outboundSchema = SubscriptionUpdateDiscount$outboundSchema;\n  /** @deprecated use `SubscriptionUpdateDiscount$Outbound` instead. */\n  export type Outbound = SubscriptionUpdateDiscount$Outbound;\n}\n\nexport function subscriptionUpdateDiscountToJSON(\n  subscriptionUpdateDiscount: SubscriptionUpdateDiscount,\n): string {\n  return JSON.stringify(\n    SubscriptionUpdateDiscount$outboundSchema.parse(subscriptionUpdateDiscount),\n  );\n}\n\nexport function subscriptionUpdateDiscountFromJSON(\n  jsonString: string,\n): SafeParseResult<SubscriptionUpdateDiscount, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => SubscriptionUpdateDiscount$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'SubscriptionUpdateDiscount' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;;;;;AAY1C,MAAM,wCAAwC,GAIjD,CAAC,6IAAC,MAAM,CAAC;IACX,WAAW,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;CACpC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAA,AAAM,EAAC,CAAC,EAAE;QACf,aAAa,EAAE,YAAY;KAC5B,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAQI,MAAM,yCAAyC,GAIlD,CAAC,6IAAC,MAAM,CAAC;IACX,UAAU,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC;CACnC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,QAAO,sLAAA,AAAM,EAAC,CAAC,EAAE;QACf,UAAU,EAAE,aAAa;KAC1B,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,2BAA2B,CAO3C;AAPD,CAAA,SAAiB,2BAA2B;IAC1C,wEAAA,EAA0E,CAC7D,4BAAA,aAAa,GAAG,wCAAwC,CAAC;IACtE,yEAAA,EAA2E,CAC9D,4BAAA,cAAc,GAAG,yCAAyC,CAAC;AAG1E,CAAC,EAPgB,2BAA2B,IAAA,CAA3B,2BAA2B,GAAA,CAAA,CAAA,GAO3C;AAEK,SAAU,gCAAgC,CAC9C,0BAAsD;IAEtD,OAAO,IAAI,CAAC,SAAS,CACnB,yCAAyC,CAAC,KAAK,CAAC,0BAA0B,CAAC,CAC5E,CAAC;AACJ,CAAC;AAEK,SAAU,kCAAkC,CAChD,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,uCAAyC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACpE,CAAA,sDAAA,CAAwD,CACzD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 30460, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 30466, "column": 0}, "map": {"version":3,"file":"subscriptionupdateproduct.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/subscriptionupdateproduct.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  SubscriptionProrationBehavior,\n  SubscriptionProrationBehavior$inboundSchema,\n  SubscriptionProrationBehavior$outboundSchema,\n} from \"./subscriptionprorationbehavior.js\";\n\nexport type SubscriptionUpdateProduct = {\n  /**\n   * Update subscription to another product.\n   */\n  productId: string;\n  /**\n   * Determine how to handle the proration billing. If not provided, will use the default organization setting.\n   */\n  prorationBehavior?: SubscriptionProrationBehavior | null | undefined;\n};\n\n/** @internal */\nexport const SubscriptionUpdateProduct$inboundSchema: z.ZodType<\n  SubscriptionUpdateProduct,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  product_id: z.string(),\n  proration_behavior: z.nullable(SubscriptionProrationBehavior$inboundSchema)\n    .optional(),\n}).transform((v) => {\n  return remap$(v, {\n    \"product_id\": \"productId\",\n    \"proration_behavior\": \"prorationBehavior\",\n  });\n});\n\n/** @internal */\nexport type SubscriptionUpdateProduct$Outbound = {\n  product_id: string;\n  proration_behavior?: string | null | undefined;\n};\n\n/** @internal */\nexport const SubscriptionUpdateProduct$outboundSchema: z.ZodType<\n  SubscriptionUpdateProduct$Outbound,\n  z.ZodTypeDef,\n  SubscriptionUpdateProduct\n> = z.object({\n  productId: z.string(),\n  prorationBehavior: z.nullable(SubscriptionProrationBehavior$outboundSchema)\n    .optional(),\n}).transform((v) => {\n  return remap$(v, {\n    productId: \"product_id\",\n    prorationBehavior: \"proration_behavior\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace SubscriptionUpdateProduct$ {\n  /** @deprecated use `SubscriptionUpdateProduct$inboundSchema` instead. */\n  export const inboundSchema = SubscriptionUpdateProduct$inboundSchema;\n  /** @deprecated use `SubscriptionUpdateProduct$outboundSchema` instead. */\n  export const outboundSchema = SubscriptionUpdateProduct$outboundSchema;\n  /** @deprecated use `SubscriptionUpdateProduct$Outbound` instead. */\n  export type Outbound = SubscriptionUpdateProduct$Outbound;\n}\n\nexport function subscriptionUpdateProductToJSON(\n  subscriptionUpdateProduct: SubscriptionUpdateProduct,\n): string {\n  return JSON.stringify(\n    SubscriptionUpdateProduct$outboundSchema.parse(subscriptionUpdateProduct),\n  );\n}\n\nexport function subscriptionUpdateProductFromJSON(\n  jsonString: string,\n): SafeParseResult<SubscriptionUpdateProduct, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => SubscriptionUpdateProduct$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'SubscriptionUpdateProduct' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,2CAA2C,EAC3C,4CAA4C,GAC7C,MAAM,oCAAoC,CAAC;;;;;;AAcrC,MAAM,uCAAuC,GAIhD,CAAC,6IAAC,MAAM,CAAC;IACX,UAAU,EAAE,CAAC,6IAAC,MAAM,EAAE;IACtB,kBAAkB,EAAE,CAAC,6IAAC,QAAQ,gNAAC,8CAA2C,CAAC,CACxE,QAAQ,EAAE;CACd,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAM,AAAN,EAAO,CAAC,EAAE;QACf,YAAY,EAAE,WAAW;QACzB,oBAAoB,EAAE,mBAAmB;KAC1C,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AASI,MAAM,wCAAwC,GAIjD,CAAC,6IAAC,MAAM,CAAC;IACX,SAAS,EAAE,CAAC,6IAAC,MAAM,EAAE;IACrB,iBAAiB,EAAE,CAAC,6IAAC,QAAQ,CAAC,8PAA4C,CAAC,CACxE,QAAQ,EAAE;CACd,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAM,AAAN,EAAO,CAAC,EAAE;QACf,SAAS,EAAE,YAAY;QACvB,iBAAiB,EAAE,oBAAoB;KACxC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,0BAA0B,CAO1C;AAPD,CAAA,SAAiB,0BAA0B;IACzC,uEAAA,EAAyE,CAC5D,2BAAA,aAAa,GAAG,uCAAuC,CAAC;IACrE,wEAAA,EAA0E,CAC7D,2BAAA,cAAc,GAAG,wCAAwC,CAAC;AAGzE,CAAC,EAPgB,0BAA0B,IAAA,CAA1B,0BAA0B,GAAA,CAAA,CAAA,GAO1C;AAEK,SAAU,+BAA+B,CAC7C,yBAAoD;IAEpD,OAAO,IAAI,CAAC,SAAS,CACnB,wCAAwC,CAAC,KAAK,CAAC,yBAAyB,CAAC,CAC1E,CAAC;AACJ,CAAC;AAEK,SAAU,iCAAiC,CAC/C,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,sCAAwC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACnE,CAAA,qDAAA,CAAuD,CACxD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 30513, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 30519, "column": 0}, "map": {"version":3,"file":"subscriptionupdate.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/subscriptionupdate.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  SubscriptionCancel,\n  SubscriptionCancel$inboundSchema,\n  SubscriptionCancel$Outbound,\n  SubscriptionCancel$outboundSchema,\n} from \"./subscriptioncancel.js\";\nimport {\n  SubscriptionRevoke,\n  SubscriptionRevoke$inboundSchema,\n  SubscriptionRevoke$Outbound,\n  SubscriptionRevoke$outboundSchema,\n} from \"./subscriptionrevoke.js\";\nimport {\n  SubscriptionUpdateDiscount,\n  SubscriptionUpdateDiscount$inboundSchema,\n  SubscriptionUpdateDiscount$Outbound,\n  SubscriptionUpdateDiscount$outboundSchema,\n} from \"./subscriptionupdatediscount.js\";\nimport {\n  SubscriptionUpdateProduct,\n  SubscriptionUpdateProduct$inboundSchema,\n  SubscriptionUpdateProduct$Outbound,\n  SubscriptionUpdateProduct$outboundSchema,\n} from \"./subscriptionupdateproduct.js\";\n\nexport type SubscriptionUpdate =\n  | SubscriptionUpdateDiscount\n  | SubscriptionUpdateProduct\n  | SubscriptionCancel\n  | SubscriptionRevoke;\n\n/** @internal */\nexport const SubscriptionUpdate$inboundSchema: z.ZodType<\n  SubscriptionUpdate,\n  z.ZodTypeDef,\n  unknown\n> = z.union([\n  SubscriptionUpdateDiscount$inboundSchema,\n  SubscriptionUpdateProduct$inboundSchema,\n  SubscriptionCancel$inboundSchema,\n  SubscriptionRevoke$inboundSchema,\n]);\n\n/** @internal */\nexport type SubscriptionUpdate$Outbound =\n  | SubscriptionUpdateDiscount$Outbound\n  | SubscriptionUpdateProduct$Outbound\n  | SubscriptionCancel$Outbound\n  | SubscriptionRevoke$Outbound;\n\n/** @internal */\nexport const SubscriptionUpdate$outboundSchema: z.ZodType<\n  SubscriptionUpdate$Outbound,\n  z.ZodTypeDef,\n  SubscriptionUpdate\n> = z.union([\n  SubscriptionUpdateDiscount$outboundSchema,\n  SubscriptionUpdateProduct$outboundSchema,\n  SubscriptionCancel$outboundSchema,\n  SubscriptionRevoke$outboundSchema,\n]);\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace SubscriptionUpdate$ {\n  /** @deprecated use `SubscriptionUpdate$inboundSchema` instead. */\n  export const inboundSchema = SubscriptionUpdate$inboundSchema;\n  /** @deprecated use `SubscriptionUpdate$outboundSchema` instead. */\n  export const outboundSchema = SubscriptionUpdate$outboundSchema;\n  /** @deprecated use `SubscriptionUpdate$Outbound` instead. */\n  export type Outbound = SubscriptionUpdate$Outbound;\n}\n\nexport function subscriptionUpdateToJSON(\n  subscriptionUpdate: SubscriptionUpdate,\n): string {\n  return JSON.stringify(\n    SubscriptionUpdate$outboundSchema.parse(subscriptionUpdate),\n  );\n}\n\nexport function subscriptionUpdateFromJSON(\n  jsonString: string,\n): SafeParseResult<SubscriptionUpdate, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => SubscriptionUpdate$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'SubscriptionUpdate' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,gCAAgC,EAEhC,iCAAiC,GAClC,MAAM,yBAAyB,CAAC;AACjC,OAAO,EAEL,gCAAgC,EAEhC,iCAAiC,GAClC,MAAM,yBAAyB,CAAC;AACjC,OAAO,EAEL,wCAAwC,EAExC,yCAAyC,GAC1C,MAAM,iCAAiC,CAAC;AACzC,OAAO,EAEL,uCAAuC,EAEvC,wCAAwC,GACzC,MAAM,gCAAgC,CAAC;;;;;;;;AASjC,MAAM,gCAAgC,GAIzC,CAAC,6IAAC,KAAK,CAAC;gNACV,2CAAwC;8MACxC,2CAAuC;wMACvC,mCAAgC;wMAChC,mCAAgC;CACjC,CAAC,CAAC;AAUI,MAAM,iCAAiC,GAI1C,CAAC,6IAAC,KAAK,CAAC;IACV,wPAAyC;+MACzC,2CAAwC;wMACxC,oCAAiC;wMACjC,oCAAiC;CAClC,CAAC,CAAC;AAMG,IAAW,mBAAmB,CAOnC;AAPD,CAAA,SAAiB,mBAAmB;IAClC,gEAAA,EAAkE,CACrD,oBAAA,aAAa,GAAG,gCAAgC,CAAC;IAC9D,iEAAA,EAAmE,CACtD,oBAAA,cAAc,GAAG,iCAAiC,CAAC;AAGlE,CAAC,EAPgB,mBAAmB,IAAA,CAAnB,mBAAmB,GAAA,CAAA,CAAA,GAOnC;AAEK,SAAU,wBAAwB,CACtC,kBAAsC;IAEtC,OAAO,IAAI,CAAC,SAAS,CACnB,iCAAiC,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAC5D,CAAC;AACJ,CAAC;AAEK,SAAU,0BAA0B,CACxC,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,+BAAiC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC5D,CAAA,8CAAA,CAAgD,CACjD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 30564, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 30570, "column": 0}, "map": {"version":3,"file":"webhookeventtype.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/webhookeventtype.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { ClosedEnum } from \"../../types/enums.js\";\n\nexport const WebhookEventType = {\n  CheckoutCreated: \"checkout.created\",\n  CheckoutUpdated: \"checkout.updated\",\n  CustomerCreated: \"customer.created\",\n  CustomerUpdated: \"customer.updated\",\n  CustomerDeleted: \"customer.deleted\",\n  CustomerStateChanged: \"customer.state_changed\",\n  OrderCreated: \"order.created\",\n  OrderUpdated: \"order.updated\",\n  OrderPaid: \"order.paid\",\n  OrderRefunded: \"order.refunded\",\n  SubscriptionCreated: \"subscription.created\",\n  SubscriptionUpdated: \"subscription.updated\",\n  SubscriptionActive: \"subscription.active\",\n  SubscriptionCanceled: \"subscription.canceled\",\n  SubscriptionUncanceled: \"subscription.uncanceled\",\n  SubscriptionRevoked: \"subscription.revoked\",\n  RefundCreated: \"refund.created\",\n  RefundUpdated: \"refund.updated\",\n  ProductCreated: \"product.created\",\n  ProductUpdated: \"product.updated\",\n  BenefitCreated: \"benefit.created\",\n  BenefitUpdated: \"benefit.updated\",\n  BenefitGrantCreated: \"benefit_grant.created\",\n  BenefitGrantCycled: \"benefit_grant.cycled\",\n  BenefitGrantUpdated: \"benefit_grant.updated\",\n  BenefitGrantRevoked: \"benefit_grant.revoked\",\n  OrganizationUpdated: \"organization.updated\",\n} as const;\nexport type WebhookEventType = ClosedEnum<typeof WebhookEventType>;\n\n/** @internal */\nexport const WebhookEventType$inboundSchema: z.ZodNativeEnum<\n  typeof WebhookEventType\n> = z.nativeEnum(WebhookEventType);\n\n/** @internal */\nexport const WebhookEventType$outboundSchema: z.ZodNativeEnum<\n  typeof WebhookEventType\n> = WebhookEventType$inboundSchema;\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace WebhookEventType$ {\n  /** @deprecated use `WebhookEventType$inboundSchema` instead. */\n  export const inboundSchema = WebhookEventType$inboundSchema;\n  /** @deprecated use `WebhookEventType$outboundSchema` instead. */\n  export const outboundSchema = WebhookEventType$outboundSchema;\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;AAGlB,MAAM,gBAAgB,GAAG;IAC9B,eAAe,EAAE,kBAAkB;IACnC,eAAe,EAAE,kBAAkB;IACnC,eAAe,EAAE,kBAAkB;IACnC,eAAe,EAAE,kBAAkB;IACnC,eAAe,EAAE,kBAAkB;IACnC,oBAAoB,EAAE,wBAAwB;IAC9C,YAAY,EAAE,eAAe;IAC7B,YAAY,EAAE,eAAe;IAC7B,SAAS,EAAE,YAAY;IACvB,aAAa,EAAE,gBAAgB;IAC/B,mBAAmB,EAAE,sBAAsB;IAC3C,mBAAmB,EAAE,sBAAsB;IAC3C,kBAAkB,EAAE,qBAAqB;IACzC,oBAAoB,EAAE,uBAAuB;IAC7C,sBAAsB,EAAE,yBAAyB;IACjD,mBAAmB,EAAE,sBAAsB;IAC3C,aAAa,EAAE,gBAAgB;IAC/B,aAAa,EAAE,gBAAgB;IAC/B,cAAc,EAAE,iBAAiB;IACjC,cAAc,EAAE,iBAAiB;IACjC,cAAc,EAAE,iBAAiB;IACjC,cAAc,EAAE,iBAAiB;IACjC,mBAAmB,EAAE,uBAAuB;IAC5C,kBAAkB,EAAE,sBAAsB;IAC1C,mBAAmB,EAAE,uBAAuB;IAC5C,mBAAmB,EAAE,uBAAuB;IAC5C,mBAAmB,EAAE,sBAAsB;CACnC,CAAC;AAIJ,MAAM,8BAA8B,GAEvC,CAAC,6IAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC;AAG5B,MAAM,+BAA+B,GAExC,8BAA8B,CAAC;AAM7B,IAAW,iBAAiB,CAKjC;AALD,CAAA,SAAiB,iBAAiB;IAChC,8DAAA,EAAgE,CACnD,kBAAA,aAAa,GAAG,8BAA8B,CAAC;IAC5D,+DAAA,EAAiE,CACpD,kBAAA,cAAc,GAAG,+BAA+B,CAAC;AAChE,CAAC,EALgB,iBAAiB,IAAA,CAAjB,iBAAiB,GAAA,CAAA,CAAA,GAKjC","ignoreList":[0]}},
    {"offset": {"line": 30617, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 30623, "column": 0}, "map": {"version":3,"file":"webhookformat.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/webhookformat.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { ClosedEnum } from \"../../types/enums.js\";\n\nexport const WebhookFormat = {\n  Raw: \"raw\",\n  Discord: \"discord\",\n  Slack: \"slack\",\n} as const;\nexport type WebhookFormat = ClosedEnum<typeof WebhookFormat>;\n\n/** @internal */\nexport const WebhookFormat$inboundSchema: z.ZodNativeEnum<\n  typeof WebhookFormat\n> = z.nativeEnum(WebhookFormat);\n\n/** @internal */\nexport const WebhookFormat$outboundSchema: z.ZodNativeEnum<\n  typeof WebhookFormat\n> = WebhookFormat$inboundSchema;\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace WebhookFormat$ {\n  /** @deprecated use `WebhookFormat$inboundSchema` instead. */\n  export const inboundSchema = WebhookFormat$inboundSchema;\n  /** @deprecated use `WebhookFormat$outboundSchema` instead. */\n  export const outboundSchema = WebhookFormat$outboundSchema;\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;AAGlB,MAAM,aAAa,GAAG;IAC3B,GAAG,EAAE,KAAK;IACV,OAAO,EAAE,SAAS;IAClB,KAAK,EAAE,OAAO;CACN,CAAC;AAIJ,MAAM,2BAA2B,GAEpC,CAAC,6IAAC,UAAU,CAAC,aAAa,CAAC,CAAC;AAGzB,MAAM,4BAA4B,GAErC,2BAA2B,CAAC;AAM1B,IAAW,cAAc,CAK9B;AALD,CAAA,SAAiB,cAAc;IAC7B,2DAAA,EAA6D,CAChD,eAAA,aAAa,GAAG,2BAA2B,CAAC;IACzD,4DAAA,EAA8D,CACjD,eAAA,cAAc,GAAG,4BAA4B,CAAC;AAC7D,CAAC,EALgB,cAAc,IAAA,CAAd,cAAc,GAAA,CAAA,CAAA,GAK9B","ignoreList":[0]}},
    {"offset": {"line": 30646, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 30652, "column": 0}, "map": {"version":3,"file":"webhookendpoint.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/webhookendpoint.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  WebhookEventType,\n  WebhookEventType$inboundSchema,\n  WebhookEventType$outboundSchema,\n} from \"./webhookeventtype.js\";\nimport {\n  WebhookFormat,\n  WebhookFormat$inboundSchema,\n  WebhookFormat$outboundSchema,\n} from \"./webhookformat.js\";\n\n/**\n * A webhook endpoint.\n */\nexport type WebhookEndpoint = {\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  /**\n   * The ID of the object.\n   */\n  id: string;\n  /**\n   * The URL where the webhook events will be sent.\n   */\n  url: string;\n  format: WebhookFormat;\n  /**\n   * The organization ID associated with the webhook endpoint.\n   */\n  organizationId: string;\n  /**\n   * The events that will trigger the webhook.\n   */\n  events: Array<WebhookEventType>;\n};\n\n/** @internal */\nexport const WebhookEndpoint$inboundSchema: z.ZodType<\n  WebhookEndpoint,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  id: z.string(),\n  url: z.string(),\n  format: WebhookFormat$inboundSchema,\n  organization_id: z.string(),\n  events: z.array(WebhookEventType$inboundSchema),\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"organization_id\": \"organizationId\",\n  });\n});\n\n/** @internal */\nexport type WebhookEndpoint$Outbound = {\n  created_at: string;\n  modified_at: string | null;\n  id: string;\n  url: string;\n  format: string;\n  organization_id: string;\n  events: Array<string>;\n};\n\n/** @internal */\nexport const WebhookEndpoint$outboundSchema: z.ZodType<\n  WebhookEndpoint$Outbound,\n  z.ZodTypeDef,\n  WebhookEndpoint\n> = z.object({\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  id: z.string(),\n  url: z.string(),\n  format: WebhookFormat$outboundSchema,\n  organizationId: z.string(),\n  events: z.array(WebhookEventType$outboundSchema),\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    organizationId: \"organization_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace WebhookEndpoint$ {\n  /** @deprecated use `WebhookEndpoint$inboundSchema` instead. */\n  export const inboundSchema = WebhookEndpoint$inboundSchema;\n  /** @deprecated use `WebhookEndpoint$outboundSchema` instead. */\n  export const outboundSchema = WebhookEndpoint$outboundSchema;\n  /** @deprecated use `WebhookEndpoint$Outbound` instead. */\n  export type Outbound = WebhookEndpoint$Outbound;\n}\n\nexport function webhookEndpointToJSON(\n  webhookEndpoint: WebhookEndpoint,\n): string {\n  return JSON.stringify(WebhookEndpoint$outboundSchema.parse(webhookEndpoint));\n}\n\nexport function webhookEndpointFromJSON(\n  jsonString: string,\n): SafeParseResult<WebhookEndpoint, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => WebhookEndpoint$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'WebhookEndpoint' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 30717, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 30723, "column": 0}, "map": {"version":3,"file":"webhookendpointcreate.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/webhookendpointcreate.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  WebhookEventType,\n  WebhookEventType$inboundSchema,\n  WebhookEventType$outboundSchema,\n} from \"./webhookeventtype.js\";\nimport {\n  WebhookFormat,\n  WebhookFormat$inboundSchema,\n  WebhookFormat$outboundSchema,\n} from \"./webhookformat.js\";\n\n/**\n * Schema to create a webhook endpoint.\n */\nexport type WebhookEndpointCreate = {\n  /**\n   * The URL where the webhook events will be sent.\n   */\n  url: string;\n  format: WebhookFormat;\n  /**\n   * The secret used to sign the webhook events.\n   */\n  secret: string;\n  /**\n   * The events that will trigger the webhook.\n   */\n  events: Array<WebhookEventType>;\n  /**\n   * The organization ID associated with the webhook endpoint. **Required unless you use an organization token.**\n   */\n  organizationId?: string | null | undefined;\n};\n\n/** @internal */\nexport const WebhookEndpointCreate$inboundSchema: z.ZodType<\n  WebhookEndpointCreate,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  url: z.string(),\n  format: WebhookFormat$inboundSchema,\n  secret: z.string(),\n  events: z.array(WebhookEventType$inboundSchema),\n  organization_id: z.nullable(z.string()).optional(),\n}).transform((v) => {\n  return remap$(v, {\n    \"organization_id\": \"organizationId\",\n  });\n});\n\n/** @internal */\nexport type WebhookEndpointCreate$Outbound = {\n  url: string;\n  format: string;\n  secret: string;\n  events: Array<string>;\n  organization_id?: string | null | undefined;\n};\n\n/** @internal */\nexport const WebhookEndpointCreate$outboundSchema: z.ZodType<\n  WebhookEndpointCreate$Outbound,\n  z.ZodTypeDef,\n  WebhookEndpointCreate\n> = z.object({\n  url: z.string(),\n  format: WebhookFormat$outboundSchema,\n  secret: z.string(),\n  events: z.array(WebhookEventType$outboundSchema),\n  organizationId: z.nullable(z.string()).optional(),\n}).transform((v) => {\n  return remap$(v, {\n    organizationId: \"organization_id\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace WebhookEndpointCreate$ {\n  /** @deprecated use `WebhookEndpointCreate$inboundSchema` instead. */\n  export const inboundSchema = WebhookEndpointCreate$inboundSchema;\n  /** @deprecated use `WebhookEndpointCreate$outboundSchema` instead. */\n  export const outboundSchema = WebhookEndpointCreate$outboundSchema;\n  /** @deprecated use `WebhookEndpointCreate$Outbound` instead. */\n  export type Outbound = WebhookEndpointCreate$Outbound;\n}\n\nexport function webhookEndpointCreateToJSON(\n  webhookEndpointCreate: WebhookEndpointCreate,\n): string {\n  return JSON.stringify(\n    WebhookEndpointCreate$outboundSchema.parse(webhookEndpointCreate),\n  );\n}\n\nexport function webhookEndpointCreateFromJSON(\n  jsonString: string,\n): SafeParseResult<WebhookEndpointCreate, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => WebhookEndpointCreate$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'WebhookEndpointCreate' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,KAAK,IAAI,MAAM,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,8BAA8B,EAC9B,+BAA+B,GAChC,MAAM,uBAAuB,CAAC;AAC/B,OAAO,EAEL,2BAA2B,EAC3B,4BAA4B,GAC7B,MAAM,oBAAoB,CAAC;;;;;;;AA0BrB,MAAM,mCAAmC,GAI5C,CAAC,6IAAC,MAAM,CAAC;IACX,GAAG,EAAE,CAAC,6IAAC,MAAM,EAAE;IACf,MAAM,iMAAE,8BAA2B;IACnC,MAAM,EAAE,CAAC,6IAAC,MAAM,EAAE;IAClB,MAAM,EAAE,CAAC,6IAAC,KAAK,mMAAC,iCAA8B,CAAC;IAC/C,eAAe,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;CACnD,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,QAAO,sLAAA,AAAM,EAAC,CAAC,EAAE;QACf,iBAAiB,EAAE,gBAAgB;KACpC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAYI,MAAM,oCAAoC,GAI7C,CAAC,6IAAC,MAAM,CAAC;IACX,GAAG,EAAE,CAAC,6IAAC,MAAM,EAAE;IACf,MAAM,gMAAE,gCAA4B;IACpC,MAAM,EAAE,CAAC,6IAAC,MAAM,EAAE;IAClB,MAAM,EAAE,CAAC,6IAAC,KAAK,mMAAC,kCAA+B,CAAC;IAChD,cAAc,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;CAClD,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;IACjB,sLAAO,QAAM,AAAN,EAAO,CAAC,EAAE;QACf,cAAc,EAAE,iBAAiB;KAClC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAMG,IAAW,sBAAsB,CAOtC;AAPD,CAAA,SAAiB,sBAAsB;IACrC,mEAAA,EAAqE,CACxD,uBAAA,aAAa,GAAG,mCAAmC,CAAC;IACjE,oEAAA,EAAsE,CACzD,uBAAA,cAAc,GAAG,oCAAoC,CAAC;AAGrE,CAAC,EAPgB,sBAAsB,IAAA,CAAtB,sBAAsB,GAAA,CAAA,CAAA,GAOtC;AAEK,SAAU,2BAA2B,CACzC,qBAA4C;IAE5C,OAAO,IAAI,CAAC,SAAS,CACnB,oCAAoC,CAAC,KAAK,CAAC,qBAAqB,CAAC,CAClE,CAAC;AACJ,CAAC;AAEK,SAAU,6BAA6B,CAC3C,UAAkB;IAElB,OAAO,wLAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,kCAAoC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC/D,CAAA,iDAAA,CAAmD,CACpD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 30776, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 30782, "column": 0}, "map": {"version":3,"file":"webhookevent.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/webhookevent.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\n\n/**\n * A webhook event.\n *\n * @remarks\n *\n * An event represent something that happened in the system\n * that should be sent to the webhook endpoint.\n *\n * It can be delivered multiple times until it's marked as succeeded,\n * each one creating a new delivery.\n */\nexport type WebhookEvent = {\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  /**\n   * The ID of the object.\n   */\n  id: string;\n  /**\n   * Last HTTP code returned by the URL. `null` if no delviery has been attempted or if the endpoint was unreachable.\n   */\n  lastHttpCode?: number | null | undefined;\n  /**\n   * Whether this event was successfully delivered. `null` if no delivery has been attempted.\n   */\n  succeeded?: boolean | null | undefined;\n  /**\n   * The payload of the webhook event.\n   */\n  payload: string;\n};\n\n/** @internal */\nexport const WebhookEvent$inboundSchema: z.ZodType<\n  WebhookEvent,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  id: z.string(),\n  last_http_code: z.nullable(z.number().int()).optional(),\n  succeeded: z.nullable(z.boolean()).optional(),\n  payload: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"last_http_code\": \"lastHttpCode\",\n  });\n});\n\n/** @internal */\nexport type WebhookEvent$Outbound = {\n  created_at: string;\n  modified_at: string | null;\n  id: string;\n  last_http_code?: number | null | undefined;\n  succeeded?: boolean | null | undefined;\n  payload: string;\n};\n\n/** @internal */\nexport const WebhookEvent$outboundSchema: z.ZodType<\n  WebhookEvent$Outbound,\n  z.ZodTypeDef,\n  WebhookEvent\n> = z.object({\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  id: z.string(),\n  lastHttpCode: z.nullable(z.number().int()).optional(),\n  succeeded: z.nullable(z.boolean()).optional(),\n  payload: z.string(),\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    lastHttpCode: \"last_http_code\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace WebhookEvent$ {\n  /** @deprecated use `WebhookEvent$inboundSchema` instead. */\n  export const inboundSchema = WebhookEvent$inboundSchema;\n  /** @deprecated use `WebhookEvent$outboundSchema` instead. */\n  export const outboundSchema = WebhookEvent$outboundSchema;\n  /** @deprecated use `WebhookEvent$Outbound` instead. */\n  export type Outbound = WebhookEvent$Outbound;\n}\n\nexport function webhookEventToJSON(webhookEvent: WebhookEvent): string {\n  return JSON.stringify(WebhookEvent$outboundSchema.parse(webhookEvent));\n}\n\nexport function webhookEventFromJSON(\n  jsonString: string,\n): SafeParseResult<WebhookEvent, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => WebhookEvent$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'WebhookEvent' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 30841, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 30847, "column": 0}, "map": {"version":3,"file":"webhookdelivery.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/webhookdelivery.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { remap as remap$ } from \"../../lib/primitives.js\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  WebhookEvent,\n  WebhookEvent$inboundSchema,\n  WebhookEvent$Outbound,\n  WebhookEvent$outboundSchema,\n} from \"./webhookevent.js\";\n\n/**\n * A webhook delivery for a webhook event.\n */\nexport type WebhookDelivery = {\n  /**\n   * Creation timestamp of the object.\n   */\n  createdAt: Date;\n  /**\n   * Last modification timestamp of the object.\n   */\n  modifiedAt: Date | null;\n  /**\n   * The ID of the object.\n   */\n  id: string;\n  /**\n   * The HTTP code returned by the URL. `null` if the endpoint was unreachable.\n   */\n  httpCode?: number | null | undefined;\n  /**\n   * Whether the delivery was successful.\n   */\n  succeeded: boolean;\n  /**\n   * A webhook event.\n   *\n   * @remarks\n   *\n   * An event represent something that happened in the system\n   * that should be sent to the webhook endpoint.\n   *\n   * It can be delivered multiple times until it's marked as succeeded,\n   * each one creating a new delivery.\n   */\n  webhookEvent: WebhookEvent;\n};\n\n/** @internal */\nexport const WebhookDelivery$inboundSchema: z.ZodType<\n  WebhookDelivery,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  modified_at: z.nullable(\n    z.string().datetime({ offset: true }).transform(v => new Date(v)),\n  ),\n  id: z.string(),\n  http_code: z.nullable(z.number().int()).optional(),\n  succeeded: z.boolean(),\n  webhook_event: WebhookEvent$inboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    \"created_at\": \"createdAt\",\n    \"modified_at\": \"modifiedAt\",\n    \"http_code\": \"httpCode\",\n    \"webhook_event\": \"webhookEvent\",\n  });\n});\n\n/** @internal */\nexport type WebhookDelivery$Outbound = {\n  created_at: string;\n  modified_at: string | null;\n  id: string;\n  http_code?: number | null | undefined;\n  succeeded: boolean;\n  webhook_event: WebhookEvent$Outbound;\n};\n\n/** @internal */\nexport const WebhookDelivery$outboundSchema: z.ZodType<\n  WebhookDelivery$Outbound,\n  z.ZodTypeDef,\n  WebhookDelivery\n> = z.object({\n  createdAt: z.date().transform(v => v.toISOString()),\n  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),\n  id: z.string(),\n  httpCode: z.nullable(z.number().int()).optional(),\n  succeeded: z.boolean(),\n  webhookEvent: WebhookEvent$outboundSchema,\n}).transform((v) => {\n  return remap$(v, {\n    createdAt: \"created_at\",\n    modifiedAt: \"modified_at\",\n    httpCode: \"http_code\",\n    webhookEvent: \"webhook_event\",\n  });\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace WebhookDelivery$ {\n  /** @deprecated use `WebhookDelivery$inboundSchema` instead. */\n  export const inboundSchema = WebhookDelivery$inboundSchema;\n  /** @deprecated use `WebhookDelivery$outboundSchema` instead. */\n  export const outboundSchema = WebhookDelivery$outboundSchema;\n  /** @deprecated use `WebhookDelivery$Outbound` instead. */\n  export type Outbound = WebhookDelivery$Outbound;\n}\n\nexport function webhookDeliveryToJSON(\n  webhookDelivery: WebhookDelivery,\n): string {\n  return JSON.stringify(WebhookDelivery$outboundSchema.parse(webhookDelivery));\n}\n\nexport function webhookDeliveryFromJSON(\n  jsonString: string,\n): SafeParseResult<WebhookDelivery, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => WebhookDelivery$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'WebhookDelivery' from JSON`,\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 30910, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 30916, "column": 0}, "map": {"version":3,"file":"listresourcewebhookdelivery.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/listresourcewebhookdelivery.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  Pagination,\n  Pagination$inboundSchema,\n  Pagination$Outbound,\n  Pagination$outboundSchema,\n} from \"./pagination.js\";\nimport {\n  WebhookDelivery,\n  WebhookDelivery$inboundSchema,\n  WebhookDelivery$Outbound,\n  WebhookDelivery$outboundSchema,\n} from \"./webhookdelivery.js\";\n\nexport type ListResourceWebhookDelivery = {\n  items: Array<WebhookDelivery>;\n  pagination: Pagination;\n};\n\n/** @internal */\nexport const ListResourceWebhookDelivery$inboundSchema: z.ZodType<\n  ListResourceWebhookDelivery,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  items: z.array(WebhookDelivery$inboundSchema),\n  pagination: Pagination$inboundSchema,\n});\n\n/** @internal */\nexport type ListResourceWebhookDelivery$Outbound = {\n  items: Array<WebhookDelivery$Outbound>;\n  pagination: Pagination$Outbound;\n};\n\n/** @internal */\nexport const ListResourceWebhookDelivery$outboundSchema: z.ZodType<\n  ListResourceWebhookDelivery$Outbound,\n  z.ZodTypeDef,\n  ListResourceWebhookDelivery\n> = z.object({\n  items: z.array(WebhookDelivery$outboundSchema),\n  pagination: Pagination$outboundSchema,\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace ListResourceWebhookDelivery$ {\n  /** @deprecated use `ListResourceWebhookDelivery$inboundSchema` instead. */\n  export const inboundSchema = ListResourceWebhookDelivery$inboundSchema;\n  /** @deprecated use `ListResourceWebhookDelivery$outboundSchema` instead. */\n  export const outboundSchema = ListResourceWebhookDelivery$outboundSchema;\n  /** @deprecated use `ListResourceWebhookDelivery$Outbound` instead. */\n  export type Outbound = ListResourceWebhookDelivery$Outbound;\n}\n\nexport function listResourceWebhookDeliveryToJSON(\n  listResourceWebhookDelivery: ListResourceWebhookDelivery,\n): string {\n  return JSON.stringify(\n    ListResourceWebhookDelivery$outboundSchema.parse(\n      listResourceWebhookDelivery,\n    ),\n  );\n}\n\nexport function listResourceWebhookDeliveryFromJSON(\n  jsonString: string,\n): SafeParseResult<ListResourceWebhookDelivery, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => ListResourceWebhookDelivery$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'ListResourceWebhookDelivery' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;AAGH,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,wBAAwB,EAExB,yBAAyB,GAC1B,MAAM,iBAAiB,CAAC;AACzB,OAAO,EAEL,6BAA6B,EAE7B,8BAA8B,GAC/B,MAAM,sBAAsB,CAAC;AAf9B,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;;;;AAuBlB,MAAM,yCAAyC,GAIlD,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,KAAK,kMAAC,gCAA6B,CAAC;IAC7C,UAAU,8LAAE,2BAAwB;CACrC,CAAC,CAAC;AASI,MAAM,0CAA0C,GAInD,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,KAAK,kMAAC,iCAA8B,CAAC;IAC9C,UAAU,8LAAE,4BAAyB;CACtC,CAAC,CAAC;AAMG,IAAW,4BAA4B,CAO5C;AAPD,CAAA,SAAiB,4BAA4B;IAC3C,yEAAA,EAA2E,CAC9D,6BAAA,aAAa,GAAG,yCAAyC,CAAC;IACvE,0EAAA,EAA4E,CAC/D,6BAAA,cAAc,GAAG,0CAA0C,CAAC;AAG3E,CAAC,EAPgB,4BAA4B,IAAA,CAA5B,4BAA4B,GAAA,CAAA,CAAA,GAO5C;AAEK,SAAU,iCAAiC,CAC/C,2BAAwD;IAExD,OAAO,IAAI,CAAC,SAAS,CACnB,0CAA0C,CAAC,KAAK,CAC9C,2BAA2B,CAC5B,CACF,CAAC;AACJ,CAAC;AAEK,SAAU,mCAAmC,CACjD,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,wCAA0C,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACrE,CAAA,uDAAA,CAAyD,CAC1D,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 30953, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 30959, "column": 0}, "map": {"version":3,"file":"listresourcewebhookendpoint.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/listresourcewebhookendpoint.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  Pagination,\n  Pagination$inboundSchema,\n  Pagination$Outbound,\n  Pagination$outboundSchema,\n} from \"./pagination.js\";\nimport {\n  WebhookEndpoint,\n  WebhookEndpoint$inboundSchema,\n  WebhookEndpoint$Outbound,\n  WebhookEndpoint$outboundSchema,\n} from \"./webhookendpoint.js\";\n\nexport type ListResourceWebhookEndpoint = {\n  items: Array<WebhookEndpoint>;\n  pagination: Pagination;\n};\n\n/** @internal */\nexport const ListResourceWebhookEndpoint$inboundSchema: z.ZodType<\n  ListResourceWebhookEndpoint,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  items: z.array(WebhookEndpoint$inboundSchema),\n  pagination: Pagination$inboundSchema,\n});\n\n/** @internal */\nexport type ListResourceWebhookEndpoint$Outbound = {\n  items: Array<WebhookEndpoint$Outbound>;\n  pagination: Pagination$Outbound;\n};\n\n/** @internal */\nexport const ListResourceWebhookEndpoint$outboundSchema: z.ZodType<\n  ListResourceWebhookEndpoint$Outbound,\n  z.ZodTypeDef,\n  ListResourceWebhookEndpoint\n> = z.object({\n  items: z.array(WebhookEndpoint$outboundSchema),\n  pagination: Pagination$outboundSchema,\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace ListResourceWebhookEndpoint$ {\n  /** @deprecated use `ListResourceWebhookEndpoint$inboundSchema` instead. */\n  export const inboundSchema = ListResourceWebhookEndpoint$inboundSchema;\n  /** @deprecated use `ListResourceWebhookEndpoint$outboundSchema` instead. */\n  export const outboundSchema = ListResourceWebhookEndpoint$outboundSchema;\n  /** @deprecated use `ListResourceWebhookEndpoint$Outbound` instead. */\n  export type Outbound = ListResourceWebhookEndpoint$Outbound;\n}\n\nexport function listResourceWebhookEndpointToJSON(\n  listResourceWebhookEndpoint: ListResourceWebhookEndpoint,\n): string {\n  return JSON.stringify(\n    ListResourceWebhookEndpoint$outboundSchema.parse(\n      listResourceWebhookEndpoint,\n    ),\n  );\n}\n\nexport function listResourceWebhookEndpointFromJSON(\n  jsonString: string,\n): SafeParseResult<ListResourceWebhookEndpoint, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => ListResourceWebhookEndpoint$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'ListResourceWebhookEndpoint' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;AAGH,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,wBAAwB,EAExB,yBAAyB,GAC1B,MAAM,iBAAiB,CAAC;AACzB,OAAO,EAEL,6BAA6B,EAE7B,8BAA8B,GAC/B,MAAM,sBAAsB,CAAC;AAf9B,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;;;;;AAuBlB,MAAM,yCAAyC,GAIlD,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,KAAK,kMAAC,gCAA6B,CAAC;IAC7C,UAAU,8LAAE,2BAAwB;CACrC,CAAC,CAAC;AASI,MAAM,0CAA0C,GAInD,CAAC,6IAAC,MAAM,CAAC;IACX,KAAK,EAAE,CAAC,6IAAC,KAAK,kMAAC,iCAA8B,CAAC;IAC9C,UAAU,8LAAE,4BAAyB;CACtC,CAAC,CAAC;AAMG,IAAW,4BAA4B,CAO5C;AAPD,CAAA,SAAiB,4BAA4B;IAC3C,yEAAA,EAA2E,CAC9D,6BAAA,aAAa,GAAG,yCAAyC,CAAC;IACvE,0EAAA,EAA4E,CAC/D,6BAAA,cAAc,GAAG,0CAA0C,CAAC;AAG3E,CAAC,EAPgB,4BAA4B,IAAA,CAA5B,4BAA4B,GAAA,CAAA,CAAA,GAO5C;AAEK,SAAU,iCAAiC,CAC/C,2BAAwD;IAExD,OAAO,IAAI,CAAC,SAAS,CACnB,0CAA0C,CAAC,KAAK,CAC9C,2BAA2B,CAC5B,CACF,CAAC;AACJ,CAAC;AAEK,SAAU,mCAAmC,CACjD,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,wCAA0C,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACrE,CAAA,uDAAA,CAAyD,CAC1D,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 30996, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 31002, "column": 0}, "map": {"version":3,"file":"webhookendpointupdate.js","sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/node_modules/%40polar-sh/sdk/src/models/components/webhookendpointupdate.ts"],"sourcesContent":["/*\n * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.\n */\n\nimport * as z from \"zod\";\nimport { safeParse } from \"../../lib/schemas.js\";\nimport { Result as SafeParseResult } from \"../../types/fp.js\";\nimport { SDKValidationError } from \"../errors/sdkvalidationerror.js\";\nimport {\n  WebhookEventType,\n  WebhookEventType$inboundSchema,\n  WebhookEventType$outboundSchema,\n} from \"./webhookeventtype.js\";\nimport {\n  WebhookFormat,\n  WebhookFormat$inboundSchema,\n  WebhookFormat$outboundSchema,\n} from \"./webhookformat.js\";\n\n/**\n * Schema to update a webhook endpoint.\n */\nexport type WebhookEndpointUpdate = {\n  url?: string | null | undefined;\n  format?: WebhookFormat | null | undefined;\n  secret?: string | null | undefined;\n  events?: Array<WebhookEventType> | null | undefined;\n};\n\n/** @internal */\nexport const WebhookEndpointUpdate$inboundSchema: z.ZodType<\n  WebhookEndpointUpdate,\n  z.ZodTypeDef,\n  unknown\n> = z.object({\n  url: z.nullable(z.string()).optional(),\n  format: z.nullable(WebhookFormat$inboundSchema).optional(),\n  secret: z.nullable(z.string()).optional(),\n  events: z.nullable(z.array(WebhookEventType$inboundSchema)).optional(),\n});\n\n/** @internal */\nexport type WebhookEndpointUpdate$Outbound = {\n  url?: string | null | undefined;\n  format?: string | null | undefined;\n  secret?: string | null | undefined;\n  events?: Array<string> | null | undefined;\n};\n\n/** @internal */\nexport const WebhookEndpointUpdate$outboundSchema: z.ZodType<\n  WebhookEndpointUpdate$Outbound,\n  z.ZodTypeDef,\n  WebhookEndpointUpdate\n> = z.object({\n  url: z.nullable(z.string()).optional(),\n  format: z.nullable(WebhookFormat$outboundSchema).optional(),\n  secret: z.nullable(z.string()).optional(),\n  events: z.nullable(z.array(WebhookEventType$outboundSchema)).optional(),\n});\n\n/**\n * @internal\n * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.\n */\nexport namespace WebhookEndpointUpdate$ {\n  /** @deprecated use `WebhookEndpointUpdate$inboundSchema` instead. */\n  export const inboundSchema = WebhookEndpointUpdate$inboundSchema;\n  /** @deprecated use `WebhookEndpointUpdate$outboundSchema` instead. */\n  export const outboundSchema = WebhookEndpointUpdate$outboundSchema;\n  /** @deprecated use `WebhookEndpointUpdate$Outbound` instead. */\n  export type Outbound = WebhookEndpointUpdate$Outbound;\n}\n\nexport function webhookEndpointUpdateToJSON(\n  webhookEndpointUpdate: WebhookEndpointUpdate,\n): string {\n  return JSON.stringify(\n    WebhookEndpointUpdate$outboundSchema.parse(webhookEndpointUpdate),\n  );\n}\n\nexport function webhookEndpointUpdateFromJSON(\n  jsonString: string,\n): SafeParseResult<WebhookEndpointUpdate, SDKValidationError> {\n  return safeParse(\n    jsonString,\n    (x) => WebhookEndpointUpdate$inboundSchema.parse(JSON.parse(x)),\n    `Failed to parse 'WebhookEndpointUpdate' from JSON`,\n  );\n}\n"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;AAEH,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAGjD,OAAO,EAEL,8BAA8B,EAC9B,+BAA+B,GAChC,MAAM,uBAAuB,CAAC;AAC/B,OAAO,EAEL,2BAA2B,EAC3B,4BAA4B,GAC7B,MAAM,oBAAoB,CAAC;;;;;;AAarB,MAAM,mCAAmC,GAI5C,CAAC,6IAAC,MAAM,CAAC;IACX,GAAG,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;IACtC,MAAM,EAAE,CAAC,6IAAC,QAAQ,gMAAC,8BAA2B,CAAC,CAAC,QAAQ,EAAE;IAC1D,MAAM,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;IACzC,MAAM,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,KAAK,CAAC,mOAA8B,CAAC,CAAC,CAAC,QAAQ,EAAE;CACvE,CAAC,CAAC;AAWI,MAAM,oCAAoC,GAI7C,CAAC,6IAAC,MAAM,CAAC;IACX,GAAG,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;IACtC,MAAM,EAAE,CAAC,6IAAC,QAAQ,gMAAC,+BAA4B,CAAC,CAAC,QAAQ,EAAE;IAC3D,MAAM,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;IACzC,MAAM,EAAE,CAAC,6IAAC,QAAQ,CAAC,CAAC,6IAAC,KAAK,mMAAC,kCAA+B,CAAC,CAAC,CAAC,QAAQ,EAAE;CACxE,CAAC,CAAC;AAMG,IAAW,sBAAsB,CAOtC;AAPD,CAAA,SAAiB,sBAAsB;IACrC,mEAAA,EAAqE,CACxD,uBAAA,aAAa,GAAG,mCAAmC,CAAC;IACjE,oEAAA,EAAsE,CACzD,uBAAA,cAAc,GAAG,oCAAoC,CAAC;AAGrE,CAAC,EAPgB,sBAAsB,IAAA,CAAtB,sBAAsB,GAAA,CAAA,CAAA,GAOtC;AAEK,SAAU,2BAA2B,CACzC,qBAA4C;IAE5C,OAAO,IAAI,CAAC,SAAS,CACnB,oCAAoC,CAAC,KAAK,CAAC,qBAAqB,CAAC,CAClE,CAAC;AACJ,CAAC;AAEK,SAAU,6BAA6B,CAC3C,UAAkB;IAElB,mLAAO,YAAA,AAAS,EACd,UAAU,EACV,CAAC,CAAC,EAAE,CAAG,CAAD,kCAAoC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC/D,CAAA,iDAAA,CAAmD,CACpD,CAAC;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 31043, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}