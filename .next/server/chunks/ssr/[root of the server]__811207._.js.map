{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///Users/victorbarthelemy/Documents/GitHub/View4Sight-final/View4sight_final/app/layout.js"],"sourcesContent":["\"use client\";\nimport Context from \"@/context/Context\";\nimport \"../public/assets/css/main.scss\";\nimport \"swiper/css/virtual\";\nimport \"swiper/css\";\nimport \"swiper/css/thumbs\";\nimport \"swiper/css/effect-fade\";\nimport \"../public/assets/custom.scss\";\n\nimport \"photoswipe/dist/photoswipe.css\";\nimport \"rc-slider/assets/index.css\";\nimport Cart from \"@/components/common/Cart\";\nimport { useEffect } from \"react\";\nimport anime from \"animejs\";\nimport { usePathname } from \"next/navigation\";\nimport MobileMenu from \"@/components/headers/component/MobileMenu\";\nimport BacktoTop from \"@/components/common/BacktoTop\";\nimport { ParallaxProvider } from \"react-scroll-parallax\";\nimport ContactModal from \"@/components/modals/ContactModal\";\nimport NewsletterModal from \"@/components/modals/NewsletterModal\";\nimport SearchModal from \"@/components/modals/SearchModal\";\nimport View4SightHeader from \"@/components/view4sight/Header\";\nimport View4SightFooter from \"@/components/view4sight/Footer\";\n\nexport default function RootLayout({ children }) {\n  const pathname = usePathname();\n  \n  // Check if current page is login page\n  const isLoginPage = pathname === '/sign-in';\n  \n  useEffect(() => {\n    const elements = document.querySelectorAll(\"[data-anime]\");\n\n    // Intersection Observer callback function\n    const handleIntersection = (entries, observer) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          const element = entry.target;\n          const dataAnime = element.getAttribute(\"data-anime\");\n\n          const modifieddataAnime = dataAnime.replace(\n            /anime\\.stagger\\((\\d+),\\s*\\{start:\\s*(\\d+)\\}\\)/,\n            \"$1,$2\"\n          );\n\n          if (modifieddataAnime) {\n            const parseAnimeData = (data) => {\n              const settings = {};\n              data.split(\";\").forEach((param) => {\n                const [key, value] = param\n                  .split(\":\")\n                  .map((item) => item.trim());\n                if (key && value) {\n                  settings[key] = value;\n                }\n              });\n              return settings;\n            };\n\n            const animeSettings = parseAnimeData(modifieddataAnime);\n\n            let targets;\n            if (animeSettings.targets === \">*\") {\n              targets = element.children;\n            } else {\n              targets = element?.querySelectorAll(animeSettings.targets);\n            }\n            // console.log(animeSettings);\n\n            // Apply Anime.js animation\n            anime({\n              loop: animeSettings.loop ? true : false,\n              targets: targets,\n              translateX: JSON.parse(animeSettings.translateX || \"[0, 0]\"),\n              translateY: JSON.parse(animeSettings.translateY || \"[48, 0]\"),\n              opacity: [0, 1],\n              // direction: \"alternate\",\n              easing: animeSettings.easing || \"spring(1, 80, 10, 0)\",\n              duration: Number(animeSettings.duration) || 450,\n              delay: animeSettings.delay\n                ? animeSettings.delay.includes(\",\")\n                  ? anime.stagger(animeSettings.delay.split(\",\")[0] / 1, {\n                      start: animeSettings.delay.split(\",\")[1] / 1,\n                    })\n                  : animeSettings.delay / 1\n                : 0,\n            });\n\n            // Unobserve the element after animation triggers\n            observer.unobserve(element);\n          }\n        }\n      });\n    };\n\n    const observer = new IntersectionObserver(handleIntersection, {\n      threshold: 0, // Trigger when 10% of the element is in view\n    });\n\n    elements.forEach((element) => {\n      observer.observe(element);\n    });\n\n    return () => {\n      // Clean up the observer on component unmount\n      elements.forEach((element) => {\n        observer.unobserve(element);\n      });\n    };\n  }, [pathname]);\n\n  return (\n    <html lang=\"en\" dir=\"ltr\">\n      <head>\n        <link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"/assets/favicon/apple-touch-icon.png\" />\n        <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"/assets/favicon/favicon-32x32.png\" />\n        <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"/assets/favicon/favicon-16x16.png\" />\n        <link rel=\"icon\" type=\"image/x-icon\" href=\"/assets/favicon/favicon.ico\" />\n        <link rel=\"manifest\" href=\"/assets/favicon/site.webmanifest\" />\n        <meta name=\"theme-color\" content=\"#FE552E\" />\n      </head>\n      <body>\n        <Context>\n          <ParallaxProvider>\n            <div className=\"page-wrapper uni-body panel bg-white text-gray-900 dark:bg-gray-900 dark:text-gray-200 overflow-x-hidden bp-xs bp-sm bp-md bp-lg bp-xl bp-xxl dom-ready\">\n              {/* Only show header if not on login page */}\n              {!isLoginPage && <View4SightHeader />}\n              <div id=\"wrapper\" className=\"wrap\">\n                {children}\n              </div>\n              {/* Only show footer if not on login page */}\n              {!isLoginPage && <View4SightFooter />}\n            </div>\n          </ParallaxProvider>\n          <MobileMenu />\n          <ContactModal />\n          <NewsletterModal />\n          <SearchModal />\n          <Cart />\n          <BacktoTop />\n        </Context>\n      </body>\n    </html>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 337, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}